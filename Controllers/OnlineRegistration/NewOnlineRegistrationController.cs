using iTextSharp.text;
using iTextSharp.text.html.simpleparser;
using iTextSharp.text.pdf;
using System;
using System.Collections.Generic;
using System.Data;
using System.Diagnostics.Eventing.Reader;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.Security;
using System.Security.Cryptography.Pkcs;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Web;
using System.Web.Configuration;
using System.Web.Mvc;
using System.Web.Script.Serialization;
using System.Web.Security;
using System.Web.Services.Description;
using PANAPIMVC.Controllers;
using UAAAS.Models;
using UAAAS.Mailers;
using System.Threading;
using System.Text.RegularExpressions;
using System.Drawing.Imaging;
using System.ComponentModel.DataAnnotations;
using UAAAS.Models.Admin;
using iTextSharp.text.html;
using System.Configuration;
using UAAAS.Models;
using System.Data;
using System.ComponentModel.DataAnnotations;
using System.Data.Entity;
using System.Data.Entity.Validation;
using System.Globalization;

namespace UAAAS.Controllers.OnlineRegistration
{
    [ErrorHandling]
    public class NewOnlineRegistrationController : BaseController
    {
        private uaaasDBContext db = new uaaasDBContext();
        private uaaasDBContext dbd = new uaaasDBContext();
        private string filePath = ConfigurationManager.AppSettings["PANCertificate"];

        /// <summary>
        /// Registration Welcome Page With Instructions.
        /// </summary>
        /// <returns>View</returns>
        /// 
        /// 
        public ActionResult Welcome()
        {
            return View();
        }

        #region venkatesh

        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult IndexRegistration(string id)
        {
            MembershipUser userdata = Membership.GetUser(User.Identity.Name);
            if (userdata == null)
            {
                return RedirectToAction("LogOn", "Account");
            }
            int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            int fID = 0;
            string RegistrationNumber = string.Empty;
            if (id != null)
            {
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(id.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]));

                if (fID == 113698)
                {
                    fID = Convert.ToInt32(ConfigurationManager.AppSettings["testRegnumberfid"]);
                }
            }
            else if (userId != null)
            {
                RegistrationNumber = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(e => e.RegistrationNumber).FirstOrDefault();
            }
            else
            {
                return RedirectToAction("LogOn", "Account");
            }
            List<SelectListItem> colleges = new List<SelectListItem>();
            var jntuh_college = db.jntuh_college.ToList();

            var PresentColleges = jntuh_college.Where(a => a.isActive == true).Select(a => new { CollegeId = a.id, collegeCode = a.collegeCode, CollegeName = a.collegeName + "(" + a.collegeCode + ")" }).ToList();
            ViewBag.PresentColleges = PresentColleges;

            var colleges_list = jntuh_college.Select(a => new { CollegeId = a.id, collegeCode = a.collegeCode, CollegeName = a.collegeName + "(" + a.collegeCode + ")" }).ToList();

            colleges = colleges_list.Select(s => new SelectListItem { Value = s.CollegeId.ToString(), Text = s.CollegeName }).ToList();
            colleges.Add(new SelectListItem { Value = "0", Text = "Others" });
            ViewBag.Colleges = colleges.Where(i => i.Value != "375").OrderBy(s => s.Value).ToList();

            var Designation = db.jntuh_designation.Where(e => e.isActive == true).Select(a => new { Id = a.id, designation = a.designation }).Take(4).ToList();
            ViewBag.Designation = Designation;
            var registered_faculty = new jntuh_registered_faculty();

            if (fID != 0)
            {
                registered_faculty = db.jntuh_registered_faculty.Where(a => a.id == fID).FirstOrDefault();
            }
            else
            {
                registered_faculty = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber == RegistrationNumber).FirstOrDefault();
            }

            //Black List and Verification Status Flags Checking.....
            var RegisteredFacultyId = db.jntuh_registered_faculty.Where(e => e.id == registered_faculty.id && (e.Blacklistfaculy == true || e.AbsentforVerification == true)).Select(e => e.id).FirstOrDefault();
            if (RegisteredFacultyId != 0)
            {
                return RedirectToAction("ViewFacultyDetails", new { fid = id });
            }

            var jntuh_college_edit_status = new int[] { 375, 2, 4, 5, 6, 7, 8, 9, 11, 12, 17, 20, 22, 23, 24, 26, 27, 29, 30, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 52, 54, 55, 56, 58, 59, 60, 65, 67, 68, 69, 70, 72, 74, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 95, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 206, 207, 210, 211, 213, 214, 215, 217, 218, 219, 222, 223, 225, 227, 228, 229, 230, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 249, 250, 252, 253, 254, 256, 260, 261, 262, 263, 264, 266, 267, 271, 273, 276, 282, 283, 286, 287, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 327, 329, 330, 332, 334, 335, 336, 342, 343, 348, 349, 350, 352, 353, 355, 360, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 379, 380, 382, 384, 385, 386, 389, 391, 392, 393, 394, 395, 399, 400, 403, 410, 411, 413, 414, 416, 420, 421, 422, 423, 424, 428, 429, 430, 435, 436, 439, 441, 442, 443, 445, 448, 449, 452, 454, 455 };

            List<FacultyExperience> Explist = new List<FacultyExperience>();
            FacultyExperience experience = new FacultyExperience();
            experience.facultyId = registered_faculty.id;
            experience.RegistrationNumber = registered_faculty.RegistrationNumber;
            experience.Name = registered_faculty.FirstName + " " + registered_faculty.MiddleName + "" + registered_faculty.LastName;
            experience.firstName = registered_faculty.FirstName;
            experience.middleName = registered_faculty.MiddleName;
            experience.lastName = registered_faculty.LastName;
            experience.FacultyCollegeid = db.jntuh_college_faculty_registered.Where(s => s.RegistrationNumber == registered_faculty.RegistrationNumber && jntuh_college_edit_status.Contains(s.collegeId)).Select(a => a.collegeId).FirstOrDefault();
            if (experience.FacultyCollegeid == null || experience.FacultyCollegeid == 0)
            {
                experience.FacultyCollegeid = db.jntuh_college_principal_registered.Where(s => s.RegistrationNumber == registered_faculty.RegistrationNumber && jntuh_college_edit_status.Contains(s.collegeId)).Select(a => a.collegeId).FirstOrDefault();
            }
            //var PresentExperienceList = db.jntuh_registered_faculty_experience.Where(a => a.facultyId == registered_faculty.id && a.facultyRelievingLetter == null && a.facultyDateOfResignation == null && a.createdBycollegeId != null).Select(a => a).LastOrDefault();

            var PresentExperienceList = db.jntuh_registered_faculty_experience.Where(a => a.facultyId == registered_faculty.id && a.createdBycollegeId != null).Select(a => a).ToList().LastOrDefault();

            if (PresentExperienceList != null)
            {
                experience.PresentCollegeid = PresentExperienceList.createdBycollegeId;
                experience.PresentCollegeCode =
                    jntuh_college.Where(s => s.id == PresentExperienceList.createdBycollegeId)
                        .Select(a => a.collegeCode)
                        .FirstOrDefault();
                experience.PresentCollegeName =
                    jntuh_college.Where(s => s.id == PresentExperienceList.createdBycollegeId)
                        .Select(a => a.collegeName)
                        .FirstOrDefault();
                experience.PresentDesignationId = PresentExperienceList.facultyDesignationId;
                experience.PresentDesignation =
                    Designation.Where(a => a.Id == experience.PresentDesignationId)
                        .Select(z => z.designation)
                        .FirstOrDefault();
                experience.PresentOtherDesignation = PresentExperienceList.OtherDesignation;
                experience.PresentfacultyDateOfAppointment =
                    PresentExperienceList.facultyDateOfAppointment.ToString().Split(' ')[0];
                experience.PresentfacultyJoiningDocument = PresentExperienceList.facultyJoiningOrder;
                int Presentfromyear = 0;
                int Presentfrommonth = 0;
                int Presentfromdate = 0;
                if (!string.IsNullOrEmpty(experience.PresentfacultyDateOfAppointment))
                {
                    Presentfromyear = Convert.ToInt32(experience.PresentfacultyDateOfAppointment.Split('/')[2]);
                    Presentfrommonth = Convert.ToInt32(experience.PresentfacultyDateOfAppointment.Split('/')[0]);
                    Presentfromdate = Convert.ToInt32(experience.PresentfacultyDateOfAppointment.Split('/')[1]);

                    DateTime zeroTime = new DateTime(1, 1, 1);
                    DateTime Appointmentdate = new DateTime(Presentfromyear, Presentfrommonth, Presentfromdate);
                    var curdate = DateTime.Now;

                    var Difference = curdate - Appointmentdate;

                    int years = (zeroTime + Difference).Year - 1;
                    int months = (zeroTime + Difference).Month - 1;
                    int days = (zeroTime + Difference).Day;

                    experience.PresentCollegeTotalExperience = years + " Years " + months + " Months " + days + "Days";
                }
            }
            var ExperienceList = new List<jntuh_registered_faculty_experience>();

            //if(PresentExperienceList != null)
            //{
            //    ExperienceList = db.jntuh_registered_faculty_experience.Where(a => a.facultyId == registered_faculty.id && a.Id != PresentExperienceList.Id).ToList();
            //}
            //else
            //{
            //    ExperienceList = db.jntuh_registered_faculty_experience.Where(a => a.facultyId == registered_faculty.id).ToList();
            //}

            ExperienceList = db.jntuh_registered_faculty_experience.Where(a => a.facultyId == registered_faculty.id && a.facultyDateOfResignation != null).ToList();
            int TotalExperienceyears = 0;
            int TotalExperienceMonths = 0;
            int TotalExperiencedays = 0;
            foreach (var item in ExperienceList)
            {
                FacultyExperience Experiencefaculty = new FacultyExperience();
                Experiencefaculty.EId = item.Id;
                //Experiencefaculty.facultyId = item.facultyId;
                Experiencefaculty.Collegeid = item.collegeId;
                Experiencefaculty.CollegeCode = item.collegeId == 375 ? "-" : jntuh_college.Where(e => e.id == item.collegeId).Select(s => s.collegeCode).FirstOrDefault();
                Experiencefaculty.CollegeName = item.collegeId == 375 ? "Others" : jntuh_college.Where(e => e.id == item.collegeId).Select(s => s.collegeName).FirstOrDefault();
                Experiencefaculty.OtherCollegeName = item.OtherCollege;
                Experiencefaculty.Designation = Designation.Where(a => a.Id == item.facultyDesignationId).Select(z => z.designation).FirstOrDefault();
                Experiencefaculty.OtherDesignation = item.OtherDesignation;
                Experiencefaculty.facultyDateOfAppointment = item.facultyDateOfAppointment.ToString().Split(' ')[0];
                Experiencefaculty.facultyDateOfResignation = item.facultyDateOfResignation.ToString().Split(' ')[0];

                // Experiencefaculty.facultyDateOfAppointment = UAAAS.Models.Utilities.MMDDYY2DDMMYY(Experiencefaculty.facultyDateOfAppointment);
                if (!string.IsNullOrEmpty(Experiencefaculty.facultyDateOfAppointment) && !string.IsNullOrEmpty(Experiencefaculty.facultyDateOfResignation))
                {
                    int fromyear = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.Split('/')[2]);
                    int frommonth = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.Split('/')[0]);
                    int fromdate = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.Split('/')[1]);


                    // Experiencefaculty.facultyDateOfResignation = UAAAS.Models.Utilities.MMDDYY2DDMMYY(Experiencefaculty.facultyDateOfResignation);

                    int year = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.Split('/')[2]);
                    int month = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.Split('/')[0]);
                    int date = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.Split('/')[1]);
                    DateTime zeroTime = new DateTime(1, 1, 1);

                    DateTime olddate = new DateTime(fromyear, frommonth, fromdate);
                    DateTime curdate = new DateTime(year, month, date);

                    var Difference = curdate - olddate;
                    if (Difference.Days > 0)
                    {
                        int years = (zeroTime + Difference).Year - 1;
                        int months = (zeroTime + Difference).Month - 1;
                        int days = (zeroTime + Difference).Day;

                        Experiencefaculty.TotalExperience = years + " Years " + months + " Months " + days + "Days";
                        TotalExperienceyears = TotalExperienceyears + years;

                        TotalExperienceMonths = TotalExperienceMonths + months;

                        TotalExperiencedays = TotalExperiencedays + days;
                    }

                }



                //  Experiencefaculty.TotalExperience = Experiencefaculty.TotalExperience + 1;
                Experiencefaculty.facultyJoiningDocument = item.facultyJoiningOrder;
                Experiencefaculty.facultyRelievingDocument = item.facultyRelievingLetter;
                Experiencefaculty.facultySCMDocument = item.FacultySCMDocument;
                Experiencefaculty.facultySalary = item.facultySalary;
                Experiencefaculty.isSubmitted = Convert.ToBoolean(item.isSubmitted);


                Explist.Add(Experiencefaculty);

            }
            TempData["TotalExperienceyears"] = TotalExperienceyears;

            TempData["TotalExperienceMonths"] = TotalExperienceMonths;
            TempData["TotalExperiencedays"] = TotalExperiencedays;

            experience.experiencelist = Explist;
            var isSubmittd = Explist.Where(s => s.isSubmitted != true).ToList();
            if (Explist.Count == 0 || isSubmittd.Count > 0)
            {
                ViewBag.isSubmit = true;
            }
            if (Roles.IsUserInRole("Admin"))
            {
                return View("FacultyExperienceViewForAdmin", experience);
            }
            return View(experience);
        }

        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult Editckeckbox(string facultyId, string EId)
        {
            FacultyExperience newFaculty = new FacultyExperience();

            return PartialView("Editckeckbox", newFaculty);

        }

        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult EditIndexRegistration(FacultyExperience Experience)
        {
            ViewBag.isSubmit = false;
            if (Experience.isSubmitted == true)
            {
                MembershipUser userdata = Membership.GetUser(User.Identity.Name);
                if (userdata == null)
                {
                    return RedirectToAction("LogOn", "Account");
                }
                int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);

                if (Experience.facultyId == 113698)
                {
                    Experience.facultyId = Convert.ToInt32(ConfigurationManager.AppSettings["testRegnumberfid"]);
                }

                string RegistrationNumber = string.Empty;
                var ExperienceList = new List<jntuh_registered_faculty_experience>();
                ExperienceList = db.jntuh_registered_faculty_experience.Where(a => a.facultyId == Experience.facultyId && a.createdBycollegeId == null).ToList();

                foreach (var facultyexperience in ExperienceList)
                {

                    facultyexperience.isSubmitted = Experience.isSubmitted;
                    facultyexperience.updatedOn = DateTime.Now;
                    facultyexperience.updatedBy = userId;
                    db.Entry(facultyexperience).State = EntityState.Modified;
                    db.SaveChanges();
                    ViewBag.isSubmit = true;
                    TempData["SUCCESS"] = "Successfully Submitted";
                }
            }
            else
            {
                TempData["ERROR"] = "";
            }
            return RedirectToAction("IndexRegistration", "NewOnlineRegistration", new { id = UAAAS.Models.Utilities.EncryptString(Experience.facultyId.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]) });
        }

        #endregion

        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult Index(string id)
        {
            int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            int fID = 0;
            if (id != null)
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(id.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]));
            else if (userId != null)
                fID = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(e => e.id).FirstOrDefault();
            else
                return RedirectToAction("LogOn", "Account");

            //fID = 121299;
            id = UAAAS.Models.Utilities.EncryptString(fID.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]);
            ViewBag.facultyid = id;

            //Black List and Verification Status Flags Checking.....
            // var RegisteredFacultyId = db.jntuh_registered_faculty.Where(e => e.id == fID && (e.Blacklistfaculy == true || e.AbsentforVerification == true)).Select(e => e.id).FirstOrDefault();
            //if (RegisteredFacultyId != 0)
            //return RedirectToAction("ViewFacultyDetails", new { fid = id });
            if (fID == 113698)
            {
                fID = Convert.ToInt32(ConfigurationManager.AppSettings["testRegnumberfid"]);
            }
            var jntuh_registered_faculty_experience = db.jntuh_registered_faculty_experience.Where(s => s.facultyId == fID).OrderByDescending(s => s.createdOn).Select(e => e).FirstOrDefault();
            var jntuh_registered_faculty_education_log = db.jntuh_registered_faculty_education_log.Where(s => s.facultyId == fID).OrderByDescending(s => s.createdOn).Select(e => e).FirstOrDefault();
            var jntuh_registered_faculty_subjectstaught = db.jntuh_registered_faculty_subjectstaught.Where(s => s.facultyId == fID).OrderByDescending(s => s.CreatedOn).Select(e => e).FirstOrDefault();

            var jntuh_registered_faculty =
                db.jntuh_registered_faculty.Where(e => e.id == fID).Select(e => e).FirstOrDefault();
            if (jntuh_registered_faculty != null && jntuh_registered_faculty.UserId != userId)
            {
                jntuh_registered_faculty = db.jntuh_registered_faculty.Where(r => r.UserId == userId).Select(s => s).FirstOrDefault();
                fID = jntuh_registered_faculty.id;
            }
            
            FacultyClass Faculty = new FacultyClass();
            Faculty.FacultyId = fID;
            if (jntuh_registered_faculty != null)
                Faculty.RegistrationNumber = jntuh_registered_faculty.RegistrationNumber;
            else
                return RedirectToAction("LogOn", "Account");
            Faculty.Collegeid = db.jntuh_college_faculty_registered.Where(s => s.RegistrationNumber.Trim() == Faculty.RegistrationNumber.Trim()).Select(s => s.collegeId).FirstOrDefault();
            //Faculty.collegeName = db.jntuh_college.Where(a => a.id == Faculty.Collegeid).Select(s => s.collegeName +"("+ s.collegeCode +")").FirstOrDefault();
            //Written by Narayana due to show if have principal association
            if (Faculty.Collegeid == 0 || Faculty.Collegeid == null)
            {
                Faculty.Collegeid = db.jntuh_college_principal_registered.Where(s => s.RegistrationNumber.Trim() == Faculty.RegistrationNumber.Trim()).Select(s => s.collegeId).FirstOrDefault();
                Faculty.collegeName = db.jntuh_college.Where(a => a.id == Faculty.Collegeid).Select(s => s.collegeName + "(" + s.collegeCode + ")" + " (Principal)").FirstOrDefault();
            }
            else
                Faculty.collegeName = db.jntuh_college.Where(a => a.id == Faculty.Collegeid).Select(s => s.collegeName + "(" + s.collegeCode + ")").FirstOrDefault();

            Faculty.Name = jntuh_registered_faculty.FirstName + " " + jntuh_registered_faculty.MiddleName + " " + jntuh_registered_faculty.LastName;
            Faculty.Experienceid = jntuh_registered_faculty_experience == null ? null : jntuh_registered_faculty_experience.Id.ToString();
            Faculty.Experiencedate = jntuh_registered_faculty_experience == null ? null : jntuh_registered_faculty_experience.updatedOn == null ? jntuh_registered_faculty_experience.createdOn.ToString() : jntuh_registered_faculty_experience.updatedOn.ToString();
            Faculty.Educationid = jntuh_registered_faculty_education_log == null ? null : jntuh_registered_faculty_education_log.id.ToString();
            Faculty.Educationdate = jntuh_registered_faculty_education_log == null ? null : jntuh_registered_faculty_education_log.updatedOn == null ? jntuh_registered_faculty_education_log.createdOn.ToString() : jntuh_registered_faculty_education_log.updatedOn.ToString();
            Faculty.subjectsid = jntuh_registered_faculty_subjectstaught == null ? null : jntuh_registered_faculty_subjectstaught.Id.ToString();
            Faculty.subjectsdate = jntuh_registered_faculty_subjectstaught == null ? null : jntuh_registered_faculty_subjectstaught.UpdatedOn == null ? jntuh_registered_faculty_subjectstaught.CreatedOn.ToString() : jntuh_registered_faculty_subjectstaught.UpdatedOn.ToString();
            Faculty.BlackListFlag = jntuh_registered_faculty.Blacklistfaculy == true ? "Yes" : "No";
            Faculty.VerifivationFlag = jntuh_registered_faculty.AbsentforVerification == true ? "Yes" : "No";

            DateTime? Experiencedate = Convert.ToDateTime(Faculty.Experiencedate);
            DateTime? subjectsdate = Convert.ToDateTime(Faculty.subjectsdate);
            DateTime? Educationdate = Convert.ToDateTime(Faculty.Educationdate);

            DateTime? CheckDate = Experiencedate > subjectsdate ? Experiencedate : subjectsdate;
            CheckDate = CheckDate > Educationdate ? CheckDate : Educationdate;
            Faculty.LastUpdatedOn = CheckDate.ToString();
            #region CollegeNews

            //Get College News and events based on start date and end date
            List<CollegeDashboardNews> news = db.jntuh_faculty_news.Where(n => n.isActive == true &&
                                                         n.isNews == true && n.facultyId == null)
                                                         .Select(n => new CollegeDashboardNews { url = n.navigateURL, newstitle = n.title, createdDate = n.createdOn }).OrderByDescending(n => n.createdDate).ToList();

            List<CollegeDashboardNews> cNews = db.jntuh_faculty_news.Where(collegeNews => collegeNews.isActive == true && collegeNews.isNews == false
                                                             && collegeNews.facultyId == fID)
                                                              .Select(n => new CollegeDashboardNews { url = n.navigateURL, newstitle = n.title, createdDate = n.createdOn }).OrderByDescending(collegeNews => collegeNews.createdDate).ToList();


            CollegeDashboardNews cn = new CollegeDashboardNews();
            ViewBag.Events = news.Union(cNews).OrderByDescending(collegeNews => collegeNews.createdDate).Take(5);

            #endregion

            int AcademicYearID = db.jntuh_academic_year.Where(s => s.isActive == true && s.isPresentAcademicYear == true).Select(a => a.id).FirstOrDefault();
            var ActualYear = db.jntuh_academic_year.Where(s => s.id == (AcademicYearID + 1)).Select(s => s.actualYear).FirstOrDefault();
            int? PresentYear = Convert.ToInt32(ActualYear);

            var FacultyAttendance = db.jntuh_college_basreport.Where(a => a.year == PresentYear && a.RegistrationNumber.Trim() == jntuh_registered_faculty.RegistrationNumber.Trim()).OrderByDescending(s => s.createdOn).ToList();
            var Months = FacultyAttendance.GroupBy(s => new { s.month }).Select(s => s.First()).ToList();
            List<FacultyMonthlyAttendance> AttendanceList = new List<FacultyMonthlyAttendance>();

            foreach (var item in Months)
            {
                FacultyMonthlyAttendance Attendance = new FacultyMonthlyAttendance();
                Attendance.CollegeId = item.collegeId;
                Attendance.Month = FacultyAttendance.Where(s => s.month == item.month).Select(s => s.month).FirstOrDefault();
                Attendance.WorkingDays = FacultyAttendance.Where(s => s.month == item.month).Select(s => s.totalworkingDays).FirstOrDefault();
                Attendance.HolidaysDays = FacultyAttendance.Where(s => s.month == item.month).Select(s => s.NoofHolidays).FirstOrDefault();
                Attendance.PresentDays = FacultyAttendance.Where(s => s.month == item.month).Select(s => s.NoofPresentDays).FirstOrDefault();
                AttendanceList.Add(Attendance);
            }
            ViewBag.MonthlyAttendance = AttendanceList;

            TempData["PhdUploadLink"] = "false";
            TempData["EditFieldsLink"] = "false";
            TempData["MobilityLink"] = "false";
            TempData["SuppDocsLink"] = "false";
            var Links_Screens = db.jntuh_link_screens.Where(a => a.isActive == true).Select(a => a).ToList();
            var College_links = db.jntuh_college_links_assigned.Where(a => a.isActive == true).Select(s => s).ToList();
            var currentDate = DateTime.Now;
            foreach (var links in Links_Screens)
            {
                // DateTime? linkfromdate = DateTime.Now;
                DateTime? linkclosedate = DateTime.Now;
                if (links.linkCode == "FPHDU")
                {
                    linkclosedate = College_links.Where(a => a.linkId == links.id).Select(z => z.todate).FirstOrDefault();
                    if (currentDate > linkclosedate)
                        TempData["PhdUploadLink"] = "true";
                }
                else if (links.linkCode == "FFE")
                {
                    linkclosedate = College_links.Where(a => a.linkId == links.id).Select(z => z.todate).FirstOrDefault();
                    if (currentDate > linkclosedate)
                        TempData["EditFieldsLink"] = "true";
                }
                else if (links.linkCode == "FMR")
                {
                    linkclosedate = College_links.Where(a => a.linkId == links.id).Select(z => z.todate).FirstOrDefault();
                    if (currentDate > linkclosedate)
                        TempData["MobilityLink"] = "true";
                }
                else if (links.linkCode == "FSDU")
                {
                    linkclosedate = College_links.Where(a => a.linkId == links.id).Select(z => z.todate).FirstOrDefault();
                    if (currentDate > linkclosedate)
                        TempData["SuppDocsLink"] = "true";
                }
            }

            var PhdUploadRegNos = new string[] { "9725-180831-130259", "3423-181126-115420", "9970-181124-144721", "7687-180818-104509", "1098-190117-151219", "6881-190201-230301", "3900-190118-164906", "7923-181121-164854", "2550-181119-145038", "5171-190109-104507", "9126-190221-124712", "4366-190110-150224", "7099-180827-225822", "3953-181122-103401", "8763-180810-120532", "5581-190223-155944", "4587-190222-120550", "4338-190117-170926", "3503-190116-151859", "3624-190108-130727", "2326-180728-155220", "0550-181122-175616", "9458-181122-120754", "1605-190110-104753", "3062-181226-184208", "0337-190309-154816", "7990-190202-160519", "4063-190103-135331", "4923-181122-112453", "3914-180818-135552", "6033-181122-103850", "3568-190110-142247", "8710-180811-113645", "2695-181206-140923", "8143-190109-152412", "9455-180818-115900", "9447-190117-163707", "4506-181120-142944", "4467-190109-151508", "3444-190109-154325", "1894-181122-145725", "5545-180818-143441", "6814-181122-235750", "2178-190117-235603", "7016-181122-164855", "5212-181122-140924", "8935-190112-122525", "5949-190116-124419", "6249-180813-113119", "0034-180705-102815", "4443-190109-143534", "4556-190113-183217", "0198-190111-115403", "4003-190111-143528", "2074-190110-180736", "9236-190111-112601", "5827-181121-181735", "4703-181223-121930", "2619-190103-165444", "5071-181122-173530", "4800-190110-105645", "8881-190309-143540", "0210-190117-135021", "5116-190103-154840", "1861-180713-120211", "8296-180709-150552", "7473-180810-135702", "3834-180819-141327", "6819-190109-105019", "9918-190117-131124", "7660-180724-165320", "4686-181120-143250", "0354-190117-155744", "2439-180810-111213", "1868-180707-105651", "9838-190117-162642", "2487-181122-110746", "8795-181119-115018", "5567-190109-155657", "1543-150410-124317", "4344-150414-124521", "77150331-132926", "86150406-140936", "2242-150418-161201", "9572-180202-162309", "85150402-141643", "0982-170207-163256", "63150402-153845", "01150404-160810", "2651-170107-141447", "0121-150420-175901", "5228-170520-115145", "6756-171227-114219", "7105-170913-153202", "2793-150410-105925", "9255-171220-162451", "9768-150408-132307", "7380-150409-163333", "63150404-153418", "15150405-100921", "2264-160120-120822", "56150405-132159", "15150404-120400", "7737-160224-114006", "3912-170109-135248", "89150402-151343", "8478-150408-080254", "1857-151219-070105", "0748-150408-110058", "4424-160229-122026", "5328-150411-185917", "73150402-134234", "2741-170520-103020", "56150404-131739", "91150403-203812", "98150401-144356", "54150402-101940", "02150407-123353", "18150407-124822", "5507-161120-154946", "94150407-135259", "97150404-122618", "1405-150408-103825", "5075-150408-111536", "1799-150413-175756", "5975-150410-125248", "30150403-221932", "5533-160227-120854", "9604-170126-072933", "7390-171227-120250", "9225-150619-210159", "8989-150412-162737", "08150331-164950", "7574-150420-194505", "0791-150410-131235", "69150402-130719", "6429-171013-143509", "25150330-153821", "8423-170522-001654", "1510-180201-184307", "47150406-172413", "1477-170918-122613", "4352-150408-112247", "2360-170103-112140", "2016-160123-145438", "6677-150418-144656", "2244-150413-155716", "5689-150415-165857", "88150404-141603", "12150402-143139", "4505-151222-222218", "98150407-101936", "6929-180202-095206", "3676-150411-114239", "2147-170207-113015", "4133-151217-083345", "27150406-115709", "23150331-132018", "9586-150424-151656", "8120-170914-123934", "09150407-100424", "0901-190109-144826", "1718-150411-170214", "2036-160225-124616", "9599-180125-095753", "8097-170912-123118", "39150407-103442", "7974-150408-123904", "9840-150412-102941", "79150402-155932", "8691-150409-103444", "56150402-161602", "6733-150413-154015", "3699-150409-141131", "5211-150413-175016", "6121-161111-143654", "4346-150408-143246", "0882-150409-163224", "0702-150408-163553", "7395-150412-152735", "4276-150408-105757", "1077-161022-142829", "3434-160602-132427", "3046-160308-145343", "7320-150417-235617", "82150331-170936", "9496-170914-143416", "68150331-163036", "8792-170912-150834", "9735-170914-145310", "9670-150411-154738", "2726-171129-134611", "5986-150412-150934", "3323-150409-121955", "3049-180208-154023", "37150407-151802", "3641-150408-125852", "4478-180416-215532", "5346-150408-130712", "39150407-160902", "25150406-185744", "47150406-170828", "26150407-125358", "3122-150408-230445", "93150404-131153", "6376-151218-120643", "5356-180131-005247", "7404-170204-203116", "61150406-170248", "60150403-174125" };

            TempData["PhDUploadCheck"] = "false";
            if (PhdUploadRegNos.Contains(Faculty.RegistrationNumber))
                TempData["PhDUploadCheck"] = "true";

            ////Code writen by siva for Faculty Phd Upload.
            //var FacultyPhDEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FPHDU").Select(a => a.id).FirstOrDefault();
            //DateTime? facultyPhDfromdate = DateTime.Now;
            //DateTime? facultyPhDclosedate = DateTime.Now;
            //if (FacultyPhDEditLinkId != 0)
            //{
            //    facultyPhDfromdate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyPhDEditLinkId && a.isActive == true).Select(s => s.fromdate).FirstOrDefault();
            //    facultyPhDclosedate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyPhDEditLinkId && a.isActive == true).Select(s => s.todate).FirstOrDefault();
            //}

            //var jntuh_registered_faculty_education = db.jntuh_registered_faculty_education.Where(s => s.facultyId == fID && s.educationId == 6).Select(e => e).FirstOrDefault();
            //Faculty.PhdUploadid = jntuh_registered_faculty_education == null ? null : jntuh_registered_faculty_education.id.ToString();
            //Faculty.PhdUploaddate = jntuh_registered_faculty_education == null ? null : jntuh_registered_faculty_education.updatedOn == null ? jntuh_registered_faculty_education.createdOn.ToString() : jntuh_registered_faculty_education.updatedOn.ToString();
            //DateTime? PhdUploadCheckdate = null;
            //if (!String.IsNullOrEmpty(Faculty.PhdUploaddate))
            //{
            //    PhdUploadCheckdate = Convert.ToDateTime(Faculty.PhdUploaddate);
            //}


            //CheckDate = CheckDate > PhdUploadCheckdate ? CheckDate : PhdUploadCheckdate;
            //Faculty.LastUpdatedOn = CheckDate.ToString();

            //TempData["PhdUploadLink"] = "false";
            //var PhdcurrentDate = DateTime.Now;
            //if (PhdcurrentDate > facultyPhDclosedate)
            //    TempData["PhdUploadLink"] = "false";
            //else
            //    TempData["PhdUploadLink"] = "true";

            ////Code writen by siva for Faculty Edit Fields.
            //var FacultyEditFieldsLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FFE").Select(a => a.id).FirstOrDefault();
            //DateTime? facultyEditFieldsfromdate = DateTime.Now;
            //DateTime? facultyEditFieldsclosedate = DateTime.Now; ;
            //if (FacultyEditFieldsLinkId != 0)
            //{
            //    facultyEditFieldsfromdate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditFieldsLinkId && a.isActive == true).Select(s => s.fromdate).FirstOrDefault();
            //    facultyEditFieldsclosedate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditFieldsLinkId && a.isActive == true).Select(s => s.todate).FirstOrDefault();
            //}
            //TempData["EditFieldsLink"] = "false";
            //var currentDate = DateTime.Now;
            //if (currentDate > facultyEditFieldsclosedate)
            //    TempData["EditFieldsLink"] = "false";
            //else
            //    TempData["EditFieldsLink"] = "true";

            return View(Faculty);
        }

        //Faculty Registration live Checking condition
        private bool Checkfacultyregistraon()
        {
            bool islive = false;
            DateTime todayDate = DateTime.Now;
            int actualYear = db.jntuh_academic_year.Where(a => a.isActive == true && a.isPresentAcademicYear == true).Select(a => a.actualYear).FirstOrDefault();
            int ay0 = db.jntuh_academic_year.Where(a => a.actualYear == (actualYear + 1)).Select(a => a.id).FirstOrDefault();
            int lid =
                db.jntuh_link_screens.Where(p => p.linkCode == "FR" && p.isActive == true).Select(s => s.id).FirstOrDefault();
            jntuh_college_links_assigned scmphase =
                db.jntuh_college_links_assigned.Where(l => l.linkId == lid && l.academicyearId == ay0 && l.isActive == true && l.fromdate <= todayDate && l.todate >= todayDate).Select(s => s).FirstOrDefault();
            if (scmphase != null)
                islive = true;
            return islive;
        }

        public ActionResult FacultyNew()
        {
            //Checking Faculty Registration checking
            bool islive = Checkfacultyregistraon();
            if (!islive)
            {
                return RedirectToAction("Index", "UnderConstruction");
            }

            FacultyRegistration regFaculty = new FacultyRegistration();

            List<DistinctDepartment> depts = new List<DistinctDepartment>();
            var jntuh_department = db.jntuh_department.AsNoTracking().ToList();
            var jntuh_designation = db.jntuh_designation.AsNoTracking().ToList();
            var jntuh_college = db.jntuh_college.AsNoTracking().ToList();
            var jntuh_degree = db.jntuh_degree.AsNoTracking().ToList();

            var jntuh_departments = (from a in jntuh_department
                                     join b in jntuh_degree on a.degreeId equals b.id
                                     select new
                                     {
                                         id = a.id,
                                         departmentName = a.departmentName
                                     }).ToList();



            string existingDepts = string.Empty;
            int[] notRequiredIds = { 25, 26, 27, 33, 34, 36, 37, 38, 39, 53, 54, 55, 56, 71, 72, 73, 74, 75, 76, 77, 78, 60 };
            foreach (var item in jntuh_departments.Where(s => !notRequiredIds.Contains(s.id)).OrderBy(s => s.departmentName))
            {
                if (!existingDepts.Split(',').Contains(item.departmentName))
                {
                    depts.Add(new DistinctDepartment { id = item.id, departmentName = item.departmentName });
                    existingDepts = existingDepts + "," + item.departmentName;
                }
            }

            ViewBag.department = depts;
            ViewBag.designation = jntuh_designation.Where(c => c.isActive == true).ToList();
            ViewBag.Institutions = jntuh_college.Where(c => c.isActive == true && c.id != 375).Select(c => new { CollegeId = c.id, CollegeName = c.collegeCode + "-" + c.collegeName }).OrderBy(c => c.CollegeName).ToList();



            List<SelectListItem> ratifiedDuration = new List<SelectListItem>();
            for (int i = 1; i <= 10; i++)
            {
                ratifiedDuration.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.duration = ratifiedDuration;

            List<SelectListItem> prevExperience = new List<SelectListItem>();
            for (int i = 0; i <= 40; i++)
            {
                prevExperience.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.prevExperience = prevExperience;

            List<SelectListItem> years = new List<SelectListItem>();
            for (int i = 1940; i <= DateTime.Now.Year; i++)
            {
                years.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.years = years;

            List<SelectListItem> division = new List<SelectListItem>();
            for (int i = 1; i <= 5; i++)
            {
                division.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.division = division;

            List<SelectListItem> SLETSPECS = new List<SelectListItem>();
            SLETSPECS.Add(new SelectListItem { Text = "Physics", Value = "Physics" });
            SLETSPECS.Add(new SelectListItem { Text = "English", Value = "English" });
            SLETSPECS.Add(new SelectListItem { Text = "Chemistry", Value = "Chemistry" });
            SLETSPECS.Add(new SelectListItem { Text = "Mathematics", Value = "Mathematics" });
            ViewBag.SLETSPECS = SLETSPECS;

            #region Auto Populate Condition.
            var specializations = db.jntuh_specialization.Where(s => s.isActive == true).Select(a => a).ToList();

            var ugspecializations = (from s in specializations
                                     join d in db.jntuh_department on s.departmentId equals d.id
                                     join de in db.jntuh_degree on d.degreeId equals de.id
                                     where (de.id == 4 || de.id == 5)
                                     select new
                                     {
                                         id = s.id,
                                         specializationname = s.specializationName
                                     }).ToList();

            regFaculty.ug_specializations = new List<string>() { "Test" };
            foreach (var item1 in ugspecializations)
            {
                regFaculty.ug_specializations.Add(item1.specializationname);
            }

            var pgspecializations = (from s in specializations
                                     join d in db.jntuh_department on s.departmentId equals d.id
                                     join de in db.jntuh_degree on d.degreeId equals de.id
                                     where (de.id != 4 && de.id != 5)
                                     select new
                                     {
                                         id = s.id,
                                         specializationname = s.specializationName
                                     }).ToList();

            regFaculty.pg_specializations = new List<string>() { "Test" };
            foreach (var item1 in pgspecializations)
            {
                regFaculty.pg_specializations.Add(item1.specializationname);
            }

            var Education = db.jntuh_registered_faculty_education.Select(e => new { educationid = e.educationId, coursestudied = e.courseStudied, universites = e.boardOrUniversity, places = e.placeOfEducation, specialization = e.specialization }).ToList();

            var RegisteredFacultyEducation_Courses = Education.Select(e => e.coursestudied.Trim()).Distinct().ToList();
            var RegisteredFacultyEducation_universities = Education.Where(z => z.universites != null).Select(e => e.universites.Trim()).Distinct().ToList();
            var RegisteredFacultyEducation_places = Education.Where(z => z.places != null).Select(e => e.places).Distinct().ToList();
            var RegisteredFacultyEducation_UGspecialization = Education.Where(a => a.educationid == 3 && a.specialization != null).Select(e => e.specialization.Trim()).Distinct().ToList();
            var RegisteredFacultyEducation_PGspecialization = Education.Where(a => a.educationid == 4 && a.specialization != null).Select(e => e.specialization.Trim()).Distinct().ToList();

            foreach (var UG in RegisteredFacultyEducation_UGspecialization)
            {
                regFaculty.ug_specializations.Add(UG.Trim());
            }
            regFaculty.ug_specializations.Remove("Test");
            foreach (var PG in RegisteredFacultyEducation_PGspecialization)
            {
                regFaculty.pg_specializations.Add(PG.Trim());
            }
            regFaculty.pg_specializations.Remove("Test");
            regFaculty.universitys = new List<string>() { "Rajiv Gandhi University", "Assam University", "Tezpur University", "University of Hyderabad, Hyderabad", "Maulana Azad National Urdu University", "English   and   Foreign   Languages   University", "Jamia Millia Islamia", "University of Delhi", "JawaharLal Nehru University", "JawaharLal Nehru Technologial University Hyderabad", "JawaharLal Nehru Technologial University Kakinada", "JawaharLal Nehru Technologial University Anathapur", "Indira Gandhi National Open University", "South Asian University", "The  Indira  Gandhi  National  Tribal  University", "Dr. Harisingh Gour Vishwavidyalaya", "Mahatma  Gandhi  Antarrashtriya  Hindi  Vishwavidyalaya", "Mizoram University", "North Eastern Hill University", "Manipur University", "Central Agricultural University", "Nagaland University", "Pondicherry  University", "Sikkim University", "Tripura University", "Aligarh Muslim University", "Babasaheb  Bhimrao  Ambedkar  University", "Banaras Hindu University", "University of Allahabad", "Rajiv  Gandhi  National  Aviation  University", "Rani  Lakshmi  Bai  Central  Agricultural  University", "Visva Bharati, Shantiniketan", "Hemwati Nandan Bahuguna Garhwal University", "Central University of Tamil Nadu", "Indian Maritime University", "Central  University  of  Rajasthan", "Central University of Punjab", "Central University of Orissa", "Central University of Kerala", "Central University of Karnataka", "Central University of Jharkhand", "Central University of Kashmir, Transit Campus", "Central University of Jammu, Bagla (Rahya-Suchani)", "Central University of Himachal Pradesh", "Central University of Haryana", "Guru  Ghasidas  Vishwavidyalaya", "Central University of Bihar", "Nalanda University", "Mahatma  Gandhi  Central  University", "Central University of Gujarat", "Academy of Maritime Education and Training", "Amrita Vishwa Vidyapeetham", "Avinashilingam Institute for Home Science & Higher Education for Women", "B.L.D.E.", "B.S. Abdur Rahman Institute of Science and Technology", "Banasthai Vidyapith", "Bharath Institute of Higher Education & Research", "Bharati Vidyapeeth", "Bhatkhande Music Institute", "Birla Institute of Technology", "Birla Institute of Technology & Science", "Central Institute of Buddhist Studies(CIBS)", "Central Institute of Fisheries Education", "Central Institute of Higher Tibetan Studies", "Chennai Mathematical Institute", "Chettinad Academy of Research and Education (CARE)", "Chinmaya Vishwavidyapeeth", "Christ", "D.Y Patil Educational Society", "Datta Meghe Institute of Medical Sciences", "Dayalbagh Educational Institute", "Deccan College Postgraduate & Research Institute", "Dr. D.Y. Patil Vidyapeeth", "Dr. M.G.R. Educational and Research Institute", "Forest Research Institute", "Gandhi Institute of Technology and Management (GITAM)", "Gandhiigram Rural Institute", "Gokhale Institute of Politics & Economics", "Graphic Era", "Gujarat Vidyapith", "Gurukul Kangri vidyapeeth", "Hindustan Institute of Technology and Science (HITS)", "Homi Bhabha National Institute, Regd. Office", "ICFAI Foundation for Higher Education", "IIS", "Indain Institute of Foreigen Trade", "Indian Agricultural Research Institute", "Indian Association for the Cultivation of Science (IACS)", "Indian Institute of Information Technology and Management", "Indian Institute of Science", "Indian Institute of Space Science and Technology", "Indian Law Institute", "Indian School of Mines", "Indian Veterinary Research Institute", "Indira Gandhi Institute of Development Research", "Institute of Advanced Studies in Education", "Institute of Chemical Technology", "Institute of liver and Biliary Sciences", "Instituteof Armamrnt Technology", "International Institute for Population Sciences", "International Institute of Information Technology", "Jain", "Jain Vishva Bharati Institute", "Jamia Hamdard", "Janardan Rai Nagar Rajasthan Vidyapeeth", "Jawahar lal Nehru Centre for Advanced Scientific Research", "Jaypee Institute of Information Technology", "JSS Academy of Higher Education & Research", "K.L.E. Academy of Higher Education and Research", "Kalasalingam Academy of Research and Education", "Kalinga Institute of Industrial Technology", "Karpagam Academy of Higher Education", "Karunya Institute of Technology and Sciences", "Kerala Kalamandalam", "Koneru Lakshmaiah Education Foundation", "Krishna Institute of Medical Sciences", "Lakshmibai National Institute of Physical Education", "Lingaya's Vidyapeeth", "LNM Istitute of Information Technology", "Maharishi Markandeshwar (Deemed to be University)", "Manav Rachna International Institute of Research and Studies", "Manipal Academy of Higher Education", "Meenakshi Academy of Higher Education and Research", "MGM Institute of Health Sciences", "Narsee Monjee Institute of Management Studies", "National Brain Research Centre", "National Dairy Research Institute", "National Institute of Food Technology, Entrepreneurship & Management (NIFTEM)", "National Institute of Mental Health & Neuro Sciences", "National Museum Institute of History of Arts, Conservation and Musicology", "National Rail and Transportation Institute", "National University of Educational Planning & Administration", "Nava Nalanda Mahavihara", "Nehru Gram Bharati", "NITTE", "Noorul Islam Centre for Higher Education", "North Eastern Regional Institute of Science & Technology", "Padmashree Dr.D.Y. Patil Vidyapeeeth", "Pandit Dwarka Prasad Mishra Indian Institute of Information Technology", "Periyar Manaimmai Institute of Science & Technology (PMIST)", "Ponnaiyan Ramajayam Institute of Science & technology (PMIST)", "Pravara Institute of Medical Sciences", "Punjab Engineering College", "Rajiv Gandhi National Institute of Youth Development", "Ramakrishna Mission Vivekananda Educational and Research Institute", "Rashtriya Sanskrit Sansthana", "Rashtriya Sanskrit Vidyapeeth", "S.R.M Institute of Science and Technology", "Sam Higginbottom Institute of Agriculture, Technology & Sciences", "Sant Longowal Institute of Engineering and Technology", "Santosh", "Sathyabama Institute of Science and Technology", "Saveetha Institute of Medical and Technical Sciences", "Shanmugha Arts Science Technology & Research Academy (SASTRA)", "Shobhit Institute of Engineering & Technology", "Shri Lal Bahadur Shastri Rashtriya Sanskrit Vidyapith", "Siksha 'O' Anusandhan", "Sri Balaji Vidyapeeth (Deemed to be University)", "Sri Chandrasekharendra Saraswathi Vishwa Mahavidyalaya", "Sri Devraj Urs Academy of Higher Education and Research", "Sri Ramachandra Medical College and Research Institute", "Sri Sathya Sai Institute of Higher Learning", "Sri Siddhartha Academy of Higher Education", "St. Peterâ€™s Institute of Higher Education and Research", "Sumandeep Vidyapeeth", "Swami Vivekananda Yoga Anusandhana Samsthana", "Symbiosis International", "Tata Institute of Fundamental Research", "Tata Institute of Social Sciences", "TERI School of Advanced studies", "Thapar Institute of Engineering & Technology", "Tilak Maharashtra Vidyapeeth", "Vel Tech Rangarajan Dr. Sagunthala R & D Institute of Science and Technology", "Vellore Institute of Technology", "VELS Institute of Science Technology & Advanced Studies (VISTAS)", "Vignan's Foundation for Science, Technology and Research", "Vinayaka Missionâ€™s Research Foundation", "Yenepoya", "A.P.J. Abdul Kalam Technological University", "Acharaya N.G.Ranga Agricultural University", "Acharaya Nagarjuna University", "Adikavi Nannaya University", "Akkamahadevi women's University (Formerly known as Karnataka State Women's University)", "Alagappa University", "Aliah University", "Allahabad State University", "Ambedkar University Delhi (AUD)", "Anand Agricultural University", "Andhra University", "Anna University", "Annamalai University", "Arybhatta Knowledge University", "Assam Agricultural University", "Assam Rajiv Gandhi University of Co-operative Management", "Assam Science & Technology University", "Assam Womens University", "Atal Bihari Vajpayee Hindi Vishwavidyalaya", "Awadesh Pratap Singh University", "Ayush and Health Sciences University of Chhattisgarh", "Baba Farid University of Health Sciences", "Baba Ghulam Shah Badshah University", "Babasaheb Bhimrao Ambedkar Bihar University", "Banda University of Agriculture & Technology", "Bangalore University", "Bankura University", "Barkatullaah University", "Bastar Vishwavidyalaya", "Bengaluru Central University", "Bengaluru North University", "Berhampur University", "Bhagat Phool Singh Mahila Vishwavidyalaya", "Bhakta Kavi Narsinh Mehta University", "Bharathiar University", "Bharathidasan University", "Bhupender Narayan Mandal University", "Bidhan Chandra Krishi Vishwavidyalaya", "Bihar Agricultural University", "Biju Patnaik University of Technology", "Bilaspur Vishwavidyalaya", "Binod Bihari Mahto Koylanchal University", "Birsa Agricultural University", "Bodoland University", "Bundelkhand University", "Burdwan University", "Calcutta University", "Calicut University", "CEPT University", "Ch. Bansi Lal University", "Chanakya National Law University", "Chandr Shekhar Azad University of Agriculture & Technology", "Chatrapati Sahuji Maharaj Kanpur University", "Chaudhary Devi Lal University", "Chaudhary Ranbir Singh University", "Chaudhary Sarwan Kumar Himachal Pradesh Krishi Vishvavidyalaya", "Chhattisgarh Kamdhenu Vishwavidyalaya", "Chhattisgarh Swami Vivekanad Technical Universty", "Childrens University", "Choudary Charan Singh Haryana Agricultural Univeersity", "Choudary Charan Singh University", "Cluster University of Jammu", "Cluster University of Srinagar", "Cochin Unviersity of Science & Technology", "Cooch Behar Panchanan Barma University", "Cotton University", "Damodaram Sanjivayya National Law University", "Davangere University", "Deen Bandhu Chhotu Ram University of Sciences & Technology", "Deen Dayal Upadhyay Gorakhpur University", "Delhi Pharmaceutical Sciences & Research University", "Delhi Technological University", "Devi Ahilya Vishwavidyalaya", "Dharmashastra National Law University", "Dharmsinh Desai University", "Diamond Harbour Womens University", "Dibrugarh University", "Doon University", "Dr Shyama Prasad Mukherjee University", "Dr. A.P.J. Abdul Kalam Technical University", "Dr. B. R. Ambedkar University of Social Sciences", "Dr. B.R. Ambedkar University", "Dr. B.R.Ambedkar Open University", "Dr. B.R.Ambedkar University", "Dr. Babasaheb Ambedkar Marathwada University", "Dr. Babasaheb Ambedkar Open University", "Dr. Babasaheb AmbedkarTechnological University", "Dr. Bhimrao Ambedkar Law University", "Dr. N.T.R. University of Health Sciences", "Dr. Punjabrao Deshmukh Krishi Vidyapeeth", "Dr. Ram Manohar Lohia Awadh University", "Dr. Ram Manohar Lohiya National Law University", "Dr. Shakuntala Misra National Rehabilitation University", "Dr. Shyama Prasad University", "Dr. Y.S.Parmar University of Horticulture & Forestry", "Dr. Y.S.R. Horticultural Univerity", "Dravidian University", "Durg Vishwavidyalaya", "Fakir Mohan University", "G.B.Pant University of Agriculture & Technology", "Gangadhar Meher University", "Gauhati University", "Gautam Buddha University", "Goa University", "Gondwana University", "Govind Guru Tribal University", "Gujarat Agricultural University", "Gujarat Ayurveda University", "Gujarat Forensic Sciences University", "Gujarat National Law University", "Gujarat Technological University", "Gujarat University", "Gujarat University of Transplantation Sciences", "Gulbarga University", "Guru Angad Dev Veterinary & Animal Sciences University", "Guru Gobind Singh Indraprastha Vishwavidyalaya", "Guru Jambeshwar University of Science and Technology", "Guru Nanak Dev University", "Guru Ravidas Ayurved University", "Harcourt Butler Technical University", "Haridev Joshi University of Journalism and Mass Communication", "Haryana Vishwakarma Skill University", "Hemchandracharya North Gujarat University", "Hemwati Nandan Bahuguna Medical Education University", "Hidayatullah National Law University", "Himachal Pradesh National Law University", "Himachal Pradesh Technical University", "Himachal Pradesh University", "Indian Institute of Teacher Education", "Indira Gandhi Delhi Technical University for Women", "Indira Gandhi Krishi Vishwavidyalaya", "Indira Gandhi University", "Indira Kala Sangeet Vishwavidyalaya", "Indraprastha Institute of Information Technology", "Institute of Infrastructure Technology Research and Management", "International Institute of Information Technology (IIIT)", "Islamic University of Sciences & Technology University", "Jadavpur University", "Jagadguru Ramanandacharya Sanskrit University", "Jai Naraim Vyas University", "Jai Prakash vishwavidyalaya(university)", "Jammu University", "Jananayak Chandrashekhar University", "Jawaharlal Nehru Architecture and Fine Arts University", "Jawaharlal Nehru Krishi Vishwavidyalaya", "Jawaharlal Nehru Technological University", "Jharkhand Raksha Shakti University", "Jiwaji University", "Junagarh Agricultural University", "Kakatiya University", "Kaloji Narayan Rao University of Health Sciences", "Kalyani University", "Kamdhenu University", "Kameshwar Singh.Darbhanga Sanskrit Vishwavidyalaya", "Kannada University", "Kannur University", "Karanataka State Law University", "Karanataka State Open University", "Karanataka University", "Karanataka Veterinary, Animal & Fisheries Science University", "Karnataka Folklore University", "Karnataka Sanskrit University", "Karnataka State Rural Development and Panchayat Raj University", "Kashmir University", "Kavi Kulguru Kalidas Sanskrit Vishwavidyalaya", "Kazi Nazrul University", "Kerala Agricultural Unviersity", "Kerala University", "Kerala University of Fisheries & Ocean Studies", "Kerala University of Health Sciences", "Kerala Veterinary & Animal Sciences University", "Khallikote University", "Khwaja Moinuddin Chishti Urdu, Arabi-Farsi University", "King Georges Medical University", "Kolhan University", "Konkan Krishi Vidyapeeth", "Krantiguru Shyamji Krishna Verma Kachchh University", "Krishna Kanta Handique State Open University", "Krishna University", "Krishnakumarsinhji Bhavnagar University", "KSGH Music and Performing Arts University", "Kumar Bhaskar Varma Sanskrit & Ancient Studies University", "Kumaun University", "Kurukshetra University", "Kushabhau Thakre Patrakarita Avam Jansanchar Vishwavidyalaya", "Kuvempu University", "Lala Lajpat Rai University of Veterinary & Animal Sciences", "Lalit Narayan Mithila University", "Lucknow University", "M.J.P. Rohilkhand University", "M.P.Bhoj (open) University", "Madan Mohan Malaviya University of Technology", "Madaras University", "Madhya Pradesh Pashu Chikitsa Vigyan Vishwavidyalaya", "Madurai Kamraj University", "Magadh University", "Mahamaya Technical University", "Maharahtra University of Health Sciences", "Maharaja Bir Bikram University", "Maharaja Chhatrasal Bundelkhand Vishwavidyalaya", "Maharaja Ganga Singh University", "Maharaja Ranjit Singh Punjab Technical University", "Maharaja Sayajirao University of Baroda", "Maharaja Surajmal Brij University", "Maharana Partap Horticultural University", "Maharana Pratap University of Agriculture & Technology", "Maharashtra Animal & Fishery Sciences University", "Maharashtra National Law University", "Maharashtra National Law University,", "Maharishi Dayanand Saraswati University", "Maharishi Dayanand University", "Maharshi Panini Sanskrit Evam Vedic Vishwavidyalaya", "Mahatam Gandhi Kashi Vidyapeeth", "Mahatma Gandhi Chitrakoot Gramodaya Vishwavidyalaya", "Mahatma Gandhi University", "Mahatma Gandhi Unversity", "Mahatma Phule Krishi Vidyapeeth", "Makhanlal Chaturvedi National University of Journalism & Communication", "Mangalore University", "Manipur Technical University", "Manipur University of Culture", "Manonmaniam Sundarnar University", "Marathwada Agricultural University", "Maulana Abul Kalam Azad University of Technology", "Maulana Mazharul Haque Arabic & Persian University", "Mohan Lal Shukhadia University", "Mother Teresa Womens University", "Mumbai University", "Munger University", "Mysore University", "Nalanda Open University", "Narendra Deo University of Agriculture & Technology", "National Academy of Legal Studies & Research University", "National Law Institute University", "National law School of India University", "National Law Universituy", "National Law University", "National Law University and Judicial Academy", "National University of Advanced Legal Studies (NUALS)", "National University of Study & Research in Law", "Navsari Agriculture University", "Netaji Shubhash Open University", "Nilamber-Pitamber University", "Nizams Institute of Medical Sciences", "North Benagal University", "North Maharashtra University", "North Orissa University", "Odisha State Open University", "Orissa University Of Agriculture & Technology", "Osmania University", "Palamuru University", "Pandit S N Shukla University", "Patliputra University", "Patna University", "Periyar University", "Potti Sreeramulu Teugu Universtity", "Presidency University", "Professor Jayashankar Telangana State Agricultural University", "Pt. Bhagwat Dayal Sharma University of Health Sciences", "Pt. Sundarlal Sharma (Open) University", "Pt.Ravishankar Shukla University", "Punjab Agriculture University", "Punjab Technical University", "Punjab University", "Punjabi University", "Purnea University", "Rabindra Bharati University", "Raiganj University", "Raj Rishi Bhartrihari Matsya University", "Raja Mansingh Tomar Music & Arts University", "Rajasthan Ayurveda University", "Rajasthan ILD Skills University (RISU)", "Rajasthan Technical University", "Rajasthan University", "Rajasthan University of Health Sciences", "Rajasthan University of Veterinary & Animal Sciences", "Rajendra Agricultural University", "Rajiv Gandhi Prodoyogiki Vishwavidyalaya", "Rajiv Gandhi University of Health Science", "Rajiv Gandhi University of Knowledge Technology", "Rajmata Vijayaraje Scindia Krishi Vishwa Vidyalaya", "Raksha Shakti University", "Rama Devi Womens University", "Ranchi University", "Rani Channamma University", "Rani Durgavati Vishwavidyalaya", "Ravenshaw University", "Rayalaseema University", "Sambalpur University", "Sampurnanand Sanskrit Vishwavidyalaya", "Sanchi University of Buddhist-Indic Studies", "Sant Gadge Baba Amravati University", "Sardar Krushinagar Dantiwada Agricultural University", "Sardar Patel University", "Sardar Patel University of Police, Security & Criminal Justice", "Sardar Vallabh Bhai Patel University of Agriculture & Technology", "Sarguja University", "Satavahana University", "Saurashtra University", "Savitribai Phule Pune University", "Shekhawati University", "Sher-e-Kashmir University of Agricultural Science & Technology", "Shivaji University", "shree guru gobind singh tricentenary university", "Shree Sankaracharaya University of Sanskrit", "Shree Somnath Sanskrit University", "Shri Govind Guru University", "Shri Jagannath Sanskrit Vishwavidyalaya", "Shri Mata Vaishno Devi University", "Siddharth University", "Sidho-Kanho-Birsha University", "Sido Kanhu University", "Smt. Nathibai Damodar Thackersey Womens University", "Solapur University", "Sri Dev Suman Uttarakhand Vishwavidyalaya", "Sri Konda Laxman Telangana State Horticultural University", "Sri krishnadevaraya University", "Sri P V Narsimha Rao Telangana Veterinary University", "Sri Padmavati Mahila Vishwavidyalayam", "Sri Venkateswara Institute of Medical Sciences", "Sri Venkateswara University", "Sri Venkateswara Vedic University", "Sri Venkateswara Veterinary University", "Srimanta Sankaradeva University of Health Sciences", "State University of Performing and Visual Arts", "Swami Keshwanand Rajasthan Agriculture University", "Swami Ramanand Teerth Marathwada University", "Swarnim Gujarat Sports University", "T.M. Bhagalpur University", "Tamil Nadu Fisheries University", "Tamil Nadu Music and Fine Arts University", "Tamil Nadu Open University", "Tamil Nadu Teacher Education University", "Tamil University", "Tamilnadu Agricultural University", "Tamilnadu Dr. Ambedkar Law University", "Tamilnadu Dr. M.G.R.Medical University", "Tamilnadu National Law School", "Tamilnadu Physical Educaton and Sports University", "Tamilnadu Veterinary & Animal Sciences University", "Telangana University", "The Bengal Engineering & Science University", "The Rajiv Gandhi National University of Law", "The Rashtrasant Tukadoji Maharaj Nagpur University", "The Sanskrit College and University", "The West Bengal National University of Juridical Science", "The West Bengal University of Health Sciences", "Thiruvalluvar University", "Thunchath Ezhuthachan Malayalam University", "Tumkur University", "U.P. Pandit Deen Dayal Upadhyaya Pashu Chikitsa Vigyan Vishwavidhyalaya Evam Go-Anusandhan Sansthan", "U.P. Rajarshi Tandon Open University", "U.P.King Georges University of Dental Sciences", "University of Agricultural Sciences", "University of Horticultural Sciences", "University of Kota", "Univesity of Gour Banga", "Utkal University", "Utkal University of Culture", "Uttar Banga Krishi Vishwavidyalaya", "Uttar Pradesh University of Medical Sciences", "Uttarakhand Aawasiya Viswavidyalaya", "Uttarakhand Ayurved University", "Uttarakhand Open University", "Uttarakhand Sanskrit University", "Uttarakhand Technical University", "Vardhman Mahaveer Open University", "Veer Bahadur Singh Purvanchal University", "Veer Chandra Singh Garhwali Uttarakhand University of Horticulture & Forestry", "Veer Kunwar Singh University", "Veer Narmad South Gujarat University", "Veer Surendra Sai Institute of Medical Science and Research", "Veer Surendra Sai University of Technology", "Vesveswaraiah Technological University", "Vidya Sagar University", "Vijayanagara Sri Krishnadevaraya University", "Vikram Simhapuri University", "Vikram University", "Vinoba Bhave University", "West Bengal State University", "West Bengal University of Animal and Fishery Sciences", "West Bengal University of Teachers, Training, Education Planning and Administration", "Yashwant Rao Chavan Maharashtra Open University", "YMCA University of Science & Technology", "Yogi Vemana University" };
            regFaculty.places = new List<string>() { "Arunachal Pradesh", "Assam", "Telangana", "Delhi", "Madhya Pradesh", "Maharashtra", "Mizoram", "Meghalaya", "Manipur", "Nagaland", "Pondicherry", "Sikkim", "Tripura", "Uttar Pradesh", "West Bengal", "Uttarakhand", "Tamil Nadu", "Rajasthan", "Punjab", "Orissa", "Kerala", "Karnataka", "Jharkhand", "Jammu & Kashmir", "Himachal", "Pradesh", "Haryana", "Chhattisgarh", "Bihar", "Gujarat", "Jammu and Kashmir", "Andhra Pradesh", "Chandigarh", "Puducherry", "Himachal Pradesh", "Goa" };
            regFaculty.Courses = new List<string>() { "BE", "BTech", "ME", "MTech", "MBA", "MCA", "BCA", "PharmD", "BPharmacy", "MPharmacy", "BCom", "MCom", "BSC", "MSC", "M.A", "BA", "BZC", "MPhil", "PhD" };

            foreach (var course in RegisteredFacultyEducation_Courses)
            {
                //if (!regFaculty.Courses.Contains(course.Trim()))
                regFaculty.Courses.Add(course.Trim());
            }

            foreach (var university in RegisteredFacultyEducation_universities)
            {
                regFaculty.universitys.Add(university.Trim());
            }

            foreach (var place in RegisteredFacultyEducation_places)
            {
                regFaculty.places.Add(place.Trim());
            }
            #endregion

            return View(regFaculty);
        }

        [HttpPost]
        public ActionResult FacultyNew(FacultyRegistration Faculty)
        {
            bool islive = Checkfacultyregistraon();
            if (!islive)
            {
                return RedirectToAction("Index", "UnderConstruction");
            }

            int UserId = 0;

            List<DistinctDepartment> depts = new List<DistinctDepartment>();

            var jntuh_degree = db.jntuh_degree.AsNoTracking().ToList();
            var jntuh_department = db.jntuh_department.AsNoTracking().ToList();
            var jntuh_departments = (from a in jntuh_department
                                     join b in jntuh_degree on a.degreeId equals b.id
                                     select new
                                     {
                                         id = a.id,
                                         departmentName = b.degree + "-" + a.departmentName
                                     }).ToList();

            string existingDepts = string.Empty;
            int[] notRequiredIds = { 25, 26, 27, 33, 34, 36, 37, 38, 39, 53, 54, 55, 56, 71, 72, 73, 74, 75, 76, 77, 78, 60 };
            foreach (var item in jntuh_departments.Where(s => !notRequiredIds.Contains(s.id)).OrderBy(s => s.departmentName))
            {
                if (!existingDepts.Split(',').Contains(item.departmentName))
                {
                    depts.Add(new DistinctDepartment { id = item.id, departmentName = item.departmentName });
                    existingDepts = existingDepts + "," + item.departmentName;
                }
            }

            ViewBag.department = depts;
            ViewBag.designation = db.jntuh_designation.Where(c => c.isActive == true).ToList();
            ViewBag.Institutions =
                db.jntuh_college.Where(c => c.isActive == true && c.id != 375)
                    .Select(c => new { CollegeId = c.id, CollegeName = c.collegeCode + "-" + c.collegeName })
                    .OrderBy(c => c.CollegeName)
                    .ToList();

            List<SelectListItem> ratifiedDuration = new List<SelectListItem>();
            for (int i = 1; i <= 10; i++)
            {
                ratifiedDuration.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.duration = ratifiedDuration;

            List<SelectListItem> prevExperience = new List<SelectListItem>();
            for (int i = 0; i <= 40; i++)
            {
                prevExperience.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.prevExperience = prevExperience;

            List<SelectListItem> years = new List<SelectListItem>();
            for (int i = 1940; i <= DateTime.Now.Year; i++)
            {
                years.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.years = years;

            List<SelectListItem> division = new List<SelectListItem>();
            for (int i = 1; i <= 5; i++)
            {
                division.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }

            ViewBag.division = division;

            if (Faculty.PANNumber == null || Faculty.PANNumber == "")
            {
                return RedirectToAction("FacultyNew");
            }

            try
            {
                if (ModelState.IsValid == true)
                {
                    if (Faculty != null)
                    {
                        //Certificates Saving Paths.
                        string photoPath = "~/Content/Upload/Faculty/PHOTOS";
                        string panCardsPath = "~/Content/Upload/Faculty/PANCARDS";
                        string aadhaarCardsPath = "~/Content/Upload/Faculty/AADHAARCARDS";
                        string proceedingsPath = "~/Content/Upload/Faculty/PROCEEDINGS";
                        string certificatesPath = "~/Content/Upload/Faculty/CERTIFICATES";
                        string IncomeTaxcertificatesPath = "~/Content/Upload/Faculty/INCOMETAX";
                        string AllcertificatesPath = "~/Content/Upload/Faculty/CERTIFICATES/CertificatesPDF";

                        //Check Email is Exists Or Not
                        string StrEmail = db.my_aspnet_users.Where(u => u.name == Faculty.Email).Select(u => u.name).FirstOrDefault();
                        MembershipCreateStatus createStatus;

                        if (string.IsNullOrEmpty(StrEmail))
                        {
                            Membership.CreateUser(Faculty.Email, Faculty.NewPassword, Faculty.Email, null, null, true, null,
                                out createStatus);
                        }
                        else
                        {
                            TempData["ERROR"] = "Your Email already exists.";
                            return RedirectToAction("FacultyNew");
                        }

                        if (createStatus == MembershipCreateStatus.Success)
                        {
                            //add user role to my_aspnet_usersinroles table
                            my_aspnet_usersinroles roleModel = new my_aspnet_usersinroles();
                            roleModel.roleId = 7; // 7 = Faculty Role
                            roleModel.userId = db.my_aspnet_users.Where(u => u.name == Faculty.Email).Select(u => u.id).FirstOrDefault();
                            db.my_aspnet_usersinroles.Add(roleModel);
                            db.SaveChanges();

                            UserId = roleModel.userId;

                        }
                        else
                        {
                            UserId = 0;
                            TempData["ERROR"] = ErrorCodeToString1(createStatus);
                            return RedirectToAction("FacultyNew");
                        }

                        //throw new Exception(Timeout);

                        if (Faculty.facultyDateOfBirth != null)
                            Faculty.facultyDateOfBirth = UAAAS.Models.Utilities.MMDDYY2DDMMYY(Faculty.facultyDateOfBirth);
                        if (Faculty.facultyDateOfAppointment != null)
                            Faculty.facultyDateOfAppointment =
                                UAAAS.Models.Utilities.MMDDYY2DDMMYY(Faculty.facultyDateOfAppointment);



                        jntuh_registered_faculty FacultyRegistartion = new jntuh_registered_faculty();

                        string regNumber = db.jntuh_registered_faculty.Where(f => f.UserId == UserId).Select(f => f.RegistrationNumber).FirstOrDefault();

                        if (string.IsNullOrEmpty(regNumber))
                        {
                            Thread.Sleep(1000);
                            Random rnd = new Random();
                            if (Faculty.PANNumber == null)
                            {
                                FacultyRegistartion.RegistrationNumber = rnd.Next(0, 9999).ToString("D4") + "-" +
                                                           DateTime.Now.ToString("yyyyMMdd-HHmmss").Substring(2);
                            }
                            else
                            {
                                FacultyRegistartion.RegistrationNumber = Faculty.PANNumber.Substring(5, 4).ToString() + "-" +
                                                          DateTime.Now.ToString("yyyyMMdd-HHmmss").Substring(2);
                            }

                        }
                        else
                        {
                            FacultyRegistartion.RegistrationNumber = regNumber;
                        }


                        FacultyRegistartion.type = Faculty.Type;
                        FacultyRegistartion.UserId = UserId;
                        FacultyRegistartion.collegeId = Faculty.CollegeId;
                        FacultyRegistartion.UniqueID = string.Empty; ;
                        FacultyRegistartion.FirstName = Faculty.FirstName;
                        FacultyRegistartion.MiddleName = Faculty.MiddleName;
                        FacultyRegistartion.LastName = Faculty.LastName;
                        FacultyRegistartion.GenderId = Faculty.GenderId == null ? 0 : (int)Faculty.GenderId;
                        FacultyRegistartion.FatherOrHusbandName = Faculty.FatherOrhusbandName;
                        FacultyRegistartion.MotherName = Faculty.MotherName;
                        FacultyRegistartion.DateOfBirth = Convert.ToDateTime(Faculty.facultyDateOfBirth);
                        FacultyRegistartion.WorkingStatus = Faculty.WorkingStatus;
                        //This code is commented on 20-02-2020 because Now Working Type means Faculty Category                         
                        //if (FacultyRegistartion.type == null)
                        //{
                        //    if (Faculty.WorkingStatus == null || Faculty.WorkingStatus == false)
                        //    {
                        //        FacultyRegistartion.type = "NewFaculty";
                        //        FacultyRegistartion.WorkingStatus = false;
                        //    }
                        //    else if (Faculty.WorkingStatus == true)
                        //    {
                        //        FacultyRegistartion.type = "ExistFaculty";
                        //    }
                        //}
                        FacultyRegistartion.WorkingType = Faculty.facultyCategory;

                        // FacultyRegistartion.OrganizationName = Faculty.OrganizationName == null ? string.Empty : Faculty.OrganizationName;
                        FacultyRegistartion.DesignationId = Faculty.DesignationId;
                        FacultyRegistartion.OtherDesignation = Faculty.OtherDesignation;
                        FacultyRegistartion.DepartmentId = Faculty.DepartmentId;
                        FacultyRegistartion.OtherDepartment = Faculty.OtherDepartment;
                        FacultyRegistartion.grosssalary = Faculty.GrossSalary;

                        if (Faculty.facultyDateOfAppointment != null)
                            FacultyRegistartion.DateOfAppointment = Convert.ToDateTime(Faculty.facultyDateOfAppointment);

                        FacultyRegistartion.isFacultyRatifiedByJNTU = Faculty.isFacultyRatifiedByJNTU == null ? false : (bool)Faculty.isFacultyRatifiedByJNTU;

                        if (Faculty.facultyDateOfRatification != null)
                            FacultyRegistartion.DateOfRatification = Convert.ToDateTime(Faculty.facultyDateOfRatification);

                        FacultyRegistartion.ProceedingsNumber = Faculty.ProceedingsNo;
                        FacultyRegistartion.AICTEFacultyId = Faculty.AICTEFacultyId;

                        if (Faculty.TotalExperience != null)
                            FacultyRegistartion.TotalExperience = (int)Faculty.TotalExperience;
                        else
                            FacultyRegistartion.TotalExperience = 0;

                        FacultyRegistartion.TotalExperiencePresentCollege = Faculty.TotalExperiencePresentCollege;
                        FacultyRegistartion.PANNumber = Faculty.PANNumber;
                        FacultyRegistartion.PanStatus = db.jntuh_pan_status.Where(p => p.PANNumber == FacultyRegistartion.PANNumber && p.PANStatus == "E").Select(e => e.PANStatus).FirstOrDefault();
                        FacultyRegistartion.AadhaarNumber = Faculty.AadhaarNumber;
                        FacultyRegistartion.Mobile = Faculty.Mobile;
                        FacultyRegistartion.Email = Faculty.Email;
                        FacultyRegistartion.National = Faculty.National;
                        FacultyRegistartion.InterNational = Faculty.InterNational;
                        FacultyRegistartion.Citation = Faculty.Citation;
                        FacultyRegistartion.Awards = Faculty.Awards;

                        #region Faculty All Certificates Saving Code

                        //SCM Document Saving
                        if (Faculty.SelectionCommitteeProceedingsDocument != null)
                        {
                            if (!Directory.Exists(Server.MapPath(proceedingsPath)))
                            {
                                Directory.CreateDirectory(Server.MapPath(proceedingsPath));
                            }
                            var ext = Path.GetExtension(Faculty.SelectionCommitteeProceedingsDocument.FileName);

                            if (ext.ToUpper().Equals(".PDF") || ext.ToUpper().Equals(".PDF"))
                            {
                                string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                                  Faculty.FirstName.Substring(0, 1) + "-" + Faculty.LastName.Substring(0, 1);
                                Faculty.SelectionCommitteeProceedingsDocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(proceedingsPath), fileName, ext));
                                Faculty.SelectionCommitteeProcedings = string.Format("{0}{1}", fileName, ext);
                            }
                        }
                        else
                        {
                            Faculty.SelectionCommitteeProcedings = Faculty.SelectionCommitteeProcedings;
                        }

                        //Photo Document Saving
                        if (Faculty.Photo != null)
                        {
                            if (!Directory.Exists(Server.MapPath(photoPath)))
                            {
                                Directory.CreateDirectory(Server.MapPath(photoPath));
                            }
                            var ext = Path.GetExtension(Faculty.Photo.FileName);

                            if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                            {
                                string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                                  Faculty.FirstName.Substring(0, 1) + "-" + Faculty.LastName.Substring(0, 1);
                                Faculty.Photo.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(photoPath), fileName, ext));
                                Faculty.facultyPhoto = string.Format("{0}{1}", fileName, ext);
                            }
                        }
                        else
                        {
                            Faculty.facultyPhoto = Faculty.facultyPhoto;
                        }

                        //Aadhaar Card Document Saving
                        if (Faculty.AadhaarCardDocument != null)
                        {
                            if (!Directory.Exists(Server.MapPath(aadhaarCardsPath)))
                            {
                                Directory.CreateDirectory(Server.MapPath(aadhaarCardsPath));
                            }
                            var ext = Path.GetExtension(Faculty.AadhaarCardDocument.FileName);

                            if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                            {
                                string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                                  Faculty.FirstName.Substring(0, 1) + "-" + Faculty.LastName.Substring(0, 1);
                                Faculty.AadhaarCardDocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(aadhaarCardsPath), fileName, ext));
                                Faculty.facultyAadhaarCardDocument = string.Format("{0}{1}", fileName, ext);
                            }
                        }
                        else
                        {
                            Faculty.facultyAadhaarCardDocument = Faculty.facultyAadhaarCardDocument;
                        }

                        //PAN Card Document Saving
                        if (Faculty.PANCardDocument != null)
                        {
                            if (!Directory.Exists(Server.MapPath(panCardsPath)))
                            {
                                Directory.CreateDirectory(Server.MapPath(panCardsPath));
                            }
                            var ext = Path.GetExtension(Faculty.PANCardDocument.FileName);

                            if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                            {
                                string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                                  Faculty.FirstName.Substring(0, 1) + "-" + Faculty.LastName.Substring(0, 1);
                                Faculty.PANCardDocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(panCardsPath), fileName, ext));
                                Faculty.facultyPANCardDocument = string.Format("{0}{1}", fileName, ext);
                            }
                        }
                        else
                        {
                            Faculty.facultyPANCardDocument = Faculty.facultyPANCardDocument;
                        }

                        //IncomeTaxFile Certificate Saving
                        if (Faculty.IncomeTaxFileUpload != null)
                        {
                            if (!Directory.Exists(Server.MapPath(IncomeTaxcertificatesPath)))
                            {
                                Directory.CreateDirectory(Server.MapPath(IncomeTaxcertificatesPath));
                            }

                            var ext = Path.GetExtension(Faculty.IncomeTaxFileUpload.FileName);

                            if (ext.ToUpper().Equals(".PDF") || ext.ToUpper().Equals(".PDF"))
                            {
                                string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" + Faculty.FirstName.Substring(0, 1) + "-" + Faculty.LastName.Substring(0, 1);
                                Faculty.IncomeTaxFileUpload.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(IncomeTaxcertificatesPath), fileName, ext));
                                Faculty.IncomeTaxFileview = string.Format("{0}{1}", fileName, ext);

                            }
                        }
                        else
                        {
                            Faculty.IncomeTaxFileview = Faculty.IncomeTaxFileview;
                        }



                        FacultyRegistartion.ProceedingDocument = Faculty.SelectionCommitteeProcedings;
                        FacultyRegistartion.Photo = Faculty.facultyPhoto;
                        FacultyRegistartion.AadhaarDocument = Faculty.facultyAadhaarCardDocument;
                        FacultyRegistartion.PANDocument = Faculty.facultyPANCardDocument;
                        FacultyRegistartion.IncometaxDocument = Faculty.IncomeTaxFileview;
                        // FacultyRegistartion.OrganizationName = Faculty.IncomeTaxFileview;
                        #endregion

                        FacultyRegistartion.isActive = true;
                        FacultyRegistartion.InStatus = null;
                        FacultyRegistartion.isApproved = Faculty.isApproved;
                        FacultyRegistartion.createdOn = DateTime.Now;
                        FacultyRegistartion.createdBy = UserId;
                        FacultyRegistartion.updatedOn = null;
                        FacultyRegistartion.updatedBy = null;
                        FacultyRegistartion.DeactivationReason = null;
                        FacultyRegistartion.DeactivatedOn = null;
                        FacultyRegistartion.DeactivatedBy = null;
                        FacultyRegistartion.Blacklistfaculy = false;
                        FacultyRegistartion.WorkingType = Faculty.facultyCategory; // caste category added

                        db.jntuh_registered_faculty.Add(FacultyRegistartion);
                        db.SaveChanges();

                        var FacultyId = db.jntuh_registered_faculty.Where(e => e.Email == Faculty.Email).Select(e => e.id).FirstOrDefault();

                        #region Faculty Education Details Saving

                        if (FacultyId != null)
                        {
                            #region Education Certificates Saving

                            //SSC Certificate Saving
                            if (Faculty.SSC_certificate != null)
                            {
                                if (!Directory.Exists(Server.MapPath(certificatesPath)))
                                {
                                    Directory.CreateDirectory(Server.MapPath(certificatesPath));
                                }
                                var ext = Path.GetExtension(Faculty.SSC_certificate.FileName);

                                if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                                {
                                    string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                                      Faculty.FirstName.Substring(0, 1) + "-" +
                                                      Faculty.LastName.Substring(0, 1) + "_" + Faculty.SSC_studiedEducation;
                                    Faculty.SSC_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                        fileName, ext));
                                    Faculty.SSC_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                                }
                            }
                            else
                            {
                                Faculty.SSC_facultyCertificate = Faculty.SSC_facultyCertificate;
                            }

                            //UG Certificate Saving
                            if (Faculty.UG_certificate != null)
                            {
                                if (!Directory.Exists(Server.MapPath(certificatesPath)))
                                {
                                    Directory.CreateDirectory(Server.MapPath(certificatesPath));
                                }
                                var ext = Path.GetExtension(Faculty.UG_certificate.FileName);

                                if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                                {
                                    string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                                      Faculty.FirstName.Substring(0, 1) + "-" +
                                                      Faculty.LastName.Substring(0, 1) + "_" + Faculty.UG_studiedEducation;
                                    Faculty.UG_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                        fileName, ext));
                                    Faculty.UG_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                                }
                            }
                            else
                            {
                                Faculty.UG_facultyCertificate = Faculty.UG_facultyCertificate;
                            }

                            //PG Certificate Saving
                            if (Faculty.PG_certificate != null)
                            {
                                if (!Directory.Exists(Server.MapPath(certificatesPath)))
                                {
                                    Directory.CreateDirectory(Server.MapPath(certificatesPath));
                                }
                                var ext = Path.GetExtension(Faculty.PG_certificate.FileName);

                                if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                                {
                                    string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                                      Faculty.FirstName.Substring(0, 1) + "-" +
                                                      Faculty.LastName.Substring(0, 1) + "_" + Faculty.PG_studiedEducation;
                                    Faculty.PG_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                        fileName, ext));
                                    Faculty.PG_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                                }
                            }
                            else
                            {
                                Faculty.PG_facultyCertificate = Faculty.PG_facultyCertificate;
                            }

                            //M.Phil Certificate Saving
                            if (Faculty.MPhil_certificate != null)
                            {
                                if (!Directory.Exists(Server.MapPath(certificatesPath)))
                                {
                                    Directory.CreateDirectory(Server.MapPath(certificatesPath));
                                }
                                var ext = Path.GetExtension(Faculty.MPhil_certificate.FileName);

                                if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                                {
                                    string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                                      Faculty.FirstName.Substring(0, 1) + "-" +
                                                      Faculty.LastName.Substring(0, 1) + "_" + Faculty.MPhil_studiedEducation;
                                    Faculty.MPhil_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                        fileName, ext));
                                    Faculty.MPhil_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                                }
                            }
                            else
                            {
                                Faculty.MPhil_facultyCertificate = Faculty.MPhil_facultyCertificate;
                            }

                            //NET/SLET Certificate Saving
                            //if (Faculty.NET_certificate != null)
                            //{
                            //    if (!Directory.Exists(Server.MapPath(certificatesPath)))
                            //    {
                            //        Directory.CreateDirectory(Server.MapPath(certificatesPath));
                            //    }
                            //    var ext = Path.GetExtension(Faculty.NET_certificate.FileName);

                            //    if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                            //    {
                            //        string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                            //                          Faculty.FirstName.Substring(0, 1) + "-" +
                            //                          Faculty.LastName.Substring(0, 1) + "_" + "NET";
                            //        Faculty.NET_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                            //            fileName, ext));
                            //        Faculty.NET_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                            //    }
                            //}
                            //else
                            //{
                            //    Faculty.NET_facultyCertificate = Faculty.NET_facultyCertificate;
                            //}

                            //Ph.D Certificate Saving
                            if (Faculty.PhD_certificate != null)
                            {
                                if (!Directory.Exists(Server.MapPath(certificatesPath)))
                                {
                                    Directory.CreateDirectory(Server.MapPath(certificatesPath));
                                }
                                var ext = Path.GetExtension(Faculty.PhD_certificate.FileName);

                                if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                                {
                                    string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                                      Faculty.FirstName.Substring(0, 1) + "-" +
                                                      Faculty.LastName.Substring(0, 1) + "_" + Faculty.PhD_studiedEducation;
                                    Faculty.PhD_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                        fileName, ext));
                                    Faculty.PhD_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                                }
                            }
                            else
                            {
                                Faculty.PhD_facultyCertificate = Faculty.PhD_facultyCertificate;
                            }

                            //All CertificatePDF Saving
                            if (Faculty.All_Certificates != null)
                            {
                                if (!Directory.Exists(Server.MapPath(AllcertificatesPath)))
                                {
                                    Directory.CreateDirectory(Server.MapPath(AllcertificatesPath));
                                }
                                var ext = Path.GetExtension(Faculty.All_Certificates.FileName);

                                if (ext.ToUpper().Equals(".PDF") || ext.ToUpper().Equals(".PDF"))
                                {
                                    string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                                      Faculty.FirstName.Substring(0, 1) + "-" +
                                                      Faculty.LastName.Substring(0, 1) + "_All";
                                    Faculty.All_Certificates.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(AllcertificatesPath),
                                        fileName, ext));
                                    Faculty.faculty_AllCertificates = string.Format("{0}{1}", fileName, ext);
                                }
                            }
                            else
                            {
                                Faculty.faculty_AllCertificates = Faculty.faculty_AllCertificates;
                            }

                            #endregion

                            for (int i = 1; i <= 7; i++)
                            {
                                jntuh_registered_faculty_education education = new jntuh_registered_faculty_education();
                                if (i == 1)
                                {
                                    if (Faculty.SSC_certificate != null)
                                    {
                                        education.facultyId = FacultyId;
                                        education.hallticketnumber = string.IsNullOrEmpty(Faculty.SSC_HallticketNo) ? Faculty.SSC_HallticketNo : Faculty.SSC_HallticketNo.Trim();
                                        education.educationId = 1;
                                        education.courseStudied = string.IsNullOrEmpty(Faculty.SSC_studiedEducation) ? Faculty.SSC_studiedEducation : Faculty.SSC_studiedEducation.Trim();
                                        education.specialization = string.IsNullOrEmpty(Faculty.SSC_specialization) ? Faculty.SSC_specialization : Faculty.SSC_specialization.Trim();
                                        education.passedYear = Faculty.SSC_passedYear == null ? 0 : (int)Faculty.SSC_passedYear;
                                        education.marksPercentage = Faculty.SSC_percentage == null ? 0 : (decimal)Faculty.SSC_percentage;
                                        education.division = Faculty.SSC_division == null ? 0 : (int)Faculty.SSC_division;
                                        education.boardOrUniversity = string.IsNullOrEmpty(Faculty.SSC_university) ? Faculty.SSC_university : Faculty.SSC_university.Trim();
                                        education.placeOfEducation = string.IsNullOrEmpty(Faculty.SSC_place) ? Faculty.SSC_place : Faculty.SSC_place.Trim();
                                        education.certificate = Faculty.SSC_facultyCertificate;
                                        education.isActive = false;
                                        education.createdBy = UserId;
                                        education.createdOn = DateTime.Now;
                                        education.updatedBy = null;
                                        education.updatedOn = null;

                                        db.jntuh_registered_faculty_education.Add(education);
                                        db.SaveChanges();
                                    }

                                }
                                else if (i == 2)
                                {
                                    if (Faculty.UG_certificate != null)
                                    {
                                        education.facultyId = FacultyId;
                                        education.hallticketnumber = string.IsNullOrEmpty(Faculty.UG_HallticketNo) ? Faculty.UG_HallticketNo : Faculty.UG_HallticketNo.Trim();
                                        education.educationId = 3;
                                        education.courseStudied = string.IsNullOrEmpty(Faculty.UG_studiedEducation) ? Faculty.UG_studiedEducation : Faculty.UG_studiedEducation.Trim();
                                        education.specialization = string.IsNullOrEmpty(Faculty.UG_specialization) ? Faculty.UG_specialization : Faculty.UG_specialization.Trim();
                                        education.passedYear = Faculty.UG_passedYear == null ? 0 : (int)Faculty.UG_passedYear;
                                        education.marksPercentage = Faculty.UG_percentage == null ? 0 : (decimal)Faculty.UG_percentage;
                                        education.division = Faculty.UG_division == null ? 0 : (int)Faculty.UG_division;
                                        education.boardOrUniversity = string.IsNullOrEmpty(Faculty.UG_university) ? Faculty.UG_university : Faculty.UG_university.Trim();
                                        education.placeOfEducation = string.IsNullOrEmpty(Faculty.UG_place) ? Faculty.UG_place : Faculty.UG_place.Trim();
                                        education.certificate = Faculty.UG_facultyCertificate;
                                        education.isActive = false;
                                        education.createdBy = UserId;
                                        education.createdOn = DateTime.Now;
                                        education.updatedBy = null;
                                        education.updatedOn = null;

                                        db.jntuh_registered_faculty_education.Add(education);
                                        db.SaveChanges();
                                    }

                                }
                                else if (i == 3)
                                {
                                    if (Faculty.PG_certificate != null)
                                    {
                                        education.facultyId = FacultyId;
                                        education.hallticketnumber = string.IsNullOrEmpty(Faculty.PG_HallticketNo) ? Faculty.PG_HallticketNo : Faculty.PG_HallticketNo.Trim();
                                        education.educationId = 4;
                                        education.courseStudied = string.IsNullOrEmpty(Faculty.PG_studiedEducation) ? Faculty.PG_studiedEducation : Faculty.PG_studiedEducation.Trim();
                                        education.specialization = string.IsNullOrEmpty(Faculty.PG_specialization) ? Faculty.PG_specialization : Faculty.PG_specialization.Trim();
                                        education.passedYear = Faculty.PG_passedYear == null ? 0 : (int)Faculty.PG_passedYear;
                                        education.marksPercentage = Faculty.PG_percentage == null ? 0 : (decimal)Faculty.PG_percentage;
                                        education.division = Faculty.PG_division == null ? 0 : (int)Faculty.PG_division;
                                        education.boardOrUniversity = string.IsNullOrEmpty(Faculty.PG_university) ? Faculty.PG_university : Faculty.PG_university.Trim();
                                        education.placeOfEducation = string.IsNullOrEmpty(Faculty.PG_place) ? Faculty.PG_place : Faculty.PG_place.Trim();
                                        education.certificate = Faculty.PG_facultyCertificate;
                                        education.isActive = false;
                                        education.createdBy = UserId;
                                        education.createdOn = DateTime.Now;
                                        education.updatedBy = null;
                                        education.updatedOn = null;

                                        db.jntuh_registered_faculty_education.Add(education);
                                        db.SaveChanges();
                                    }

                                }
                                else if (i == 4)
                                {
                                    if (Faculty.MPhil_certificate != null)
                                    {
                                        education.facultyId = FacultyId;
                                        education.hallticketnumber = string.IsNullOrEmpty(Faculty.MPhil_HallticketNo) ? Faculty.MPhil_HallticketNo : Faculty.MPhil_HallticketNo.Trim();
                                        education.educationId = 5;
                                        education.courseStudied = string.IsNullOrEmpty(Faculty.MPhil_studiedEducation) ? Faculty.MPhil_studiedEducation : Faculty.PG_studiedEducation.Trim();
                                        education.specialization = string.IsNullOrEmpty(Faculty.MPhil_specialization) ? Faculty.MPhil_specialization : Faculty.MPhil_specialization.Trim();
                                        education.passedYear = Faculty.MPhil_passedYear == null ? 0 : (int)Faculty.MPhil_passedYear;
                                        education.marksPercentage = Faculty.MPhil_percentage == null ? 0 : (decimal)Faculty.MPhil_percentage;
                                        education.division = Faculty.MPhil_division == null ? 0 : (int)Faculty.MPhil_division;
                                        education.boardOrUniversity = string.IsNullOrEmpty(Faculty.MPhil_university) ? Faculty.MPhil_university : Faculty.MPhil_university.Trim();
                                        education.placeOfEducation = string.IsNullOrEmpty(Faculty.MPhil_place) ? Faculty.MPhil_place : Faculty.MPhil_place.Trim();
                                        education.certificate = Faculty.MPhil_facultyCertificate;
                                        education.isActive = false;
                                        education.createdBy = UserId;
                                        education.createdOn = DateTime.Now;
                                        education.updatedBy = null;
                                        education.updatedOn = null;

                                        db.jntuh_registered_faculty_education.Add(education);
                                        db.SaveChanges();
                                    }

                                }
                                else if (i == 5)
                                {
                                    if (Faculty.PhD_certificate != null)
                                    {
                                        education.facultyId = FacultyId;
                                        education.hallticketnumber = string.IsNullOrEmpty(Faculty.PhD_HallticketNo) ? Faculty.PhD_HallticketNo : Faculty.PhD_HallticketNo.Trim();
                                        education.educationId = 6;
                                        education.courseStudied = string.IsNullOrEmpty(Faculty.PhD_studiedEducation) ? Faculty.PhD_studiedEducation : Faculty.PhD_studiedEducation.Trim();
                                        education.specialization = string.IsNullOrEmpty(Faculty.PhD_specialization) ? Faculty.PhD_specialization : Faculty.PhD_specialization.Trim();
                                        education.passedYear = Faculty.PhD_passedYear == null ? 0 : (int)Faculty.PhD_passedYear;
                                        education.marksPercentage = Faculty.PhD_percentage == null ? 0 : (decimal)Faculty.PhD_percentage;
                                        education.division = Faculty.PhD_division == null ? 0 : (int)Faculty.PhD_division;
                                        education.boardOrUniversity = string.IsNullOrEmpty(Faculty.PhD_university) ? Faculty.PhD_university : Faculty.PhD_university.Trim();
                                        education.placeOfEducation = string.IsNullOrEmpty(Faculty.PhD_place) ? Faculty.PhD_place : Faculty.PhD_place.Trim();
                                        education.certificate = Faculty.PhD_facultyCertificate;
                                        education.isActive = false;
                                        education.createdBy = UserId;
                                        education.createdOn = DateTime.Now;
                                        education.updatedBy = null;
                                        education.updatedOn = null;

                                        db.jntuh_registered_faculty_education.Add(education);
                                        db.SaveChanges();
                                    }

                                }
                                else if (i == 6)
                                {
                                    if (Faculty.All_Certificates != null)
                                    {
                                        education.facultyId = FacultyId;
                                        education.hallticketnumber = "Others";
                                        education.educationId = 8;
                                        education.courseStudied = "Others";
                                        education.specialization = "Others";
                                        education.passedYear = 0;
                                        education.marksPercentage = 0;
                                        education.division = 0;
                                        education.boardOrUniversity = "Others";
                                        education.placeOfEducation = "Others";
                                        education.certificate = Faculty.faculty_AllCertificates;
                                        education.isActive = false;
                                        education.createdBy = UserId;
                                        education.createdOn = DateTime.Now;
                                        education.updatedBy = null;
                                        education.updatedOn = null;

                                        db.jntuh_registered_faculty_education.Add(education);
                                        db.SaveChanges();
                                    }
                                }
                                else if (i == 7)
                                {
                                    if (Faculty.NET_certificate != null)
                                    {
                                        education.facultyId = FacultyId;
                                        education.hallticketnumber = Faculty.NET_HallticketNo;
                                        education.educationId = 9;
                                        education.courseStudied = string.IsNullOrEmpty(Faculty.NET_studiedEducation) ? Faculty.NET_studiedEducation : Faculty.NET_studiedEducation.Trim();
                                        education.specialization = string.IsNullOrEmpty(Faculty.NET_specialization) ? Faculty.NET_specialization : Faculty.NET_specialization.Trim();
                                        education.passedYear = Faculty.NET_passedYear == null ? 0 : (int)Faculty.NET_passedYear;
                                        education.marksPercentage = 0;
                                        education.division = 0;
                                        education.boardOrUniversity = string.IsNullOrEmpty(Faculty.NET_university) ? Faculty.NET_university : Faculty.NET_university.Trim(); ;
                                        education.placeOfEducation = string.IsNullOrEmpty(Faculty.NET_place) ? Faculty.NET_place : Faculty.NET_place.Trim(); ;
                                        education.certificate = Faculty.NET_facultyCertificate;
                                        education.isActive = false;
                                        education.createdBy = UserId;
                                        education.createdOn = DateTime.Now;
                                        education.updatedBy = null;
                                        education.updatedOn = null;

                                        db.jntuh_registered_faculty_education.Add(education);
                                        db.SaveChanges();
                                    }
                                }
                            }

                        }
                        else
                        {

                        }

                        #endregion
                        bool status = true;

                        var checkMembership_User = db.my_aspnet_users.Where(e => e.id == UserId).Select(e => e).FirstOrDefault();
                        var checkMembership = db.my_aspnet_membership.Where(e => e.userId == UserId).Select(e => e).FirstOrDefault();
                        var checkMembership_UserinRoles = db.my_aspnet_usersinroles.Where(e => e.userId == UserId).Select(e => e).FirstOrDefault();
                        var checkRegistration = db.jntuh_registered_faculty.Where(e => e.UserId == UserId).Select(e => e).FirstOrDefault();

                        int facultyid = checkRegistration == null ? 0 : checkRegistration.id;

                        var checkRegistration_Education = db.jntuh_registered_faculty_education.Where(e => e.facultyId == facultyid).Select(e => e).ToList();

                        if (checkMembership_User != null || checkMembership != null || checkMembership_UserinRoles != null)
                        {
                            status = true;
                            if (checkRegistration != null)
                            {
                                status = true;
                                if (checkRegistration_Education.Count != 0)
                                {
                                    if (checkRegistration_Education.Count == 1 || checkRegistration_Education.Count == 2)
                                    {
                                        status = false;
                                    }
                                    else
                                    {
                                        var paths = checkRegistration_Education.Where(c => c.certificate == null).Select(e => e.certificate).ToList();
                                        if (paths.Count == 0 && paths.Count == 1 && paths.Count == 2)
                                        {
                                            status = false;
                                        }
                                        else
                                        {
                                            status = true;
                                        }
                                    }
                                }
                                else
                                {
                                    status = false;
                                }
                            }
                            else
                            {
                                status = false;
                            }

                            //Faculty Data is not Save in Faculty Portal....So,Send Message to faculty to delete Option.?
                            if (status == false)
                            {
                                var paths = checkRegistration_Education.Select(e => e.certificate).ToList();
                                // if (checkRegistration_Education.Count != 0 || checkRegistration_Education.Count != null || (paths.Count == 0 || paths.Count == 1 || paths.Count == 2))
                                if (checkRegistration_Education.Count != 0 || checkRegistration_Education.Count != null)
                                {
                                    foreach (var item in checkRegistration_Education)
                                    {
                                        db.jntuh_registered_faculty_education.Remove(item);
                                        db.SaveChanges();
                                    }
                                }
                                if (checkRegistration != null)
                                {
                                    db.jntuh_registered_faculty.Remove(checkRegistration);
                                    db.SaveChanges();
                                }

                                if (checkMembership_UserinRoles != null)
                                {
                                    db.my_aspnet_usersinroles.Remove(checkMembership_UserinRoles);
                                    db.SaveChanges();
                                }

                                if (checkMembership != null)
                                {
                                    db.my_aspnet_membership.Remove(checkMembership);
                                    db.SaveChanges();
                                }

                                if (checkMembership_User != null)
                                {
                                    db.my_aspnet_users.Remove(checkMembership_User);
                                    db.SaveChanges();
                                }

                                TempData["Error"] = "JNTUH Faculty Registration is failed due to Technical issue. Please do Registration Again.";
                                TempData["SUCCESS"] = null;
                                return RedirectToAction("FacultyNew");
                            }
                        }
                        TempData["SUCCESS"] = "Registration is Successfully";

                        //send email
                        IUserMailer mailer = new UserMailer();
                        mailer.FacultyOnlineRegistration(Faculty.Email, "FacultyOnlineRegistration",
                            "JNTUH Faculty Registration Details", Faculty.Email, Faculty.NewPassword,
                            FacultyRegistartion.RegistrationNumber, FacultyRegistartion.UniqueID, FacultyRegistartion.type, FacultyRegistartion.PANNumber)
                            .SendAsync();

                        //send sms
                        if (!string.IsNullOrEmpty(FacultyRegistartion.Mobile))
                        {
                            //bool pStatus = UAAAS.Models.Utilities.SendSMS(FacultyRegistartion.Mobile, "JNTUH: Your registration with JNTUH affiliated faculty portal is completed. Your registration number is " + FacultyRegistartion.RegistrationNumber);
                        }

                        if (Membership.ValidateUser(Faculty.Email.TrimEnd(' '), Faculty.NewPassword.TrimEnd(' ')))
                        {
                            FormsAuthentication.SetAuthCookie(Faculty.Email, true);
                        }

                        string fid = string.Empty;
                        if (FacultyId > 0)
                        {
                            fid = UAAAS.Models.Utilities.EncryptString(FacultyId.ToString(),
                                WebConfigurationManager.AppSettings["CryptoKey"]);
                        }

                        return RedirectToAction("ViewFacultyDetails", new { fid = fid });

                    }
                }
                else
                {
                    //var ModelErrorss = ModelState;

                    //foreach (var item in ModelErrorss)
                    //{
                    //    var key = item.Key;
                    //    var error = item.Value.Errors.Select(e => e.ErrorMessage).FirstOrDefault();
                    //    if (error == null || error == "")
                    //    {

                    //    }
                    //    else
                    //    {
                    //        TempData["ERROR"] = key + "-" + error;
                    //        break;
                    //    }
                    //}
                    //TempData["ERROR"] = "All Red mark fields are mandatory";
                    return RedirectToAction("FacultyNew");
                }
            }
            catch (Exception ex)
            {
                if (UserId != 0)
                {
                    bool status = false;

                    var checkMembership_User = dbd.my_aspnet_users.Where(e => e.id == UserId).Select(e => e).FirstOrDefault();
                    var checkMembership = dbd.my_aspnet_membership.Where(e => e.userId == UserId).Select(e => e).FirstOrDefault();
                    var checkMembership_UserinRoles = dbd.my_aspnet_usersinroles.Where(e => e.userId == UserId).Select(e => e).FirstOrDefault();
                    var checkRegistration = dbd.jntuh_registered_faculty.Where(e => e.UserId == UserId).Select(e => e).FirstOrDefault();

                    int facultyid = checkRegistration == null ? 0 : checkRegistration.id;

                    var checkRegistration_Education = dbd.jntuh_registered_faculty_education.Where(e => e.facultyId == facultyid).Select(e => e).ToList();

                    if (checkMembership_User != null || checkMembership != null || checkMembership_UserinRoles != null)
                    {
                        status = true;
                        if (checkRegistration != null)
                        {
                            status = true;
                            if (checkRegistration_Education.Count != 0 && checkRegistration_Education.Count != null)
                            {
                                if (checkRegistration_Education.Count == 1 || checkRegistration_Education.Count == 2)
                                {
                                    status = false;
                                }
                                else
                                {
                                    var paths = checkRegistration_Education.Select(e => e.certificate).ToList();
                                    if (paths.Count == 0 && paths.Count == 1 && paths.Count == 2)
                                    {
                                        status = false;
                                    }
                                    else
                                    {
                                        status = true;
                                    }
                                }
                            }
                            else
                            {
                                status = false;
                            }
                        }
                        else
                        {
                            status = false;
                        }

                        //Faculty Data is not Save in Faculty Portal....So,Send Message to faculty to delete Option.?
                        if (status == false)
                        {
                            var paths = checkRegistration_Education.Select(e => e.certificate).ToList();
                            // if (checkRegistration_Education.Count != 0 || checkRegistration_Education.Count != null || (paths.Count == 0 || paths.Count == 1 || paths.Count == 2))
                            if (checkRegistration_Education.Count != 0 || checkRegistration_Education.Count != null)
                            {
                                foreach (var item in checkRegistration_Education)
                                {
                                    item.createdBy = UserId;
                                    dbd.jntuh_registered_faculty_education.Remove(item);
                                    dbd.SaveChanges();
                                }
                            }
                            if (checkRegistration != null)
                            {
                                dbd.jntuh_registered_faculty.Remove(checkRegistration);
                                dbd.SaveChanges();
                            }

                            if (checkMembership_UserinRoles != null)
                            {
                                dbd.my_aspnet_usersinroles.Remove(checkMembership_UserinRoles);
                                dbd.SaveChanges();
                            }

                            if (checkMembership != null)
                            {
                                dbd.my_aspnet_membership.Remove(checkMembership);
                                dbd.SaveChanges();
                            }

                            if (checkMembership_User != null)
                            {
                                dbd.my_aspnet_users.Remove(checkMembership_User);
                                dbd.SaveChanges();
                            }

                            TempData["Error"] = "JNTUH Faculty Registration is failed due to Technical issue. Please do Registration Again.";
                            TempData["SUCCESS"] = null;
                            return RedirectToAction("FacultyNew");
                        }
                    }
                }
            }
            return View();
        }

        // [Authorize(Roles = "Admin,SuperAdmin,College,Faculty")]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult ViewFacultyDetails(string fid)
        {
            //TempData["ShowEditButton"] = null;
            ViewBag.ShowEditButton = null;
            int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            int fID = 0;

            string RegistrationNumber = string.Empty;

            if (fid != null)
            {
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(fid.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]));
            }
            else if (userId != null)
            {
                RegistrationNumber = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(e => e.RegistrationNumber).FirstOrDefault();
                fID = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber == RegistrationNumber).Select(a => a.id).FirstOrDefault();
            }
            else
            {
                TempData["SUCCESS"] = null;
                return RedirectToAction("Logon", "Account");
            }
            if (fID == 113698)
            {
                fID = Convert.ToInt32(ConfigurationManager.AppSettings["testRegnumberfid"]);
            }
            //var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
            //DateTime? facultyeditfromdate = DateTime.Now;
            //DateTime? facultyeditclosedate = DateTime.Now;
            //if (FacultyEditLinkId != 0)
            //{
            //    facultyeditfromdate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditLinkId && a.isActive == true).Select(s => s.fromdate).FirstOrDefault();
            //    facultyeditclosedate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditLinkId && a.isActive == true).Select(s => s.todate).FirstOrDefault();
            //}
            FacultyRegistration regFaculty = new FacultyRegistration();

            if (!string.IsNullOrEmpty(fid) || fID != 0)
            {
                regFaculty.GenderId = null;
                regFaculty.isFacultyRatifiedByJNTU = null;
                jntuh_registered_faculty faculty = db.jntuh_registered_faculty.Find(fID);
                //if (faculty.UserId != userId)
                //{
                //    faculty = db.jntuh_registered_faculty.Where(r => r.UserId == userId).Select(s => s).FirstOrDefault();
                //}

                if (faculty != null)
                {
                    regFaculty.id = faculty.id;
                    regFaculty.Type = faculty.type;
                    regFaculty.RegistrationNumber = faculty.RegistrationNumber;
                    regFaculty.UserName = db.my_aspnet_users.Where(u => u.id == faculty.UserId).Select(u => u.name).FirstOrDefault();
                    regFaculty.Email = faculty.Email;
                    regFaculty.UniqueID = faculty.UniqueID;
                    regFaculty.FirstName = faculty.FirstName;
                    regFaculty.MiddleName = faculty.MiddleName;
                    regFaculty.LastName = faculty.LastName;
                    regFaculty.FatherOrhusbandName = faculty.FatherOrHusbandName;
                    regFaculty.MotherName = faculty.MotherName;
                    regFaculty.GenderId = faculty.GenderId;
                    //In DB Working Type Means Faculty Category Like: OC,SC,BC...
                    regFaculty.facultyCategory = faculty.WorkingType;
                    regFaculty.CollegeId =
                        db.jntuh_college_faculty_registered.Where(
                            f => f.RegistrationNumber == regFaculty.RegistrationNumber)
                            .Select(s => s.collegeId)
                            .FirstOrDefault();

                    if (regFaculty.CollegeId == 0 || regFaculty.CollegeId == null)
                    {
                        regFaculty.CollegeId =
                                  db.jntuh_college_principal_registered.Where(
                                      f => f.RegistrationNumber == regFaculty.RegistrationNumber)
                                      .Select(s => s.collegeId)
                                      .FirstOrDefault();
                    }


                    if (faculty.DateOfBirth != null)
                    {
                        regFaculty.facultyDateOfBirth =
                            UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfBirth.ToString());
                    }
                    regFaculty.Mobile = faculty.Mobile;
                    regFaculty.facultyPhoto = faculty.Photo;
                    regFaculty.PANNumber = faculty.PANNumber;
                    regFaculty.facultyPANCardDocument = faculty.PANDocument;
                    regFaculty.AadhaarNumber = faculty.AadhaarNumber;
                    regFaculty.facultyAadhaarCardDocument = faculty.AadhaarDocument;
                    regFaculty.IncomeTaxFileview = faculty.IncometaxDocument;
                    regFaculty.WorkingStatus = faculty.WorkingStatus;
                    regFaculty.TotalExperience = faculty.TotalExperience;
                    regFaculty.TotalExperiencePresentCollege = faculty.TotalExperiencePresentCollege;
                    if (regFaculty.CollegeId != 0)
                    {
                        regFaculty.CollegeName = db.jntuh_college.Where(a => a.id == regFaculty.CollegeId).Select(z => z.collegeName + " (" + z.collegeCode + ")").FirstOrDefault();
                    }




                    #region Faculty Profitional Information on 17-02-2020

                    faculty.DepartmentId = db.jntuh_college_faculty_registered.Where(
                            f => f.RegistrationNumber == regFaculty.RegistrationNumber)
                            .Select(s => s.DepartmentId)
                            .FirstOrDefault();

                    if (faculty.DepartmentId != null)
                    {
                        regFaculty.department = db.jntuh_department.Find(faculty.DepartmentId).departmentName;
                    }
                    regFaculty.DepartmentId = faculty.DepartmentId;
                    regFaculty.OtherDepartment = faculty.OtherDepartment;
                    List<jntuh_registered_faculty_experience> registered_faculty_experience =
                      db.jntuh_registered_faculty_experience.Where(
                          r =>
                              r.facultyId == regFaculty.id && r.createdBycollegeId != null)
                          .Select(s => s)
                          .ToList();

                    var facultyexperiance = registered_faculty_experience.Where(
                            r => r.facultyId == regFaculty.id && r.createdBycollegeId == regFaculty.CollegeId && r.facultyJoiningOrder != null)
                            .Select(s => s)
                            .ToList()
                            .LastOrDefault();
                    if (facultyexperiance != null)
                    {
                        faculty.DesignationId = facultyexperiance.facultyDesignationId;
                        if (faculty.DesignationId != null)
                        {
                            regFaculty.designation = db.jntuh_designation.Find(faculty.DesignationId).designation;
                        }
                        regFaculty.DesignationId = faculty.DesignationId;
                        regFaculty.OtherDesignation = facultyexperiance.OtherDesignation;
                        regFaculty.facultyDateOfAppointment =
                                UAAAS.Models.Utilities.MMDDYY2DDMMYY(facultyexperiance.facultyDateOfAppointment.ToString());
                        regFaculty.facultyAppointmentLetter = facultyexperiance.facultyJoiningOrder;
                        regFaculty.GrossSalary = facultyexperiance.facultySalary;
                        if (!string.IsNullOrEmpty(regFaculty.facultyDateOfAppointment))
                        {
                            int fromyear = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[2]);
                            int frommonth = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[1]);
                            int fromdate = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[0]);

                            DateTime zeroTime = new DateTime(1, 1, 1);
                            DateTime olddate = new DateTime(fromyear, frommonth, fromdate);
                            DateTime curdate = DateTime.Now;

                            var Difference = curdate - olddate;
                            if (Difference.Days > 0)
                            {
                                int years = (zeroTime + Difference).Year - 1;
                                int months = (zeroTime + Difference).Month - 1;
                                int days = (zeroTime + Difference).Day;
                                regFaculty.showPresentCollegeExperiance = years + " Years " + months + " Months " + days + " Days";
                            }

                        }

                    }
                    //For The Experiance
                    var experiance =
                        registered_faculty_experience.Where(
                            e =>
                                e.createdBycollegeId != null && e.facultyId == regFaculty.id &&
                                e.facultyDateOfResignation != null && e.facultyDateOfResignation != null).Select(s => s).ToList();
                    int exyears = 0;
                    int exmonths = 0;
                    int exdays = 0;
                    foreach (var Experiencefaculty in experiance)
                    {
                        int fromyear = 0;
                        int frommonth = 0;
                        int fromdate = 0;
                        int year = 0;
                        int month = 0;
                        int date = 0;
                        if (Experiencefaculty.facultyDateOfAppointment != null)
                        {
                            fromyear = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[2]);
                            frommonth = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[0]);
                            fromdate = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[1]);
                        }



                        // Experiencefaculty.facultyDateOfResignation = UAAAS.Models.Utilities.MMDDYY2DDMMYY(Experiencefaculty.facultyDateOfResignation);
                        if (Experiencefaculty.facultyDateOfResignation != null)
                        {
                            year = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[2]);
                            month = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[0]);
                            date = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[1]);
                        }

                        if (Experiencefaculty.facultyDateOfResignation != null && Experiencefaculty.facultyDateOfAppointment != null)
                        {
                            DateTime zeroTime = new DateTime(1, 1, 1);
                            DateTime olddate = new DateTime(fromyear, frommonth, fromdate);
                            DateTime curdate = new DateTime(year, month, date);

                            var Difference = curdate - olddate;

                            if (Difference.Days > 0)
                            {
                                int years = (zeroTime + Difference).Year - 1;
                                int months = (zeroTime + Difference).Month - 1;
                                int days = (zeroTime + Difference).Day;


                                exyears = exyears + years;
                                exmonths = exmonths + months;
                                exdays = exdays + days;
                            }
                        }
                    }
                    while (exdays >= 30)
                    {
                        exdays = exdays - 30;
                        exmonths++;
                    }

                    while (exmonths >= 12)
                    {
                        exmonths = exmonths - 12;
                        exyears++;
                    }
                    regFaculty.showTotalExperience = exyears + " Years " + exmonths + " Months " + exdays + " Days";
                    #endregion

                    regFaculty.isFacultyRatifiedByJNTU = faculty.isFacultyRatifiedByJNTU;
                    if (faculty.DateOfRatification != null)
                    {
                        regFaculty.facultyDateOfRatification =
                            UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfRatification.ToString());
                    }

                    regFaculty.ProceedingsNo = faculty.ProceedingsNumber;
                    regFaculty.SelectionCommitteeProcedings = faculty.ProceedingDocument;

                    //Get the SCM Document from scmupload table uploaded by College.
                    // regFaculty.SelectionCommitteeProcedings = db.jntuh_scmupload.Where(e => e.RegistrationNumber.Trim() == regFaculty.RegistrationNumber.Trim()).Select(e => e.SCMDocument).FirstOrDefault();

                    regFaculty.AICTEFacultyId = faculty.AICTEFacultyId;
                    //regFaculty.GrossSalary = faculty.grosssalary;
                    regFaculty.National = faculty.National;
                    regFaculty.InterNational = faculty.InterNational;
                    regFaculty.Citation = faculty.Citation;
                    regFaculty.Awards = faculty.Awards;
                    regFaculty.isActive = faculty.isActive;
                    regFaculty.isApproved = faculty.isApproved;
                    regFaculty.isView = true;
                    regFaculty.BlacklistFaculty = faculty.Blacklistfaculy;
                    regFaculty.VerificationStatus = faculty.AbsentforVerification;
                    regFaculty.DeactivationReason = faculty.DeactivationReason;
                    regFaculty.facultyCategory = faculty.WorkingType;
                    regFaculty.PHDView = db.jntuh_faculty_phddetails.Where(p => p.Facultyid == fID).Select(s => s).Count();
                    #region Faculty Education Data Getting

                    // var jntuh_education_category = db.jntuh_education_category.Where(e => e.isActive == true).ToList();
                    var registeredFacultyEducation = db.jntuh_registered_faculty_education.Where(e => e.facultyId == fID).ToList();

                    if (registeredFacultyEducation.Count != 0)
                    {
                        foreach (var item in registeredFacultyEducation)
                        {
                            if (item.educationId == 1)
                            {
                                regFaculty.SSC_educationId = 1;
                                regFaculty.SSC_HallticketNo = item.hallticketnumber;
                                regFaculty.SSC_studiedEducation = item.courseStudied;
                                regFaculty.SSC_specialization = item.specialization;
                                regFaculty.SSC_passedYear = item.passedYear;
                                regFaculty.SSC_percentage = item.marksPercentage;
                                regFaculty.SSC_division = item.division == null ? 0 : item.division;
                                regFaculty.SSC_university = item.boardOrUniversity;
                                regFaculty.SSC_place = item.placeOfEducation;
                                regFaculty.SSC_facultyCertificate = item.certificate;
                            }
                            else if (item.educationId == 3)
                            {
                                regFaculty.UG_educationId = 3;
                                regFaculty.UG_HallticketNo = item.hallticketnumber;
                                regFaculty.UG_studiedEducation = item.courseStudied;
                                regFaculty.UG_specialization = item.specialization;
                                regFaculty.UG_passedYear = item.passedYear;
                                regFaculty.UG_percentage = item.marksPercentage;
                                regFaculty.UG_division = item.division == null ? 0 : item.division;
                                regFaculty.UG_university = item.boardOrUniversity;
                                regFaculty.UG_place = item.placeOfEducation;
                                regFaculty.UG_facultyCertificate = item.certificate;
                            }
                            else if (item.educationId == 4)
                            {
                                regFaculty.PG_educationId = 4;
                                regFaculty.PG_HallticketNo = item.hallticketnumber;
                                regFaculty.PG_studiedEducation = item.courseStudied;
                                regFaculty.PG_specialization = item.specialization;
                                regFaculty.PG_passedYear = item.passedYear;
                                regFaculty.PG_percentage = item.marksPercentage;
                                regFaculty.PG_division = item.division == null ? 0 : item.division;
                                regFaculty.PG_university = item.boardOrUniversity;
                                regFaculty.PG_place = item.placeOfEducation;
                                regFaculty.PG_facultyCertificate = item.certificate;
                            }
                            else if (item.educationId == 5)
                            {
                                regFaculty.MPhil_educationId = 5;
                                regFaculty.MPhil_HallticketNo = item.hallticketnumber;
                                regFaculty.MPhil_studiedEducation = item.courseStudied;
                                regFaculty.MPhil_specialization = item.specialization;
                                regFaculty.MPhil_passedYear = item.passedYear;
                                regFaculty.MPhil_percentage = item.marksPercentage;
                                regFaculty.MPhil_division = item.division == null ? 0 : item.division;
                                regFaculty.MPhil_university = item.boardOrUniversity;
                                regFaculty.MPhil_place = item.placeOfEducation;
                                regFaculty.MPhil_facultyCertificate = item.certificate;
                            }
                            else if (item.educationId == 6)
                            {
                                regFaculty.PhD_educationId = 6;
                                regFaculty.PhD_HallticketNo = item.hallticketnumber;
                                regFaculty.PhD_studiedEducation = item.courseStudied;
                                regFaculty.PhD_specialization = item.specialization;
                                regFaculty.PhD_passedYear = item.passedYear;
                                regFaculty.PhD_percentage = item.marksPercentage;
                                regFaculty.PhD_division = item.division == null ? 0 : item.division;
                                regFaculty.PhD_university = item.boardOrUniversity;
                                regFaculty.PhD_place = item.placeOfEducation;
                                regFaculty.PhD_facultyCertificate = item.certificate;
                            }
                            else if (item.educationId == 9)
                            {
                                regFaculty.NET_educationId = 9;
                                regFaculty.NET_HallticketNo = item.hallticketnumber;
                                regFaculty.NET_studiedEducation = item.courseStudied;
                                regFaculty.NET_specialization = item.specialization;
                                regFaculty.NET_passedYear = item.passedYear;
                                //regFaculty.NET_percentage = item.marksPercentage;
                                //regFaculty.NET_division = item.division == null ? 0 : item.division;
                                regFaculty.NET_university = item.boardOrUniversity;
                                regFaculty.NET_place = item.placeOfEducation;
                                regFaculty.NET_facultyCertificate = item.certificate;
                            }
                            else if (item.educationId == 8)
                            {
                                regFaculty.Others_educationId = 8;
                                regFaculty.faculty_AllCertificates = item.certificate;
                            }
                            //else if (item.educationId == 9)
                            //{
                            //    regFaculty.Others_educationId = 9;
                            //    regFaculty.NET_HallticketNo = item.hallticketnumber;
                            //    regFaculty.NET_educationName = item.courseStudied;
                            //    regFaculty.NET_studiedEducation = item.specialization;
                            //    regFaculty.NET_passedYear = item.passedYear;
                            //    regFaculty.NET_facultyCertificate = item.certificate;
                            //}
                        }
                    }

                    #endregion

                    //Faculty Edit Checking
                    var todayDate = DateTime.Now;
                    var isclear = IsClearFaculty(faculty.RegistrationNumber.Trim());
                    int actualYear = db.jntuh_academic_year.Where(a => a.isActive == true && a.isPresentAcademicYear == true).Select(a => a.actualYear).FirstOrDefault();
                    int prAy =
                        db.jntuh_academic_year.Where(a => a.actualYear == (actualYear + 1)).Select(s => s.id).FirstOrDefault();
                    //var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
                    //var facultyedit = db.jntuh_college_links_assigned.Where(l => l.linkId == FacultyEditLinkId && l.academicyearId == prAy && l.isActive == true && l.fromdate <= todayDate && l.todate >= todayDate).Select(s => s).FirstOrDefault();
                    //if (facultyedit != null && faculty.Blacklistfaculy != true && faculty.type != "Adjunct")
                    //{
                    //    ViewBag.ShowFacultyEditButton = true;
                    //}
                    //else
                    //    ViewBag.ShowFacultyEditButton = false;
                    //var Inactive = IsInactiveFaculty(faculty.RegistrationNumber.Trim());
                    if (!isclear)
                    {
                        var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
                        if (FacultyEditLinkId != 0)
                        {
                            jntuh_college_links_assigned facultyedit = db.jntuh_college_links_assigned.Where(l => l.linkId == FacultyEditLinkId && l.academicyearId == prAy && l.isActive == true && l.fromdate <= todayDate && l.todate >= todayDate).Select(s => s).FirstOrDefault();
                            if (facultyedit != null && faculty.Blacklistfaculy != true && faculty.type != "Adjunct" && faculty.AbsentforVerification != true)
                            {
                                ViewBag.ShowEditButton = true;
                            }
                            else
                                ViewBag.ShowEditButton = null;
                        }
                    }
                    else
                    {
                        var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
                        if (FacultyEditLinkId != 0)
                        {
                            jntuh_college_links_assigned facultyedit = db.jntuh_college_links_assigned.Where(l => l.linkId == FacultyEditLinkId && l.academicyearId == prAy && l.isActive == true && l.fromdate <= todayDate && l.todate >= todayDate).Select(s => s).FirstOrDefault();
                            if (facultyedit != null && faculty.Blacklistfaculy != true && faculty.type != "Adjunct" && faculty.AbsentforVerification != true)
                            {
                                ViewBag.ShowEditButton = false;
                            }
                        }

                    }
                    //var FlagsCheck = CheckFacultyFlags(faculty.RegistrationNumber);

                    //if (facultyeditfromdate == null || facultyeditclosedate == null)
                    //{
                    //    TempData["ShowEditButton"] = null;
                    //}
                    //else
                    //{
                    //    if (currentDate > facultyeditclosedate)
                    //    {
                    //        TempData["ShowEditButton"] = null;
                    //    }
                    //    else if (faculty.Blacklistfaculy == true || faculty.type == "Adjunct" || faculty.AbsentforVerification == true)
                    //    {
                    //        TempData["ShowEditButton"] = null;
                    //    }
                    //    else if (FlagsCheck == false)
                    //    {
                    //        DateTime? FromCreated = facultyeditfromdate;
                    //        DateTime? ToCreated = facultyeditclosedate;
                    //        if (registeredFacultyEducation.Count == 0 || registeredFacultyEducation.Count == 1 || registeredFacultyEducation.Count == 2)
                    //        {
                    //            TempData["ShowEditButton"] = true;
                    //        }
                    //        else if (faculty.createdOn >= FromCreated)
                    //        {
                    //            DateTime Current = DateTime.Now;
                    //            if (Current <= ToCreated)
                    //            {
                    //                TempData["ShowEditButton"] = true;
                    //            }
                    //        }
                    //        else if (TempData["ViewEditButton"] == "Show")
                    //        {
                    //            TempData["ShowEditButton"] = true;
                    //        }
                    //        else
                    //        {
                    //            TempData["ShowEditButton"] = null;
                    //        }
                    //    }
                    //    else if (FlagsCheck == true)
                    //    {
                    //        TempData["ShowEditButton"] = true;
                    //    }
                    //    else
                    //    {
                    //        if (TempData["ViewEditButton"] == "Show" || registeredFacultyEducation.OrderByDescending(s => s.educationId).Select(e => e.updatedOn).FirstOrDefault() <= facultyeditclosedate)
                    //        {
                    //            TempData["ShowEditButton"] = true;
                    //        }
                    //        else
                    //        {
                    //            TempData["ShowEditButton"] = null;
                    //        }
                    //    }
                    //}

                    //var FacultyEditFields = db.jntuh_link_screens.Where(a => a.isActive == true).Select(a => a).ToList();

                    //foreach (var EditField in FacultyEditFields)
                    //{

                    //}

                    //Code writen by siva for Faculty Edit Fields.
                    //var FacultyEditFieldsLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FFE").Select(a => a.id).FirstOrDefault();
                    //DateTime? facultyEditFieldsfromdate = DateTime.Now;
                    //DateTime? facultyEditFieldsclosedate = DateTime.Now; ;
                    //if (FacultyEditFieldsLinkId != 0)
                    //{
                    //    facultyEditFieldsfromdate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditFieldsLinkId && a.isActive == true).Select(s => s.fromdate).FirstOrDefault();
                    //    facultyEditFieldsclosedate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditFieldsLinkId && a.isActive == true).Select(s => s.todate).FirstOrDefault();
                    //}
                    //TempData["EditRequestLink"] = "false";
                    //var currentDate = DateTime.Now;
                    //if (currentDate > facultyEditFieldsclosedate)
                    //    TempData["EditRequestLink"] = "false";
                    //else
                    //    TempData["EditRequestLink"] = "true";

                    ////Code writen by siva for Faculty mobility Fields.
                    //var FacultyMobiltyLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FMR").Select(a => a.id).FirstOrDefault();
                    //DateTime? facultyMobiltyfromdate = DateTime.Now;
                    //DateTime? facultyMobiltyclosedate = DateTime.Now; ;
                    //if (FacultyMobiltyLinkId != 0)
                    //{
                    //    facultyMobiltyfromdate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyMobiltyLinkId && a.isActive == true).Select(s => s.fromdate).FirstOrDefault();
                    //    facultyMobiltyclosedate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyMobiltyLinkId && a.isActive == true).Select(s => s.todate).FirstOrDefault();
                    //}
                    //TempData["MobiltyRequestLink"] = "false";
                    //var MobiltycurrentDate = DateTime.Now;

                    //if (regFaculty.CollegeId != 0)
                    //{
                    //    if (MobiltycurrentDate > facultyMobiltyclosedate)
                    //        TempData["MobiltyRequestLink"] = "false";
                    //    else
                    //        TempData["MobiltyRequestLink"] = "true";
                    //}
                    //else
                    //    TempData["MobiltyRequestLink"] = "false";

                    return View(regFaculty);
                }
                else
                {
                    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration");
                }
            }
            else
            {
                return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration");
            }
        }

        [Authorize(Roles = "College")]
        public ActionResult TeachingViewFacultyDetails(string fid)
        {
            //TempData["ShowEditButton"] = null;
            ViewBag.ShowEditButton = null;
            int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            int fID = 0;
            string RegistrationNumber = string.Empty;

            if (fid != null)
            {
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(fid.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]));
            }
            else if (userId != null)
            {
                RegistrationNumber = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(e => e.RegistrationNumber).FirstOrDefault();
                fID = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber == RegistrationNumber).Select(a => a.id).FirstOrDefault();
            }
            else
            {
                TempData["SUCCESS"] = null;
                return RedirectToAction("Logon", "Account");
            }
            if (fID == 113698)
            {
                fID = Convert.ToInt32(ConfigurationManager.AppSettings["testRegnumberfid"]);
            }
            //var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
            //DateTime? facultyeditfromdate = DateTime.Now;
            //DateTime? facultyeditclosedate = DateTime.Now;
            //if (FacultyEditLinkId != 0)
            //{
            //    facultyeditfromdate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditLinkId && a.isActive == true).Select(s => s.fromdate).FirstOrDefault();
            //    facultyeditclosedate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditLinkId && a.isActive == true).Select(s => s.todate).FirstOrDefault();
            //}
            FacultyRegistration regFaculty = new FacultyRegistration();

            if (!string.IsNullOrEmpty(fid) || fID != 0)
            {
                regFaculty.GenderId = null;
                regFaculty.isFacultyRatifiedByJNTU = null;
                jntuh_registered_faculty faculty = db.jntuh_registered_faculty.Find(fID);
                //if (faculty.UserId != userId)
                //{
                //    faculty = db.jntuh_registered_faculty.Where(r => r.UserId == userId).Select(s => s).FirstOrDefault();
                //}

                if (faculty != null)
                {
                    regFaculty.id = faculty.id;
                    regFaculty.Type = faculty.type;
                    regFaculty.RegistrationNumber = faculty.RegistrationNumber;
                    regFaculty.UserName = db.my_aspnet_users.Where(u => u.id == faculty.UserId).Select(u => u.name).FirstOrDefault();
                    regFaculty.Email = faculty.Email;
                    regFaculty.UniqueID = faculty.UniqueID;
                    regFaculty.FirstName = faculty.FirstName;
                    regFaculty.MiddleName = faculty.MiddleName;
                    regFaculty.LastName = faculty.LastName;
                    regFaculty.FatherOrhusbandName = faculty.FatherOrHusbandName;
                    regFaculty.MotherName = faculty.MotherName;
                    regFaculty.GenderId = faculty.GenderId;
                    //In DB Working Type Means Faculty Category Like: OC,SC,BC...
                    regFaculty.facultyCategory = faculty.WorkingType;
                    regFaculty.CollegeId =
                        db.jntuh_college_faculty_registered.Where(
                            f => f.RegistrationNumber == regFaculty.RegistrationNumber)
                            .Select(s => s.collegeId)
                            .FirstOrDefault();

                    if (regFaculty.CollegeId == 0 || regFaculty.CollegeId == null)
                    {
                        regFaculty.CollegeId =
                                  db.jntuh_college_principal_registered.Where(
                                      f => f.RegistrationNumber == regFaculty.RegistrationNumber)
                                      .Select(s => s.collegeId)
                                      .FirstOrDefault();
                    }


                    if (faculty.DateOfBirth != null)
                    {
                        regFaculty.facultyDateOfBirth =
                            UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfBirth.ToString());
                    }
                    regFaculty.Mobile = faculty.Mobile;
                    regFaculty.facultyPhoto = faculty.Photo;
                    regFaculty.PANNumber = faculty.PANNumber;
                    regFaculty.facultyPANCardDocument = faculty.PANDocument;
                    regFaculty.AadhaarNumber = faculty.AadhaarNumber;
                    regFaculty.facultyAadhaarCardDocument = faculty.AadhaarDocument;
                    regFaculty.IncomeTaxFileview = faculty.IncometaxDocument;
                    regFaculty.WorkingStatus = faculty.WorkingStatus;
                    regFaculty.TotalExperience = faculty.TotalExperience;
                    regFaculty.TotalExperiencePresentCollege = faculty.TotalExperiencePresentCollege;
                    if (regFaculty.CollegeId != 0)
                    {
                        regFaculty.CollegeName = db.jntuh_college.Where(a => a.id == regFaculty.CollegeId).Select(z => z.collegeName + " (" + z.collegeCode + ")").FirstOrDefault();
                    }




                    #region Faculty Profitional Information on 17-02-2020

                    faculty.DepartmentId = db.jntuh_college_faculty_registered.Where(
                            f => f.RegistrationNumber == regFaculty.RegistrationNumber)
                            .Select(s => s.DepartmentId)
                            .FirstOrDefault();

                    if (faculty.DepartmentId != null)
                    {
                        regFaculty.department = db.jntuh_department.Find(faculty.DepartmentId).departmentName;
                    }
                    regFaculty.DepartmentId = faculty.DepartmentId;
                    regFaculty.OtherDepartment = faculty.OtherDepartment;
                    List<jntuh_registered_faculty_experience> registered_faculty_experience =
                      db.jntuh_registered_faculty_experience.Where(
                          r =>
                              r.facultyId == regFaculty.id && r.createdBycollegeId != null)
                          .Select(s => s)
                          .ToList();

                    var facultyexperiance = registered_faculty_experience.Where(
                            r => r.facultyId == regFaculty.id && r.createdBycollegeId == regFaculty.CollegeId && r.facultyJoiningOrder != null)
                            .Select(s => s)
                            .ToList()
                            .LastOrDefault();
                    if (facultyexperiance != null)
                    {
                        faculty.DesignationId = facultyexperiance.facultyDesignationId;
                        if (faculty.DesignationId != null)
                        {
                            regFaculty.designation = db.jntuh_designation.Find(faculty.DesignationId).designation;
                        }
                        regFaculty.DesignationId = faculty.DesignationId;
                        regFaculty.OtherDesignation = facultyexperiance.OtherDesignation;
                        regFaculty.facultyDateOfAppointment =
                                UAAAS.Models.Utilities.MMDDYY2DDMMYY(facultyexperiance.facultyDateOfAppointment.ToString());
                        regFaculty.facultyAppointmentLetter = facultyexperiance.facultyJoiningOrder;
                        regFaculty.GrossSalary = facultyexperiance.facultySalary;
                        int fromyear = 0;
                        int frommonth = 0;
                        int fromdate = 0;
                        if (!string.IsNullOrEmpty(regFaculty.facultyDateOfAppointment))
                        {
                            int fromyear1 = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[2]);
                            int frommonth1 = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[1]);
                            int fromdate1 = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[0]);

                            DateTime zeroTime = new DateTime(1, 1, 1);
                            DateTime olddate = new DateTime(fromyear1, frommonth1, fromdate1);
                            DateTime curdate = DateTime.Now;

                            var Difference = curdate - olddate;
                            if (Difference.Days > 0)
                            {
                                int years1 = (zeroTime + Difference).Year - 1;
                                int months1 = (zeroTime + Difference).Month - 1;
                                int days1 = (zeroTime + Difference).Day;
                                regFaculty.showPresentCollegeExperiance = years1 + " Years " + months1 + " Months " + days1 + " Days";
                            }

                        }

                    }
                    //For The Experiance
                    var experiance =
                        registered_faculty_experience.Where(
                            e =>
                                e.createdBycollegeId != null && e.facultyId == regFaculty.id &&
                                e.facultyDateOfResignation != null && e.facultyDateOfResignation != null).Select(s => s).ToList();
                    int exyears = 0;
                    int exmonths = 0;
                    int exdays = 0;
                    int fromyear2 = 0;
                    int frommonth2 = 0;
                    int fromdate2 = 0;
                    int year = 0;
                    int month = 0;
                    int days = 0;
                    int date = 0;
                    int months = 0;
                    int years = 0;
                    foreach (var Experiencefaculty in experiance)
                    {
                        if (Experiencefaculty.facultyDateOfAppointment != null && Experiencefaculty.facultyDateOfResignation != null)
                        {
                            fromyear2 = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[2]);
                            frommonth2 = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[0]);
                            fromdate2 = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[1]);

                            year = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[2]);
                            month = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[0]);
                            date = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[1]);

                            DateTime zeroTime = new DateTime(1, 1, 1);
                            DateTime olddate = new DateTime(fromyear2, frommonth2, fromdate2);
                            DateTime curdate = new DateTime(year, month, date);

                            var Difference = curdate - olddate;

                            if (Difference.Days > 0)
                            {
                                years = (zeroTime + Difference).Year - 1;
                                months = (zeroTime + Difference).Month - 1;
                                days = (zeroTime + Difference).Day;


                                exyears = exyears + years;
                                exmonths = exmonths + months;
                                exdays = exdays + days;
                            }
                        }


                    }
                    while (exdays >= 30)
                    {
                        exdays = exdays - 30;
                        exmonths++;
                    }

                    while (exmonths >= 12)
                    {
                        exmonths = exmonths - 12;
                        exyears++;
                    }
                    regFaculty.showTotalExperience = exyears + " Years " + exmonths + " Months " + exdays + " Days";
                    #endregion

                    regFaculty.isFacultyRatifiedByJNTU = faculty.isFacultyRatifiedByJNTU;
                    if (faculty.DateOfRatification != null)
                    {
                        regFaculty.facultyDateOfRatification =
                            UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfRatification.ToString());
                    }

                    regFaculty.ProceedingsNo = faculty.ProceedingsNumber;
                    regFaculty.SelectionCommitteeProcedings = faculty.ProceedingDocument;

                    //Get the SCM Document from scmupload table uploaded by College.
                    // regFaculty.SelectionCommitteeProcedings = db.jntuh_scmupload.Where(e => e.RegistrationNumber.Trim() == regFaculty.RegistrationNumber.Trim()).Select(e => e.SCMDocument).FirstOrDefault();

                    regFaculty.AICTEFacultyId = faculty.AICTEFacultyId;
                    //regFaculty.GrossSalary = faculty.grosssalary;
                    regFaculty.National = faculty.National;
                    regFaculty.InterNational = faculty.InterNational;
                    regFaculty.Citation = faculty.Citation;
                    regFaculty.Awards = faculty.Awards;
                    regFaculty.isActive = faculty.isActive;
                    regFaculty.isApproved = faculty.isApproved;
                    regFaculty.isView = true;
                    regFaculty.BlacklistFaculty = faculty.Blacklistfaculy;
                    regFaculty.VerificationStatus = faculty.AbsentforVerification;
                    regFaculty.DeactivationReason = faculty.DeactivationReason;
                    regFaculty.facultyCategory = faculty.WorkingType;

                    #region Faculty Education Data Getting

                    // var jntuh_education_category = db.jntuh_education_category.Where(e => e.isActive == true).ToList();
                    var registeredFacultyEducation = db.jntuh_registered_faculty_education.Where(e => e.facultyId == fID).ToList();

                    if (registeredFacultyEducation.Count != 0)
                    {
                        foreach (var item in registeredFacultyEducation)
                        {
                            if (item.educationId == 1)
                            {
                                regFaculty.SSC_educationId = 1;
                                regFaculty.SSC_HallticketNo = item.hallticketnumber;
                                regFaculty.SSC_studiedEducation = item.courseStudied;
                                regFaculty.SSC_specialization = item.specialization;
                                regFaculty.SSC_passedYear = item.passedYear;
                                regFaculty.SSC_percentage = item.marksPercentage;
                                regFaculty.SSC_division = item.division == null ? 0 : item.division;
                                regFaculty.SSC_university = item.boardOrUniversity;
                                regFaculty.SSC_place = item.placeOfEducation;
                                regFaculty.SSC_facultyCertificate = item.certificate;
                            }
                            else if (item.educationId == 3)
                            {
                                regFaculty.UG_educationId = 3;
                                regFaculty.UG_HallticketNo = item.hallticketnumber;
                                regFaculty.UG_studiedEducation = item.courseStudied;
                                regFaculty.UG_specialization = item.specialization;
                                regFaculty.UG_passedYear = item.passedYear;
                                regFaculty.UG_percentage = item.marksPercentage;
                                regFaculty.UG_division = item.division == null ? 0 : item.division;
                                regFaculty.UG_university = item.boardOrUniversity;
                                regFaculty.UG_place = item.placeOfEducation;
                                regFaculty.UG_facultyCertificate = item.certificate;
                            }
                            else if (item.educationId == 4)
                            {
                                regFaculty.PG_educationId = 4;
                                regFaculty.PG_HallticketNo = item.hallticketnumber;
                                regFaculty.PG_studiedEducation = item.courseStudied;
                                regFaculty.PG_specialization = item.specialization;
                                regFaculty.PG_passedYear = item.passedYear;
                                regFaculty.PG_percentage = item.marksPercentage;
                                regFaculty.PG_division = item.division == null ? 0 : item.division;
                                regFaculty.PG_university = item.boardOrUniversity;
                                regFaculty.PG_place = item.placeOfEducation;
                                regFaculty.PG_facultyCertificate = item.certificate;
                            }
                            else if (item.educationId == 5)
                            {
                                regFaculty.MPhil_educationId = 5;
                                regFaculty.MPhil_HallticketNo = item.hallticketnumber;
                                regFaculty.MPhil_studiedEducation = item.courseStudied;
                                regFaculty.MPhil_specialization = item.specialization;
                                regFaculty.MPhil_passedYear = item.passedYear;
                                regFaculty.MPhil_percentage = item.marksPercentage;
                                regFaculty.MPhil_division = item.division == null ? 0 : item.division;
                                regFaculty.MPhil_university = item.boardOrUniversity;
                                regFaculty.MPhil_place = item.placeOfEducation;
                                regFaculty.MPhil_facultyCertificate = item.certificate;
                            }
                            else if (item.educationId == 6)
                            {
                                regFaculty.PhD_educationId = 6;
                                regFaculty.PhD_HallticketNo = item.hallticketnumber;
                                regFaculty.PhD_studiedEducation = item.courseStudied;
                                regFaculty.PhD_specialization = item.specialization;
                                regFaculty.PhD_passedYear = item.passedYear;
                                regFaculty.PhD_percentage = item.marksPercentage;
                                regFaculty.PhD_division = item.division == null ? 0 : item.division;
                                regFaculty.PhD_university = item.boardOrUniversity;
                                regFaculty.PhD_place = item.placeOfEducation;
                                regFaculty.PhD_facultyCertificate = item.certificate;
                            }
                            else if (item.educationId == 9)
                            {
                                regFaculty.NET_educationId = 9;
                                regFaculty.NET_HallticketNo = item.hallticketnumber;
                                regFaculty.NET_studiedEducation = item.courseStudied;
                                regFaculty.NET_specialization = item.specialization;
                                regFaculty.NET_passedYear = item.passedYear;
                                //regFaculty.NET_percentage = item.marksPercentage;
                                //regFaculty.NET_division = item.division == null ? 0 : item.division;
                                regFaculty.NET_university = item.boardOrUniversity;
                                regFaculty.NET_place = item.placeOfEducation;
                                regFaculty.NET_facultyCertificate = item.certificate;
                            }
                            else if (item.educationId == 8)
                            {
                                regFaculty.Others_educationId = 8;
                                regFaculty.faculty_AllCertificates = item.certificate;
                            }
                            //else if (item.educationId == 9)
                            //{
                            //    regFaculty.Others_educationId = 9;
                            //    regFaculty.NET_HallticketNo = item.hallticketnumber;
                            //    regFaculty.NET_educationName = item.courseStudied;
                            //    regFaculty.NET_studiedEducation = item.specialization;
                            //    regFaculty.NET_passedYear = item.passedYear;
                            //    regFaculty.NET_facultyCertificate = item.certificate;
                            //}
                        }
                    }

                    #endregion

                    //Faculty Edit Checking
                    var todayDate = DateTime.Now;
                    var isclear = IsClearFaculty(faculty.RegistrationNumber.Trim());
                    int actualYear = db.jntuh_academic_year.Where(a => a.isActive == true && a.isPresentAcademicYear == true).Select(a => a.actualYear).FirstOrDefault();
                    int prAy =
                        db.jntuh_academic_year.Where(a => a.actualYear == (actualYear + 1)).Select(s => s.id).FirstOrDefault();
                    //var Inactive = IsInactiveFaculty(faculty.RegistrationNumber.Trim());
                    if (!isclear)
                    {
                        var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
                        if (FacultyEditLinkId != 0)
                        {
                            jntuh_college_links_assigned facultyedit = db.jntuh_college_links_assigned.Where(l => l.linkId == FacultyEditLinkId && l.academicyearId == prAy && l.isActive == true && l.fromdate <= todayDate && l.todate >= todayDate).Select(s => s).FirstOrDefault();
                            if (facultyedit != null && faculty.Blacklistfaculy != true && faculty.type != "Adjunct" && faculty.AbsentforVerification != true)
                            {
                                ViewBag.ShowEditButton = true;
                            }
                            else
                                ViewBag.ShowEditButton = null;
                        }
                    }
                    else
                    {
                        var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
                        if (FacultyEditLinkId != 0)
                        {
                            jntuh_college_links_assigned facultyedit = db.jntuh_college_links_assigned.Where(l => l.linkId == FacultyEditLinkId && l.academicyearId == prAy && l.isActive == true && l.fromdate <= todayDate && l.todate >= todayDate).Select(s => s).FirstOrDefault();
                            if (facultyedit != null && faculty.Blacklistfaculy != true && faculty.type != "Adjunct" && faculty.AbsentforVerification != true)
                            {
                                ViewBag.ShowEditButton = false;
                            }
                        }

                    }
                    //var FlagsCheck = CheckFacultyFlags(faculty.RegistrationNumber);

                    //if (facultyeditfromdate == null || facultyeditclosedate == null)
                    //{
                    //    TempData["ShowEditButton"] = null;
                    //}
                    //else
                    //{
                    //    if (currentDate > facultyeditclosedate)
                    //    {
                    //        TempData["ShowEditButton"] = null;
                    //    }
                    //    else if (faculty.Blacklistfaculy == true || faculty.type == "Adjunct" || faculty.AbsentforVerification == true)
                    //    {
                    //        TempData["ShowEditButton"] = null;
                    //    }
                    //    else if (FlagsCheck == false)
                    //    {
                    //        DateTime? FromCreated = facultyeditfromdate;
                    //        DateTime? ToCreated = facultyeditclosedate;
                    //        if (registeredFacultyEducation.Count == 0 || registeredFacultyEducation.Count == 1 || registeredFacultyEducation.Count == 2)
                    //        {
                    //            TempData["ShowEditButton"] = true;
                    //        }
                    //        else if (faculty.createdOn >= FromCreated)
                    //        {
                    //            DateTime Current = DateTime.Now;
                    //            if (Current <= ToCreated)
                    //            {
                    //                TempData["ShowEditButton"] = true;
                    //            }
                    //        }
                    //        else if (TempData["ViewEditButton"] == "Show")
                    //        {
                    //            TempData["ShowEditButton"] = true;
                    //        }
                    //        else
                    //        {
                    //            TempData["ShowEditButton"] = null;
                    //        }
                    //    }
                    //    else if (FlagsCheck == true)
                    //    {
                    //        TempData["ShowEditButton"] = true;
                    //    }
                    //    else
                    //    {
                    //        if (TempData["ViewEditButton"] == "Show" || registeredFacultyEducation.OrderByDescending(s => s.educationId).Select(e => e.updatedOn).FirstOrDefault() <= facultyeditclosedate)
                    //        {
                    //            TempData["ShowEditButton"] = true;
                    //        }
                    //        else
                    //        {
                    //            TempData["ShowEditButton"] = null;
                    //        }
                    //    }
                    //}

                    //var FacultyEditFields = db.jntuh_link_screens.Where(a => a.isActive == true).Select(a => a).ToList();

                    //foreach (var EditField in FacultyEditFields)
                    //{

                    //}

                    //Code writen by siva for Faculty Edit Fields.
                    //var FacultyEditFieldsLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FFE").Select(a => a.id).FirstOrDefault();
                    //DateTime? facultyEditFieldsfromdate = DateTime.Now;
                    //DateTime? facultyEditFieldsclosedate = DateTime.Now; ;
                    //if (FacultyEditFieldsLinkId != 0)
                    //{
                    //    facultyEditFieldsfromdate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditFieldsLinkId && a.isActive == true).Select(s => s.fromdate).FirstOrDefault();
                    //    facultyEditFieldsclosedate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditFieldsLinkId && a.isActive == true).Select(s => s.todate).FirstOrDefault();
                    //}
                    //TempData["EditRequestLink"] = "false";
                    //var currentDate = DateTime.Now;
                    //if (currentDate > facultyEditFieldsclosedate)
                    //    TempData["EditRequestLink"] = "false";
                    //else
                    //    TempData["EditRequestLink"] = "true";

                    ////Code writen by siva for Faculty mobility Fields.
                    //var FacultyMobiltyLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FMR").Select(a => a.id).FirstOrDefault();
                    //DateTime? facultyMobiltyfromdate = DateTime.Now;
                    //DateTime? facultyMobiltyclosedate = DateTime.Now; ;
                    //if (FacultyMobiltyLinkId != 0)
                    //{
                    //    facultyMobiltyfromdate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyMobiltyLinkId && a.isActive == true).Select(s => s.fromdate).FirstOrDefault();
                    //    facultyMobiltyclosedate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyMobiltyLinkId && a.isActive == true).Select(s => s.todate).FirstOrDefault();
                    //}
                    //TempData["MobiltyRequestLink"] = "false";
                    //var MobiltycurrentDate = DateTime.Now;

                    //if (regFaculty.CollegeId != 0)
                    //{
                    //    if (MobiltycurrentDate > facultyMobiltyclosedate)
                    //        TempData["MobiltyRequestLink"] = "false";
                    //    else
                    //        TempData["MobiltyRequestLink"] = "true";
                    //}
                    //else
                    //    TempData["MobiltyRequestLink"] = "false";

                    return View(regFaculty);
                }
                else
                {
                    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration");
                }
            }
            else
            {
                return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration");
            }
        }

        [Authorize(Roles = "Admin,College")]
        public ActionResult CollegeViewFacultyDetails(string fid)
        {
            int userID = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            int userCollegeID = db.jntuh_college_users.Where(collegeUser => collegeUser.userID == userID).Select(collegeUser => collegeUser.collegeID).FirstOrDefault();
            if (userCollegeID == 0 && !Roles.IsUserInRole("Admin"))
            {
                return RedirectToAction("Logon", "Account");
            }

            FacultyRegistration regFaculty = new FacultyRegistration();
            int fID = 0;

            if (fid != null)
            {
                fID =
                    Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(fid,
                        WebConfigurationManager.AppSettings["CryptoKey"]));
            }
            else
            {
                return RedirectToAction("College", "Dashboard");
            }

            // fID = 9155;
            if (!string.IsNullOrEmpty(fid))
            {
                regFaculty.GenderId = null;
                regFaculty.isFacultyRatifiedByJNTU = null;
                jntuh_registered_faculty faculty = db.jntuh_registered_faculty.Find(fID);

                if (faculty != null)
                {

                    regFaculty.id = fID;
                    regFaculty.Type = faculty.type;
                    regFaculty.RegistrationNumber = faculty.RegistrationNumber;
                    regFaculty.UserName =
                        db.my_aspnet_users.Where(u => u.id == faculty.UserId).Select(u => u.name).FirstOrDefault();
                    regFaculty.Email = faculty.Email;
                    regFaculty.UniqueID = faculty.UniqueID;
                    regFaculty.FirstName = faculty.FirstName;
                    regFaculty.MiddleName = faculty.MiddleName;
                    regFaculty.LastName = faculty.LastName;
                    regFaculty.FatherOrhusbandName = faculty.FatherOrHusbandName;
                    regFaculty.MotherName = faculty.MotherName;
                    regFaculty.GenderId = faculty.GenderId;
                    //In DB Working Type Means Faculty Category Like: OC,SC,BC...
                    regFaculty.facultyCategory = faculty.WorkingType;
                    regFaculty.CollegeId =
                        db.jntuh_college_faculty_registered.Where(
                            f => f.RegistrationNumber == regFaculty.RegistrationNumber)
                            .Select(s => s.collegeId)
                            .FirstOrDefault();

                    if (regFaculty.CollegeId == 0 || regFaculty.CollegeId == null)
                    {
                        regFaculty.CollegeId =
                                  db.jntuh_college_principal_registered.Where(
                                      f => f.RegistrationNumber == regFaculty.RegistrationNumber)
                                      .Select(s => s.collegeId)
                                      .FirstOrDefault();
                    }


                    if (faculty.DateOfBirth != null)
                    {
                        regFaculty.facultyDateOfBirth =
                            UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfBirth.ToString());
                    }
                    regFaculty.Mobile = faculty.Mobile;
                    regFaculty.facultyPhoto = faculty.Photo;
                    regFaculty.PANNumber = faculty.PANNumber;
                    regFaculty.facultyPANCardDocument = faculty.PANDocument;
                    regFaculty.AadhaarNumber = faculty.AadhaarNumber;
                    regFaculty.facultyAadhaarCardDocument = faculty.AadhaarDocument;
                    regFaculty.IncomeTaxFileview = faculty.IncometaxDocument;
                    //  regFaculty.faculty_AllCertificates = faculty.OrganizationName;
                    regFaculty.WorkingStatus = faculty.WorkingStatus;
                    regFaculty.TotalExperience = faculty.TotalExperience;
                    regFaculty.TotalExperiencePresentCollege = faculty.TotalExperiencePresentCollege;
                    // regFaculty.OrganizationName = faculty.OrganizationName;
                    if (regFaculty.CollegeId != 0)
                    {
                        regFaculty.CollegeName = db.jntuh_college.Where(a => a.id == regFaculty.CollegeId).Select(z => z.collegeName + " (" + z.collegeCode + ")").FirstOrDefault();
                    }

                    if (faculty.DepartmentId != null)
                    {
                        regFaculty.department = db.jntuh_department.Find(faculty.DepartmentId).departmentName;
                    }
                    regFaculty.DepartmentId = faculty.DepartmentId;
                    regFaculty.OtherDepartment = faculty.OtherDepartment;

                    if (faculty.DesignationId != null)
                    {
                        regFaculty.designation = db.jntuh_designation.Find(faculty.DesignationId).designation;
                    }
                    regFaculty.DesignationId = faculty.DesignationId;
                    regFaculty.OtherDesignation = faculty.OtherDesignation;

                    if (faculty.DateOfAppointment != null)
                    {
                        regFaculty.facultyDateOfAppointment =
                            UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfAppointment.ToString());
                    }

                    regFaculty.isFacultyRatifiedByJNTU = faculty.isFacultyRatifiedByJNTU;
                    if (faculty.DateOfRatification != null)
                    {
                        regFaculty.facultyDateOfRatification =
                            UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfRatification.ToString());
                    }

                    regFaculty.ProceedingsNo = faculty.ProceedingsNumber;
                    regFaculty.SelectionCommitteeProcedings = faculty.ProceedingDocument;

                    //Get the SCM Document from scmupload table uploaded by College.
                    // regFaculty.SelectionCommitteeProcedings = db.jntuh_scmupload.Where(e => e.RegistrationNumber.Trim() == regFaculty.RegistrationNumber.Trim()).Select(e => e.SCMDocument).FirstOrDefault();

                    regFaculty.AICTEFacultyId = faculty.AICTEFacultyId;
                    regFaculty.GrossSalary = faculty.grosssalary;
                    regFaculty.National = faculty.National;
                    regFaculty.InterNational = faculty.InterNational;
                    regFaculty.Citation = faculty.Citation;
                    regFaculty.Awards = faculty.Awards;
                    regFaculty.isActive = faculty.isActive;
                    regFaculty.isApproved = faculty.isApproved;
                    regFaculty.isView = true;
                    regFaculty.BlacklistFaculty = faculty.Blacklistfaculy;
                    //regFaculty.AbsentforVerification = faculty.AbsentforVerification;
                    regFaculty.DeactivationReason = faculty.DeactivationReason;
                    regFaculty.PHDView = db.jntuh_faculty_phddetails.Where(i => i.Facultyid == faculty.id).Count();
                    #region Faculty Education Data Getting

                    // var jntuh_education_category = db.jntuh_education_category.Where(e => e.isActive == true).ToList();
                    var registeredFacultyEducation = db.jntuh_registered_faculty_education.Where(e => e.facultyId == fID).ToList();

                    if (registeredFacultyEducation.Count != 0)
                    {
                        foreach (var item in registeredFacultyEducation)
                        {
                            if (item.educationId == 1)
                            {
                                regFaculty.SSC_educationId = 1;
                                regFaculty.SSC_studiedEducation = item.courseStudied;
                                regFaculty.SSC_specialization = item.specialization;
                                regFaculty.SSC_passedYear = item.passedYear;
                                regFaculty.SSC_percentage = item.marksPercentage;
                                regFaculty.SSC_division = item.division == null ? 0 : item.division;
                                regFaculty.SSC_university = item.boardOrUniversity;
                                regFaculty.SSC_place = item.placeOfEducation;
                                regFaculty.SSC_facultyCertificate = item.certificate;
                            }
                            else if (item.educationId == 3)
                            {
                                regFaculty.UG_educationId = 3;
                                regFaculty.UG_studiedEducation = item.courseStudied;
                                regFaculty.UG_specialization = item.specialization;
                                regFaculty.UG_passedYear = item.passedYear;
                                regFaculty.UG_percentage = item.marksPercentage;
                                regFaculty.UG_division = item.division == null ? 0 : item.division;
                                regFaculty.UG_university = item.boardOrUniversity;
                                regFaculty.UG_place = item.placeOfEducation;
                                regFaculty.UG_facultyCertificate = item.certificate;
                            }
                            else if (item.educationId == 4)
                            {
                                regFaculty.PG_educationId = 4;
                                regFaculty.PG_studiedEducation = item.courseStudied;
                                regFaculty.PG_specialization = item.specialization;
                                regFaculty.PG_passedYear = item.passedYear;
                                regFaculty.PG_percentage = item.marksPercentage;
                                regFaculty.PG_division = item.division == null ? 0 : item.division;
                                regFaculty.PG_university = item.boardOrUniversity;
                                regFaculty.PG_place = item.placeOfEducation;
                                regFaculty.PG_facultyCertificate = item.certificate;
                            }
                            else if (item.educationId == 5)
                            {
                                regFaculty.MPhil_educationId = 5;
                                regFaculty.MPhil_studiedEducation = item.courseStudied;
                                regFaculty.MPhil_specialization = item.specialization;
                                regFaculty.MPhil_passedYear = item.passedYear;
                                regFaculty.MPhil_percentage = item.marksPercentage;
                                regFaculty.MPhil_division = item.division == null ? 0 : item.division;
                                regFaculty.MPhil_university = item.boardOrUniversity;
                                regFaculty.MPhil_place = item.placeOfEducation;
                                regFaculty.MPhil_facultyCertificate = item.certificate;
                            }
                            else if (item.educationId == 6)
                            {
                                regFaculty.PhD_educationId = 6;
                                regFaculty.PhD_studiedEducation = item.courseStudied;
                                regFaculty.PhD_specialization = item.specialization;
                                regFaculty.PhD_passedYear = item.passedYear;
                                regFaculty.PhD_percentage = item.marksPercentage;
                                regFaculty.PhD_division = item.division == null ? 0 : item.division;
                                regFaculty.PhD_university = item.boardOrUniversity;
                                regFaculty.PhD_place = item.placeOfEducation;
                                regFaculty.PhD_facultyCertificate = item.certificate;
                            }
                            else if (item.educationId == 8)
                            {
                                regFaculty.Others_educationId = 8;
                                regFaculty.faculty_AllCertificates = item.certificate;
                            }
                        }
                    }

                    #endregion

                    var currentDate = DateTime.Now;
                    return View(regFaculty);
                }
                else
                {
                    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration");
                }
            }
            else
            {
                return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration");
            }
        }

        [HttpGet]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult EditFacultyDetails(string fid)
        {
            int fID = 0;
            if (!string.IsNullOrEmpty(User.Identity.Name))
            {
                int userID = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
                int facultyId = db.jntuh_registered_faculty.Where(f => f.UserId == userID).Select(f => f.id).FirstOrDefault();

                if (fid != null)
                {
                    fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(fid, WebConfigurationManager.AppSettings["CryptoKey"]));
                    var facultyc = db.jntuh_registered_faculty.Where(f => f.id == fID).FirstOrDefault();
                    //if (facultyc.UserId != userID)
                    //{
                    //    fID = facultyc.id;
                    //}
                }
            }
            else
            {
                return RedirectToAction("Logon", "Account");
            }
            if (fID == 113698)
            {
                fID = Convert.ToInt32(ConfigurationManager.AppSettings["testRegnumberfid"]);
            }
            //return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
            //DateTime? facultyeditfromdate = DateTime.Now;
            //DateTime? facultyeditclosedate = DateTime.Now; ;
            //if (FacultyEditLinkId != 0)
            //{
            //    facultyeditfromdate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditLinkId && a.isActive == true).Select(s => s.fromdate).FirstOrDefault();
            //    facultyeditclosedate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditLinkId && a.isActive == true).Select(s => s.todate).FirstOrDefault();
            //}

            //var currentDate = DateTime.Now;
            //if (currentDate > facultyeditclosedate)
            //{
            //    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //}
            jntuh_college_links_assigned facultyedit = new jntuh_college_links_assigned();
            var todayDate = DateTime.Now;
            int actualYear = db.jntuh_academic_year.Where(a => a.isActive == true && a.isPresentAcademicYear == true).Select(a => a.actualYear).FirstOrDefault();
            int prAy =
                db.jntuh_academic_year.Where(a => a.actualYear == (actualYear + 1)).Select(s => s.id).FirstOrDefault();
            var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
            if (FacultyEditLinkId != 0)
            {
                facultyedit = db.jntuh_college_links_assigned.Where(l => l.linkId == FacultyEditLinkId && l.academicyearId == prAy && l.isActive == true && l.fromdate <= todayDate && l.todate >= todayDate).Select(s => s).FirstOrDefault();
                if (facultyedit == null)
                {
                    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
                }
            }

            // fID = 9155;
            //DateTime todayDate = DateTime.Now.Date;

            var jntuh_department = db.jntuh_department.AsNoTracking().ToList();
            var jntuh_degree = db.jntuh_degree.AsNoTracking().ToList();

            var jntuh_departments = (from a in jntuh_department
                                     join b in jntuh_degree on a.degreeId equals b.id
                                     select new
                                     {
                                         id = a.id,
                                         departmentName = a.departmentName
                                     }).ToList();

            List<DistinctDepartment> depts = new List<DistinctDepartment>();
            string existingDepts = string.Empty;
            int[] notRequiredIds = { 25, 26, 27, 33, 34, 36, 37, 38, 39, 53, 54, 55, 56 };
            foreach (var item in jntuh_department.Where(s => !notRequiredIds.Contains(s.id)).OrderBy(s => s.departmentName))
            {
                if (!existingDepts.Split(',').Contains(item.departmentName))
                {
                    depts.Add(new DistinctDepartment { id = item.id, departmentName = item.departmentName });
                    existingDepts = existingDepts + "," + item.departmentName;
                }
            }

            ViewBag.department = depts;
            ViewBag.designation = db.jntuh_designation.Where(c => c.isActive == true).ToList();
            ViewBag.Institutions = db.jntuh_college.Where(c => c.isActive == true && c.id != 375).Select(c => new { CollegeId = c.id, CollegeName = c.collegeCode + "-" + c.collegeName }).OrderBy(c => c.CollegeName).ToList();

            List<SelectListItem> ratifiedDuration = new List<SelectListItem>();
            for (int i = 1; i <= 10; i++)
            {
                ratifiedDuration.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.duration = ratifiedDuration;

            List<SelectListItem> prevExperience = new List<SelectListItem>();
            for (int i = 0; i <= 40; i++)
            {
                prevExperience.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.prevExperience = prevExperience;

            List<SelectListItem> years = new List<SelectListItem>();
            for (int i = 1940; i <= DateTime.Now.Year; i++)
            {
                years.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.years = years;

            List<SelectListItem> division = new List<SelectListItem>();
            for (int i = 1; i <= 5; i++)
            {
                division.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.division = division;

            var PGDeptIds = db.jntuh_degree.Join(db.jntuh_department, d => d.id, de => de.degreeId, (d, de) => new { d = d, de = de }).Where(e => e.d.id != 4 && e.d.id != 5).Select(e => e.de.id).ToArray();

            int[] OthersSpecialization = { 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166 };
            var pgSpecializations = db.jntuh_specialization.Where(e => e.isActive == true && !OthersSpecialization.Contains(e.id) && PGDeptIds.Contains(e.departmentId) || e.id == 154).Select(e => new { id = e.id, spec = e.specializationName }).OrderBy(e => e.spec).ToList();
            ViewBag.PGSpecializations = pgSpecializations;

            var jntuh_registered_faculty = db.jntuh_registered_faculty.Where(f => f.id == fID).ToList();

            //Checking Flags.....
            //var FlagsCheck = CheckFacultyFlags(jntuh_registered_faculty.Select(a => a.RegistrationNumber).FirstOrDefault());
            var FlagsCheck = IsClearFaculty(jntuh_registered_faculty.Select(a => a.RegistrationNumber).FirstOrDefault());

            if (FlagsCheck)
            {
                return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            }
            if (facultyedit == null)
            {
                return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            }
            else
            {
                if (!FlagsCheck)
                {
                    //DateTime? FromCreated = facultyeditfromdate;
                    //DateTime? ToCreated = facultyeditclosedate;
                    //DateTime? facultyCreatedOn = jntuh_registered_faculty.Select(s => s.createdOn).FirstOrDefault();
                    //var FacultyEducation = db.jntuh_registered_faculty_education.Where(e => e.facultyId == fID).ToList();
                    //if (FacultyEducation.Count == 0 || FacultyEducation.Count == 1 || FacultyEducation.Count == 2)
                    //{
                    //}
                    //else if (facultyCreatedOn >= FromCreated)
                    //{
                    //    DateTime Current = DateTime.Now;
                    //    if (Current <= ToCreated)
                    //    {
                    //        TempData["ShowEditButton"] = true;
                    //    }
                    //}
                    //else
                    //{
                    //    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
                    //}

                    var FacultyEducation = db.jntuh_registered_faculty_education.Where(e => e.facultyId == fID).ToList();
                    if (FacultyEducation.Count == 0 || FacultyEducation.Count == 1 || FacultyEducation.Count == 2)
                    {
                    }
                    else if (facultyedit != null)
                    {
                        TempData["ShowEditButton"] = true;
                    }
                    else
                    {
                        return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
                    }
                }
                else
                    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });

            }


            string inactivereg = jntuh_registered_faculty.Where(i => i.id == fID && i.isActive != false).Select(s => s.RegistrationNumber).FirstOrDefault();
            if (String.IsNullOrEmpty(inactivereg))
            {
                TempData["ERROR"] = "Edit option not provided as this registration number was surrendered under multiple registrations";
                return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            }

            EditFacultyRegistration regFaculty = new EditFacultyRegistration();
            string fregnoa = jntuh_registered_faculty.Where(i => i.id == fID && (i.type == "Adjunct" || i.Blacklistfaculy == true || i.AbsentforVerification == true)).Select(s => s.RegistrationNumber).FirstOrDefault();
            if (!string.IsNullOrEmpty(fregnoa))
            {
                TempData["ERROR"] = "You don't have permissions to Edit";
                return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            }
            //else
            //{
            //    string fregno = jntuh_registered_faculty.Where(i => i.id == fID && i.isActive != false).Select(s => s.RegistrationNumber).FirstOrDefault();
            //    if (!string.IsNullOrEmpty(fregno))
            //    {
            //        string editregno = db.jntuh_college_faculty_registered_copy.Where(e => e.RegistrationNumber == fregno && e.collegeId == 375)
            //        .Select(s => s.RegistrationNumber)
            //        .FirstOrDefault();
            //        if (!string.IsNullOrEmpty(editregno))
            //        {
            //            TempData["ERROR"] = "The details of your profile with the submitted documents are in order and hence the edit option is not available to you.";
            //            return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //        }
            //    }
            //}

            // fID = 121577;
            var regno = jntuh_registered_faculty.Where(e => e.id == fID).Select(e => e.RegistrationNumber).FirstOrDefault();


            jntuh_registered_faculty faculty = db.jntuh_registered_faculty.Find(fID);
            regFaculty.id = fID;
            regFaculty.Type = faculty.type;
            regFaculty.NewPassword = "TEMP@PWD";
            regFaculty.ConfirmPassword = "TEMP@PWD";
            int facultyUserId = faculty.UserId;
            regFaculty.UserName = db.my_aspnet_users.Where(u => u.id == facultyUserId).Select(u => u.name).FirstOrDefault();
            regFaculty.RegistrationNumber = faculty.RegistrationNumber;
            regFaculty.UniqueID = faculty.UniqueID;
            regFaculty.FirstName = faculty.FirstName;
            regFaculty.MiddleName = faculty.MiddleName;
            regFaculty.LastName = faculty.LastName;
            regFaculty.GenderId = faculty.GenderId;
            regFaculty.FatherOrhusbandName = faculty.FatherOrHusbandName;
            regFaculty.MotherName = faculty.MotherName;
            //In DB Working Type Means Faculty Category Like: OC,SC,BC...
            regFaculty.facultyCategory = faculty.WorkingType;
            regFaculty.CollegeId =
               db.jntuh_college_faculty_registered.Where(r => r.RegistrationNumber == regFaculty.RegistrationNumber)
                   .Select(s => s.collegeId)
                   .FirstOrDefault();

            if (regFaculty.CollegeId == null)
            {
                regFaculty.CollegeId = db.jntuh_college_principal_registered.Where(f => f.RegistrationNumber == regFaculty.RegistrationNumber).Select(s => s.collegeId).FirstOrDefault();
            }

            if (faculty.DateOfBirth != null)
                regFaculty.facultyDateOfBirth = UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfBirth.ToString());

            //regFaculty.DesignationId = faculty.DesignationId;
            //if (faculty.DesignationId != null)
            //{
            //    regFaculty.designation = db.jntuh_designation.Find(faculty.DesignationId).designation;
            //}
            //regFaculty.DepartmentId = faculty.DepartmentId;
            //if (faculty.DepartmentId != null)
            //{
            //    regFaculty.department = db.jntuh_department.Find(faculty.DepartmentId).departmentName;
            //}
            if (regFaculty.CollegeId != 0)
            {
                regFaculty.CollegeName = db.jntuh_college.Find(regFaculty.CollegeId).collegeName;
            }

            regFaculty.CollegeId = faculty.collegeId;

            #region Faculty Profitional Information on 18-02-2020


            faculty.DepartmentId = db.jntuh_college_faculty_registered.Where(
                    f => f.RegistrationNumber == regFaculty.RegistrationNumber)
                    .Select(s => s.DepartmentId)
                    .FirstOrDefault();

            if (faculty.DepartmentId != null)
            {
                regFaculty.department = db.jntuh_department.Find(faculty.DepartmentId).departmentName;
            }
            regFaculty.DepartmentId = faculty.DepartmentId;
            regFaculty.OtherDepartment = faculty.OtherDepartment;

            List<jntuh_registered_faculty_experience> registered_faculty_experience =
              db.jntuh_registered_faculty_experience.Where(
                  r =>
                      r.facultyId == regFaculty.id && r.createdBycollegeId != null)
                  .Select(s => s)
                  .ToList();

            var facultyexperiance = registered_faculty_experience.Where(
                    r => r.facultyId == regFaculty.id && r.collegeId == regFaculty.CollegeId && r.facultyJoiningOrder != null)
                    .Select(s => s)
                    .ToList()
                    .LastOrDefault();
            if (facultyexperiance != null)
            {
                faculty.DesignationId = facultyexperiance.facultyDesignationId;
                if (faculty.DesignationId != null)
                {
                    regFaculty.designation = db.jntuh_designation.Find(faculty.DesignationId).designation;
                }
                regFaculty.DesignationId = faculty.DesignationId;
                regFaculty.OtherDesignation = facultyexperiance.OtherDesignation;
                regFaculty.facultyDateOfAppointment =
                        UAAAS.Models.Utilities.MMDDYY2DDMMYY(facultyexperiance.facultyDateOfAppointment.ToString());
                regFaculty.facultyAppointmentLetter = facultyexperiance.facultyJoiningOrder;
                regFaculty.GrossSalary = facultyexperiance.facultySalary;
                if (!string.IsNullOrEmpty(regFaculty.facultyDateOfAppointment))
                {
                    int fromyear = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[2]);
                    int frommonth = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[1]);
                    int fromdate = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[0]);

                    DateTime zeroTime = new DateTime(1, 1, 1);
                    DateTime olddate = new DateTime(fromyear, frommonth, fromdate);
                    DateTime curdate = DateTime.Now;

                    var Difference = curdate - olddate;
                    if (Difference.Days > 0)
                    {
                        int pryears = (zeroTime + Difference).Year - 1;
                        int months = (zeroTime + Difference).Month - 1;
                        int days = (zeroTime + Difference).Day;
                        regFaculty.showPresentCollegeExperiance = pryears + " Years " + months + " Months " + days + " Days";
                    }
                }

            }
            //For The Experiance
            var experiance =
                registered_faculty_experience.Where(
                    e =>
                        e.createdBycollegeId != null && e.facultyId == regFaculty.id &&
                        e.facultyDateOfResignation != null && e.facultyDateOfResignation != null).Select(s => s).ToList();
            int exyears = 0;
            int exmonths = 0;
            int exdays = 0;
            foreach (var Experiencefaculty in experiance)
            {
                if (Experiencefaculty.facultyDateOfAppointment != null && Experiencefaculty.facultyDateOfResignation != null)
                {
                    int fromyear = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[2]);
                    int frommonth = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[0]);
                    int fromdate = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[1]);


                    // Experiencefaculty.facultyDateOfResignation = UAAAS.Models.Utilities.MMDDYY2DDMMYY(Experiencefaculty.facultyDateOfResignation);

                    int year = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[2]);
                    int month = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[0]);
                    int date = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[1]);

                    DateTime zeroTime = new DateTime(1, 1, 1);
                    DateTime olddate = new DateTime(fromyear, frommonth, fromdate);
                    DateTime curdate = new DateTime(year, month, date);

                    var Difference = curdate - olddate;
                    if (Difference.Days > 0)
                    {
                        int expyears = (zeroTime + Difference).Year - 1;
                        int months = (zeroTime + Difference).Month - 1;
                        int days = (zeroTime + Difference).Day;


                        exyears = exyears + expyears;
                        exmonths = exmonths + months;
                        exdays = exdays + days;
                    }

                }


            }
            while (exdays >= 30)
            {
                exdays = exdays - 30;
                exmonths++;
            }

            while (exmonths >= 12)
            {
                exmonths = exmonths - 12;
                exyears++;
            }
            regFaculty.showTotalExperience = exyears + " Years " + exmonths + " Months " + exdays + " Days";
            #endregion

            regFaculty.WorkingStatus = faculty.WorkingStatus;
            //regFaculty.OtherDepartment = faculty.OtherDepartment;
            //regFaculty.OtherDesignation = faculty.OtherDesignation;
            //if (faculty.DateOfAppointment != null)
            //    regFaculty.facultyDateOfAppointment = UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfAppointment.ToString());
            regFaculty.isFacultyRatifiedByJNTU = faculty.isFacultyRatifiedByJNTU;
            if (faculty.DateOfRatification != null)
                regFaculty.facultyDateOfRatification = UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfRatification.ToString());
            regFaculty.ProceedingsNo = faculty.ProceedingsNumber;
            regFaculty.SelectionCommitteeProcedings = faculty.ProceedingDocument;
            regFaculty.ProceedingsNo = faculty.ProceedingsNumber;
            // regFaculty.OrganizationName = faculty.OrganizationName;
            regFaculty.AICTEFacultyId = faculty.AICTEFacultyId;
            //regFaculty.GrossSalary = faculty.grosssalary;
            //regFaculty.TotalExperience = faculty.TotalExperience;
            //regFaculty.TotalExperiencePresentCollege = faculty.TotalExperiencePresentCollege;
            regFaculty.EditPANNumber = faculty.PANNumber;
            regFaculty.EditAadhaarNumber = faculty.AadhaarNumber;
            regFaculty.EditEmail = faculty.Email;
            regFaculty.EditMobile = faculty.Mobile;
            regFaculty.National = faculty.National;
            regFaculty.InterNational = faculty.InterNational;
            regFaculty.Citation = faculty.Citation;
            regFaculty.Awards = faculty.Awards;
            regFaculty.facultyPhoto = faculty.Photo;
            regFaculty.facultyPANCardDocument = faculty.PANDocument;
            regFaculty.facultyAadhaarCardDocument = faculty.AadhaarDocument;
            regFaculty.SelectionCommitteeProcedings = faculty.ProceedingDocument;
            //Faculty WorkingType Means facultyCategory
            regFaculty.facultyCategory = faculty.WorkingType;
            regFaculty.ProceedingsNo = faculty.ProceedingsNumber;
            regFaculty.isActive = faculty.isActive;
            regFaculty.isApproved = faculty.isApproved;
            regFaculty.IncomeTaxFileview = faculty.IncometaxDocument;
            regFaculty.isView = true;
            regFaculty.PanStatus = faculty.PanStatus;
            regFaculty.createdOn = faculty.createdOn;
            regFaculty.createdBy = faculty.createdBy;
            #region Faculty Education Data Getting

            // var jntuh_education_category = db.jntuh_education_category.Where(e => e.isActive == true).ToList();
            var registeredFacultyEducation = db.jntuh_registered_faculty_education.Where(e => e.facultyId == fID).ToList();

            if (registeredFacultyEducation.Count != 0)
            {
                foreach (var item in registeredFacultyEducation)
                {
                    if (item.educationId == 1)
                    {
                        regFaculty.SSC_educationId = 1;
                        regFaculty.SSC_HallticketNo = item.hallticketnumber;
                        regFaculty.SSC_studiedEducation = item.courseStudied;
                        regFaculty.SSC_specialization = item.specialization;
                        regFaculty.SSC_passedYear = item.passedYear;
                        regFaculty.SSC_percentage = item.marksPercentage;
                        regFaculty.SSC_division = item.division == null ? 0 : item.division;
                        regFaculty.SSC_university = item.boardOrUniversity;
                        regFaculty.SSC_place = item.placeOfEducation;
                        regFaculty.SSC_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 3)
                    {
                        regFaculty.UG_educationId = 3;
                        regFaculty.UG_HallticketNo = item.hallticketnumber;
                        regFaculty.UG_studiedEducation = item.courseStudied;
                        regFaculty.UG_specialization = item.specialization;
                        regFaculty.UG_passedYear = item.passedYear;
                        regFaculty.UG_percentage = item.marksPercentage;
                        regFaculty.UG_division = item.division == null ? 0 : item.division;
                        regFaculty.UG_university = item.boardOrUniversity;
                        regFaculty.UG_place = item.placeOfEducation;
                        regFaculty.UG_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 4)
                    {
                        regFaculty.PG_educationId = 4;
                        regFaculty.PG_HallticketNo = item.hallticketnumber;
                        regFaculty.PG_studiedEducation = item.courseStudied;
                        regFaculty.PG_specialization = item.specialization;
                        regFaculty.PG_passedYear = item.passedYear;
                        regFaculty.PG_percentage = item.marksPercentage;
                        regFaculty.PG_division = item.division == null ? 0 : item.division;
                        regFaculty.PG_university = item.boardOrUniversity;
                        regFaculty.PG_place = item.placeOfEducation;
                        regFaculty.PG_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 5)
                    {
                        regFaculty.MPhil_educationId = 5;
                        regFaculty.MPhil_HallticketNo = item.hallticketnumber;
                        regFaculty.MPhil_studiedEducation = item.courseStudied;
                        regFaculty.MPhil_specialization = item.specialization;
                        regFaculty.MPhil_passedYear = item.passedYear;
                        regFaculty.MPhil_percentage = item.marksPercentage;
                        regFaculty.MPhil_division = item.division == null ? 0 : item.division;
                        regFaculty.MPhil_university = item.boardOrUniversity;
                        regFaculty.MPhil_place = item.placeOfEducation;
                        regFaculty.MPhil_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 6)
                    {
                        regFaculty.PhD_educationId = 6;
                        regFaculty.PhD_HallticketNo = item.hallticketnumber;
                        regFaculty.PhD_studiedEducation = item.courseStudied;
                        regFaculty.PhD_specialization = item.specialization;
                        regFaculty.PhD_passedYear = item.passedYear;
                        regFaculty.PhD_percentage = item.marksPercentage;
                        regFaculty.PhD_division = item.division == null ? 0 : item.division;
                        regFaculty.PhD_university = item.boardOrUniversity;
                        regFaculty.PhD_place = item.placeOfEducation;
                        regFaculty.PhD_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 9)
                    {
                        regFaculty.NET_educationId = 6;
                        regFaculty.NET_HallticketNo = item.hallticketnumber;
                        regFaculty.NET_studiedEducation = item.courseStudied;
                        regFaculty.NET_specialization = item.specialization;
                        regFaculty.NET_passedYear = item.passedYear;
                        //regFaculty.NET_percentage = item.marksPercentage;
                        //regFaculty.NET_division = item.division == null ? 0 : item.division;
                        regFaculty.NET_university = item.boardOrUniversity;
                        regFaculty.NET_place = item.placeOfEducation;
                        regFaculty.NET_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 8)
                    {
                        regFaculty.Others_educationId = 8;
                        regFaculty.faculty_AllCertificates = item.certificate;
                    }
                }
            }

            #endregion

            regFaculty.jntuh_registered_faculty_edit_fields = db.jntuh_registered_faculty_edit_fields.Where(e => e.IsFieldEditable == true).ToList();

            jntuh_registered_faculty_edit_fields Edit_fileds = new jntuh_registered_faculty_edit_fields();

            #region Auto Populate Condition.
            var specializations = db.jntuh_specialization.Where(s => s.isActive == true).Select(a => a).ToList();

            var ugspecializations = (from s in specializations
                                     join d in db.jntuh_department on s.departmentId equals d.id
                                     join de in db.jntuh_degree on d.degreeId equals de.id
                                     where (de.id == 4 || de.id == 5)
                                     select new
                                     {
                                         id = s.id,
                                         specializationname = s.specializationName
                                     }).ToList();

            regFaculty.ug_specializations = new List<string>() { "Test" };
            foreach (var item1 in ugspecializations)
            {
                regFaculty.ug_specializations.Add(item1.specializationname);
            }

            var pgspecializations = (from s in specializations
                                     join d in db.jntuh_department on s.departmentId equals d.id
                                     join de in db.jntuh_degree on d.degreeId equals de.id
                                     where (de.id != 4 && de.id != 5)
                                     select new
                                     {
                                         id = s.id,
                                         specializationname = s.specializationName
                                     }).ToList();

            regFaculty.pg_specializations = new List<string>() { "Test" };
            foreach (var item1 in pgspecializations)
            {
                regFaculty.pg_specializations.Add(item1.specializationname);
            }

            var Education = db.jntuh_registered_faculty_education.Select(e => new { educationid = e.educationId, coursestudied = e.courseStudied, universites = e.boardOrUniversity, places = e.placeOfEducation, specialization = e.specialization }).ToList();

            var RegisteredFacultyEducation_Courses = Education.Select(e => e.coursestudied.Trim()).Distinct().ToList();
            var RegisteredFacultyEducation_universities = Education.Where(z => z.universites != null).Select(e => e.universites.Trim()).Distinct().ToList();
            var RegisteredFacultyEducation_places = Education.Where(z => z.places != null).Select(e => e.places).Distinct().ToList();
            var RegisteredFacultyEducation_UGspecialization = Education.Where(a => a.educationid == 3 && a.specialization != null).Select(e => e.specialization.Trim()).Distinct().ToList();
            var RegisteredFacultyEducation_PGspecialization = Education.Where(a => a.educationid == 4 && a.specialization != null).Select(e => e.specialization.Trim()).Distinct().ToList();

            foreach (var UG in RegisteredFacultyEducation_UGspecialization)
            {
                regFaculty.ug_specializations.Add(UG.Trim());
            }
            regFaculty.ug_specializations.Remove("Test");
            foreach (var PG in RegisteredFacultyEducation_PGspecialization)
            {
                regFaculty.pg_specializations.Add(PG.Trim());
            }
            regFaculty.pg_specializations.Remove("Test");
            regFaculty.universitys = new List<string>() { "Rajiv Gandhi University", "Assam University", "Tezpur University", "University of Hyderabad, Hyderabad", "Maulana Azad National Urdu University", "English   and   Foreign   Languages   University", "Jamia Millia Islamia", "University of Delhi", "JawaharLal Nehru University", "Indira Gandhi National Open University", "South Asian University", "The  Indira  Gandhi  National  Tribal  University", "Dr. Harisingh Gour Vishwavidyalaya", "Mahatma  Gandhi  Antarrashtriya  Hindi  Vishwavidyalaya", "Mizoram University", "North Eastern Hill University", "Manipur University", "Central Agricultural University", "Nagaland University", "Pondicherry  University", "Sikkim University", "Tripura University", "Aligarh Muslim University", "Babasaheb  Bhimrao  Ambedkar  University", "Banaras Hindu University", "University of Allahabad", "Rajiv  Gandhi  National  Aviation  University", "Rani  Lakshmi  Bai  Central  Agricultural  University", "Visva Bharati, Shantiniketan", "Hemwati Nandan Bahuguna Garhwal University", "Central University of Tamil Nadu", "Indian Maritime University", "Central  University  of  Rajasthan", "Central University of Punjab", "Central University of Orissa", "Central University of Kerala", "Central University of Karnataka", "Central University of Jharkhand", "Central University of Kashmir, Transit Campus", "Central University of Jammu, Bagla (Rahya-Suchani)", "Central University of Himachal Pradesh", "Central University of Haryana", "Guru  Ghasidas  Vishwavidyalaya", "Central University of Bihar", "Nalanda University", "Mahatma  Gandhi  Central  University", "Central University of Gujarat", "Academy of Maritime Education and Training", "Amrita Vishwa Vidyapeetham", "Avinashilingam Institute for Home Science & Higher Education for Women", "B.L.D.E.", "B.S. Abdur Rahman Institute of Science and Technology", "Banasthai Vidyapith", "Bharath Institute of Higher Education & Research", "Bharati Vidyapeeth", "Bhatkhande Music Institute", "Birla Institute of Technology", "Birla Institute of Technology & Science", "Central Institute of Buddhist Studies(CIBS)", "Central Institute of Fisheries Education", "Central Institute of Higher Tibetan Studies", "Chennai Mathematical Institute", "Chettinad Academy of Research and Education (CARE)", "Chinmaya Vishwavidyapeeth", "Christ", "D.Y Patil Educational Society", "Datta Meghe Institute of Medical Sciences", "Dayalbagh Educational Institute", "Deccan College Postgraduate & Research Institute", "Dr. D.Y. Patil Vidyapeeth", "Dr. M.G.R. Educational and Research Institute", "Forest Research Institute", "Gandhi Institute of Technology and Management (GITAM)", "Gandhiigram Rural Institute", "Gokhale Institute of Politics & Economics", "Graphic Era", "Gujarat Vidyapith", "Gurukul Kangri vidyapeeth", "Hindustan Institute of Technology and Science (HITS)", "Homi Bhabha National Institute, Regd. Office", "ICFAI Foundation for Higher Education", "IIS", "Indain Institute of Foreigen Trade", "Indian Agricultural Research Institute", "Indian Association for the Cultivation of Science (IACS)", "Indian Institute of Information Technology and Management", "Indian Institute of Science", "Indian Institute of Space Science and Technology", "Indian Law Institute", "Indian School of Mines", "Indian Veterinary Research Institute", "Indira Gandhi Institute of Development Research", "Institute of Advanced Studies in Education", "Institute of Chemical Technology", "Institute of liver and Biliary Sciences", "Instituteof Armamrnt Technology", "International Institute for Population Sciences", "International Institute of Information Technology", "Jain", "Jain Vishva Bharati Institute", "Jamia Hamdard", "Janardan Rai Nagar Rajasthan Vidyapeeth", "Jawahar lal Nehru Centre for Advanced Scientific Research", "Jaypee Institute of Information Technology", "JSS Academy of Higher Education & Research", "K.L.E. Academy of Higher Education and Research", "Kalasalingam Academy of Research and Education", "Kalinga Institute of Industrial Technology", "Karpagam Academy of Higher Education", "Karunya Institute of Technology and Sciences", "Kerala Kalamandalam", "Koneru Lakshmaiah Education Foundation", "Krishna Institute of Medical Sciences", "Lakshmibai National Institute of Physical Education", "Lingaya's Vidyapeeth", "LNM Istitute of Information Technology", "Maharishi Markandeshwar (Deemed to be University)", "Manav Rachna International Institute of Research and Studies", "Manipal Academy of Higher Education", "Meenakshi Academy of Higher Education and Research", "MGM Institute of Health Sciences", "Narsee Monjee Institute of Management Studies", "National Brain Research Centre", "National Dairy Research Institute", "National Institute of Food Technology, Entrepreneurship & Management (NIFTEM)", "National Institute of Mental Health & Neuro Sciences", "National Museum Institute of History of Arts, Conservation and Musicology", "National Rail and Transportation Institute", "National University of Educational Planning & Administration", "Nava Nalanda Mahavihara", "Nehru Gram Bharati", "NITTE", "Noorul Islam Centre for Higher Education", "North Eastern Regional Institute of Science & Technology", "Padmashree Dr.D.Y. Patil Vidyapeeeth", "Pandit Dwarka Prasad Mishra Indian Institute of Information Technology", "Periyar Manaimmai Institute of Science & Technology (PMIST)", "Ponnaiyan Ramajayam Institute of Science & technology (PMIST)", "Pravara Institute of Medical Sciences", "Punjab Engineering College", "Rajiv Gandhi National Institute of Youth Development", "Ramakrishna Mission Vivekananda Educational and Research Institute", "Rashtriya Sanskrit Sansthana", "Rashtriya Sanskrit Vidyapeeth", "S.R.M Institute of Science and Technology", "Sam Higginbottom Institute of Agriculture, Technology & Sciences", "Sant Longowal Institute of Engineering and Technology", "Santosh", "Sathyabama Institute of Science and Technology", "Saveetha Institute of Medical and Technical Sciences", "Shanmugha Arts Science Technology & Research Academy (SASTRA)", "Shobhit Institute of Engineering & Technology", "Shri Lal Bahadur Shastri Rashtriya Sanskrit Vidyapith", "Siksha 'O' Anusandhan", "Sri Balaji Vidyapeeth (Deemed to be University)", "Sri Chandrasekharendra Saraswathi Vishwa Mahavidyalaya", "Sri Devraj Urs Academy of Higher Education and Research", "Sri Ramachandra Medical College and Research Institute", "Sri Sathya Sai Institute of Higher Learning", "Sri Siddhartha Academy of Higher Education", "St. Peterâ€™s Institute of Higher Education and Research", "Sumandeep Vidyapeeth", "Swami Vivekananda Yoga Anusandhana Samsthana", "Symbiosis International", "Tata Institute of Fundamental Research", "Tata Institute of Social Sciences", "TERI School of Advanced studies", "Thapar Institute of Engineering & Technology", "Tilak Maharashtra Vidyapeeth", "Vel Tech Rangarajan Dr. Sagunthala R & D Institute of Science and Technology", "Vellore Institute of Technology", "VELS Institute of Science Technology & Advanced Studies (VISTAS)", "Vignan's Foundation for Science, Technology and Research", "Vinayaka Missionâ€™s Research Foundation", "Yenepoya", "A.P.J. Abdul Kalam Technological University", "Acharaya N.G.Ranga Agricultural University", "Acharaya Nagarjuna University", "Adikavi Nannaya University", "Akkamahadevi women's University (Formerly known as Karnataka State Women's University)", "Alagappa University", "Aliah University", "Allahabad State University", "Ambedkar University Delhi (AUD)", "Anand Agricultural University", "Andhra University", "Anna University", "Annamalai University", "Arybhatta Knowledge University", "Assam Agricultural University", "Assam Rajiv Gandhi University of Co-operative Management", "Assam Science & Technology University", "Assam Womens University", "Atal Bihari Vajpayee Hindi Vishwavidyalaya", "Awadesh Pratap Singh University", "Ayush and Health Sciences University of Chhattisgarh", "Baba Farid University of Health Sciences", "Baba Ghulam Shah Badshah University", "Babasaheb Bhimrao Ambedkar Bihar University", "Banda University of Agriculture & Technology", "Bangalore University", "Bankura University", "Barkatullaah University", "Bastar Vishwavidyalaya", "Bengaluru Central University", "Bengaluru North University", "Berhampur University", "Bhagat Phool Singh Mahila Vishwavidyalaya", "Bhakta Kavi Narsinh Mehta University", "Bharathiar University", "Bharathidasan University", "Bhupender Narayan Mandal University", "Bidhan Chandra Krishi Vishwavidyalaya", "Bihar Agricultural University", "Biju Patnaik University of Technology", "Bilaspur Vishwavidyalaya", "Binod Bihari Mahto Koylanchal University", "Birsa Agricultural University", "Bodoland University", "Bundelkhand University", "Burdwan University", "Calcutta University", "Calicut University", "CEPT University", "Ch. Bansi Lal University", "Chanakya National Law University", "Chandr Shekhar Azad University of Agriculture & Technology", "Chatrapati Sahuji Maharaj Kanpur University", "Chaudhary Devi Lal University", "Chaudhary Ranbir Singh University", "Chaudhary Sarwan Kumar Himachal Pradesh Krishi Vishvavidyalaya", "Chhattisgarh Kamdhenu Vishwavidyalaya", "Chhattisgarh Swami Vivekanad Technical Universty", "Childrens University", "Choudary Charan Singh Haryana Agricultural Univeersity", "Choudary Charan Singh University", "Cluster University of Jammu", "Cluster University of Srinagar", "Cochin Unviersity of Science & Technology", "Cooch Behar Panchanan Barma University", "Cotton University", "Damodaram Sanjivayya National Law University", "Davangere University", "Deen Bandhu Chhotu Ram University of Sciences & Technology", "Deen Dayal Upadhyay Gorakhpur University", "Delhi Pharmaceutical Sciences & Research University", "Delhi Technological University", "Devi Ahilya Vishwavidyalaya", "Dharmashastra National Law University", "Dharmsinh Desai University", "Diamond Harbour Womens University", "Dibrugarh University", "Doon University", "Dr Shyama Prasad Mukherjee University", "Dr. A.P.J. Abdul Kalam Technical University", "Dr. B. R. Ambedkar University of Social Sciences", "Dr. B.R. Ambedkar University", "Dr. B.R.Ambedkar Open University", "Dr. B.R.Ambedkar University", "Dr. Babasaheb Ambedkar Marathwada University", "Dr. Babasaheb Ambedkar Open University", "Dr. Babasaheb AmbedkarTechnological University", "Dr. Bhimrao Ambedkar Law University", "Dr. N.T.R. University of Health Sciences", "Dr. Punjabrao Deshmukh Krishi Vidyapeeth", "Dr. Ram Manohar Lohia Awadh University", "Dr. Ram Manohar Lohiya National Law University", "Dr. Shakuntala Misra National Rehabilitation University", "Dr. Shyama Prasad University", "Dr. Y.S.Parmar University of Horticulture & Forestry", "Dr. Y.S.R. Horticultural Univerity", "Dravidian University", "Durg Vishwavidyalaya", "Fakir Mohan University", "G.B.Pant University of Agriculture & Technology", "Gangadhar Meher University", "Gauhati University", "Gautam Buddha University", "Goa University", "Gondwana University", "Govind Guru Tribal University", "Gujarat Agricultural University", "Gujarat Ayurveda University", "Gujarat Forensic Sciences University", "Gujarat National Law University", "Gujarat Technological University", "Gujarat University", "Gujarat University of Transplantation Sciences", "Gulbarga University", "Guru Angad Dev Veterinary & Animal Sciences University", "Guru Gobind Singh Indraprastha Vishwavidyalaya", "Guru Jambeshwar University of Science and Technology", "Guru Nanak Dev University", "Guru Ravidas Ayurved University", "Harcourt Butler Technical University", "Haridev Joshi University of Journalism and Mass Communication", "Haryana Vishwakarma Skill University", "Hemchandracharya North Gujarat University", "Hemwati Nandan Bahuguna Medical Education University", "Hidayatullah National Law University", "Himachal Pradesh National Law University", "Himachal Pradesh Technical University", "Himachal Pradesh University", "Indian Institute of Teacher Education", "Indira Gandhi Delhi Technical University for Women", "Indira Gandhi Krishi Vishwavidyalaya", "Indira Gandhi University", "Indira Kala Sangeet Vishwavidyalaya", "Indraprastha Institute of Information Technology", "Institute of Infrastructure Technology Research and Management", "International Institute of Information Technology (IIIT)", "Islamic University of Sciences & Technology University", "Jadavpur University", "Jagadguru Ramanandacharya Sanskrit University", "Jai Naraim Vyas University", "Jai Prakash vishwavidyalaya(university)", "Jammu University", "Jananayak Chandrashekhar University", "Jawaharlal Nehru Architecture and Fine Arts University", "Jawaharlal Nehru Krishi Vishwavidyalaya", "Jawaharlal Nehru Technological University", "Jharkhand Raksha Shakti University", "Jiwaji University", "Junagarh Agricultural University", "Kakatiya University", "Kaloji Narayan Rao University of Health Sciences", "Kalyani University", "Kamdhenu University", "Kameshwar Singh.Darbhanga Sanskrit Vishwavidyalaya", "Kannada University", "Kannur University", "Karanataka State Law University", "Karanataka State Open University", "Karanataka University", "Karanataka Veterinary, Animal & Fisheries Science University", "Karnataka Folklore University", "Karnataka Sanskrit University", "Karnataka State Rural Development and Panchayat Raj University", "Kashmir University", "Kavi Kulguru Kalidas Sanskrit Vishwavidyalaya", "Kazi Nazrul University", "Kerala Agricultural Unviersity", "Kerala University", "Kerala University of Fisheries & Ocean Studies", "Kerala University of Health Sciences", "Kerala Veterinary & Animal Sciences University", "Khallikote University", "Khwaja Moinuddin Chishti Urdu, Arabi-Farsi University", "King Georges Medical University", "Kolhan University", "Konkan Krishi Vidyapeeth", "Krantiguru Shyamji Krishna Verma Kachchh University", "Krishna Kanta Handique State Open University", "Krishna University", "Krishnakumarsinhji Bhavnagar University", "KSGH Music and Performing Arts University", "Kumar Bhaskar Varma Sanskrit & Ancient Studies University", "Kumaun University", "Kurukshetra University", "Kushabhau Thakre Patrakarita Avam Jansanchar Vishwavidyalaya", "Kuvempu University", "Lala Lajpat Rai University of Veterinary & Animal Sciences", "Lalit Narayan Mithila University", "Lucknow University", "M.J.P. Rohilkhand University", "M.P.Bhoj (open) University", "Madan Mohan Malaviya University of Technology", "Madaras University", "Madhya Pradesh Pashu Chikitsa Vigyan Vishwavidyalaya", "Madurai Kamraj University", "Magadh University", "Mahamaya Technical University", "Maharahtra University of Health Sciences", "Maharaja Bir Bikram University", "Maharaja Chhatrasal Bundelkhand Vishwavidyalaya", "Maharaja Ganga Singh University", "Maharaja Ranjit Singh Punjab Technical University", "Maharaja Sayajirao University of Baroda", "Maharaja Surajmal Brij University", "Maharana Partap Horticultural University", "Maharana Pratap University of Agriculture & Technology", "Maharashtra Animal & Fishery Sciences University", "Maharashtra National Law University", "Maharashtra National Law University,", "Maharishi Dayanand Saraswati University", "Maharishi Dayanand University", "Maharshi Panini Sanskrit Evam Vedic Vishwavidyalaya", "Mahatam Gandhi Kashi Vidyapeeth", "Mahatma Gandhi Chitrakoot Gramodaya Vishwavidyalaya", "Mahatma Gandhi University", "Mahatma Gandhi Unversity", "Mahatma Phule Krishi Vidyapeeth", "Makhanlal Chaturvedi National University of Journalism & Communication", "Mangalore University", "Manipur Technical University", "Manipur University of Culture", "Manonmaniam Sundarnar University", "Marathwada Agricultural University", "Maulana Abul Kalam Azad University of Technology", "Maulana Mazharul Haque Arabic & Persian University", "Mohan Lal Shukhadia University", "Mother Teresa Womens University", "Mumbai University", "Munger University", "Mysore University", "Nalanda Open University", "Narendra Deo University of Agriculture & Technology", "National Academy of Legal Studies & Research University", "National Law Institute University", "National law School of India University", "National Law Universituy", "National Law University", "National Law University and Judicial Academy", "National University of Advanced Legal Studies (NUALS)", "National University of Study & Research in Law", "Navsari Agriculture University", "Netaji Shubhash Open University", "Nilamber-Pitamber University", "Nizams Institute of Medical Sciences", "North Benagal University", "North Maharashtra University", "North Orissa University", "Odisha State Open University", "Orissa University Of Agriculture & Technology", "Osmania University", "Palamuru University", "Pandit S N Shukla University", "Patliputra University", "Patna University", "Periyar University", "Potti Sreeramulu Teugu Universtity", "Presidency University", "Professor Jayashankar Telangana State Agricultural University", "Pt. Bhagwat Dayal Sharma University of Health Sciences", "Pt. Sundarlal Sharma (Open) University", "Pt.Ravishankar Shukla University", "Punjab Agriculture University", "Punjab Technical University", "Punjab University", "Punjabi University", "Purnea University", "Rabindra Bharati University", "Raiganj University", "Raj Rishi Bhartrihari Matsya University", "Raja Mansingh Tomar Music & Arts University", "Rajasthan Ayurveda University", "Rajasthan ILD Skills University (RISU)", "Rajasthan Technical University", "Rajasthan University", "Rajasthan University of Health Sciences", "Rajasthan University of Veterinary & Animal Sciences", "Rajendra Agricultural University", "Rajiv Gandhi Prodoyogiki Vishwavidyalaya", "Rajiv Gandhi University of Health Science", "Rajiv Gandhi University of Knowledge Technology", "Rajmata Vijayaraje Scindia Krishi Vishwa Vidyalaya", "Raksha Shakti University", "Rama Devi Womens University", "Ranchi University", "Rani Channamma University", "Rani Durgavati Vishwavidyalaya", "Ravenshaw University", "Rayalaseema University", "Sambalpur University", "Sampurnanand Sanskrit Vishwavidyalaya", "Sanchi University of Buddhist-Indic Studies", "Sant Gadge Baba Amravati University", "Sardar Krushinagar Dantiwada Agricultural University", "Sardar Patel University", "Sardar Patel University of Police, Security & Criminal Justice", "Sardar Vallabh Bhai Patel University of Agriculture & Technology", "Sarguja University", "Satavahana University", "Saurashtra University", "Savitribai Phule Pune University", "Shekhawati University", "Sher-e-Kashmir University of Agricultural Science & Technology", "Shivaji University", "shree guru gobind singh tricentenary university", "Shree Sankaracharaya University of Sanskrit", "Shree Somnath Sanskrit University", "Shri Govind Guru University", "Shri Jagannath Sanskrit Vishwavidyalaya", "Shri Mata Vaishno Devi University", "Siddharth University", "Sidho-Kanho-Birsha University", "Sido Kanhu University", "Smt. Nathibai Damodar Thackersey Womens University", "Solapur University", "Sri Dev Suman Uttarakhand Vishwavidyalaya", "Sri Konda Laxman Telangana State Horticultural University", "Sri krishnadevaraya University", "Sri P V Narsimha Rao Telangana Veterinary University", "Sri Padmavati Mahila Vishwavidyalayam", "Sri Venkateswara Institute of Medical Sciences", "Sri Venkateswara University", "Sri Venkateswara Vedic University", "Sri Venkateswara Veterinary University", "Srimanta Sankaradeva University of Health Sciences", "State University of Performing and Visual Arts", "Swami Keshwanand Rajasthan Agriculture University", "Swami Ramanand Teerth Marathwada University", "Swarnim Gujarat Sports University", "T.M. Bhagalpur University", "Tamil Nadu Fisheries University", "Tamil Nadu Music and Fine Arts University", "Tamil Nadu Open University", "Tamil Nadu Teacher Education University", "Tamil University", "Tamilnadu Agricultural University", "Tamilnadu Dr. Ambedkar Law University", "Tamilnadu Dr. M.G.R.Medical University", "Tamilnadu National Law School", "Tamilnadu Physical Educaton and Sports University", "Tamilnadu Veterinary & Animal Sciences University", "Telangana University", "The Bengal Engineering & Science University", "The Rajiv Gandhi National University of Law", "The Rashtrasant Tukadoji Maharaj Nagpur University", "The Sanskrit College and University", "The West Bengal National University of Juridical Science", "The West Bengal University of Health Sciences", "Thiruvalluvar University", "Thunchath Ezhuthachan Malayalam University", "Tumkur University", "U.P. Pandit Deen Dayal Upadhyaya Pashu Chikitsa Vigyan Vishwavidhyalaya Evam Go-Anusandhan Sansthan", "U.P. Rajarshi Tandon Open University", "U.P.King Georges University of Dental Sciences", "University of Agricultural Sciences", "University of Horticultural Sciences", "University of Kota", "Univesity of Gour Banga", "Utkal University", "Utkal University of Culture", "Uttar Banga Krishi Vishwavidyalaya", "Uttar Pradesh University of Medical Sciences", "Uttarakhand Aawasiya Viswavidyalaya", "Uttarakhand Ayurved University", "Uttarakhand Open University", "Uttarakhand Sanskrit University", "Uttarakhand Technical University", "Vardhman Mahaveer Open University", "Veer Bahadur Singh Purvanchal University", "Veer Chandra Singh Garhwali Uttarakhand University of Horticulture & Forestry", "Veer Kunwar Singh University", "Veer Narmad South Gujarat University", "Veer Surendra Sai Institute of Medical Science and Research", "Veer Surendra Sai University of Technology", "Vesveswaraiah Technological University", "Vidya Sagar University", "Vijayanagara Sri Krishnadevaraya University", "Vikram Simhapuri University", "Vikram University", "Vinoba Bhave University", "West Bengal State University", "West Bengal University of Animal and Fishery Sciences", "West Bengal University of Teachers, Training, Education Planning and Administration", "Yashwant Rao Chavan Maharashtra Open University", "YMCA University of Science & Technology", "Yogi Vemana University" };
            regFaculty.places = new List<string>() { "Arunachal Pradesh", "Assam", "Telangana", "Delhi", "Madhya Pradesh", "Maharashtra", "Mizoram", "Meghalaya", "Manipur", "Nagaland", "Pondicherry", "Sikkim", "Tripura", "Uttar Pradesh", "West Bengal", "Uttarakhand", "Tamil Nadu", "Rajasthan", "Punjab", "Orissa", "Kerala", "Karnataka", "Jharkhand", "Jammu & Kashmir", "Himachal", "Pradesh", "Haryana", "Chhattisgarh", "Bihar", "Gujarat", "Jammu and Kashmir", "Andhra Pradesh", "Chandigarh", "Puducherry", "Himachal Pradesh", "Goa" };
            regFaculty.Courses = new List<string>() { "BE", "BTech", "ME", "MTech", "MBA", "MCA", "BCA", "PharmD", "BPharmacy", "MPharmacy", "BCom", "MCom", "BSC", "MSC", "M.A", "BA", "BZC", "MPhil", "PhD" };

            foreach (var course in RegisteredFacultyEducation_Courses)
            {
                //var changeCourse = course.First().Substring(0,1).ToUpper() + course.Substring(1, course.Length).ToLower();
                regFaculty.Courses.Add(course.Trim());
            }

            foreach (var university in RegisteredFacultyEducation_universities)
            {
                regFaculty.universitys.Add(university.Trim());
            }

            foreach (var place in RegisteredFacultyEducation_places)
            {
                regFaculty.places.Add(place.Trim());
            }
            #endregion

            return View(regFaculty);
        }

        [HttpPost]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult EditFacultyDetails(EditFacultyRegistration faculty, string fid)
        {
            TempData["SUCCESS"] = null;
            TempData["ERROR"] = null;
            int UserId = 0;
            int fID = 0;
            if (fid != null)
            {
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(fid, WebConfigurationManager.AppSettings["CryptoKey"]));
            }
            //return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
            //DateTime? facultyeditfromdate = DateTime.Now;
            //DateTime? facultyeditclosedate = DateTime.Now; ;
            //if (FacultyEditLinkId != 0)
            //{
            //    facultyeditfromdate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditLinkId && a.isActive == true).Select(s => s.fromdate).FirstOrDefault();
            //    facultyeditclosedate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditLinkId && a.isActive == true).Select(s => s.todate).FirstOrDefault();
            //}
            //var currentDate = DateTime.Now;
            //if (currentDate > facultyeditclosedate)
            //{
            //    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //}

            //var FlagsCheck = CheckFacultyFlags(faculty.RegistrationNumber);

            //if (facultyeditfromdate == null || facultyeditclosedate == null)
            //{
            //    TempData["ShowEditButton"] = null;
            //}
            //else
            //{
            //    if (FlagsCheck == false)
            //    {
            //        DateTime? FromCreated = facultyeditfromdate;
            //        DateTime? ToCreated = facultyeditclosedate;
            //        var FacultyEducation = db.jntuh_registered_faculty_education.Where(e => e.facultyId == fID).ToList();
            //        if (FacultyEducation.Count == 0 || FacultyEducation.Count == 1 || FacultyEducation.Count == 2)
            //        {
            //        }
            //        else if (faculty.createdOn >= FromCreated)
            //        {
            //            DateTime Current = DateTime.Now;
            //            if (Current <= ToCreated)
            //            {
            //                TempData["ShowEditButton"] = true;
            //            }
            //        }
            //        else
            //        {
            //            return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //        }
            //    }
            //}
            //New Code
            var todayDate = DateTime.Now;
            var isclear = IsClearFaculty(faculty.RegistrationNumber.Trim());
            //var Inactive = IsInactiveFaculty(faculty.RegistrationNumber.Trim());
            if (isclear)
            {
                return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            }
            if (!isclear)
            {
                int actualYear = db.jntuh_academic_year.Where(a => a.isActive == true && a.isPresentAcademicYear == true).Select(a => a.actualYear).FirstOrDefault();
                int prAy =
                    db.jntuh_academic_year.Where(a => a.actualYear == (actualYear + 1)).Select(s => s.id).FirstOrDefault();
                var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
                if (FacultyEditLinkId != 0)
                {
                    jntuh_college_links_assigned facultyedit = db.jntuh_college_links_assigned.Where(l => l.linkId == FacultyEditLinkId && l.academicyearId == prAy && l.isActive == true && l.fromdate <= todayDate && l.todate >= todayDate).Select(s => s).FirstOrDefault();
                    if (facultyedit != null)
                    {
                        TempData["ShowEditButton"] = true;
                    }
                    else
                        return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
                }
            }
            else
            {
                return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            }

            //string fregno =
            //        db.jntuh_registered_faculty.Where(i => i.id == fID && i.type != "Adjunct" && i.isActive != false)
            //            .Select(s => s.RegistrationNumber)
            //            .FirstOrDefault();
            //string editregno =
            //  db.jntuh_college_faculty_registered_copy.Where(e => e.RegistrationNumber == fregno && e.collegeId == 375)
            //      .Select(s => s.RegistrationNumber)
            //      .FirstOrDefault();
            //if (!string.IsNullOrEmpty(editregno))
            //{
            //    TempData["EDITERROR"] = "You don't have permissions to Edit";
            //    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //}


            #region Dropdown Lists
            List<DistinctDepartment> depts = new List<DistinctDepartment>();
            string existingDepts = string.Empty;

            int[] notRequiredIds = { 25, 26, 27, 33, 34, 36, 37, 38, 39, 53, 54, 55, 56 };
            var jntuh_departments = db.jntuh_department.Select(D => D).ToList();

            var jntuh_department = db.jntuh_department.AsNoTracking().ToList();
            foreach (var item in jntuh_department.Where(s => !notRequiredIds.Contains(s.id)).OrderBy(s => s.departmentName))
            {
                if (!existingDepts.Contains(item.departmentName))
                {
                    depts.Add(new DistinctDepartment { id = item.id, departmentName = item.departmentName });
                    existingDepts = existingDepts + "," + item.departmentName;
                }
            }

            ViewBag.department = depts;
            ViewBag.designation = db.jntuh_designation.Where(c => c.isActive == true).ToList();
            ViewBag.Institutions = db.jntuh_college.Where(c => c.isActive == true && c.id != 375).Select(c => new { CollegeId = c.id, CollegeName = c.collegeCode + "-" + c.collegeName }).OrderBy(c => c.CollegeName).ToList();

            List<SelectListItem> ratifiedDuration = new List<SelectListItem>();
            for (int i = 1; i <= 10; i++)
            {
                ratifiedDuration.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.duration = ratifiedDuration;

            List<SelectListItem> prevExperience = new List<SelectListItem>();
            for (int i = 0; i <= 40; i++)
            {
                prevExperience.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.prevExperience = prevExperience;

            List<SelectListItem> years = new List<SelectListItem>();
            for (int i = 1940; i <= DateTime.Now.Year; i++)
            {
                years.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.years = years;

            List<SelectListItem> division = new List<SelectListItem>();
            for (int i = 1; i <= 5; i++)
            {
                division.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }

            ViewBag.division = division;


            var PGDeptIds = db.jntuh_degree.Join(db.jntuh_department, d => d.id, de => de.degreeId, (d, de) => new { d = d, de = de }).Where(e => e.d.id != 4 && e.d.id != 5).Select(e => e.de.id).ToArray();

            int[] OthersSpecialization = { 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166 };
            var pgSpecializations = db.jntuh_specialization.Where(e => e.isActive == true && !OthersSpecialization.Contains(e.id) && PGDeptIds.Contains(e.departmentId) || e.id == 154).Select(e => new { id = e.id, spec = e.specializationName }).OrderBy(e => e.spec).ToList();
            ViewBag.PGSpecializations = pgSpecializations;
            #endregion

            ViewBag.FacultyID = fID;
            faculty.id = fID;
            string photoPath = "~/Content/Upload/Faculty/PHOTOS";
            string panCardsPath = "~/Content/Upload/Faculty/PANCARDS";
            string aadhaarCardsPath = "~/Content/Upload/Faculty/AADHAARCARDS";
            string proceedingsPath = "~/Content/Upload/Faculty/PROCEEDINGS";
            string certificatesPath = "~/Content/Upload/Faculty/CERTIFICATES";
            string IncomeTaxcertificatesPath = "~/Content/Upload/Faculty/INCOMETAX";
            string PhdUndertakingcertificatesPath = "~/Content/Upload/Faculty/PHDUndertaking";
            string AllcertificatesPath = "~/Content/Upload/Faculty/CERTIFICATES/CertificatesPDF";

            // fID = 9155;
            try
            {
                if (ModelState.IsValid == true)
                {
                    if (faculty.facultyDateOfBirth != null)
                        faculty.facultyDateOfBirth = UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.facultyDateOfBirth);
                    if (faculty.facultyDateOfAppointment != null)
                        faculty.facultyDateOfAppointment =
                            UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.facultyDateOfAppointment);

                    jntuh_registered_faculty jntuh_registered_faculty = db.jntuh_registered_faculty.Where(a => a.id == fID).Select(e => e).FirstOrDefault();

                    UserId = jntuh_registered_faculty.UserId;

                    jntuh_registered_faculty.id = fID;
                    jntuh_registered_faculty.FirstName = faculty.FirstName;
                    jntuh_registered_faculty.MiddleName = faculty.MiddleName;
                    jntuh_registered_faculty.LastName = faculty.LastName;
                    jntuh_registered_faculty.GenderId = faculty.GenderId == null ? 0 : (int)faculty.GenderId;
                    jntuh_registered_faculty.FatherOrHusbandName = faculty.FatherOrhusbandName;
                    jntuh_registered_faculty.MotherName = faculty.MotherName;
                    jntuh_registered_faculty.DateOfBirth = Convert.ToDateTime(faculty.facultyDateOfBirth);
                    //jntuh_registered_faculty.DesignationId = faculty.DesignationId;
                    //jntuh_registered_faculty.OtherDesignation = faculty.OtherDesignation;
                    //jntuh_registered_faculty.DepartmentId = faculty.DepartmentId;
                    //jntuh_registered_faculty.OtherDepartment = faculty.OtherDepartment;
                    //jntuh_registered_faculty.grosssalary = faculty.GrossSalary;
                    //jntuh_registered_faculty.DateOfAppointment = faculty.DateOfAppointment == null ? Convert.ToDateTime(faculty.facultyDateOfAppointment) : Convert.ToDateTime(faculty.DateOfAppointment);
                    //jntuh_registered_faculty.ProceedingsNumber = faculty.ProceedingsNo;
                    jntuh_registered_faculty.AICTEFacultyId = faculty.AICTEFacultyId;
                    //jntuh_registered_faculty.TotalExperience = faculty.TotalExperience;
                    //jntuh_registered_faculty.TotalExperiencePresentCollege = faculty.TotalExperiencePresentCollege;
                    jntuh_registered_faculty.PANNumber = faculty.EditPANNumber;

                    if (faculty.PanStatus != "E")
                    {
                        jntuh_registered_faculty.PanStatus =
                            db.jntuh_pan_status.Where(p => p.PANNumber == faculty.EditPANNumber && p.PANStatus == "E")
                                .Select(s => s.PANStatus)
                                .FirstOrDefault();
                    }
                    if (jntuh_registered_faculty.PanStatus != "E")
                    {
                        jntuh_registered_faculty.PanStatus =
                            db.jntuh_pan_status.Where(p => p.PANNumber == faculty.EditPANNumber && p.PANStatus == "E")
                                .Select(s => s.PANStatus)
                                .FirstOrDefault();
                        if (jntuh_registered_faculty.PanStatus == null)
                        {
                            jntuh_registered_faculty.PanStatus = faculty.PanStatus;
                        }
                    }

                    jntuh_registered_faculty.AadhaarNumber = faculty.EditAadhaarNumber;
                    jntuh_registered_faculty.Mobile = faculty.EditMobile;
                    jntuh_registered_faculty.Email = faculty.EditEmail;
                    jntuh_registered_faculty.WorkingType = String.IsNullOrEmpty(faculty.facultyCategory) ? faculty.facultyCategory : faculty.facultyCategory.Trim();
                    jntuh_registered_faculty.National = faculty.National;
                    jntuh_registered_faculty.Citation = faculty.Citation;
                    jntuh_registered_faculty.Awards = faculty.Awards;
                    jntuh_registered_faculty.InterNational = faculty.InterNational;
                    jntuh_registered_faculty.updatedOn = DateTime.Now; ;
                    jntuh_registered_faculty.updatedBy = UserId;


                    #region Faculty All Certificates Saving Code

                    //SCM Document Saving
                    if (faculty.SelectionCommitteeProceedingsDocument != null)
                    {
                        if (!Directory.Exists(Server.MapPath(proceedingsPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(proceedingsPath));
                        }
                        var ext = Path.GetExtension(faculty.SelectionCommitteeProceedingsDocument.FileName);

                        if (ext.ToUpper().Equals(".PDF") || ext.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" + faculty.LastName.Substring(0, 1);
                            faculty.SelectionCommitteeProceedingsDocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(proceedingsPath), fileName, ext));
                            faculty.SelectionCommitteeProcedings = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.SelectionCommitteeProcedings = faculty.SelectionCommitteeProcedings;
                    }

                    //Photo Document Saving
                    if (faculty.Photo != null)
                    {
                        if (!Directory.Exists(Server.MapPath(photoPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(photoPath));
                        }
                        var ext = Path.GetExtension(faculty.Photo.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" + faculty.LastName.Substring(0, 1);
                            faculty.Photo.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(photoPath), fileName, ext));
                            faculty.facultyPhoto = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.facultyPhoto = faculty.facultyPhoto;
                    }

                    //Aadhaar Card Document Saving
                    if (faculty.AadhaarCardDocument != null)
                    {
                        if (!Directory.Exists(Server.MapPath(aadhaarCardsPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(aadhaarCardsPath));
                        }
                        var ext = Path.GetExtension(faculty.AadhaarCardDocument.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" + faculty.LastName.Substring(0, 1);
                            faculty.AadhaarCardDocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(aadhaarCardsPath), fileName, ext));
                            faculty.facultyAadhaarCardDocument = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.facultyAadhaarCardDocument = faculty.facultyAadhaarCardDocument;
                    }

                    //PAN Card Document Saving
                    if (faculty.PANCardDocument != null)
                    {
                        if (!Directory.Exists(Server.MapPath(panCardsPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(panCardsPath));
                        }
                        var ext = Path.GetExtension(faculty.PANCardDocument.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" + faculty.LastName.Substring(0, 1);
                            faculty.PANCardDocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(panCardsPath), fileName, ext));
                            faculty.facultyPANCardDocument = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.facultyPANCardDocument = faculty.facultyPANCardDocument;
                    }

                    //IncomeTaxFile/Form16 Document Saving
                    if (faculty.IncomeTaxFileUpload != null)
                    {
                        if (!Directory.Exists(Server.MapPath(IncomeTaxcertificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(IncomeTaxcertificatesPath));
                        }

                        var ext = Path.GetExtension(faculty.IncomeTaxFileUpload.FileName);

                        if (ext.ToUpper().Equals(".PDF") || ext.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" + faculty.FirstName.Substring(0, 1) + "-" + faculty.LastName.Substring(0, 1);
                            faculty.IncomeTaxFileUpload.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(IncomeTaxcertificatesPath), fileName, ext));
                            faculty.IncomeTaxFileview = string.Format("{0}{1}", fileName, ext);

                        }
                    }
                    else
                    {
                        faculty.IncomeTaxFileview = faculty.IncomeTaxFileview;
                    }



                    //jntuh_registered_faculty.ProceedingDocument = faculty.SelectionCommitteeProcedings;
                    jntuh_registered_faculty.Photo = faculty.facultyPhoto;
                    jntuh_registered_faculty.AadhaarDocument = faculty.facultyAadhaarCardDocument;
                    jntuh_registered_faculty.PANDocument = faculty.facultyPANCardDocument;
                    //jntuh_registered_faculty.IncometaxDocument = faculty.IncomeTaxFileview;
                    // jntuh_registered_faculty.OrganizationName = faculty.faculty_AllCertificates;
                    #endregion

                    db.Entry(jntuh_registered_faculty).State = EntityState.Modified;
                    db.SaveChanges();

                    //throw new Exception(null);

                    #region Faculty Education Details Saving

                    List<jntuh_registered_faculty_education> education = db.jntuh_registered_faculty_education.Where(e => e.facultyId == faculty.id).Select(e => e).ToList();

                    #region Education Certificates Saving

                    //SSC Certificate Saving
                    if (faculty.SSC_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.SSC_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.SSC_studiedEducation;
                            faculty.SSC_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.SSC_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.SSC_facultyCertificate = faculty.SSC_facultyCertificate;
                    }

                    //UG Certificate Saving
                    if (faculty.UG_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.UG_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.UG_studiedEducation;
                            faculty.UG_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.UG_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.UG_facultyCertificate = faculty.UG_facultyCertificate;
                    }

                    //PG Certificate Saving
                    if (faculty.PG_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.PG_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.PG_studiedEducation;
                            faculty.PG_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.PG_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.PG_facultyCertificate = faculty.PG_facultyCertificate;
                    }

                    //M.Phil Certificate Saving
                    if (faculty.MPhil_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.MPhil_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.MPhil_studiedEducation;
                            faculty.MPhil_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.MPhil_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.MPhil_facultyCertificate = faculty.MPhil_facultyCertificate;
                    }

                    //NET/SELT Certificate Saving
                    if (faculty.NET_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.NET_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.NET_studiedEducation;
                            faculty.NET_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.NET_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.NET_facultyCertificate = faculty.NET_facultyCertificate;
                    }

                    //Ph.D Certificate Saving
                    if (faculty.PhD_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.PhD_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.PhD_studiedEducation;
                            faculty.PhD_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.PhD_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.PhD_facultyCertificate = faculty.PhD_facultyCertificate;
                    }

                    //All CertificatePDF Saving
                    if (faculty.All_Certificates != null)
                    {
                        if (!Directory.Exists(Server.MapPath(AllcertificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(AllcertificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.All_Certificates.FileName);

                        if (ext.ToUpper().Equals(".PDF") || ext.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_All";
                            faculty.All_Certificates.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(AllcertificatesPath),
                                fileName, ext));
                            faculty.faculty_AllCertificates = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.faculty_AllCertificates = faculty.faculty_AllCertificates;
                    }

                    #endregion

                    for (int i = 1; i <= 7; i++)
                    {
                        //SSC
                        if (i == 1)
                        {
                            jntuh_registered_faculty_education SSC = education.Where(e => e.educationId == 1).Select(e => e).FirstOrDefault();

                            if (SSC != null)
                            {

                                SSC.facultyId = fID;
                                SSC.educationId = 1;
                                //SSC.hallticketnumber = string.IsNullOrEmpty(faculty.SSC_HallticketNo) ? SSC.hallticketnumber : faculty.SSC_HallticketNo.Trim();
                                SSC.hallticketnumber = string.IsNullOrEmpty(faculty.SSC_HallticketNo) ? string.Empty : faculty.SSC_HallticketNo.Trim();
                                //SSC.hallticketnumber = string.IsNullOrEmpty(faculty.SSC_HallticketNo) ? 0 : faculty.SSC_HallticketNo.Trim();
                                SSC.courseStudied = string.IsNullOrEmpty(faculty.SSC_studiedEducation) ? SSC.courseStudied : faculty.SSC_studiedEducation.Trim();
                                SSC.specialization = string.IsNullOrEmpty(faculty.SSC_specialization) ? SSC.specialization : faculty.SSC_specialization.Trim();
                                SSC.passedYear = faculty.SSC_passedYear == null ? SSC.passedYear : (int)faculty.SSC_passedYear;
                                SSC.marksPercentage = faculty.SSC_percentage == null ? SSC.marksPercentage : (decimal)faculty.SSC_percentage;
                                SSC.division = faculty.SSC_division == null ? SSC.division : (int)faculty.SSC_division;
                                SSC.boardOrUniversity = string.IsNullOrEmpty(faculty.SSC_university) ? SSC.boardOrUniversity : faculty.SSC_university.Trim();
                                SSC.placeOfEducation = string.IsNullOrEmpty(faculty.SSC_place) ? SSC.placeOfEducation : faculty.SSC_place.Trim();
                                SSC.certificate = faculty.SSC_facultyCertificate;
                                SSC.isActive = false;
                                SSC.updatedBy = UserId;
                                SSC.updatedOn = DateTime.Now;
                                db.Entry(SSC).State = EntityState.Modified;
                                db.SaveChanges();


                            }
                            else
                            {
                                if (faculty.SSC_certificate != null)
                                {
                                    jntuh_registered_faculty_education SSCEducation = new jntuh_registered_faculty_education();
                                    SSCEducation.facultyId = fID;
                                    SSCEducation.educationId = 1;
                                    SSCEducation.hallticketnumber = string.IsNullOrEmpty(faculty.SSC_HallticketNo) ? faculty.SSC_HallticketNo : faculty.SSC_HallticketNo.Trim();
                                    SSCEducation.courseStudied = string.IsNullOrEmpty(faculty.SSC_studiedEducation) ? faculty.SSC_studiedEducation : faculty.SSC_studiedEducation.Trim();
                                    SSCEducation.specialization = string.IsNullOrEmpty(faculty.SSC_specialization) ? faculty.SSC_specialization : faculty.SSC_specialization.Trim();
                                    SSCEducation.passedYear = faculty.SSC_passedYear == null ? 0 : (int)faculty.SSC_passedYear;
                                    SSCEducation.marksPercentage = faculty.SSC_percentage == null ? 0 : (decimal)faculty.SSC_percentage;
                                    SSCEducation.division = faculty.SSC_division == null ? 0 : (int)faculty.SSC_division;
                                    SSCEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.SSC_university) ? faculty.SSC_university : faculty.SSC_university.Trim();
                                    SSCEducation.placeOfEducation = string.IsNullOrEmpty(faculty.SSC_place) ? faculty.SSC_place : faculty.SSC_place.Trim();
                                    SSCEducation.certificate = faculty.SSC_facultyCertificate;
                                    SSCEducation.isActive = false;
                                    SSCEducation.createdBy = UserId;
                                    SSCEducation.createdOn = DateTime.Now;
                                    SSCEducation.updatedBy = null;
                                    SSCEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(SSCEducation);
                                    db.SaveChanges();
                                }
                            }
                        }
                        else if (i == 2)
                        {
                            jntuh_registered_faculty_education UG = education.Where(e => e.educationId == 3).Select(e => e).FirstOrDefault();

                            //UG
                            if (UG != null)
                            {
                                UG.facultyId = fID;
                                UG.educationId = 3;
                                UG.hallticketnumber = string.IsNullOrEmpty(faculty.UG_HallticketNo) ? UG.hallticketnumber : faculty.UG_HallticketNo.Trim();
                                UG.courseStudied = string.IsNullOrEmpty(faculty.UG_studiedEducation) ? UG.courseStudied : faculty.UG_studiedEducation.Trim();
                                UG.specialization = string.IsNullOrEmpty(faculty.UG_specialization) ? UG.specialization : faculty.UG_specialization.Trim();
                                UG.passedYear = faculty.UG_passedYear == null ? UG.passedYear : (int)faculty.UG_passedYear;
                                UG.marksPercentage = faculty.UG_percentage == null ? UG.marksPercentage : (decimal)faculty.UG_percentage;
                                UG.division = faculty.UG_division == null ? UG.division : (int)faculty.UG_division;
                                UG.boardOrUniversity = string.IsNullOrEmpty(faculty.UG_university) ? UG.boardOrUniversity : faculty.UG_university.Trim();
                                UG.placeOfEducation = string.IsNullOrEmpty(faculty.UG_place) ? UG.placeOfEducation : faculty.UG_place.Trim();
                                UG.certificate = faculty.UG_facultyCertificate;
                                UG.isActive = false;
                                UG.updatedBy = UserId;
                                UG.updatedOn = DateTime.Now;
                                db.Entry(UG).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.UG_certificate != null)
                                {
                                    jntuh_registered_faculty_education UGEducation = new jntuh_registered_faculty_education();

                                    UGEducation.facultyId = fID;
                                    UGEducation.educationId = 3;
                                    UGEducation.hallticketnumber = string.IsNullOrEmpty(faculty.UG_HallticketNo) ? faculty.UG_HallticketNo : faculty.UG_HallticketNo.Trim();
                                    UGEducation.courseStudied = string.IsNullOrEmpty(faculty.UG_studiedEducation) ? faculty.UG_studiedEducation : faculty.UG_studiedEducation.Trim(); ;
                                    UGEducation.specialization = string.IsNullOrEmpty(faculty.UG_specialization) ? faculty.UG_specialization : faculty.UG_specialization.Trim();
                                    UGEducation.passedYear = faculty.UG_passedYear == null ? 0 : (int)faculty.UG_passedYear;
                                    UGEducation.marksPercentage = faculty.UG_percentage == null ? 0 : (decimal)faculty.UG_percentage;
                                    UGEducation.division = faculty.UG_division == null ? 0 : (int)faculty.UG_division;
                                    UGEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.UG_university) ? faculty.UG_university : faculty.UG_university.Trim();
                                    UGEducation.placeOfEducation = string.IsNullOrEmpty(faculty.UG_place) ? faculty.UG_place : faculty.UG_place.Trim();
                                    UGEducation.certificate = faculty.UG_facultyCertificate;
                                    UGEducation.isActive = false;
                                    UGEducation.createdBy = UserId;
                                    UGEducation.createdOn = DateTime.Now;
                                    UGEducation.updatedBy = null;
                                    UGEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(UGEducation);
                                    db.SaveChanges();
                                }
                            }

                        }
                        else if (i == 3)
                        {
                            jntuh_registered_faculty_education PG = education.Where(e => e.educationId == 4).Select(e => e).FirstOrDefault();

                            //PG
                            if (PG != null)
                            {
                                PG.facultyId = fID;
                                PG.educationId = 4;
                                PG.hallticketnumber = string.IsNullOrEmpty(faculty.PG_HallticketNo) ? PG.hallticketnumber : faculty.PG_HallticketNo.Trim();
                                PG.courseStudied = string.IsNullOrEmpty(faculty.PG_studiedEducation) ? PG.courseStudied : faculty.PG_studiedEducation.Trim();
                                PG.specialization = string.IsNullOrEmpty(faculty.PG_specialization) ? PG.specialization : faculty.PG_specialization.Trim();
                                PG.passedYear = faculty.PG_passedYear == null ? PG.passedYear : (int)faculty.PG_passedYear;
                                PG.marksPercentage = faculty.PG_percentage == null ? PG.marksPercentage : (decimal)faculty.PG_percentage;
                                PG.division = faculty.PG_division == null ? PG.division : (int)faculty.PG_division;
                                PG.boardOrUniversity = string.IsNullOrEmpty(faculty.PG_university) ? PG.boardOrUniversity : faculty.PG_university.Trim();
                                PG.placeOfEducation = string.IsNullOrEmpty(faculty.PG_place) ? PG.placeOfEducation : faculty.PG_place.Trim();
                                PG.certificate = faculty.PG_facultyCertificate;
                                PG.isActive = false;
                                PG.updatedBy = UserId;
                                PG.updatedOn = DateTime.Now;
                                db.Entry(PG).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.PG_certificate != null)
                                {
                                    jntuh_registered_faculty_education PGEducation = new jntuh_registered_faculty_education();
                                    PGEducation.facultyId = fID;
                                    PGEducation.educationId = 4;
                                    PGEducation.hallticketnumber = string.IsNullOrEmpty(faculty.PG_HallticketNo) ? faculty.PG_HallticketNo : faculty.PG_HallticketNo.Trim();
                                    PGEducation.courseStudied = string.IsNullOrEmpty(faculty.PG_studiedEducation) ? faculty.PG_studiedEducation : faculty.PG_studiedEducation.Trim();
                                    PGEducation.specialization = string.IsNullOrEmpty(faculty.PG_specialization) ? faculty.PG_specialization : faculty.PG_specialization.Trim();
                                    PGEducation.passedYear = faculty.PG_passedYear == null ? 0 : (int)faculty.PG_passedYear;
                                    PGEducation.marksPercentage = faculty.PG_percentage == null ? 0 : (decimal)faculty.PG_percentage;
                                    PGEducation.division = faculty.PG_division == null ? 0 : (int)faculty.PG_division;
                                    PGEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.PG_university) ? faculty.PG_university : faculty.PG_university.Trim();
                                    PGEducation.placeOfEducation = string.IsNullOrEmpty(faculty.PG_place) ? faculty.PG_place : faculty.PG_place.Trim();
                                    PGEducation.certificate = faculty.PG_facultyCertificate;
                                    PGEducation.isActive = false;
                                    PGEducation.createdBy = UserId;
                                    PGEducation.createdOn = DateTime.Now;
                                    PGEducation.updatedBy = null;
                                    PGEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(PGEducation);
                                    db.SaveChanges();
                                }
                            }
                        }
                        else if (i == 4)
                        {
                            jntuh_registered_faculty_education MPhil = education.Where(e => e.educationId == 5).Select(e => e).FirstOrDefault();

                            //MPhil
                            if (MPhil != null)
                            {
                                MPhil.facultyId = fID;
                                MPhil.educationId = 5;
                                MPhil.hallticketnumber = string.IsNullOrEmpty(faculty.MPhil_HallticketNo) ? MPhil.hallticketnumber : faculty.MPhil_HallticketNo.Trim();
                                MPhil.courseStudied = string.IsNullOrEmpty(faculty.MPhil_studiedEducation) ? MPhil.courseStudied : faculty.MPhil_studiedEducation.Trim();
                                MPhil.specialization = string.IsNullOrEmpty(faculty.MPhil_specialization) ? MPhil.specialization : faculty.MPhil_specialization.Trim();
                                MPhil.passedYear = faculty.MPhil_passedYear == null ? MPhil.passedYear : (int)faculty.MPhil_passedYear;
                                MPhil.marksPercentage = faculty.MPhil_percentage == null ? MPhil.marksPercentage : (decimal)faculty.MPhil_percentage;
                                MPhil.division = faculty.MPhil_division == null ? MPhil.division : (int)faculty.MPhil_division;
                                MPhil.boardOrUniversity = string.IsNullOrEmpty(faculty.MPhil_university) ? MPhil.boardOrUniversity : faculty.MPhil_university.Trim();
                                MPhil.placeOfEducation = string.IsNullOrEmpty(faculty.MPhil_place) ? MPhil.placeOfEducation : faculty.MPhil_place.Trim();
                                MPhil.certificate = faculty.MPhil_facultyCertificate;
                                MPhil.isActive = false;
                                MPhil.updatedBy = UserId;
                                MPhil.updatedOn = DateTime.Now;
                                db.Entry(MPhil).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.MPhil_certificate != null)
                                {
                                    jntuh_registered_faculty_education MPhilEducation = new jntuh_registered_faculty_education();
                                    MPhilEducation.facultyId = fID;
                                    MPhilEducation.educationId = 5;
                                    MPhilEducation.hallticketnumber = string.IsNullOrEmpty(faculty.MPhil_HallticketNo) ? faculty.MPhil_HallticketNo : faculty.MPhil_HallticketNo.Trim();
                                    MPhilEducation.courseStudied = string.IsNullOrEmpty(faculty.MPhil_studiedEducation) ? faculty.MPhil_studiedEducation : faculty.MPhil_studiedEducation.Trim();
                                    MPhilEducation.specialization = string.IsNullOrEmpty(faculty.MPhil_specialization) ? faculty.MPhil_specialization : faculty.MPhil_specialization.Trim();
                                    MPhilEducation.passedYear = faculty.MPhil_passedYear == null ? 0 : (int)faculty.MPhil_passedYear;
                                    MPhilEducation.marksPercentage = faculty.MPhil_percentage == null ? 0 : (decimal)faculty.MPhil_percentage;
                                    MPhilEducation.division = faculty.MPhil_division == null ? 0 : (int)faculty.MPhil_division;
                                    MPhilEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.MPhil_university) ? faculty.MPhil_university : faculty.MPhil_university.Trim();
                                    MPhilEducation.placeOfEducation = string.IsNullOrEmpty(faculty.MPhil_place) ? faculty.MPhil_place : faculty.MPhil_place.Trim();
                                    MPhilEducation.certificate = faculty.MPhil_facultyCertificate;
                                    MPhilEducation.isActive = false;
                                    MPhilEducation.createdBy = UserId;
                                    MPhilEducation.createdOn = DateTime.Now;
                                    MPhilEducation.updatedBy = null;
                                    MPhilEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(MPhilEducation);
                                    db.SaveChanges();
                                }
                            }

                        }
                        else if (i == 5)
                        {
                            jntuh_registered_faculty_education PhD = education.Where(e => e.educationId == 6).Select(e => e).FirstOrDefault();

                            //PhD
                            if (PhD != null)
                            {
                                PhD.facultyId = fID;
                                PhD.educationId = 6;
                                PhD.hallticketnumber = string.IsNullOrEmpty(faculty.PhD_HallticketNo) ? PhD.hallticketnumber : faculty.PhD_HallticketNo.Trim();
                                PhD.courseStudied = string.IsNullOrEmpty(faculty.PhD_studiedEducation) ? PhD.courseStudied : faculty.PhD_studiedEducation.Trim();
                                PhD.specialization = string.IsNullOrEmpty(faculty.PhD_specialization) ? PhD.specialization : faculty.PhD_specialization.Trim();
                                PhD.passedYear = faculty.PhD_passedYear == null ? PhD.passedYear : (int)faculty.PhD_passedYear;
                                PhD.marksPercentage = faculty.PhD_percentage == null ? PhD.marksPercentage : (decimal)faculty.PhD_percentage;
                                PhD.division = faculty.PhD_division == null ? PhD.division : (int)faculty.PhD_division;
                                PhD.boardOrUniversity = string.IsNullOrEmpty(faculty.PhD_university) ? PhD.boardOrUniversity : faculty.PhD_university.Trim();
                                PhD.placeOfEducation = string.IsNullOrEmpty(faculty.PhD_place) ? PhD.placeOfEducation : faculty.PhD_place.Trim();
                                PhD.certificate = faculty.PhD_facultyCertificate;
                                PhD.isActive = false;
                                PhD.updatedBy = UserId;
                                PhD.updatedOn = DateTime.Now;
                                db.Entry(PhD).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.PhD_certificate != null)
                                {
                                    jntuh_registered_faculty_education PhDEducation = new jntuh_registered_faculty_education();
                                    PhDEducation.facultyId = fID;
                                    PhDEducation.educationId = 6;
                                    PhDEducation.hallticketnumber = string.IsNullOrEmpty(faculty.PhD_HallticketNo) ? faculty.PhD_HallticketNo : faculty.PhD_HallticketNo.Trim();
                                    PhDEducation.courseStudied = string.IsNullOrEmpty(faculty.PhD_studiedEducation) ? faculty.PhD_studiedEducation : faculty.PhD_studiedEducation.Trim();
                                    PhDEducation.specialization = string.IsNullOrEmpty(faculty.PhD_specialization) ? faculty.PhD_specialization : faculty.PhD_specialization.Trim();
                                    PhDEducation.passedYear = faculty.PhD_passedYear == null ? 0 : (int)faculty.PhD_passedYear;
                                    PhDEducation.marksPercentage = faculty.PhD_percentage == null ? 0 : (decimal)faculty.PhD_percentage;
                                    PhDEducation.division = faculty.PhD_division == null ? 0 : (int)faculty.PhD_division;
                                    PhDEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.PhD_university) ? faculty.PhD_university : faculty.PhD_university.Trim();
                                    PhDEducation.placeOfEducation = string.IsNullOrEmpty(faculty.PhD_place) ? faculty.PhD_place : faculty.PhD_place.Trim();
                                    PhDEducation.certificate = faculty.PhD_facultyCertificate;
                                    PhDEducation.isActive = false;
                                    PhDEducation.createdBy = UserId;
                                    PhDEducation.createdOn = DateTime.Now;
                                    PhDEducation.updatedBy = null;
                                    PhDEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(PhDEducation);
                                    db.SaveChanges();
                                }
                            }
                        }
                        else if (i == 7)
                        {
                            jntuh_registered_faculty_education net = education.Where(e => e.educationId == 9).Select(e => e).FirstOrDefault();

                            //PhD
                            if (net != null)
                            {
                                net.facultyId = fID;
                                net.educationId = 9;
                                net.hallticketnumber = string.IsNullOrEmpty(faculty.NET_HallticketNo) ? net.hallticketnumber : faculty.NET_HallticketNo.Trim();
                                net.courseStudied = string.IsNullOrEmpty(faculty.NET_studiedEducation) ? net.courseStudied : faculty.NET_studiedEducation.Trim();
                                net.specialization = string.IsNullOrEmpty(faculty.NET_specialization) ? net.specialization : faculty.NET_specialization.Trim();
                                net.passedYear = faculty.NET_passedYear == null ? net.passedYear : (int)faculty.NET_passedYear;
                                net.marksPercentage = faculty.NET_percentage == null ? net.marksPercentage : (decimal)faculty.NET_percentage;
                                net.division = faculty.NET_division == null ? net.division : (int)faculty.NET_division;
                                net.boardOrUniversity = string.IsNullOrEmpty(faculty.NET_university) ? net.boardOrUniversity : faculty.NET_university.Trim();
                                net.placeOfEducation = string.IsNullOrEmpty(faculty.NET_place) ? net.placeOfEducation : faculty.NET_place.Trim();
                                net.certificate = faculty.NET_facultyCertificate;
                                net.isActive = false;
                                net.updatedBy = UserId;
                                net.updatedOn = DateTime.Now;
                                db.Entry(net).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.NET_certificate != null)
                                {
                                    jntuh_registered_faculty_education NETEducation = new jntuh_registered_faculty_education();
                                    NETEducation.facultyId = fID;
                                    NETEducation.educationId = 9;
                                    NETEducation.hallticketnumber = string.IsNullOrEmpty(faculty.NET_HallticketNo) ? faculty.NET_HallticketNo : faculty.NET_HallticketNo.Trim();
                                    NETEducation.courseStudied = string.IsNullOrEmpty(faculty.NET_studiedEducation) ? faculty.NET_studiedEducation : faculty.NET_studiedEducation.Trim();
                                    NETEducation.specialization = string.IsNullOrEmpty(faculty.NET_specialization) ? faculty.NET_specialization : faculty.NET_specialization.Trim();
                                    NETEducation.passedYear = faculty.NET_passedYear == null ? 0 : (int)faculty.NET_passedYear;
                                    NETEducation.marksPercentage = faculty.NET_percentage == null ? 0 : (decimal)faculty.NET_percentage;
                                    NETEducation.division = faculty.NET_division == null ? 0 : (int)faculty.NET_division;
                                    NETEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.NET_university) ? faculty.NET_university : faculty.NET_university.Trim();
                                    NETEducation.placeOfEducation = string.IsNullOrEmpty(faculty.NET_place) ? faculty.NET_place : faculty.NET_place.Trim();
                                    NETEducation.certificate = faculty.NET_facultyCertificate;
                                    NETEducation.isActive = false;
                                    NETEducation.createdBy = UserId;
                                    NETEducation.createdOn = DateTime.Now;
                                    NETEducation.updatedBy = null;
                                    NETEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(NETEducation);
                                    db.SaveChanges();
                                }
                            }
                        }
                        else if (i == 6)
                        {
                            jntuh_registered_faculty_education Others = education.Where(e => e.educationId == 8).Select(e => e).FirstOrDefault();

                            //PhD
                            if (Others != null)
                            {
                                Others.facultyId = fID;
                                Others.educationId = 8;
                                //Others.courseStudied = faculty.PhD_studiedEducation;
                                //Others.specialization = faculty.PhD_specialization;
                                //Others.passedYear = faculty.PhD_passedYear == null ? 0 : (int)faculty.PhD_passedYear;
                                //Others.marksPercentage = faculty.PhD_percentage == null ? 0 : (decimal)faculty.PhD_percentage;
                                //Others.division = faculty.PhD_division == null ? 0 : (int)faculty.PhD_division;
                                //Others.boardOrUniversity = faculty.PhD_university;
                                //Others.placeOfEducation = faculty.PhD_place;
                                Others.certificate = faculty.faculty_AllCertificates;
                                Others.isActive = false;
                                Others.updatedBy = UserId;
                                Others.updatedOn = DateTime.Now;
                                db.Entry(Others).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.All_Certificates != null)
                                {
                                    jntuh_registered_faculty_education otherCertificate = new jntuh_registered_faculty_education();
                                    otherCertificate.facultyId = fID;
                                    otherCertificate.educationId = 8;
                                    otherCertificate.hallticketnumber = "Others";
                                    otherCertificate.courseStudied = "Others";
                                    otherCertificate.specialization = "Others";
                                    otherCertificate.passedYear = 0;
                                    otherCertificate.marksPercentage = 0;
                                    otherCertificate.division = 0;
                                    otherCertificate.boardOrUniversity = "Others";
                                    otherCertificate.placeOfEducation = "Others";
                                    otherCertificate.certificate = faculty.faculty_AllCertificates;
                                    otherCertificate.isActive = false;
                                    otherCertificate.createdBy = UserId;
                                    otherCertificate.createdOn = DateTime.Now;
                                    otherCertificate.updatedBy = null;
                                    otherCertificate.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(otherCertificate);
                                    db.SaveChanges();
                                }
                            }
                        }
                    }

                    #endregion

                    TempData["SUCCESS"] = "Faculty information updated successfully ";
                    TempData["ViewEditButton"] = null;
                    if (fID > 0)
                    {
                        fid = UAAAS.Models.Utilities.EncryptString(fID.ToString(),
                            WebConfigurationManager.AppSettings["CryptoKey"]);
                    }
                    return RedirectToAction("ViewFacultyDetails", new { fid = fid });
                }
                else
                {
                    var ModelErrorss = ModelState;
                    foreach (var item in ModelErrorss)
                    {
                        var key = item.Key;
                        var error = item.Value.Errors.Select(e => e.ErrorMessage).FirstOrDefault();
                        if (error == null || error == "")
                        {

                        }
                        else
                        {
                            TempData["ERROR"] = key + "-" + error;
                            break;
                        }

                    }
                    TempData["ERROR"] = "All edit fields are mandatory";
                    TempData["ViewEditButton"] = null;
                    if (fID > 0)
                    {
                        fid = UAAAS.Models.Utilities.EncryptString(fID.ToString(),
                            WebConfigurationManager.AppSettings["CryptoKey"]);
                    }

                    return RedirectToAction("ViewFacultyDetails", new { fid = fid });
                }

            }
            catch (Exception ex)
            {

                TempData["ERROR"] = "Technical issue: Upload/edit required data again";
                TempData["SUCCESS"] = null;
                TempData["ViewEditButton"] = "Show";
                if (fID > 0)
                {
                    fid = UAAAS.Models.Utilities.EncryptString(fID.ToString(),
                        WebConfigurationManager.AppSettings["CryptoKey"]);
                }

                return RedirectToAction("ViewFacultyDetails", new { fid = fid });
            }
        }

        //Faculty Edit for Clear Faculty on 20-02-2020
        [HttpGet]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult FacultyEditDetails(string fid)
        {
            int fID = 0;
            if (!string.IsNullOrEmpty(User.Identity.Name))
            {
                int userID = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
                int facultyId = db.jntuh_registered_faculty.Where(f => f.UserId == userID).Select(f => f.id).FirstOrDefault();

                if (fid != null)
                {
                    fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(fid, WebConfigurationManager.AppSettings["CryptoKey"]));
                    var facultyc = db.jntuh_registered_faculty.Where(f => f.id == fID).FirstOrDefault();
                    if (facultyc.UserId != userID)
                    {
                        fID = facultyc.id;
                    }
                }
                if (fID == 113698)
                {
                    fID = Convert.ToInt32(ConfigurationManager.AppSettings["testRegnumberfid"]);
                }
            }
            else
            {
                return RedirectToAction("Logon", "Account");
            }

            jntuh_college_links_assigned facultyedit = new jntuh_college_links_assigned();
            var todayDate = DateTime.Now;
            int actualYear = db.jntuh_academic_year.Where(a => a.isActive == true && a.isPresentAcademicYear == true).Select(a => a.actualYear).FirstOrDefault();
            int prAy =
                db.jntuh_academic_year.Where(a => a.actualYear == (actualYear + 1)).Select(s => s.id).FirstOrDefault();
            var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
            if (FacultyEditLinkId != 0)
            {
                facultyedit = db.jntuh_college_links_assigned.Where(l => l.linkId == FacultyEditLinkId && l.academicyearId == prAy && l.isActive == true && l.fromdate <= todayDate && l.todate >= todayDate).Select(s => s).FirstOrDefault();
                if (facultyedit == null)
                {
                    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
                }
            }

            // fID = 9155;
            //DateTime todayDate = DateTime.Now.Date;

            var jntuh_department = db.jntuh_department.AsNoTracking().ToList();
            var jntuh_degree = db.jntuh_degree.AsNoTracking().ToList();

            var jntuh_departments = (from a in jntuh_department
                                     join b in jntuh_degree on a.degreeId equals b.id
                                     select new
                                     {
                                         id = a.id,
                                         departmentName = a.departmentName
                                     }).ToList();

            List<DistinctDepartment> depts = new List<DistinctDepartment>();
            string existingDepts = string.Empty;
            int[] notRequiredIds = { 25, 26, 27, 33, 34, 36, 37, 38, 39, 53, 54, 55, 56 };
            foreach (var item in jntuh_department.Where(s => !notRequiredIds.Contains(s.id)).OrderBy(s => s.departmentName))
            {
                if (!existingDepts.Split(',').Contains(item.departmentName))
                {
                    depts.Add(new DistinctDepartment { id = item.id, departmentName = item.departmentName });
                    existingDepts = existingDepts + "," + item.departmentName;
                }
            }

            ViewBag.department = depts;
            ViewBag.designation = db.jntuh_designation.Where(c => c.isActive == true).ToList();
            ViewBag.Institutions = db.jntuh_college.Where(c => c.isActive == true && c.id != 375).Select(c => new { CollegeId = c.id, CollegeName = c.collegeCode + "-" + c.collegeName }).OrderBy(c => c.CollegeName).ToList();

            List<SelectListItem> ratifiedDuration = new List<SelectListItem>();
            for (int i = 1; i <= 10; i++)
            {
                ratifiedDuration.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.duration = ratifiedDuration;

            List<SelectListItem> prevExperience = new List<SelectListItem>();
            for (int i = 0; i <= 40; i++)
            {
                prevExperience.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.prevExperience = prevExperience;

            List<SelectListItem> years = new List<SelectListItem>();
            for (int i = 1940; i <= DateTime.Now.Year; i++)
            {
                years.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.years = years;

            List<SelectListItem> division = new List<SelectListItem>();
            for (int i = 1; i <= 5; i++)
            {
                division.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.division = division;

            var PGDeptIds = db.jntuh_degree.Join(db.jntuh_department, d => d.id, de => de.degreeId, (d, de) => new { d = d, de = de }).Where(e => e.d.id != 4 && e.d.id != 5).Select(e => e.de.id).ToArray();

            int[] OthersSpecialization = { 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166 };
            var pgSpecializations = db.jntuh_specialization.Where(e => e.isActive == true && !OthersSpecialization.Contains(e.id) && PGDeptIds.Contains(e.departmentId) || e.id == 154).Select(e => new { id = e.id, spec = e.specializationName }).OrderBy(e => e.spec).ToList();
            ViewBag.PGSpecializations = pgSpecializations;

            var jntuh_registered_faculty = db.jntuh_registered_faculty.Where(f => f.id == fID).ToList();

            var FlagsCheck = IsClearFaculty(jntuh_registered_faculty.Select(a => a.RegistrationNumber).FirstOrDefault());

            if (FlagsCheck)
            {
                return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            }
            if (facultyedit == null)
            {
                return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            }
            //else
            //{
            //    if (FlagsCheck)
            //    {

            //        var FacultyEducation = db.jntuh_registered_faculty_education.Where(e => e.facultyId == fID).ToList();
            //        if (FacultyEducation.Count == 0 || FacultyEducation.Count == 1 || FacultyEducation.Count == 2)
            //        {
            //        }
            //        else if (facultyedit != null)
            //        {
            //            //TempData["ShowEditButton"] = false;
            //        }
            //        else
            //        {
            //            return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //        }
            //    }
            //    else
            //        return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });

            //}


            string inactivereg = jntuh_registered_faculty.Where(i => i.id == fID && i.isActive != false).Select(s => s.RegistrationNumber).FirstOrDefault();
            if (String.IsNullOrEmpty(inactivereg))
            {
                TempData["ERROR"] = "Edit option not provided as this registration number was surrendered under multiple registrations";
                return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            }

            EditFacultyRegistration regFaculty = new EditFacultyRegistration();
            string fregnoa = jntuh_registered_faculty.Where(i => i.id == fID && (i.type == "Adjunct" || i.Blacklistfaculy == true || i.AbsentforVerification == true)).Select(s => s.RegistrationNumber).FirstOrDefault();
            if (!string.IsNullOrEmpty(fregnoa))
            {
                TempData["ERROR"] = "You don't have permissions to Edit";
                return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            }
            //else
            //{
            //    string fregno = jntuh_registered_faculty.Where(i => i.id == fID && i.isActive != false).Select(s => s.RegistrationNumber).FirstOrDefault();
            //    if (!string.IsNullOrEmpty(fregno))
            //    {
            //        string editregno = db.jntuh_college_faculty_registered_copy.Where(e => e.RegistrationNumber == fregno && e.collegeId == 375)
            //        .Select(s => s.RegistrationNumber)
            //        .FirstOrDefault();
            //        if (!string.IsNullOrEmpty(editregno))
            //        {
            //            TempData["ERROR"] = "The details of your profile with the submitted documents are in order and hence the edit option is not available to you.";
            //            return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //        }
            //    }
            //}

            // fID = 121577;
            var regno = jntuh_registered_faculty.Where(e => e.id == fID).Select(e => e.RegistrationNumber).FirstOrDefault();


            jntuh_registered_faculty faculty = db.jntuh_registered_faculty.Find(fID);
            regFaculty.id = fID;
            regFaculty.Type = faculty.type;
            regFaculty.NewPassword = "TEMP@PWD";
            regFaculty.ConfirmPassword = "TEMP@PWD";
            int facultyUserId = faculty.UserId;
            regFaculty.UserName = db.my_aspnet_users.Where(u => u.id == facultyUserId).Select(u => u.name).FirstOrDefault();
            regFaculty.RegistrationNumber = faculty.RegistrationNumber;
            regFaculty.UniqueID = faculty.UniqueID;
            regFaculty.FirstName = faculty.FirstName;
            regFaculty.MiddleName = faculty.MiddleName;
            regFaculty.LastName = faculty.LastName;
            regFaculty.GenderId = faculty.GenderId;
            regFaculty.FatherOrhusbandName = faculty.FatherOrHusbandName;
            regFaculty.MotherName = faculty.MotherName;
            //In DB Working Type Means Faculty Category Like: OC,SC,BC...
            regFaculty.facultyCategory = faculty.WorkingType;
            regFaculty.InCompleteCeritificates = faculty.IncompleteCertificates != null ? (bool)faculty.IncompleteCertificates : false;
            regFaculty.NOrelevantUgFlag = (faculty.NoRelevantUG == null || faculty.NoRelevantUG == "No") ? false : true;
            regFaculty.NOrelevantPgFlag = (faculty.NoRelevantPG == null || faculty.NoRelevantPG == "No") ? false : true;
            regFaculty.NOrelevantPhdFlag = (faculty.NORelevantPHD == null || faculty.NORelevantPHD == "No") ? false : true;
            regFaculty.XeroxcopyofcertificatesFlag = faculty.Xeroxcopyofcertificates != null ? (bool)faculty.Xeroxcopyofcertificates : false;
            regFaculty.OriginalCertificatesnotshownFlag = faculty.OriginalCertificatesNotShown != null ? (bool)faculty.OriginalCertificatesNotShown : false;
            //if (regFaculty.InCompleteCeritificates == true || regFaculty.NOrelevantUgFlag == true || regFaculty.NOrelevantPgFlag == true || regFaculty.NOrelevantPhdFlag == true ||
            //   regFaculty.XeroxcopyofcertificatesFlag == true || regFaculty.OriginalCertificatesnotshownFlag == true)
            //{
            //    regFaculty.EditStatusFlag = true;
            //}
            //else
            //{
            //    regFaculty.EditStatusFlag = false;
            //}
            regFaculty.CollegeId =
               db.jntuh_college_faculty_registered.Where(r => r.RegistrationNumber == regFaculty.RegistrationNumber)
                   .Select(s => s.collegeId)
                   .FirstOrDefault();

            if (regFaculty.CollegeId == null)
            {
                regFaculty.CollegeId = db.jntuh_college_principal_registered.Where(f => f.RegistrationNumber == regFaculty.RegistrationNumber).Select(s => s.collegeId).FirstOrDefault();
            }

            if (faculty.DateOfBirth != null)
                regFaculty.facultyDateOfBirth = UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfBirth.ToString());

            //regFaculty.DesignationId = faculty.DesignationId;
            //if (faculty.DesignationId != null)
            //{
            //    regFaculty.designation = db.jntuh_designation.Find(faculty.DesignationId).designation;
            //}
            //regFaculty.DepartmentId = faculty.DepartmentId;
            //if (faculty.DepartmentId != null)
            //{
            //    regFaculty.department = db.jntuh_department.Find(faculty.DepartmentId).departmentName;
            //}
            if (regFaculty.CollegeId != 0)
            {
                regFaculty.CollegeName = db.jntuh_college.Find(regFaculty.CollegeId).collegeName;
            }

            regFaculty.CollegeId = faculty.collegeId;

            #region Faculty Profitional Information on 18-02-2020


            faculty.DepartmentId = db.jntuh_college_faculty_registered.Where(
                    f => f.RegistrationNumber == regFaculty.RegistrationNumber)
                    .Select(s => s.DepartmentId)
                    .FirstOrDefault();

            if (faculty.DepartmentId != null)
            {
                regFaculty.department = db.jntuh_department.Find(faculty.DepartmentId).departmentName;
            }
            regFaculty.DepartmentId = faculty.DepartmentId;
            regFaculty.OtherDepartment = faculty.OtherDepartment;

            List<jntuh_registered_faculty_experience> registered_faculty_experience =
              db.jntuh_registered_faculty_experience.Where(
                  r =>
                      r.facultyId == regFaculty.id && r.createdBycollegeId != null)
                  .Select(s => s)
                  .ToList();

            var facultyexperiance = registered_faculty_experience.Where(
                    r => r.facultyId == regFaculty.id && r.collegeId == regFaculty.CollegeId && r.facultyJoiningOrder != null)
                    .Select(s => s)
                    .ToList()
                    .LastOrDefault();
            if (facultyexperiance != null)
            {
                faculty.DesignationId = facultyexperiance.facultyDesignationId;
                if (faculty.DesignationId != null)
                {
                    regFaculty.designation = db.jntuh_designation.Find(faculty.DesignationId).designation;
                }
                regFaculty.DesignationId = faculty.DesignationId;
                regFaculty.OtherDesignation = facultyexperiance.OtherDesignation;
                regFaculty.facultyDateOfAppointment =
                        UAAAS.Models.Utilities.MMDDYY2DDMMYY(facultyexperiance.facultyDateOfAppointment.ToString());
                regFaculty.facultyAppointmentLetter = facultyexperiance.facultyJoiningOrder;
                regFaculty.GrossSalary = facultyexperiance.facultySalary;
                if (!string.IsNullOrEmpty(regFaculty.facultyDateOfAppointment))
                {
                    int fromyear = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[2]);
                    int frommonth = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[1]);
                    int fromdate = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[0]);

                    DateTime zeroTime = new DateTime(1, 1, 1);
                    DateTime olddate = new DateTime(fromyear, frommonth, fromdate);
                    DateTime curdate = DateTime.Now;

                    var Difference = curdate - olddate;
                    if (Difference.Days > 0)
                    {
                        int pryears = (zeroTime + Difference).Year - 1;
                        int months = (zeroTime + Difference).Month - 1;
                        int days = (zeroTime + Difference).Day;
                        regFaculty.showPresentCollegeExperiance = pryears + " Years " + months + " Months " + days + " Days";
                    }
                }
            }
            //For The Experiance
            var experiance =
                registered_faculty_experience.Where(
                    e =>
                        e.createdBycollegeId != null && e.facultyId == regFaculty.id &&
                        e.facultyDateOfResignation != null && e.facultyDateOfResignation != null).Select(s => s).ToList();
            int exyears = 0;
            int exmonths = 0;
            int exdays = 0;

            foreach (var Experiencefaculty in experiance)
            {
                int expyears = 0;
                int months = 0;
                int days = 0;
                if (Experiencefaculty.facultyDateOfAppointment != null && Experiencefaculty.facultyDateOfResignation != null)
                {
                    int fromyear = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[2]);
                    int frommonth = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[0]);
                    int fromdate = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[1]);

                    // Experiencefaculty.facultyDateOfResignation = UAAAS.Models.Utilities.MMDDYY2DDMMYY(Experiencefaculty.facultyDateOfResignation);

                    int year = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[2]);
                    int month = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[0]);
                    int date = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[1]);

                    DateTime zeroTime = new DateTime(1, 1, 1);
                    DateTime olddate = new DateTime(fromyear, frommonth, fromdate);
                    DateTime curdate = new DateTime(year, month, date);

                    var Difference = curdate - olddate;

                    if (Difference.Days > 0)
                    {
                        expyears = (zeroTime + Difference).Year - 1;
                        months = (zeroTime + Difference).Month - 1;
                        days = (zeroTime + Difference).Day;
                    }
                }

                exyears = exyears + expyears;
                exmonths = exmonths + months;
                exdays = exdays + days;
            }
            while (exdays >= 30)
            {
                exdays = exdays - 30;
                exmonths++;
            }

            while (exmonths >= 12)
            {
                exmonths = exmonths - 12;
                exyears++;
            }
            regFaculty.showTotalExperience = exyears + " Years " + exmonths + " Months " + exdays + " Days";
            #endregion

            regFaculty.WorkingStatus = faculty.WorkingStatus;
            //regFaculty.OtherDepartment = faculty.OtherDepartment;
            //regFaculty.OtherDesignation = faculty.OtherDesignation;
            //if (faculty.DateOfAppointment != null)
            //    regFaculty.facultyDateOfAppointment = UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfAppointment.ToString());
            regFaculty.isFacultyRatifiedByJNTU = faculty.isFacultyRatifiedByJNTU;
            if (faculty.DateOfRatification != null)
                regFaculty.facultyDateOfRatification = UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfRatification.ToString());
            regFaculty.ProceedingsNo = faculty.ProceedingsNumber;
            regFaculty.SelectionCommitteeProcedings = faculty.ProceedingDocument;
            regFaculty.ProceedingsNo = faculty.ProceedingsNumber;
            // regFaculty.OrganizationName = faculty.OrganizationName;
            regFaculty.AICTEFacultyId = faculty.AICTEFacultyId;
            //regFaculty.GrossSalary = faculty.grosssalary;
            //regFaculty.TotalExperience = faculty.TotalExperience;
            //regFaculty.TotalExperiencePresentCollege = faculty.TotalExperiencePresentCollege;
            regFaculty.EditPANNumber = faculty.PANNumber;
            regFaculty.EditAadhaarNumber = faculty.AadhaarNumber;
            regFaculty.EditEmail = faculty.Email;
            regFaculty.EditMobile = faculty.Mobile;
            regFaculty.National = faculty.National;
            regFaculty.InterNational = faculty.InterNational;
            regFaculty.Citation = faculty.Citation;
            regFaculty.Awards = faculty.Awards;
            regFaculty.facultyPhoto = faculty.Photo;
            regFaculty.facultyPANCardDocument = faculty.PANDocument;
            regFaculty.facultyAadhaarCardDocument = faculty.AadhaarDocument;
            regFaculty.SelectionCommitteeProcedings = faculty.ProceedingDocument;
            regFaculty.WorkingType = faculty.WorkingType;
            regFaculty.ProceedingsNo = faculty.ProceedingsNumber;
            regFaculty.isActive = faculty.isActive;
            regFaculty.isApproved = faculty.isApproved;
            regFaculty.IncomeTaxFileview = faculty.IncometaxDocument;
            regFaculty.isView = true;
            regFaculty.PanStatus = faculty.PanStatus;
            regFaculty.createdOn = faculty.createdOn;
            regFaculty.createdBy = faculty.createdBy;
            #region Faculty Education Data Getting

            // var jntuh_education_category = db.jntuh_education_category.Where(e => e.isActive == true).ToList();
            var registeredFacultyEducation = db.jntuh_registered_faculty_education.Where(e => e.facultyId == fID).ToList();

            if (registeredFacultyEducation.Count != 0)
            {
                foreach (var item in registeredFacultyEducation)
                {
                    if (item.educationId == 1)
                    {
                        regFaculty.SSC_educationId = 1;
                        regFaculty.SSC_HallticketNo = item.hallticketnumber;
                        regFaculty.SSC_studiedEducation = item.courseStudied;
                        regFaculty.SSC_specialization = item.specialization;
                        regFaculty.SSC_passedYear = item.passedYear;
                        regFaculty.SSC_percentage = item.marksPercentage;
                        regFaculty.SSC_division = item.division == null ? 0 : item.division;
                        regFaculty.SSC_university = item.boardOrUniversity;
                        regFaculty.SSC_place = item.placeOfEducation;
                        regFaculty.SSC_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 3)
                    {
                        regFaculty.UG_educationId = 3;
                        regFaculty.UG_HallticketNo = item.hallticketnumber;
                        regFaculty.UG_studiedEducation = item.courseStudied;
                        regFaculty.UG_specialization = item.specialization;
                        regFaculty.UG_passedYear = item.passedYear;
                        regFaculty.UG_percentage = item.marksPercentage;
                        regFaculty.UG_division = item.division == null ? 0 : item.division;
                        regFaculty.UG_university = item.boardOrUniversity;
                        regFaculty.UG_place = item.placeOfEducation;
                        regFaculty.UG_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 4)
                    {
                        regFaculty.PG_educationId = 4;
                        regFaculty.PG_HallticketNo = item.hallticketnumber;
                        regFaculty.PG_studiedEducation = item.courseStudied;
                        regFaculty.PG_specialization = item.specialization;
                        regFaculty.PG_passedYear = item.passedYear;
                        regFaculty.PG_percentage = item.marksPercentage;
                        regFaculty.PG_division = item.division == null ? 0 : item.division;
                        regFaculty.PG_university = item.boardOrUniversity;
                        regFaculty.PG_place = item.placeOfEducation;
                        regFaculty.PG_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 5)
                    {
                        regFaculty.MPhil_educationId = 5;
                        regFaculty.MPhil_HallticketNo = item.hallticketnumber;
                        regFaculty.MPhil_studiedEducation = item.courseStudied;
                        regFaculty.MPhil_specialization = item.specialization;
                        regFaculty.MPhil_passedYear = item.passedYear;
                        regFaculty.MPhil_percentage = item.marksPercentage;
                        regFaculty.MPhil_division = item.division == null ? 0 : item.division;
                        regFaculty.MPhil_university = item.boardOrUniversity;
                        regFaculty.MPhil_place = item.placeOfEducation;
                        regFaculty.MPhil_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 6)
                    {
                        regFaculty.PhD_educationId = 6;
                        regFaculty.PhD_HallticketNo = item.hallticketnumber;
                        regFaculty.PhD_studiedEducation = item.courseStudied;
                        regFaculty.PhD_specialization = item.specialization;
                        regFaculty.PhD_passedYear = item.passedYear;
                        regFaculty.PhD_percentage = item.marksPercentage;
                        regFaculty.PhD_division = item.division == null ? 0 : item.division;
                        regFaculty.PhD_university = item.boardOrUniversity;
                        regFaculty.PhD_place = item.placeOfEducation;
                        regFaculty.PhD_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 9)
                    {
                        regFaculty.NET_educationId = 6;
                        regFaculty.NET_HallticketNo = item.hallticketnumber;
                        regFaculty.NET_studiedEducation = item.courseStudied;
                        regFaculty.NET_specialization = item.specialization;
                        regFaculty.NET_passedYear = item.passedYear;
                        //regFaculty.NET_percentage = item.marksPercentage;
                        //regFaculty.NET_division = item.division == null ? 0 : item.division;
                        regFaculty.NET_university = item.boardOrUniversity;
                        regFaculty.NET_place = item.placeOfEducation;
                        regFaculty.NET_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 8)
                    {
                        regFaculty.Others_educationId = 8;
                        regFaculty.faculty_AllCertificates = item.certificate;
                    }
                }
            }

            #endregion

            regFaculty.jntuh_registered_faculty_edit_fields = db.jntuh_registered_faculty_edit_fields.Where(e => e.IsFieldEditable == true).ToList();

            jntuh_registered_faculty_edit_fields Edit_fileds = new jntuh_registered_faculty_edit_fields();

            #region Auto Populate Condition.
            var specializations = db.jntuh_specialization.Where(s => s.isActive == true).Select(a => a).ToList();

            var ugspecializations = (from s in specializations
                                     join d in db.jntuh_department on s.departmentId equals d.id
                                     join de in db.jntuh_degree on d.degreeId equals de.id
                                     where (de.id == 4 || de.id == 5)
                                     select new
                                     {
                                         id = s.id,
                                         specializationname = s.specializationName
                                     }).ToList();

            regFaculty.ug_specializations = new List<string>() { "Test" };
            foreach (var item1 in ugspecializations)
            {
                regFaculty.ug_specializations.Add(item1.specializationname);
            }

            var pgspecializations = (from s in specializations
                                     join d in db.jntuh_department on s.departmentId equals d.id
                                     join de in db.jntuh_degree on d.degreeId equals de.id
                                     where (de.id != 4 && de.id != 5)
                                     select new
                                     {
                                         id = s.id,
                                         specializationname = s.specializationName
                                     }).ToList();

            regFaculty.pg_specializations = new List<string>() { "Test" };
            foreach (var item1 in pgspecializations)
            {
                regFaculty.pg_specializations.Add(item1.specializationname);
            }

            var Education = db.jntuh_registered_faculty_education.Select(e => new { educationid = e.educationId, coursestudied = e.courseStudied, universites = e.boardOrUniversity, places = e.placeOfEducation, specialization = e.specialization }).ToList();

            var RegisteredFacultyEducation_Courses = Education.Select(e => e.coursestudied.Trim()).Distinct().ToList();
            var RegisteredFacultyEducation_universities = Education.Where(z => z.universites != null).Select(e => e.universites.Trim()).Distinct().ToList();
            var RegisteredFacultyEducation_places = Education.Where(z => z.places != null).Select(e => e.places).Distinct().ToList();
            var RegisteredFacultyEducation_UGspecialization = Education.Where(a => a.educationid == 3 && a.specialization != null).Select(e => e.specialization.Trim()).Distinct().ToList();
            var RegisteredFacultyEducation_PGspecialization = Education.Where(a => a.educationid == 4 && a.specialization != null).Select(e => e.specialization.Trim()).Distinct().ToList();

            foreach (var UG in RegisteredFacultyEducation_UGspecialization)
            {
                regFaculty.ug_specializations.Add(UG.Trim());
            }
            regFaculty.ug_specializations.Remove("Test");
            foreach (var PG in RegisteredFacultyEducation_PGspecialization)
            {
                regFaculty.pg_specializations.Add(PG.Trim());
            }
            regFaculty.pg_specializations.Remove("Test");
            regFaculty.universitys = new List<string>() { "Rajiv Gandhi University", "Assam University", "Tezpur University", "University of Hyderabad, Hyderabad", "Maulana Azad National Urdu University", "English   and   Foreign   Languages   University", "Jamia Millia Islamia", "University of Delhi", "JawaharLal Nehru University", "Indira Gandhi National Open University", "South Asian University", "The  Indira  Gandhi  National  Tribal  University", "Dr. Harisingh Gour Vishwavidyalaya", "Mahatma  Gandhi  Antarrashtriya  Hindi  Vishwavidyalaya", "Mizoram University", "North Eastern Hill University", "Manipur University", "Central Agricultural University", "Nagaland University", "Pondicherry  University", "Sikkim University", "Tripura University", "Aligarh Muslim University", "Babasaheb  Bhimrao  Ambedkar  University", "Banaras Hindu University", "University of Allahabad", "Rajiv  Gandhi  National  Aviation  University", "Rani  Lakshmi  Bai  Central  Agricultural  University", "Visva Bharati, Shantiniketan", "Hemwati Nandan Bahuguna Garhwal University", "Central University of Tamil Nadu", "Indian Maritime University", "Central  University  of  Rajasthan", "Central University of Punjab", "Central University of Orissa", "Central University of Kerala", "Central University of Karnataka", "Central University of Jharkhand", "Central University of Kashmir, Transit Campus", "Central University of Jammu, Bagla (Rahya-Suchani)", "Central University of Himachal Pradesh", "Central University of Haryana", "Guru  Ghasidas  Vishwavidyalaya", "Central University of Bihar", "Nalanda University", "Mahatma  Gandhi  Central  University", "Central University of Gujarat", "Academy of Maritime Education and Training", "Amrita Vishwa Vidyapeetham", "Avinashilingam Institute for Home Science & Higher Education for Women", "B.L.D.E.", "B.S. Abdur Rahman Institute of Science and Technology", "Banasthai Vidyapith", "Bharath Institute of Higher Education & Research", "Bharati Vidyapeeth", "Bhatkhande Music Institute", "Birla Institute of Technology", "Birla Institute of Technology & Science", "Central Institute of Buddhist Studies(CIBS)", "Central Institute of Fisheries Education", "Central Institute of Higher Tibetan Studies", "Chennai Mathematical Institute", "Chettinad Academy of Research and Education (CARE)", "Chinmaya Vishwavidyapeeth", "Christ", "D.Y Patil Educational Society", "Datta Meghe Institute of Medical Sciences", "Dayalbagh Educational Institute", "Deccan College Postgraduate & Research Institute", "Dr. D.Y. Patil Vidyapeeth", "Dr. M.G.R. Educational and Research Institute", "Forest Research Institute", "Gandhi Institute of Technology and Management (GITAM)", "Gandhiigram Rural Institute", "Gokhale Institute of Politics & Economics", "Graphic Era", "Gujarat Vidyapith", "Gurukul Kangri vidyapeeth", "Hindustan Institute of Technology and Science (HITS)", "Homi Bhabha National Institute, Regd. Office", "ICFAI Foundation for Higher Education", "IIS", "Indain Institute of Foreigen Trade", "Indian Agricultural Research Institute", "Indian Association for the Cultivation of Science (IACS)", "Indian Institute of Information Technology and Management", "Indian Institute of Science", "Indian Institute of Space Science and Technology", "Indian Law Institute", "Indian School of Mines", "Indian Veterinary Research Institute", "Indira Gandhi Institute of Development Research", "Institute of Advanced Studies in Education", "Institute of Chemical Technology", "Institute of liver and Biliary Sciences", "Instituteof Armamrnt Technology", "International Institute for Population Sciences", "International Institute of Information Technology", "Jain", "Jain Vishva Bharati Institute", "Jamia Hamdard", "Janardan Rai Nagar Rajasthan Vidyapeeth", "Jawahar lal Nehru Centre for Advanced Scientific Research", "Jaypee Institute of Information Technology", "JSS Academy of Higher Education & Research", "K.L.E. Academy of Higher Education and Research", "Kalasalingam Academy of Research and Education", "Kalinga Institute of Industrial Technology", "Karpagam Academy of Higher Education", "Karunya Institute of Technology and Sciences", "Kerala Kalamandalam", "Koneru Lakshmaiah Education Foundation", "Krishna Institute of Medical Sciences", "Lakshmibai National Institute of Physical Education", "Lingaya's Vidyapeeth", "LNM Istitute of Information Technology", "Maharishi Markandeshwar (Deemed to be University)", "Manav Rachna International Institute of Research and Studies", "Manipal Academy of Higher Education", "Meenakshi Academy of Higher Education and Research", "MGM Institute of Health Sciences", "Narsee Monjee Institute of Management Studies", "National Brain Research Centre", "National Dairy Research Institute", "National Institute of Food Technology, Entrepreneurship & Management (NIFTEM)", "National Institute of Mental Health & Neuro Sciences", "National Museum Institute of History of Arts, Conservation and Musicology", "National Rail and Transportation Institute", "National University of Educational Planning & Administration", "Nava Nalanda Mahavihara", "Nehru Gram Bharati", "NITTE", "Noorul Islam Centre for Higher Education", "North Eastern Regional Institute of Science & Technology", "Padmashree Dr.D.Y. Patil Vidyapeeeth", "Pandit Dwarka Prasad Mishra Indian Institute of Information Technology", "Periyar Manaimmai Institute of Science & Technology (PMIST)", "Ponnaiyan Ramajayam Institute of Science & technology (PMIST)", "Pravara Institute of Medical Sciences", "Punjab Engineering College", "Rajiv Gandhi National Institute of Youth Development", "Ramakrishna Mission Vivekananda Educational and Research Institute", "Rashtriya Sanskrit Sansthana", "Rashtriya Sanskrit Vidyapeeth", "S.R.M Institute of Science and Technology", "Sam Higginbottom Institute of Agriculture, Technology & Sciences", "Sant Longowal Institute of Engineering and Technology", "Santosh", "Sathyabama Institute of Science and Technology", "Saveetha Institute of Medical and Technical Sciences", "Shanmugha Arts Science Technology & Research Academy (SASTRA)", "Shobhit Institute of Engineering & Technology", "Shri Lal Bahadur Shastri Rashtriya Sanskrit Vidyapith", "Siksha 'O' Anusandhan", "Sri Balaji Vidyapeeth (Deemed to be University)", "Sri Chandrasekharendra Saraswathi Vishwa Mahavidyalaya", "Sri Devraj Urs Academy of Higher Education and Research", "Sri Ramachandra Medical College and Research Institute", "Sri Sathya Sai Institute of Higher Learning", "Sri Siddhartha Academy of Higher Education", "St. Peterâ€™s Institute of Higher Education and Research", "Sumandeep Vidyapeeth", "Swami Vivekananda Yoga Anusandhana Samsthana", "Symbiosis International", "Tata Institute of Fundamental Research", "Tata Institute of Social Sciences", "TERI School of Advanced studies", "Thapar Institute of Engineering & Technology", "Tilak Maharashtra Vidyapeeth", "Vel Tech Rangarajan Dr. Sagunthala R & D Institute of Science and Technology", "Vellore Institute of Technology", "VELS Institute of Science Technology & Advanced Studies (VISTAS)", "Vignan's Foundation for Science, Technology and Research", "Vinayaka Missionâ€™s Research Foundation", "Yenepoya", "A.P.J. Abdul Kalam Technological University", "Acharaya N.G.Ranga Agricultural University", "Acharaya Nagarjuna University", "Adikavi Nannaya University", "Akkamahadevi women's University (Formerly known as Karnataka State Women's University)", "Alagappa University", "Aliah University", "Allahabad State University", "Ambedkar University Delhi (AUD)", "Anand Agricultural University", "Andhra University", "Anna University", "Annamalai University", "Arybhatta Knowledge University", "Assam Agricultural University", "Assam Rajiv Gandhi University of Co-operative Management", "Assam Science & Technology University", "Assam Womens University", "Atal Bihari Vajpayee Hindi Vishwavidyalaya", "Awadesh Pratap Singh University", "Ayush and Health Sciences University of Chhattisgarh", "Baba Farid University of Health Sciences", "Baba Ghulam Shah Badshah University", "Babasaheb Bhimrao Ambedkar Bihar University", "Banda University of Agriculture & Technology", "Bangalore University", "Bankura University", "Barkatullaah University", "Bastar Vishwavidyalaya", "Bengaluru Central University", "Bengaluru North University", "Berhampur University", "Bhagat Phool Singh Mahila Vishwavidyalaya", "Bhakta Kavi Narsinh Mehta University", "Bharathiar University", "Bharathidasan University", "Bhupender Narayan Mandal University", "Bidhan Chandra Krishi Vishwavidyalaya", "Bihar Agricultural University", "Biju Patnaik University of Technology", "Bilaspur Vishwavidyalaya", "Binod Bihari Mahto Koylanchal University", "Birsa Agricultural University", "Bodoland University", "Bundelkhand University", "Burdwan University", "Calcutta University", "Calicut University", "CEPT University", "Ch. Bansi Lal University", "Chanakya National Law University", "Chandr Shekhar Azad University of Agriculture & Technology", "Chatrapati Sahuji Maharaj Kanpur University", "Chaudhary Devi Lal University", "Chaudhary Ranbir Singh University", "Chaudhary Sarwan Kumar Himachal Pradesh Krishi Vishvavidyalaya", "Chhattisgarh Kamdhenu Vishwavidyalaya", "Chhattisgarh Swami Vivekanad Technical Universty", "Childrens University", "Choudary Charan Singh Haryana Agricultural Univeersity", "Choudary Charan Singh University", "Cluster University of Jammu", "Cluster University of Srinagar", "Cochin Unviersity of Science & Technology", "Cooch Behar Panchanan Barma University", "Cotton University", "Damodaram Sanjivayya National Law University", "Davangere University", "Deen Bandhu Chhotu Ram University of Sciences & Technology", "Deen Dayal Upadhyay Gorakhpur University", "Delhi Pharmaceutical Sciences & Research University", "Delhi Technological University", "Devi Ahilya Vishwavidyalaya", "Dharmashastra National Law University", "Dharmsinh Desai University", "Diamond Harbour Womens University", "Dibrugarh University", "Doon University", "Dr Shyama Prasad Mukherjee University", "Dr. A.P.J. Abdul Kalam Technical University", "Dr. B. R. Ambedkar University of Social Sciences", "Dr. B.R. Ambedkar University", "Dr. B.R.Ambedkar Open University", "Dr. B.R.Ambedkar University", "Dr. Babasaheb Ambedkar Marathwada University", "Dr. Babasaheb Ambedkar Open University", "Dr. Babasaheb AmbedkarTechnological University", "Dr. Bhimrao Ambedkar Law University", "Dr. N.T.R. University of Health Sciences", "Dr. Punjabrao Deshmukh Krishi Vidyapeeth", "Dr. Ram Manohar Lohia Awadh University", "Dr. Ram Manohar Lohiya National Law University", "Dr. Shakuntala Misra National Rehabilitation University", "Dr. Shyama Prasad University", "Dr. Y.S.Parmar University of Horticulture & Forestry", "Dr. Y.S.R. Horticultural Univerity", "Dravidian University", "Durg Vishwavidyalaya", "Fakir Mohan University", "G.B.Pant University of Agriculture & Technology", "Gangadhar Meher University", "Gauhati University", "Gautam Buddha University", "Goa University", "Gondwana University", "Govind Guru Tribal University", "Gujarat Agricultural University", "Gujarat Ayurveda University", "Gujarat Forensic Sciences University", "Gujarat National Law University", "Gujarat Technological University", "Gujarat University", "Gujarat University of Transplantation Sciences", "Gulbarga University", "Guru Angad Dev Veterinary & Animal Sciences University", "Guru Gobind Singh Indraprastha Vishwavidyalaya", "Guru Jambeshwar University of Science and Technology", "Guru Nanak Dev University", "Guru Ravidas Ayurved University", "Harcourt Butler Technical University", "Haridev Joshi University of Journalism and Mass Communication", "Haryana Vishwakarma Skill University", "Hemchandracharya North Gujarat University", "Hemwati Nandan Bahuguna Medical Education University", "Hidayatullah National Law University", "Himachal Pradesh National Law University", "Himachal Pradesh Technical University", "Himachal Pradesh University", "Indian Institute of Teacher Education", "Indira Gandhi Delhi Technical University for Women", "Indira Gandhi Krishi Vishwavidyalaya", "Indira Gandhi University", "Indira Kala Sangeet Vishwavidyalaya", "Indraprastha Institute of Information Technology", "Institute of Infrastructure Technology Research and Management", "International Institute of Information Technology (IIIT)", "Islamic University of Sciences & Technology University", "Jadavpur University", "Jagadguru Ramanandacharya Sanskrit University", "Jai Naraim Vyas University", "Jai Prakash vishwavidyalaya(university)", "Jammu University", "Jananayak Chandrashekhar University", "Jawaharlal Nehru Architecture and Fine Arts University", "Jawaharlal Nehru Krishi Vishwavidyalaya", "Jawaharlal Nehru Technological University", "Jharkhand Raksha Shakti University", "Jiwaji University", "Junagarh Agricultural University", "Kakatiya University", "Kaloji Narayan Rao University of Health Sciences", "Kalyani University", "Kamdhenu University", "Kameshwar Singh.Darbhanga Sanskrit Vishwavidyalaya", "Kannada University", "Kannur University", "Karanataka State Law University", "Karanataka State Open University", "Karanataka University", "Karanataka Veterinary, Animal & Fisheries Science University", "Karnataka Folklore University", "Karnataka Sanskrit University", "Karnataka State Rural Development and Panchayat Raj University", "Kashmir University", "Kavi Kulguru Kalidas Sanskrit Vishwavidyalaya", "Kazi Nazrul University", "Kerala Agricultural Unviersity", "Kerala University", "Kerala University of Fisheries & Ocean Studies", "Kerala University of Health Sciences", "Kerala Veterinary & Animal Sciences University", "Khallikote University", "Khwaja Moinuddin Chishti Urdu, Arabi-Farsi University", "King Georges Medical University", "Kolhan University", "Konkan Krishi Vidyapeeth", "Krantiguru Shyamji Krishna Verma Kachchh University", "Krishna Kanta Handique State Open University", "Krishna University", "Krishnakumarsinhji Bhavnagar University", "KSGH Music and Performing Arts University", "Kumar Bhaskar Varma Sanskrit & Ancient Studies University", "Kumaun University", "Kurukshetra University", "Kushabhau Thakre Patrakarita Avam Jansanchar Vishwavidyalaya", "Kuvempu University", "Lala Lajpat Rai University of Veterinary & Animal Sciences", "Lalit Narayan Mithila University", "Lucknow University", "M.J.P. Rohilkhand University", "M.P.Bhoj (open) University", "Madan Mohan Malaviya University of Technology", "Madaras University", "Madhya Pradesh Pashu Chikitsa Vigyan Vishwavidyalaya", "Madurai Kamraj University", "Magadh University", "Mahamaya Technical University", "Maharahtra University of Health Sciences", "Maharaja Bir Bikram University", "Maharaja Chhatrasal Bundelkhand Vishwavidyalaya", "Maharaja Ganga Singh University", "Maharaja Ranjit Singh Punjab Technical University", "Maharaja Sayajirao University of Baroda", "Maharaja Surajmal Brij University", "Maharana Partap Horticultural University", "Maharana Pratap University of Agriculture & Technology", "Maharashtra Animal & Fishery Sciences University", "Maharashtra National Law University", "Maharashtra National Law University,", "Maharishi Dayanand Saraswati University", "Maharishi Dayanand University", "Maharshi Panini Sanskrit Evam Vedic Vishwavidyalaya", "Mahatam Gandhi Kashi Vidyapeeth", "Mahatma Gandhi Chitrakoot Gramodaya Vishwavidyalaya", "Mahatma Gandhi University", "Mahatma Gandhi Unversity", "Mahatma Phule Krishi Vidyapeeth", "Makhanlal Chaturvedi National University of Journalism & Communication", "Mangalore University", "Manipur Technical University", "Manipur University of Culture", "Manonmaniam Sundarnar University", "Marathwada Agricultural University", "Maulana Abul Kalam Azad University of Technology", "Maulana Mazharul Haque Arabic & Persian University", "Mohan Lal Shukhadia University", "Mother Teresa Womens University", "Mumbai University", "Munger University", "Mysore University", "Nalanda Open University", "Narendra Deo University of Agriculture & Technology", "National Academy of Legal Studies & Research University", "National Law Institute University", "National law School of India University", "National Law Universituy", "National Law University", "National Law University and Judicial Academy", "National University of Advanced Legal Studies (NUALS)", "National University of Study & Research in Law", "Navsari Agriculture University", "Netaji Shubhash Open University", "Nilamber-Pitamber University", "Nizams Institute of Medical Sciences", "North Benagal University", "North Maharashtra University", "North Orissa University", "Odisha State Open University", "Orissa University Of Agriculture & Technology", "Osmania University", "Palamuru University", "Pandit S N Shukla University", "Patliputra University", "Patna University", "Periyar University", "Potti Sreeramulu Teugu Universtity", "Presidency University", "Professor Jayashankar Telangana State Agricultural University", "Pt. Bhagwat Dayal Sharma University of Health Sciences", "Pt. Sundarlal Sharma (Open) University", "Pt.Ravishankar Shukla University", "Punjab Agriculture University", "Punjab Technical University", "Punjab University", "Punjabi University", "Purnea University", "Rabindra Bharati University", "Raiganj University", "Raj Rishi Bhartrihari Matsya University", "Raja Mansingh Tomar Music & Arts University", "Rajasthan Ayurveda University", "Rajasthan ILD Skills University (RISU)", "Rajasthan Technical University", "Rajasthan University", "Rajasthan University of Health Sciences", "Rajasthan University of Veterinary & Animal Sciences", "Rajendra Agricultural University", "Rajiv Gandhi Prodoyogiki Vishwavidyalaya", "Rajiv Gandhi University of Health Science", "Rajiv Gandhi University of Knowledge Technology", "Rajmata Vijayaraje Scindia Krishi Vishwa Vidyalaya", "Raksha Shakti University", "Rama Devi Womens University", "Ranchi University", "Rani Channamma University", "Rani Durgavati Vishwavidyalaya", "Ravenshaw University", "Rayalaseema University", "Sambalpur University", "Sampurnanand Sanskrit Vishwavidyalaya", "Sanchi University of Buddhist-Indic Studies", "Sant Gadge Baba Amravati University", "Sardar Krushinagar Dantiwada Agricultural University", "Sardar Patel University", "Sardar Patel University of Police, Security & Criminal Justice", "Sardar Vallabh Bhai Patel University of Agriculture & Technology", "Sarguja University", "Satavahana University", "Saurashtra University", "Savitribai Phule Pune University", "Shekhawati University", "Sher-e-Kashmir University of Agricultural Science & Technology", "Shivaji University", "shree guru gobind singh tricentenary university", "Shree Sankaracharaya University of Sanskrit", "Shree Somnath Sanskrit University", "Shri Govind Guru University", "Shri Jagannath Sanskrit Vishwavidyalaya", "Shri Mata Vaishno Devi University", "Siddharth University", "Sidho-Kanho-Birsha University", "Sido Kanhu University", "Smt. Nathibai Damodar Thackersey Womens University", "Solapur University", "Sri Dev Suman Uttarakhand Vishwavidyalaya", "Sri Konda Laxman Telangana State Horticultural University", "Sri krishnadevaraya University", "Sri P V Narsimha Rao Telangana Veterinary University", "Sri Padmavati Mahila Vishwavidyalayam", "Sri Venkateswara Institute of Medical Sciences", "Sri Venkateswara University", "Sri Venkateswara Vedic University", "Sri Venkateswara Veterinary University", "Srimanta Sankaradeva University of Health Sciences", "State University of Performing and Visual Arts", "Swami Keshwanand Rajasthan Agriculture University", "Swami Ramanand Teerth Marathwada University", "Swarnim Gujarat Sports University", "T.M. Bhagalpur University", "Tamil Nadu Fisheries University", "Tamil Nadu Music and Fine Arts University", "Tamil Nadu Open University", "Tamil Nadu Teacher Education University", "Tamil University", "Tamilnadu Agricultural University", "Tamilnadu Dr. Ambedkar Law University", "Tamilnadu Dr. M.G.R.Medical University", "Tamilnadu National Law School", "Tamilnadu Physical Educaton and Sports University", "Tamilnadu Veterinary & Animal Sciences University", "Telangana University", "The Bengal Engineering & Science University", "The Rajiv Gandhi National University of Law", "The Rashtrasant Tukadoji Maharaj Nagpur University", "The Sanskrit College and University", "The West Bengal National University of Juridical Science", "The West Bengal University of Health Sciences", "Thiruvalluvar University", "Thunchath Ezhuthachan Malayalam University", "Tumkur University", "U.P. Pandit Deen Dayal Upadhyaya Pashu Chikitsa Vigyan Vishwavidhyalaya Evam Go-Anusandhan Sansthan", "U.P. Rajarshi Tandon Open University", "U.P.King Georges University of Dental Sciences", "University of Agricultural Sciences", "University of Horticultural Sciences", "University of Kota", "Univesity of Gour Banga", "Utkal University", "Utkal University of Culture", "Uttar Banga Krishi Vishwavidyalaya", "Uttar Pradesh University of Medical Sciences", "Uttarakhand Aawasiya Viswavidyalaya", "Uttarakhand Ayurved University", "Uttarakhand Open University", "Uttarakhand Sanskrit University", "Uttarakhand Technical University", "Vardhman Mahaveer Open University", "Veer Bahadur Singh Purvanchal University", "Veer Chandra Singh Garhwali Uttarakhand University of Horticulture & Forestry", "Veer Kunwar Singh University", "Veer Narmad South Gujarat University", "Veer Surendra Sai Institute of Medical Science and Research", "Veer Surendra Sai University of Technology", "Vesveswaraiah Technological University", "Vidya Sagar University", "Vijayanagara Sri Krishnadevaraya University", "Vikram Simhapuri University", "Vikram University", "Vinoba Bhave University", "West Bengal State University", "West Bengal University of Animal and Fishery Sciences", "West Bengal University of Teachers, Training, Education Planning and Administration", "Yashwant Rao Chavan Maharashtra Open University", "YMCA University of Science & Technology", "Yogi Vemana University" };
            regFaculty.places = new List<string>() { "Arunachal Pradesh", "Assam", "Telangana", "Delhi", "Madhya Pradesh", "Maharashtra", "Mizoram", "Meghalaya", "Manipur", "Nagaland", "Pondicherry", "Sikkim", "Tripura", "Uttar Pradesh", "West Bengal", "Uttarakhand", "Tamil Nadu", "Rajasthan", "Punjab", "Orissa", "Kerala", "Karnataka", "Jharkhand", "Jammu & Kashmir", "Himachal", "Pradesh", "Haryana", "Chhattisgarh", "Bihar", "Gujarat", "Jammu and Kashmir", "Andhra Pradesh", "Chandigarh", "Puducherry", "Himachal Pradesh", "Goa" };
            regFaculty.Courses = new List<string>() { "BE", "BTech", "ME", "MTech", "MBA", "MCA", "BCA", "PharmD", "BPharmacy", "MPharmacy", "BCom", "MCom", "BSC", "MSC", "M.A", "BA", "BZC", "MPhil", "PhD" };

            foreach (var course in RegisteredFacultyEducation_Courses)
            {
                //var changeCourse = course.First().Substring(0,1).ToUpper() + course.Substring(1, course.Length).ToLower();
                regFaculty.Courses.Add(course.Trim());
            }

            foreach (var university in RegisteredFacultyEducation_universities)
            {
                regFaculty.universitys.Add(university.Trim());
            }

            foreach (var place in RegisteredFacultyEducation_places)
            {
                regFaculty.places.Add(place.Trim());
            }
            #endregion

            return View(regFaculty);
        }

        [HttpPost]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult FacultyEditDetails(EditFacultyRegistration faculty, string fid)
        {
            TempData["SUCCESS"] = null;
            TempData["ERROR"] = null;
            int UserId = 0;
            int fID = 0;
            if (fid != null)
            {
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(fid, WebConfigurationManager.AppSettings["CryptoKey"]));
            }
            var todayDate = DateTime.Now;
            var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
            int actualYear = db.jntuh_academic_year.Where(a => a.isActive == true && a.isPresentAcademicYear == true).Select(a => a.actualYear).FirstOrDefault();
            int prAy =
                db.jntuh_academic_year.Where(a => a.actualYear == (actualYear + 1)).Select(s => s.id).FirstOrDefault();
            if (FacultyEditLinkId != 0)
            {
                jntuh_college_links_assigned facultyedit = db.jntuh_college_links_assigned.Where(l => l.linkId == FacultyEditLinkId && l.academicyearId == prAy && l.isActive == true && l.fromdate <= todayDate && l.todate >= todayDate).Select(s => s).FirstOrDefault();
                if (facultyedit != null)
                {
                    //TempData["ShowEditButton"] = true;
                }
                else
                    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            }
            var isclear = IsClearFaculty(faculty.RegistrationNumber.Trim());

            if (isclear)
            {
                return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            }
            //if (isclear)
            //{
            //    var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
            //    int actualYear = db.jntuh_academic_year.Where(a => a.isActive == true && a.isPresentAcademicYear == true).Select(a => a.actualYear).FirstOrDefault();
            //    int prAy =
            //        db.jntuh_academic_year.Where(a => a.actualYear == (actualYear + 1)).Select(s => s.id).FirstOrDefault();
            //    if (FacultyEditLinkId != 0)
            //    {
            //        jntuh_college_links_assigned facultyedit = db.jntuh_college_links_assigned.Where(l => l.linkId == FacultyEditLinkId && l.academicyearId == prAy && l.isActive == true && l.fromdate <= todayDate && l.todate >= todayDate).Select(s => s).FirstOrDefault();
            //        if (facultyedit != null)
            //        {
            //            //TempData["ShowEditButton"] = true;
            //        }
            //        else
            //            return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //    }
            //}
            //else
            //{
            //    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //}


            #region Dropdown Lists
            List<DistinctDepartment> depts = new List<DistinctDepartment>();
            string existingDepts = string.Empty;

            int[] notRequiredIds = { 25, 26, 27, 33, 34, 36, 37, 38, 39, 53, 54, 55, 56 };
            var jntuh_departments = db.jntuh_department.Select(D => D).ToList();

            var jntuh_department = db.jntuh_department.AsNoTracking().ToList();
            foreach (var item in jntuh_department.Where(s => !notRequiredIds.Contains(s.id)).OrderBy(s => s.departmentName))
            {
                if (!existingDepts.Contains(item.departmentName))
                {
                    depts.Add(new DistinctDepartment { id = item.id, departmentName = item.departmentName });
                    existingDepts = existingDepts + "," + item.departmentName;
                }
            }

            ViewBag.department = depts;
            ViewBag.designation = db.jntuh_designation.Where(c => c.isActive == true).ToList();
            ViewBag.Institutions = db.jntuh_college.Where(c => c.isActive == true && c.id != 375).Select(c => new { CollegeId = c.id, CollegeName = c.collegeCode + "-" + c.collegeName }).OrderBy(c => c.CollegeName).ToList();

            List<SelectListItem> ratifiedDuration = new List<SelectListItem>();
            for (int i = 1; i <= 10; i++)
            {
                ratifiedDuration.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.duration = ratifiedDuration;

            List<SelectListItem> prevExperience = new List<SelectListItem>();
            for (int i = 0; i <= 40; i++)
            {
                prevExperience.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.prevExperience = prevExperience;

            List<SelectListItem> years = new List<SelectListItem>();
            for (int i = 1940; i <= DateTime.Now.Year; i++)
            {
                years.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.years = years;

            List<SelectListItem> division = new List<SelectListItem>();
            for (int i = 1; i <= 5; i++)
            {
                division.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }

            ViewBag.division = division;


            var PGDeptIds = db.jntuh_degree.Join(db.jntuh_department, d => d.id, de => de.degreeId, (d, de) => new { d = d, de = de }).Where(e => e.d.id != 4 && e.d.id != 5).Select(e => e.de.id).ToArray();

            int[] OthersSpecialization = { 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166 };
            var pgSpecializations = db.jntuh_specialization.Where(e => e.isActive == true && !OthersSpecialization.Contains(e.id) && PGDeptIds.Contains(e.departmentId) || e.id == 154).Select(e => new { id = e.id, spec = e.specializationName }).OrderBy(e => e.spec).ToList();
            ViewBag.PGSpecializations = pgSpecializations;
            #endregion

            ViewBag.FacultyID = fID;
            faculty.id = fID;
            string photoPath = "~/Content/Upload/Faculty/PHOTOS";
            string panCardsPath = "~/Content/Upload/Faculty/PANCARDS";
            string aadhaarCardsPath = "~/Content/Upload/Faculty/AADHAARCARDS";
            string proceedingsPath = "~/Content/Upload/Faculty/PROCEEDINGS";
            string certificatesPath = "~/Content/Upload/Faculty/CERTIFICATES";
            string IncomeTaxcertificatesPath = "~/Content/Upload/Faculty/INCOMETAX";
            string PhdUndertakingcertificatesPath = "~/Content/Upload/Faculty/PHDUndertaking";
            string AllcertificatesPath = "~/Content/Upload/Faculty/CERTIFICATES/CertificatesPDF";

            // fID = 9155;
            try
            {
                if (ModelState.IsValid == true)
                {
                    if (faculty.facultyDateOfBirth != null)
                        faculty.facultyDateOfBirth = UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.facultyDateOfBirth);
                    if (faculty.facultyDateOfAppointment != null)
                        faculty.facultyDateOfAppointment =
                            UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.facultyDateOfAppointment);

                    jntuh_registered_faculty jntuh_registered_faculty = db.jntuh_registered_faculty.Where(a => a.id == fID).Select(e => e).FirstOrDefault();

                    UserId = jntuh_registered_faculty.UserId;

                    jntuh_registered_faculty.id = fID;
                    jntuh_registered_faculty.FirstName = faculty.FirstName == null ? "" : faculty.FirstName;
                    jntuh_registered_faculty.MiddleName = faculty.MiddleName;
                    jntuh_registered_faculty.LastName = faculty.LastName;
                    jntuh_registered_faculty.GenderId = faculty.GenderId == null ? 0 : (int)faculty.GenderId;
                    jntuh_registered_faculty.FatherOrHusbandName = faculty.FatherOrhusbandName;
                    jntuh_registered_faculty.MotherName = faculty.MotherName;
                    jntuh_registered_faculty.DateOfBirth = Convert.ToDateTime(faculty.facultyDateOfBirth);
                    //jntuh_registered_faculty.DesignationId = faculty.DesignationId;
                    //jntuh_registered_faculty.OtherDesignation = faculty.OtherDesignation;
                    //jntuh_registered_faculty.DepartmentId = faculty.DepartmentId;
                    //jntuh_registered_faculty.OtherDepartment = faculty.OtherDepartment;
                    //jntuh_registered_faculty.grosssalary = faculty.GrossSalary;
                    //jntuh_registered_faculty.DateOfAppointment = faculty.DateOfAppointment == null ? Convert.ToDateTime(faculty.facultyDateOfAppointment) : Convert.ToDateTime(faculty.DateOfAppointment);
                    //jntuh_registered_faculty.ProceedingsNumber = faculty.ProceedingsNo;
                    jntuh_registered_faculty.AICTEFacultyId = faculty.AICTEFacultyId;
                    //jntuh_registered_faculty.TotalExperience = faculty.TotalExperience;
                    //jntuh_registered_faculty.TotalExperiencePresentCollege = faculty.TotalExperiencePresentCollege;
                    jntuh_registered_faculty.PANNumber = faculty.EditPANNumber;

                    if (faculty.PanStatus != "E")
                    {
                        jntuh_registered_faculty.PanStatus =
                            db.jntuh_pan_status.Where(p => p.PANNumber == faculty.EditPANNumber && p.PANStatus == "E")
                                .Select(s => s.PANStatus)
                                .FirstOrDefault();
                    }
                    if (jntuh_registered_faculty.PanStatus != "E")
                    {
                        jntuh_registered_faculty.PanStatus =
                            db.jntuh_pan_status.Where(p => p.PANNumber == faculty.EditPANNumber && p.PANStatus == "E")
                                .Select(s => s.PANStatus)
                                .FirstOrDefault();
                        if (jntuh_registered_faculty.PanStatus == null)
                        {
                            jntuh_registered_faculty.PanStatus = faculty.PanStatus;
                        }
                    }

                    jntuh_registered_faculty.AadhaarNumber = faculty.EditAadhaarNumber;
                    jntuh_registered_faculty.Mobile = faculty.EditMobile;
                    jntuh_registered_faculty.Email = faculty.EditEmail;
                    jntuh_registered_faculty.WorkingType = String.IsNullOrEmpty(faculty.facultyCategory) ? faculty.facultyCategory : faculty.facultyCategory.Trim();
                    jntuh_registered_faculty.National = faculty.National;
                    jntuh_registered_faculty.Citation = faculty.Citation;
                    jntuh_registered_faculty.Awards = faculty.Awards;
                    jntuh_registered_faculty.InterNational = faculty.InterNational;
                    jntuh_registered_faculty.updatedOn = DateTime.Now; ;
                    jntuh_registered_faculty.updatedBy = UserId;


                    #region Faculty All Certificates Saving Code

                    //SCM Document Saving
                    if (faculty.SelectionCommitteeProceedingsDocument != null)
                    {
                        if (!Directory.Exists(Server.MapPath(proceedingsPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(proceedingsPath));
                        }
                        var ext = Path.GetExtension(faculty.SelectionCommitteeProceedingsDocument.FileName);

                        if (ext.ToUpper().Equals(".PDF") || ext.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" + faculty.LastName.Substring(0, 1);
                            faculty.SelectionCommitteeProceedingsDocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(proceedingsPath), fileName, ext));
                            faculty.SelectionCommitteeProcedings = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.SelectionCommitteeProcedings = faculty.SelectionCommitteeProcedings;
                    }

                    //Photo Document Saving
                    if (faculty.Photo != null)
                    {
                        if (!Directory.Exists(Server.MapPath(photoPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(photoPath));
                        }
                        var ext = Path.GetExtension(faculty.Photo.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" + faculty.LastName.Substring(0, 1);
                            faculty.Photo.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(photoPath), fileName, ext));
                            faculty.facultyPhoto = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.facultyPhoto = faculty.facultyPhoto;
                    }

                    //Aadhaar Card Document Saving
                    if (faculty.AadhaarCardDocument != null)
                    {
                        if (!Directory.Exists(Server.MapPath(aadhaarCardsPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(aadhaarCardsPath));
                        }
                        var ext = Path.GetExtension(faculty.AadhaarCardDocument.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" + faculty.LastName.Substring(0, 1);
                            faculty.AadhaarCardDocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(aadhaarCardsPath), fileName, ext));
                            faculty.facultyAadhaarCardDocument = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.facultyAadhaarCardDocument = faculty.facultyAadhaarCardDocument;
                    }

                    //PAN Card Document Saving
                    if (faculty.PANCardDocument != null)
                    {
                        if (!Directory.Exists(Server.MapPath(panCardsPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(panCardsPath));
                        }
                        var ext = Path.GetExtension(faculty.PANCardDocument.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" + faculty.LastName.Substring(0, 1);
                            faculty.PANCardDocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(panCardsPath), fileName, ext));
                            faculty.facultyPANCardDocument = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.facultyPANCardDocument = faculty.facultyPANCardDocument;
                    }

                    //IncomeTaxFile/Form16 Document Saving
                    if (faculty.IncomeTaxFileUpload != null)
                    {
                        if (!Directory.Exists(Server.MapPath(IncomeTaxcertificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(IncomeTaxcertificatesPath));
                        }

                        var ext = Path.GetExtension(faculty.IncomeTaxFileUpload.FileName);

                        if (ext.ToUpper().Equals(".PDF") || ext.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" + faculty.FirstName.Substring(0, 1) + "-" + faculty.LastName.Substring(0, 1);
                            faculty.IncomeTaxFileUpload.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(IncomeTaxcertificatesPath), fileName, ext));
                            faculty.IncomeTaxFileview = string.Format("{0}{1}", fileName, ext);

                        }
                    }
                    else
                    {
                        faculty.IncomeTaxFileview = faculty.IncomeTaxFileview;
                    }



                    //jntuh_registered_faculty.ProceedingDocument = faculty.SelectionCommitteeProcedings;
                    jntuh_registered_faculty.Photo = faculty.facultyPhoto;
                    jntuh_registered_faculty.AadhaarDocument = faculty.facultyAadhaarCardDocument;
                    jntuh_registered_faculty.PANDocument = faculty.facultyPANCardDocument;
                    //jntuh_registered_faculty.IncometaxDocument = faculty.IncomeTaxFileview;
                    // jntuh_registered_faculty.OrganizationName = faculty.faculty_AllCertificates;
                    #endregion

                    db.Entry(jntuh_registered_faculty).State = EntityState.Modified;
                    //db.SaveChanges(); -- to be commented due to only net/slet education category saved

                    //throw new Exception(null);

                    #region Faculty Education Details Saving

                    List<jntuh_registered_faculty_education> education = db.jntuh_registered_faculty_education.Where(e => e.facultyId == faculty.id).Select(e => e).ToList();

                    #region Education Certificates Saving

                    //SSC Certificate Saving
                    if (faculty.SSC_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.SSC_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.SSC_studiedEducation;
                            faculty.SSC_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.SSC_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.SSC_facultyCertificate = faculty.SSC_facultyCertificate;
                    }

                    //UG Certificate Saving
                    if (faculty.UG_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.UG_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.UG_studiedEducation;
                            faculty.UG_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.UG_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.UG_facultyCertificate = faculty.UG_facultyCertificate;
                    }

                    //PG Certificate Saving
                    if (faculty.PG_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.PG_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.PG_studiedEducation;
                            faculty.PG_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.PG_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.PG_facultyCertificate = faculty.PG_facultyCertificate;
                    }

                    //M.Phil Certificate Saving
                    if (faculty.MPhil_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.MPhil_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.MPhil_studiedEducation;
                            faculty.MPhil_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.MPhil_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.MPhil_facultyCertificate = faculty.MPhil_facultyCertificate;
                    }

                    //NET/SELT Certificate Saving
                    if (faculty.NET_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.NET_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.NET_studiedEducation;
                            faculty.NET_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.NET_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.NET_facultyCertificate = faculty.NET_facultyCertificate;
                    }

                    //Ph.D Certificate Saving
                    if (faculty.PhD_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.PhD_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.PhD_studiedEducation;
                            faculty.PhD_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.PhD_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.PhD_facultyCertificate = faculty.PhD_facultyCertificate;
                    }

                    //All CertificatePDF Saving
                    if (faculty.All_Certificates != null)
                    {
                        if (!Directory.Exists(Server.MapPath(AllcertificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(AllcertificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.All_Certificates.FileName);

                        if (ext.ToUpper().Equals(".PDF") || ext.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_All";
                            faculty.All_Certificates.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(AllcertificatesPath),
                                fileName, ext));
                            faculty.faculty_AllCertificates = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.faculty_AllCertificates = faculty.faculty_AllCertificates;
                    }

                    #endregion

                    for (int i = 1; i <= 7; i++)
                    {
                        //SSC
                        if (i == 1)
                        {
                            jntuh_registered_faculty_education SSC = education.Where(e => e.educationId == 1).Select(e => e).FirstOrDefault();

                            if (SSC != null)
                            {

                                SSC.facultyId = fID;
                                SSC.educationId = 1;
                                //SSC.hallticketnumber = string.IsNullOrEmpty(faculty.SSC_HallticketNo) ? SSC.hallticketnumber : faculty.SSC_HallticketNo.Trim();
                                //SSC.hallticketnumber = string.IsNullOrEmpty(faculty.SSC_HallticketNo) ? 0 : faculty.SSC_HallticketNo.Trim();
                                SSC.hallticketnumber = string.IsNullOrEmpty(faculty.SSC_HallticketNo) ? string.Empty : faculty.SSC_HallticketNo.Trim();
                                SSC.courseStudied = string.IsNullOrEmpty(faculty.SSC_studiedEducation) ? SSC.courseStudied : faculty.SSC_studiedEducation.Trim();
                                SSC.specialization = string.IsNullOrEmpty(faculty.SSC_specialization) ? SSC.specialization : faculty.SSC_specialization.Trim();
                                SSC.passedYear = faculty.SSC_passedYear == null ? SSC.passedYear : (int)faculty.SSC_passedYear;
                                SSC.marksPercentage = faculty.SSC_percentage == null ? SSC.marksPercentage : (decimal)faculty.SSC_percentage;
                                SSC.division = faculty.SSC_division == null ? SSC.division : (int)faculty.SSC_division;
                                SSC.boardOrUniversity = string.IsNullOrEmpty(faculty.SSC_university) ? SSC.boardOrUniversity : faculty.SSC_university.Trim();
                                SSC.placeOfEducation = string.IsNullOrEmpty(faculty.SSC_place) ? SSC.placeOfEducation : faculty.SSC_place.Trim();
                                SSC.certificate = faculty.SSC_facultyCertificate;
                                SSC.isActive = false;
                                SSC.updatedBy = UserId;
                                SSC.updatedOn = DateTime.Now;
                                db.Entry(SSC).State = EntityState.Modified;
                                db.SaveChanges();


                            }
                            else
                            {
                                if (faculty.SSC_certificate != null)
                                {
                                    jntuh_registered_faculty_education SSCEducation = new jntuh_registered_faculty_education();
                                    SSCEducation.facultyId = fID;
                                    SSCEducation.educationId = 1;
                                    SSCEducation.hallticketnumber = string.IsNullOrEmpty(faculty.SSC_HallticketNo) ? faculty.SSC_HallticketNo : faculty.SSC_HallticketNo.Trim();
                                    SSCEducation.courseStudied = string.IsNullOrEmpty(faculty.SSC_studiedEducation) ? faculty.SSC_studiedEducation : faculty.SSC_studiedEducation.Trim();
                                    SSCEducation.specialization = string.IsNullOrEmpty(faculty.SSC_specialization) ? faculty.SSC_specialization : faculty.SSC_specialization.Trim();
                                    SSCEducation.passedYear = faculty.SSC_passedYear == null ? 0 : (int)faculty.SSC_passedYear;
                                    SSCEducation.marksPercentage = faculty.SSC_percentage == null ? 0 : (decimal)faculty.SSC_percentage;
                                    SSCEducation.division = faculty.SSC_division == null ? 0 : (int)faculty.SSC_division;
                                    SSCEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.SSC_university) ? faculty.SSC_university : faculty.SSC_university.Trim();
                                    SSCEducation.placeOfEducation = string.IsNullOrEmpty(faculty.SSC_place) ? faculty.SSC_place : faculty.SSC_place.Trim();
                                    SSCEducation.certificate = faculty.SSC_facultyCertificate;
                                    SSCEducation.isActive = false;
                                    SSCEducation.createdBy = UserId;
                                    SSCEducation.createdOn = DateTime.Now;
                                    SSCEducation.updatedBy = null;
                                    SSCEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(SSCEducation);
                                    db.SaveChanges();
                                }
                            }
                        }
                        else if (i == 2)
                        {
                            jntuh_registered_faculty_education UG = education.Where(e => e.educationId == 3).Select(e => e).FirstOrDefault();

                            //UG
                            if (UG != null)
                            {
                                UG.facultyId = fID;
                                UG.educationId = 3;
                                UG.hallticketnumber = string.IsNullOrEmpty(faculty.UG_HallticketNo) ? UG.hallticketnumber : faculty.UG_HallticketNo.Trim();
                                UG.courseStudied = string.IsNullOrEmpty(faculty.UG_studiedEducation) ? UG.courseStudied : faculty.UG_studiedEducation.Trim();
                                UG.specialization = string.IsNullOrEmpty(faculty.UG_specialization) ? UG.specialization : faculty.UG_specialization.Trim();
                                UG.passedYear = faculty.UG_passedYear == null ? UG.passedYear : (int)faculty.UG_passedYear;
                                UG.marksPercentage = faculty.UG_percentage == null ? UG.marksPercentage : (decimal)faculty.UG_percentage;
                                UG.division = faculty.UG_division == null ? UG.division : (int)faculty.UG_division;
                                UG.boardOrUniversity = string.IsNullOrEmpty(faculty.UG_university) ? UG.boardOrUniversity : faculty.UG_university.Trim();
                                UG.placeOfEducation = string.IsNullOrEmpty(faculty.UG_place) ? UG.placeOfEducation : faculty.UG_place.Trim();
                                UG.certificate = faculty.UG_facultyCertificate;
                                UG.isActive = false;
                                UG.updatedBy = UserId;
                                UG.updatedOn = DateTime.Now;
                                db.Entry(UG).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.UG_certificate != null)
                                {
                                    jntuh_registered_faculty_education UGEducation = new jntuh_registered_faculty_education();

                                    UGEducation.facultyId = fID;
                                    UGEducation.educationId = 3;
                                    UGEducation.hallticketnumber = string.IsNullOrEmpty(faculty.UG_HallticketNo) ? faculty.UG_HallticketNo : faculty.UG_HallticketNo.Trim();
                                    UGEducation.courseStudied = string.IsNullOrEmpty(faculty.UG_studiedEducation) ? faculty.UG_studiedEducation : faculty.UG_studiedEducation.Trim(); ;
                                    UGEducation.specialization = string.IsNullOrEmpty(faculty.UG_specialization) ? faculty.UG_specialization : faculty.UG_specialization.Trim();
                                    UGEducation.passedYear = faculty.UG_passedYear == null ? 0 : (int)faculty.UG_passedYear;
                                    UGEducation.marksPercentage = faculty.UG_percentage == null ? 0 : (decimal)faculty.UG_percentage;
                                    UGEducation.division = faculty.UG_division == null ? 0 : (int)faculty.UG_division;
                                    UGEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.UG_university) ? faculty.UG_university : faculty.UG_university.Trim();
                                    UGEducation.placeOfEducation = string.IsNullOrEmpty(faculty.UG_place) ? faculty.UG_place : faculty.UG_place.Trim();
                                    UGEducation.certificate = faculty.UG_facultyCertificate;
                                    UGEducation.isActive = false;
                                    UGEducation.createdBy = UserId;
                                    UGEducation.createdOn = DateTime.Now;
                                    UGEducation.updatedBy = null;
                                    UGEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(UGEducation);
                                    db.SaveChanges();
                                }
                            }

                        }
                        else if (i == 3)
                        {
                            jntuh_registered_faculty_education PG = education.Where(e => e.educationId == 4).Select(e => e).FirstOrDefault();

                            //PG
                            if (PG != null)
                            {
                                PG.facultyId = fID;
                                PG.educationId = 4;
                                PG.hallticketnumber = string.IsNullOrEmpty(faculty.PG_HallticketNo) ? PG.hallticketnumber : faculty.PG_HallticketNo.Trim();
                                PG.courseStudied = string.IsNullOrEmpty(faculty.PG_studiedEducation) ? PG.courseStudied : faculty.PG_studiedEducation.Trim();
                                PG.specialization = string.IsNullOrEmpty(faculty.PG_specialization) ? PG.specialization : faculty.PG_specialization.Trim();
                                PG.passedYear = faculty.PG_passedYear == null ? PG.passedYear : (int)faculty.PG_passedYear;
                                PG.marksPercentage = faculty.PG_percentage == null ? PG.marksPercentage : (decimal)faculty.PG_percentage;
                                PG.division = faculty.PG_division == null ? PG.division : (int)faculty.PG_division;
                                PG.boardOrUniversity = string.IsNullOrEmpty(faculty.PG_university) ? PG.boardOrUniversity : faculty.PG_university.Trim();
                                PG.placeOfEducation = string.IsNullOrEmpty(faculty.PG_place) ? PG.placeOfEducation : faculty.PG_place.Trim();
                                PG.certificate = faculty.PG_facultyCertificate;
                                PG.isActive = false;
                                PG.updatedBy = UserId;
                                PG.updatedOn = DateTime.Now;
                                db.Entry(PG).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.PG_certificate != null)
                                {
                                    jntuh_registered_faculty_education PGEducation = new jntuh_registered_faculty_education();
                                    PGEducation.facultyId = fID;
                                    PGEducation.educationId = 4;
                                    PGEducation.hallticketnumber = string.IsNullOrEmpty(faculty.PG_HallticketNo) ? faculty.PG_HallticketNo : faculty.PG_HallticketNo.Trim();
                                    PGEducation.courseStudied = string.IsNullOrEmpty(faculty.PG_studiedEducation) ? faculty.PG_studiedEducation : faculty.PG_studiedEducation.Trim();
                                    PGEducation.specialization = string.IsNullOrEmpty(faculty.PG_specialization) ? faculty.PG_specialization : faculty.PG_specialization.Trim();
                                    PGEducation.passedYear = faculty.PG_passedYear == null ? 0 : (int)faculty.PG_passedYear;
                                    PGEducation.marksPercentage = faculty.PG_percentage == null ? 0 : (decimal)faculty.PG_percentage;
                                    PGEducation.division = faculty.PG_division == null ? 0 : (int)faculty.PG_division;
                                    PGEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.PG_university) ? faculty.PG_university : faculty.PG_university.Trim();
                                    PGEducation.placeOfEducation = string.IsNullOrEmpty(faculty.PG_place) ? faculty.PG_place : faculty.PG_place.Trim();
                                    PGEducation.certificate = faculty.PG_facultyCertificate;
                                    PGEducation.isActive = false;
                                    PGEducation.createdBy = UserId;
                                    PGEducation.createdOn = DateTime.Now;
                                    PGEducation.updatedBy = null;
                                    PGEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(PGEducation);
                                    db.SaveChanges();
                                }
                            }
                        }
                        else if (i == 4)
                        {
                            jntuh_registered_faculty_education MPhil = education.Where(e => e.educationId == 5).Select(e => e).FirstOrDefault();

                            //MPhil
                            if (MPhil != null)
                            {
                                MPhil.facultyId = fID;
                                MPhil.educationId = 5;
                                MPhil.hallticketnumber = string.IsNullOrEmpty(faculty.MPhil_HallticketNo) ? MPhil.hallticketnumber : faculty.MPhil_HallticketNo.Trim();
                                MPhil.courseStudied = string.IsNullOrEmpty(faculty.MPhil_studiedEducation) ? MPhil.courseStudied : faculty.MPhil_studiedEducation.Trim();
                                MPhil.specialization = string.IsNullOrEmpty(faculty.MPhil_specialization) ? MPhil.specialization : faculty.MPhil_specialization.Trim();
                                MPhil.passedYear = faculty.MPhil_passedYear == null ? MPhil.passedYear : (int)faculty.MPhil_passedYear;
                                MPhil.marksPercentage = faculty.MPhil_percentage == null ? MPhil.marksPercentage : (decimal)faculty.MPhil_percentage;
                                MPhil.division = faculty.MPhil_division == null ? MPhil.division : (int)faculty.MPhil_division;
                                MPhil.boardOrUniversity = string.IsNullOrEmpty(faculty.MPhil_university) ? MPhil.boardOrUniversity : faculty.MPhil_university.Trim();
                                MPhil.placeOfEducation = string.IsNullOrEmpty(faculty.MPhil_place) ? MPhil.placeOfEducation : faculty.MPhil_place.Trim();
                                MPhil.certificate = faculty.MPhil_facultyCertificate;
                                MPhil.isActive = false;
                                MPhil.updatedBy = UserId;
                                MPhil.updatedOn = DateTime.Now;
                                db.Entry(MPhil).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.MPhil_certificate != null)
                                {
                                    jntuh_registered_faculty_education MPhilEducation = new jntuh_registered_faculty_education();
                                    MPhilEducation.facultyId = fID;
                                    MPhilEducation.educationId = 5;
                                    MPhilEducation.hallticketnumber = string.IsNullOrEmpty(faculty.MPhil_HallticketNo) ? faculty.MPhil_HallticketNo : faculty.MPhil_HallticketNo.Trim();
                                    MPhilEducation.courseStudied = string.IsNullOrEmpty(faculty.MPhil_studiedEducation) ? faculty.MPhil_studiedEducation : faculty.MPhil_studiedEducation.Trim();
                                    MPhilEducation.specialization = string.IsNullOrEmpty(faculty.MPhil_specialization) ? faculty.MPhil_specialization : faculty.MPhil_specialization.Trim();
                                    MPhilEducation.passedYear = faculty.MPhil_passedYear == null ? 0 : (int)faculty.MPhil_passedYear;
                                    MPhilEducation.marksPercentage = faculty.MPhil_percentage == null ? 0 : (decimal)faculty.MPhil_percentage;
                                    MPhilEducation.division = faculty.MPhil_division == null ? 0 : (int)faculty.MPhil_division;
                                    MPhilEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.MPhil_university) ? faculty.MPhil_university : faculty.MPhil_university.Trim();
                                    MPhilEducation.placeOfEducation = string.IsNullOrEmpty(faculty.MPhil_place) ? faculty.MPhil_place : faculty.MPhil_place.Trim();
                                    MPhilEducation.certificate = faculty.MPhil_facultyCertificate;
                                    MPhilEducation.isActive = false;
                                    MPhilEducation.createdBy = UserId;
                                    MPhilEducation.createdOn = DateTime.Now;
                                    MPhilEducation.updatedBy = null;
                                    MPhilEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(MPhilEducation);
                                    db.SaveChanges();
                                }
                            }

                        }
                        else if (i == 5)
                        {
                            jntuh_registered_faculty_education PhD = education.Where(e => e.educationId == 6).Select(e => e).FirstOrDefault();

                            //PhD
                            if (PhD != null)
                            {
                                PhD.facultyId = fID;
                                PhD.educationId = 6;
                                PhD.hallticketnumber = string.IsNullOrEmpty(faculty.PhD_HallticketNo) ? PhD.hallticketnumber : faculty.PhD_HallticketNo.Trim();
                                PhD.courseStudied = string.IsNullOrEmpty(faculty.PhD_studiedEducation) ? PhD.courseStudied : faculty.PhD_studiedEducation.Trim();
                                PhD.specialization = string.IsNullOrEmpty(faculty.PhD_specialization) ? PhD.specialization : faculty.PhD_specialization.Trim();
                                PhD.passedYear = faculty.PhD_passedYear == null ? PhD.passedYear : (int)faculty.PhD_passedYear;
                                PhD.marksPercentage = faculty.PhD_percentage == null ? PhD.marksPercentage : (decimal)faculty.PhD_percentage;
                                PhD.division = faculty.PhD_division == null ? PhD.division : (int)faculty.PhD_division;
                                PhD.boardOrUniversity = string.IsNullOrEmpty(faculty.PhD_university) ? PhD.boardOrUniversity : faculty.PhD_university.Trim();
                                PhD.placeOfEducation = string.IsNullOrEmpty(faculty.PhD_place) ? PhD.placeOfEducation : faculty.PhD_place.Trim();
                                PhD.certificate = faculty.PhD_facultyCertificate;
                                PhD.isActive = false;
                                PhD.updatedBy = UserId;
                                PhD.updatedOn = DateTime.Now;
                                db.Entry(PhD).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.PhD_certificate != null)
                                {
                                    jntuh_registered_faculty_education PhDEducation = new jntuh_registered_faculty_education();
                                    PhDEducation.facultyId = fID;
                                    PhDEducation.educationId = 6;
                                    PhDEducation.hallticketnumber = string.IsNullOrEmpty(faculty.PhD_HallticketNo) ? faculty.PhD_HallticketNo : faculty.PhD_HallticketNo.Trim();
                                    PhDEducation.courseStudied = string.IsNullOrEmpty(faculty.PhD_studiedEducation) ? faculty.PhD_studiedEducation : faculty.PhD_studiedEducation.Trim();
                                    PhDEducation.specialization = string.IsNullOrEmpty(faculty.PhD_specialization) ? faculty.PhD_specialization : faculty.PhD_specialization.Trim();
                                    PhDEducation.passedYear = faculty.PhD_passedYear == null ? 0 : (int)faculty.PhD_passedYear;
                                    PhDEducation.marksPercentage = faculty.PhD_percentage == null ? 0 : (decimal)faculty.PhD_percentage;
                                    PhDEducation.division = faculty.PhD_division == null ? 0 : (int)faculty.PhD_division;
                                    PhDEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.PhD_university) ? faculty.PhD_university : faculty.PhD_university.Trim();
                                    PhDEducation.placeOfEducation = string.IsNullOrEmpty(faculty.PhD_place) ? faculty.PhD_place : faculty.PhD_place.Trim();
                                    PhDEducation.certificate = faculty.PhD_facultyCertificate;
                                    PhDEducation.isActive = false;
                                    PhDEducation.createdBy = UserId;
                                    PhDEducation.createdOn = DateTime.Now;
                                    PhDEducation.updatedBy = null;
                                    PhDEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(PhDEducation);
                                    db.SaveChanges();
                                }
                            }
                        }
                        else if (i == 7)
                        {
                            jntuh_registered_faculty_education net = education.Where(e => e.educationId == 9).Select(e => e).FirstOrDefault();

                            //NET/SLET
                            if (net != null)
                            {
                                net.facultyId = fID;
                                net.educationId = 9;
                                net.hallticketnumber = string.IsNullOrEmpty(faculty.NET_HallticketNo) ? net.hallticketnumber : faculty.NET_HallticketNo.Trim();
                                net.courseStudied = string.IsNullOrEmpty(faculty.NET_studiedEducation) ? net.courseStudied : faculty.NET_studiedEducation.Trim();
                                net.specialization = string.IsNullOrEmpty(faculty.NET_specialization) ? net.specialization : faculty.NET_specialization.Trim();
                                net.passedYear = faculty.NET_passedYear == null ? net.passedYear : (int)faculty.NET_passedYear;
                                net.marksPercentage = faculty.NET_percentage == null ? net.marksPercentage : (decimal)faculty.NET_percentage;
                                net.division = faculty.NET_division == null ? net.division : (int)faculty.NET_division;
                                net.boardOrUniversity = string.IsNullOrEmpty(faculty.NET_university) ? net.boardOrUniversity : faculty.NET_university.Trim();
                                net.placeOfEducation = string.IsNullOrEmpty(faculty.NET_place) ? net.placeOfEducation : faculty.NET_place.Trim();
                                net.certificate = faculty.NET_facultyCertificate;
                                net.isActive = false;
                                net.updatedBy = UserId;
                                net.updatedOn = DateTime.Now;
                                db.Entry(net).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.NET_certificate != null)
                                {
                                    jntuh_registered_faculty_education NETEducation = new jntuh_registered_faculty_education();
                                    NETEducation.facultyId = fID;
                                    NETEducation.educationId = 9;
                                    NETEducation.hallticketnumber = string.IsNullOrEmpty(faculty.NET_HallticketNo) ? faculty.NET_HallticketNo : faculty.NET_HallticketNo.Trim();
                                    NETEducation.courseStudied = string.IsNullOrEmpty(faculty.NET_studiedEducation) ? faculty.NET_studiedEducation : faculty.NET_studiedEducation.Trim();
                                    NETEducation.specialization = string.IsNullOrEmpty(faculty.NET_specialization) ? faculty.NET_specialization : faculty.NET_specialization.Trim();
                                    NETEducation.passedYear = faculty.NET_passedYear == null ? 0 : (int)faculty.NET_passedYear;
                                    NETEducation.marksPercentage = faculty.NET_percentage == null ? 0 : (decimal)faculty.NET_percentage;
                                    NETEducation.division = faculty.NET_division == null ? 0 : (int)faculty.NET_division;
                                    NETEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.NET_university) ? faculty.NET_university : faculty.NET_university.Trim();
                                    NETEducation.placeOfEducation = string.IsNullOrEmpty(faculty.NET_place) ? faculty.NET_place : faculty.NET_place.Trim();
                                    NETEducation.certificate = faculty.NET_facultyCertificate;
                                    NETEducation.isActive = false;
                                    NETEducation.createdBy = UserId;
                                    NETEducation.createdOn = DateTime.Now;
                                    NETEducation.updatedBy = null;
                                    NETEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(NETEducation);
                                    db.SaveChanges();
                                }
                            }
                        }
                        else if (i == 6)
                        {
                            jntuh_registered_faculty_education Others = education.Where(e => e.educationId == 8).Select(e => e).FirstOrDefault();

                            //Others
                            if (Others != null)
                            {
                                Others.facultyId = fID;
                                Others.educationId = 8;
                                //Others.courseStudied = faculty.PhD_studiedEducation;
                                //Others.specialization = faculty.PhD_specialization;
                                //Others.passedYear = faculty.PhD_passedYear == null ? 0 : (int)faculty.PhD_passedYear;
                                //Others.marksPercentage = faculty.PhD_percentage == null ? 0 : (decimal)faculty.PhD_percentage;
                                //Others.division = faculty.PhD_division == null ? 0 : (int)faculty.PhD_division;
                                //Others.boardOrUniversity = faculty.PhD_university;
                                //Others.placeOfEducation = faculty.PhD_place;
                                Others.certificate = faculty.faculty_AllCertificates;
                                Others.isActive = false;
                                Others.updatedBy = UserId;
                                Others.updatedOn = DateTime.Now;
                                db.Entry(Others).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.All_Certificates != null)
                                {
                                    jntuh_registered_faculty_education otherCertificate = new jntuh_registered_faculty_education();
                                    otherCertificate.facultyId = fID;
                                    otherCertificate.educationId = 8;
                                    otherCertificate.hallticketnumber = "Others";
                                    otherCertificate.courseStudied = "Others";
                                    otherCertificate.specialization = "Others";
                                    otherCertificate.passedYear = 0;
                                    otherCertificate.marksPercentage = 0;
                                    otherCertificate.division = 0;
                                    otherCertificate.boardOrUniversity = "Others";
                                    otherCertificate.placeOfEducation = "Others";
                                    otherCertificate.certificate = faculty.faculty_AllCertificates;
                                    otherCertificate.isActive = false;
                                    otherCertificate.createdBy = UserId;
                                    otherCertificate.createdOn = DateTime.Now;
                                    otherCertificate.updatedBy = null;
                                    otherCertificate.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(otherCertificate);
                                    db.SaveChanges();
                                }
                            }
                        }
                    }

                    #endregion

                    TempData["SUCCESS"] = "Faculty information updated successfully ";
                    TempData["ViewEditButton"] = null;
                    if (fID > 0)
                    {
                        fid = UAAAS.Models.Utilities.EncryptString(fID.ToString(),
                            WebConfigurationManager.AppSettings["CryptoKey"]);
                    }
                    return RedirectToAction("ViewFacultyDetails", new { fid = fid });
                }
                else
                {
                    var ModelErrorss = ModelState;
                    foreach (var item in ModelErrorss)
                    {
                        var key = item.Key;
                        var error = item.Value.Errors.Select(e => e.ErrorMessage).FirstOrDefault();
                        if (error == null || error == "")
                        {

                        }
                        else
                        {
                            TempData["ERROR"] = key + "-" + error;
                            break;
                        }

                    }
                    TempData["ERROR"] = "All edit fields are mandatory";
                    TempData["ViewEditButton"] = null;
                    if (fID > 0)
                    {
                        fid = UAAAS.Models.Utilities.EncryptString(fID.ToString(),
                            WebConfigurationManager.AppSettings["CryptoKey"]);
                    }

                    return RedirectToAction("ViewFacultyDetails", new { fid = fid });
                }

            }
            catch (Exception ex)
            {

                TempData["ERROR"] = "Technical issue: Upload/edit required data again";
                TempData["SUCCESS"] = null;
                TempData["ViewEditButton"] = "Show";
                if (fID > 0)
                {
                    fid = UAAAS.Models.Utilities.EncryptString(fID.ToString(),
                        WebConfigurationManager.AppSettings["CryptoKey"]);
                }

                return RedirectToAction("ViewFacultyDetails", new { fid = fid });
            }
        }

        #region Faculty News
        //
        // GET: /FacultyNews/FacultyNewsIndex
        [Authorize(Roles = "Admin, SuperAdmin")]
        public ActionResult FacultyNewsIndex()
        {
            int userID = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            string collegeName = string.Empty;
            string collegeCode = string.Empty;
            List<FacultyNews> facultyNewsList = new List<FacultyNews>();
            var facultyNews = db.jntuh_faculty_news.ToList();
            var jntuh_registered_faculty = db.jntuh_registered_faculty.Select(s => new { facultyId = s.id, RegistrationNumber = s.RegistrationNumber }).ToList();
            foreach (var item in facultyNews)
            {
                FacultyNews news = new FacultyNews();
                news.id = item.id;
                news.isNews = item.isNews;
                news.FacultyId = item.facultyId;
                news.RegistartionNumber = jntuh_registered_faculty.Where(s => s.facultyId == item.facultyId).Select(s => s.RegistrationNumber).FirstOrDefault();
                news.title = item.title;
                news.navigateURL = item.navigateURL;
                news.isActive = item.isActive;
                news.isLatest = item.isLatest;
                news.createdOn = item.createdOn;
                facultyNewsList.Add(news);
            }
            facultyNewsList = facultyNewsList.OrderBy(college => college.id).ToList();
            return View(facultyNewsList);
        }

        //
        // GET: /CollegeNews/CollegeNewsCreate
        [Authorize(Roles = "Admin, SuperAdmin")]
        public ActionResult FacultyNewsCreate()
        {
            int userID = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            FacultyNews facultyNews = new FacultyNews();
            List<FacultyNews> facultyDetails = new List<FacultyNews>();
            return View(facultyNews);
        }

        //
        // POST: /CollegeNews/CollegeNewsCreate
        [HttpPost]
        [Authorize(Roles = "Admin, SuperAdmin")]
        public ActionResult FacultyNewsCreate(FacultyNews facultyNews)
        {
            int userID = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            if (facultyNews.uploadFile != null)
            {
                string randID = string.Empty;// RamdomCode; + Id;
                if (!Directory.Exists(Server.MapPath("~/Content/Upload/FacultyNews")))
                {
                    Directory.CreateDirectory(Server.MapPath("~/Content/Upload/FacultyNews"));
                }
                var ext = Path.GetExtension(facultyNews.uploadFile.FileName);
                var fileName = facultyNews.uploadFile.FileName;
                if (ext.ToUpper().Equals(".PDF"))
                {
                    facultyNews.uploadFile.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath("~/Content/Upload/FacultyNews"), randID, fileName));
                    facultyNews.navigateURL = string.Format("{0}/{1}{2}", "/Content/Upload/FacultyNews", randID, fileName);
                }

                if (ext.ToUpper().Equals(".DOC") || ext.ToUpper().Equals(".DOCX"))
                {
                    facultyNews.uploadFile.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath("~/Content/Upload/CollegeNews"), randID, fileName));
                    facultyNews.navigateURL = string.Format("{0}/{1}{2}", "/Content/Upload/FacultyNews", randID, fileName);
                }

                if (ext.ToUpper().Equals(".XLS") || ext.ToUpper().Equals(".XLSX"))
                {
                    facultyNews.uploadFile.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath("~/Content/Upload/FacultyNews"), randID, fileName));
                    facultyNews.navigateURL = string.Format("{0}/{1}{2}", "/Content/Upload/FacultyNews", randID, fileName);
                }
            }

            if (ModelState.IsValid)
            {
                string rowExists = string.Empty;

                if (facultyNews.isNews == false)
                {
                    if (facultyNews.RegistartionNumber != null && facultyNews.RegistartionNumber != "")
                    {
                        facultyNews.FacultyId = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber.Trim() == facultyNews.RegistartionNumber.Trim()).Select(s => s.id).FirstOrDefault();
                    }
                    else
                    {
                        TempData["Error"] = "Faculty Registration Number is required";
                        return RedirectToAction("FacultyNewsCreate");
                    }
                }
                else
                {
                    facultyNews.FacultyId = null;
                }

                if (facultyNews.id == 0)
                {
                    if (facultyNews.isNews == true)
                    {
                        rowExists = db.jntuh_faculty_news.Where(news => news.title == facultyNews.title)
                                                        .Select(news => news.title)
                                                        .FirstOrDefault();
                    }
                    else
                    {
                        rowExists = db.jntuh_faculty_news.Where(news => news.title == facultyNews.title && news.facultyId == facultyNews.FacultyId)
                                                       .Select(news => news.title)
                                                       .FirstOrDefault();
                    }
                }

                if (rowExists == null || rowExists == string.Empty)
                {
                    jntuh_faculty_news newsDetails = new jntuh_faculty_news();
                    newsDetails.isNews = facultyNews.isNews;
                    newsDetails.facultyId = newsDetails.isNews == true ? null : facultyNews.FacultyId;
                    newsDetails.title = facultyNews.title;
                    newsDetails.navigateURL = facultyNews.navigateURL;
                    newsDetails.isActive = facultyNews.isActive;
                    newsDetails.isLatest = true;

                    if (facultyNews.id == 0)
                    {
                        newsDetails.createdBy = userID;
                        newsDetails.createdOn = DateTime.Now;
                        db.jntuh_faculty_news.Add(newsDetails);
                        db.SaveChanges();
                        TempData["Success"] = "Faculty News Details are Added successfully";
                    }
                }
                else
                {
                    TempData["Error"] = "News Title is already exists. Please enter a different Title.";
                }
            }
            // SaveCollegeNews(facultyNews);
            return View("~/Views/NewOnlineRegistration/FacultyNewsCreate.cshtml", facultyNews);
            // return RedirectToAction("FacultyNewsIndex");
        }

        private void SaveCollegeNews(FacultyNews facultyNews)
        {
            int userID = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            if (facultyNews.uploadFile != null)
            {
                string randID = string.Empty;// RamdomCode; + Id;
                if (!Directory.Exists(Server.MapPath("~/Content/Upload/FacultyNews")))
                {
                    Directory.CreateDirectory(Server.MapPath("~/Content/Upload/FacultyNews"));
                }
                var ext = Path.GetExtension(facultyNews.uploadFile.FileName);
                var fileName = facultyNews.uploadFile.FileName;
                if (ext.ToUpper().Equals(".PDF"))
                {
                    facultyNews.uploadFile.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath("~/Content/Upload/FacultyNews"), randID, fileName));
                    facultyNews.navigateURL = string.Format("{0}/{1}{2}", "/Content/Upload/FacultyNews", randID, fileName);
                }

                if (ext.ToUpper().Equals(".DOC") || ext.ToUpper().Equals(".DOCX"))
                {
                    facultyNews.uploadFile.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath("~/Content/Upload/CollegeNews"), randID, fileName));
                    facultyNews.navigateURL = string.Format("{0}/{1}{2}", "/Content/Upload/FacultyNews", randID, fileName);
                }

                if (ext.ToUpper().Equals(".XLS") || ext.ToUpper().Equals(".XLSX"))
                {
                    facultyNews.uploadFile.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath("~/Content/Upload/FacultyNews"), randID, fileName));
                    facultyNews.navigateURL = string.Format("{0}/{1}{2}", "/Content/Upload/FacultyNews", randID, fileName);
                }
            }

            if (ModelState.IsValid)
            {
                string rowExists = string.Empty;
                if (facultyNews.id == 0)
                {
                    if (facultyNews.isNews == true)
                    {
                        rowExists = db.jntuh_faculty_news.Where(news => news.title == facultyNews.title)
                                                        .Select(news => news.title)
                                                        .FirstOrDefault();
                    }
                    else
                    {
                        rowExists = db.jntuh_faculty_news.Where(news => news.title == facultyNews.title && news.facultyId == facultyNews.FacultyId)
                                                       .Select(news => news.title)
                                                       .FirstOrDefault();
                    }

                }
                else
                {
                    rowExists = db.jntuh_faculty_news.Where(news => news.title == facultyNews.title && news.id != facultyNews.id && news.facultyId == facultyNews.FacultyId)
                                                         .Select(news => news.title)
                                                         .FirstOrDefault();
                }

                if (rowExists == null || rowExists == string.Empty)
                {
                    jntuh_faculty_news newsDetails = new jntuh_faculty_news();
                    newsDetails.isNews = facultyNews.isNews;
                    if (newsDetails.isNews == false)
                    {
                        if (facultyNews.RegistartionNumber != null && facultyNews.RegistartionNumber != "")
                        {
                            facultyNews.FacultyId = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber.Trim() == facultyNews.RegistartionNumber.Trim()).Select(s => s.id).FirstOrDefault();
                        }
                        else
                        {
                            TempData["Error"] = "Faculty Registration Number is required";
                            //return RedirectToAction("FacultyNewsCreate");
                        }
                    }
                    else
                    {
                        facultyNews.FacultyId = null;
                    }
                    newsDetails.facultyId = newsDetails.isNews == true ? null : facultyNews.FacultyId;
                    newsDetails.title = facultyNews.title;
                    if (facultyNews.id == 0)
                    {
                        newsDetails.navigateURL = facultyNews.navigateURL;
                    }
                    else
                    {
                        if (facultyNews.uploadFile == null && facultyNews.navigateURL == null)
                        {
                            facultyNews.navigateURL = db.jntuh_faculty_news.Where(news => news.id == facultyNews.id)
                                                                              .Select(news => news.navigateURL)
                                                                              .FirstOrDefault();

                        }
                        newsDetails.navigateURL = facultyNews.navigateURL;

                    }

                    newsDetails.isActive = facultyNews.isActive;
                    newsDetails.isLatest = true;

                    if (facultyNews.id == 0)
                    {
                        newsDetails.createdBy = userID;
                        newsDetails.createdOn = DateTime.Now;
                        db.jntuh_faculty_news.Add(newsDetails);
                        TempData["Success"] = "Faculty News Details are Added successfully";
                    }
                    else
                    {
                        newsDetails.id = facultyNews.id;
                        newsDetails.isLatest = true;
                        newsDetails.createdBy = facultyNews.createdBy;
                        newsDetails.createdOn = facultyNews.createdOn;
                        newsDetails.updatedBy = userID;
                        newsDetails.updatedOn = DateTime.Now;
                        db.Entry(newsDetails).State = EntityState.Modified;
                        TempData["Success"] = "Faculty News Details are Updated successfully";
                    }
                    db.SaveChanges();
                }
                else
                {
                    TempData["Error"] = "News Title is already exists. Please enter a different Title.";
                }
            }
        }

        //
        // GET: /CollegeNews/CollegeNewsEdit
        [Authorize(Roles = "Admin, SuperAdmin")]
        public ActionResult FacultyNewsEdit(int id)
        {
            int userID = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            FacultyNews facultyNews = new FacultyNews();
            jntuh_faculty_news facultyNewsDetails = db.jntuh_faculty_news.Where(news => news.id == id).FirstOrDefault();
            if (facultyNewsDetails != null)
            {
                facultyNews.id = facultyNewsDetails.id;
                facultyNews.isNews = facultyNewsDetails.isNews;
                facultyNews.FacultyId = facultyNewsDetails.facultyId;
                facultyNews.RegistartionNumber = facultyNews.FacultyId != null ? db.jntuh_registered_faculty.Where(s => s.id == facultyNews.FacultyId).Select(a => a.RegistrationNumber).FirstOrDefault() : null;
                facultyNews.title = facultyNewsDetails.title;
                facultyNews.createdBy = facultyNewsDetails.createdBy;
                facultyNews.createdOn = facultyNewsDetails.createdOn;
                facultyNews.navigateURL = facultyNewsDetails.navigateURL;
                if (facultyNewsDetails.navigateURL != null)
                {
                    if (facultyNewsDetails.navigateURL.Length >= 27)
                    {
                        string name = facultyNewsDetails.navigateURL.Substring(0, 28);
                        if (facultyNewsDetails.navigateURL.Substring(0, 28) == "/Content/Upload/FacultyNews/")
                        {
                            facultyNews.navigateURL = string.Empty;
                        }
                    }
                }
                facultyNews.isActive = facultyNewsDetails.isActive;
                //facultyNews.isLatest = facultyNewsDetails.isLatest;
            }
            return View(facultyNews);
        }

        //
        // POST: /CollegeNews/CollegeNewsEdit
        [HttpPost]
        [Authorize(Roles = "Admin, SuperAdmin")]
        public ActionResult FacultyNewsEdit(FacultyNews facultyNews)
        {
            int userID = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            if (facultyNews.uploadFile != null)
            {
                string randID = string.Empty;// RamdomCode; + Id;
                if (!Directory.Exists(Server.MapPath("~/Content/Upload/FacultyNews")))
                {
                    Directory.CreateDirectory(Server.MapPath("~/Content/Upload/FacultyNews"));
                }
                var ext = Path.GetExtension(facultyNews.uploadFile.FileName);
                var fileName = facultyNews.uploadFile.FileName;
                if (ext.ToUpper().Equals(".PDF"))
                {
                    facultyNews.uploadFile.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath("~/Content/Upload/FacultyNews"), randID, fileName));
                    facultyNews.navigateURL = string.Format("{0}/{1}{2}", "/Content/Upload/FacultyNews", randID, fileName);
                }

                if (ext.ToUpper().Equals(".DOC") || ext.ToUpper().Equals(".DOCX"))
                {
                    facultyNews.uploadFile.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath("~/Content/Upload/CollegeNews"), randID, fileName));
                    facultyNews.navigateURL = string.Format("{0}/{1}{2}", "/Content/Upload/FacultyNews", randID, fileName);
                }

                if (ext.ToUpper().Equals(".XLS") || ext.ToUpper().Equals(".XLSX"))
                {
                    facultyNews.uploadFile.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath("~/Content/Upload/FacultyNews"), randID, fileName));
                    facultyNews.navigateURL = string.Format("{0}/{1}{2}", "/Content/Upload/FacultyNews", randID, fileName);
                }
            }

            if (ModelState.IsValid)
            {
                string rowExists = string.Empty;

                if (facultyNews.isNews == false)
                {
                    if (facultyNews.RegistartionNumber != null && facultyNews.RegistartionNumber != "")
                    {
                        facultyNews.FacultyId = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber.Trim() == facultyNews.RegistartionNumber.Trim()).Select(s => s.id).FirstOrDefault();
                    }
                    else
                    {
                        TempData["Error"] = "Faculty Registration Number is required";
                        return RedirectToAction("FacultyNewsCreate");
                    }
                }
                else
                {
                    facultyNews.FacultyId = null;
                }

                if (facultyNews.isNews == true)
                {
                    rowExists = db.jntuh_faculty_news.Where(news => news.title == facultyNews.title && news.id != facultyNews.id)
                                                    .Select(news => news.title)
                                                    .FirstOrDefault();
                }
                else
                {
                    rowExists = db.jntuh_faculty_news.Where(news => news.title == facultyNews.title && news.id != facultyNews.id && news.facultyId == facultyNews.FacultyId)
                                                    .Select(news => news.title)
                                                    .FirstOrDefault();
                }

                if (rowExists == null || rowExists == string.Empty)
                {
                    jntuh_faculty_news newsDetails = new jntuh_faculty_news();
                    newsDetails.isNews = facultyNews.isNews;
                    if (newsDetails.isNews == false)
                    {
                        if (facultyNews.RegistartionNumber != null && facultyNews.RegistartionNumber != "")
                        {
                            facultyNews.FacultyId = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber.Trim() == facultyNews.RegistartionNumber.Trim()).Select(s => s.id).FirstOrDefault();
                        }
                        else
                        {
                            TempData["Error"] = "Faculty Registration Number is required";
                            return RedirectToAction("FacultyNewsCreate");
                        }
                    }
                    else
                    {
                        facultyNews.FacultyId = null;
                    }
                    newsDetails.facultyId = newsDetails.isNews == true ? null : facultyNews.FacultyId;
                    newsDetails.title = facultyNews.title;
                    if (facultyNews.id == 0)
                    {
                        newsDetails.navigateURL = facultyNews.navigateURL;
                    }
                    else
                    {
                        if (facultyNews.uploadFile == null && facultyNews.navigateURL == null)
                        {
                            facultyNews.navigateURL = db.jntuh_faculty_news.Where(news => news.id == facultyNews.id)
                                                                              .Select(news => news.navigateURL)
                                                                              .FirstOrDefault();
                        }
                        newsDetails.navigateURL = facultyNews.navigateURL;
                    }

                    newsDetails.isActive = facultyNews.isActive;
                    newsDetails.id = facultyNews.id;
                    newsDetails.isLatest = true;
                    newsDetails.createdBy = facultyNews.createdBy;
                    newsDetails.createdOn = facultyNews.createdOn;
                    newsDetails.updatedBy = userID;
                    newsDetails.updatedOn = DateTime.Now;
                    db.Entry(newsDetails).State = EntityState.Modified;
                    db.SaveChanges();
                    TempData["Success"] = "Faculty News Details are Updated successfully";

                }
                else
                {
                    TempData["Error"] = "News Title is already exists. Please enter a different Title.";
                }
            }
            // SaveCollegeNews(facultyNews);
            // return RedirectToAction("FacultyNewsIndex");
            return View("~/Views/NewOnlineRegistration/FacultyNewsEdit.cshtml", facultyNews);
        }

        [HttpPost]
        public JsonResult CheckRegistration(string RegistartionNumber)
        {
            //This Write By Siva checking In Register Faculty                  
            var CheckingRegistrationNumber = db.jntuh_registered_faculty.Where(e => e.RegistrationNumber.Trim() == RegistartionNumber.Trim()).Select(e => e.RegistrationNumber).FirstOrDefault();
            if (!string.IsNullOrEmpty(CheckingRegistrationNumber))
            {
                // return Json("Registration Number is Exits.", JsonRequestBehavior.AllowGet);
                return Json(true);
            }
            return Json(false);
        }

        #endregion

        #region Checking Methods

        [HttpPost]
        public JsonResult CheckPanNumber(string PANNumber)
        {
            string SendPansToAPI = string.Empty;
            string CheckingPANNumber =
                db.jntuh_registered_faculty.Where(F => F.PANNumber == PANNumber.Trim())
                    .Select(F => F.PANNumber)
                    .FirstOrDefault();
            if (CheckingPANNumber != null && CheckingPANNumber != "")
            {
                if (CheckingPANNumber.Trim() == PANNumber.Trim())
                    return Json("PAN Number already registred.", JsonRequestBehavior.AllowGet);
                else
                    return Json(true);
            }
            else if (!string.IsNullOrEmpty(PANNumber))
            {
                var panstatusdb =
                   db.jntuh_pan_status.Where(p => p.PANNumber.Trim() == PANNumber.Trim() && p.PANStatus == "E")
                       .Select(s => s.PANStatus)
                       .FirstOrDefault();
                if (panstatusdb == "E")
                {
                    return Json(true);
                }
                else
                {
                    var UserID = "V0131101";
                    SendPansToAPI = UserID + "^" + PANNumber;
                    var pandetails = SendPanRequest1(SendPansToAPI);
                    string[] pandetails1 = pandetails.Split(',');
                    jntuh_pan_status PANStatus = new jntuh_pan_status();
                    PANStatus.PANNumber = pandetails1[0].ToString();
                    PANStatus.PANStatus = pandetails1[1].ToString();
                    PANStatus.FirstName = pandetails1[3].ToString();
                    PANStatus.LastName = pandetails1[2].ToString();
                    PANStatus.MiddleName = pandetails1[4].ToString();
                    // PANStatus.MiddleName = "";
                    PANStatus.Title = pandetails1[5].ToString();
                    if (!string.IsNullOrEmpty(pandetails1[6]))
                    {
                        PANStatus.LastUpdated = UAAAS.Models.Utilities.DDMMYY2MMDDYY(pandetails1[6]);
                        //PANStatus.LastUpdated = Convert.ToDateTime(pandetails1[6]);
                    }
                    PANStatus.IsActive = true;
                    PANStatus.createdby = 1;
                    PANStatus.CreateOn = DateTime.Now;
                    db.jntuh_pan_status.Add(PANStatus);
                    db.SaveChanges();
                    var panStatus = pandetails1[1].ToString();
                    if (panStatus != "E")
                        return Json("PAN Number Not Valid", JsonRequestBehavior.AllowGet);
                    else
                        return Json(true);
                }

            }
            else
                return Json(true);

        }

        /// <summary>
        /// New Registration Faculty Mobile Number Checking
        /// </summary>
        /// <param name="EditMobile"></param>
        /// <param name="RegistrationNumber"></param>
        /// <returns>true or false</returns>
        [HttpPost]
        public JsonResult NewMobileNumberCheck(string Mobile)
        {
            //This Write By Narayana checking In Register Faculty
            var CheckingRegistrationNumber = db.jntuh_registered_faculty.Where(e => e.Mobile.Trim() == Mobile.Trim()).Select(e => e.RegistrationNumber).FirstOrDefault();
            if (!string.IsNullOrEmpty(CheckingRegistrationNumber))
                return Json(false);
            return Json(true);
        }

        /// <summary>
        /// New Faculty Registration Aaadhaar Number Checking
        /// </summary>
        /// <param name="Mobile"></param>
        /// <returns>true or false</returns>
        [HttpPost]
        public JsonResult NewAadhaarNumberCheck(string AadhaarNumber)
        {
            //This Write By Narayana checking In Register Faculty           
            var status = aadharcard.validateVerhoeff(AadhaarNumber.Trim());
            if (status)
            {
                var CheckingRegistrationNumber = db.jntuh_registered_faculty.Where(e => e.AadhaarNumber.Trim() == AadhaarNumber.Trim()).Select(e => e.RegistrationNumber).FirstOrDefault();
                if (!string.IsNullOrEmpty(CheckingRegistrationNumber))
                {
                    return Json(false);
                }
                return Json(true);
            }
            else
            {
                return Json("AadhaarNumber is not a validnumber", JsonRequestBehavior.AllowGet);
            }
        }

        /// <summary>
        /// New Faculty Registration EmailId Checking
        /// </summary>
        /// <param name="Email"></param>
        /// <returns></returns>
        [HttpPost]
        public JsonResult CheckEmail(string Email)
        {
            //string StrEmail = db.my_aspnet_users.Where(u => u.name == Email).Select(u => u.name).FirstOrDefault();
            string CheckingEmail =
                db.jntuh_registered_faculty.Where(F => F.Email == Email.Trim()).Select(F => F.Email).FirstOrDefault();
            if (CheckingEmail != null && CheckingEmail != "")
                return Json(false);
            else
                return Json(true);

        }

        [HttpPost]
        public JsonResult EditCheckMobileNumber(string EditMobile, string RegistrationNumber)
        {
            //This Write By Narayana checking In Register Faculty           
            var CheckingRegistrationNumber = db.jntuh_registered_faculty.Where(e => e.Mobile.Trim() == EditMobile.Trim()).Select(e => e.RegistrationNumber).FirstOrDefault();
            int Mobilecount = db.jntuh_registered_faculty.Where(F => F.Mobile.Trim() == EditMobile.Trim()).Select(e => e.id).Count();
            if (!string.IsNullOrEmpty(CheckingRegistrationNumber))
            {
                if (CheckingRegistrationNumber.Trim() == RegistrationNumber.Trim())
                {
                    if (Mobilecount > 1)
                        return Json(false);
                    else
                        return Json(true);
                }
                else
                    return Json(false);
            }

            return Json(true);


        }

        [HttpPost]
        public JsonResult EditCheckAadhaarNumber(string EditAadhaarNumber, string RegistrationNumber)
        {
            //This Write By Narayana checking In Register Faculty          
            var status = aadharcard.validateVerhoeff(EditAadhaarNumber.Trim());
            if (status)
            {
                var CheckingRegistrationNumber = db.jntuh_registered_faculty.Where(e => e.AadhaarNumber.Trim() == EditAadhaarNumber.Trim() && e.isActive != false).Select(e => e.RegistrationNumber).FirstOrDefault();
                int Aadhaarcount = db.jntuh_registered_faculty.Where(F => F.AadhaarNumber.Trim() == EditAadhaarNumber.Trim() && F.isActive != false).Select(e => e.id).Count();
                if (!string.IsNullOrEmpty(CheckingRegistrationNumber))
                {
                    if (CheckingRegistrationNumber.Trim() == RegistrationNumber.Trim())
                    {
                        if (Aadhaarcount > 1)
                            return Json(false);
                        else
                            return Json(true);
                    }
                    else
                        return Json(false);
                }

            }
            else
            {
                return Json("AadhaarNumber is not a validnumber", JsonRequestBehavior.AllowGet);
            }
            return Json(true);
        }

        [HttpPost]
        public JsonResult CheckHallTicket(string SSC_HallticketNo, string UG_HallticketNo, string PG_HallticketNo, string MPhil_HallticketNo, string PhD_HallticketNo, string RegistrationNumber)
        {
            //This Write By Siva checking Faculty HallTicketNo In  Faculty education_log Table.                    
            if ((SSC_HallticketNo != null || UG_HallticketNo != null || PG_HallticketNo != null || MPhil_HallticketNo != null || PhD_HallticketNo != null) && RegistrationNumber != null)
            {
                var HallTicketNo = SSC_HallticketNo != null ? SSC_HallticketNo : UG_HallticketNo != null ? UG_HallticketNo : PG_HallticketNo != null ? PG_HallticketNo : MPhil_HallticketNo != null ? MPhil_HallticketNo : PhD_HallticketNo != null ? PhD_HallticketNo : null;
                var FacultyId = db.jntuh_registered_faculty.Where(s => s.RegistrationNumber.Trim() == RegistrationNumber.Trim()).Select(s => s.id).FirstOrDefault();
                var Education_Log = db.jntuh_registered_faculty_education_log.Where(a => a.hallticketnumber.Trim() == HallTicketNo.Trim() && a.facultyId != FacultyId).Select(s => s.id).FirstOrDefault();
                if (Education_Log != 0)
                {
                    return Json("HallTicket Number already registred", JsonRequestBehavior.AllowGet);
                }
            }
            return Json(true);
        }

        /// <summary>
        /// Give Edit option To faculty if any one flag is there
        /// </summary>
        /// <param name="RegistrationNumber"></param>
        /// <returns>true or false</returns>
        public bool CheckFacultyFlags(string RegistrationNumber)
        {
            bool status = false;

            var registeredFaculty = db.jntuh_registered_faculty.Where(rf => rf.RegistrationNumber.Trim() == RegistrationNumber.Trim()).ToList();

            var jntuh_registered_faculty_new = registeredFaculty.Where(rf =>
                                                rf.Xeroxcopyofcertificates == true || rf.NotQualifiedAsperAICTE == true
                                                || rf.NoSCM == true || rf.PANNumber == null || rf.IncompleteCertificates == true
                                                || (rf.NoRelevantUG == "Yes") || rf.NoRelevantPG == "Yes"
                                                || rf.NORelevantPHD == "Yes"
                                                || rf.InvalidPANNumber == true || rf.OriginalsVerifiedPHD == true
                                                || rf.OriginalsVerifiedUG == true || rf.Invaliddegree == true
                                                || rf.BAS == "Yes").Select(rf => rf).FirstOrDefault();

            //var CheckingRegistration = registeredFaculty.Where(rf => rf.type != "Adjunct" && ((rf.Xeroxcopyofcertificates == false || rf.Xeroxcopyofcertificates == null) && (rf.NotQualifiedAsperAICTE == false || rf.NotQualifiedAsperAICTE == null)
            //                                            && (rf.NoSCM == false || rf.NoSCM == null) && (rf.PANNumber != null) && (rf.IncompleteCertificates == false || rf.IncompleteCertificates == null) && (rf.Blacklistfaculy == false) && rf.NoRelevantUG != "Yes" && rf.NoRelevantPG != "Yes" && rf.NORelevantPHD != "Yes" &&
            //                                             (rf.InvalidPANNumber == false || rf.InvalidPANNumber == null) && (rf.OriginalsVerifiedPHD != true) && (rf.OriginalsVerifiedUG != true) && (rf.SamePANUsedByMultipleFaculty == false || rf.SamePANUsedByMultipleFaculty == null)) && rf.BASStatus != "Yes" && (rf.DepartmentId != 61 || rf.DepartmentId != 27)).Select(rf => rf).FirstOrDefault();

            if (jntuh_registered_faculty_new != null)
                status = true;
            else
                status = false;

            return status;

        }
        //Written By Narayan Reddy Checking Faculty Clear Condition
        public bool IsClearFaculty(string RegistrationNumber)
        {
            bool status = false;

            var CheckingRegistration =
                db.jntuh_college_faculty_registered_copy.Where(
                    c => c.RegistrationNumber.Trim() == RegistrationNumber.Trim() && c.collegeId == 1419).Select(s => s).FirstOrDefault();

            if (CheckingRegistration != null)
                status = true;
            else
                status = false;

            return status;
        }
        //Written By Narayan Reddy Checking Faculty Inactive Condition
        public bool IsInactiveFaculty(string RegistrationNumber)
        {
            bool status = false;

            var CheckingRegistration =
                db.jntuh_inactive_faculty.Where(
                    c => c.RegistrationNumber.Trim() == RegistrationNumber.Trim()).Select(s => s).FirstOrDefault();

            if (CheckingRegistration != null)
                status = true;
            else
                status = false;

            return status;
        }
        #endregion

        #region PAN Number Check Existing or NO PAN

        [HttpPost]
        public JsonResult GetDetailsBasedonPANNumber(string PANNo)
        {
            var jntuh_pan_status = db.jntuh_pan_status.AsNoTracking().ToList();
            string PANData = jntuh_pan_status.Where(F => F.PANNumber.Trim() == PANNo.Trim() && F.PANStatus == "E").Select(F => F.PANNumber).FirstOrDefault();
            string Details = "";
            if (!string.IsNullOrEmpty(PANData))
            {
                var PANDetails = jntuh_pan_status.Where(F => F.PANNumber.Trim() == PANNo.Trim() && F.PANStatus == "E").Select(F => F).FirstOrDefault();
                Details = PANDetails.PANNumber + "," + PANDetails.PANStatus + "," + PANDetails.FirstName + "," +
                          PANDetails.LastName + "," + PANDetails.MiddleName + "," + PANDetails.Title;
            }
            else
            {
                if (PANNo.Trim().Length == 10)
                {
                    string SendPansToAPI1 = string.Empty;
                    var UserID = "V0131101";
                    SendPansToAPI1 = UserID + "^" + PANNo;
                    Details = SendPanRequest1(SendPansToAPI1);
                    var pandetails = Details;
                    string[] pandetails1 = pandetails.Split(',');
                    if (pandetails1[0] != "")
                    {
                        jntuh_pan_status PANStatus = new jntuh_pan_status();
                        PANStatus.PANNumber = pandetails1[0].ToString();
                        PANStatus.PANStatus = pandetails1[1].ToString();
                        PANStatus.FirstName = pandetails1[3].ToString();
                        PANStatus.LastName = pandetails1[2].ToString();
                        PANStatus.MiddleName = pandetails1[4].ToString();
                        PANStatus.Title = pandetails1[5].ToString();
                        if (!string.IsNullOrEmpty(pandetails1[6]))
                        {
                            PANStatus.LastUpdated = UAAAS.Models.Utilities.DDMMYY2MMDDYY(pandetails1[6]);
                        }
                        PANStatus.IsActive = true;
                        PANStatus.createdby = 1;
                        PANStatus.CreateOn = DateTime.Now;
                        db.jntuh_pan_status.Add(PANStatus);
                        db.SaveChanges();
                    }
                }
            }
            return Json(new { Details }, "application/json", JsonRequestBehavior.AllowGet);
        }

        protected string SendPanRequest1(string Data)
        {
            try
            {
                string Details = string.Empty;
                System.Text.ASCIIEncoding encoding = new System.Text.ASCIIEncoding();
                byte[] bytes = encoding.GetBytes(Data);
                var path = filePath;
                //var path = Server.MapPath("jntuh_Sign.p12");
                X509Certificate2 uidCert = new X509Certificate2(filePath, "ABC12", X509KeyStorageFlags.MachineKeySet);
                byte[] sig = Sign(bytes, uidCert);
                String Signature = Convert.ToBase64String(sig);
                ServicePointManager.ServerCertificateValidationCallback = delegate(object s, X509Certificate certificate,
                    X509Chain chain, SslPolicyErrors sslPolicyErrors)
                {
                    return true;
                };
                var version = '2';
                string post_data = "data=" + Data + "&signature=" +
                                   System.Web.HttpContext.Current.Server.UrlEncode(Signature) + "&version=" + version;
                string url = "https://59.163.46.2/TIN/PanInquiryBackEnd";
                //string url = "https://121.240.9.19/TIN/PanInquiryBackEnd";
                System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12;
                // create a request
                HttpWebRequest request = (HttpWebRequest)
                    WebRequest.Create(url);
                request.KeepAlive = false;
                request.ProtocolVersion = HttpVersion.Version10;
                request.Method = "POST";
                // turn our request string into a byte stream
                byte[] postBytes = Encoding.UTF8.GetBytes(post_data);
                request.ContentType = "application/x-www-form-urlencoded";
                request.ContentLength = postBytes.Length;
                Stream requestStream = request.GetRequestStream();
                // now send it
                requestStream.Write(postBytes, 0, postBytes.Length);
                requestStream.Close();
                HttpWebResponse res = (HttpWebResponse)request.GetResponse();
                StreamReader sr = new StreamReader(res.GetResponseStream(), System.Text.Encoding.Default);
                string backstr = sr.ReadToEnd();
                Logger Log = new Logger();
                Log.Log(backstr);
                string panRes = backstr;
                string Pan1 = string.Empty;
                string[] resp = panRes.Split('^');
                if (resp[0] == "1")
                {
                    int strLength = resp.Length;
                    int LastRowCount = 0;
                    if (strLength == 11)
                    {
                        LastRowCount = 2;

                    }
                    else if (strLength == 21)
                    {
                        LastRowCount = 3;

                    }
                    else if (strLength == 31)
                    {
                        LastRowCount = 4;
                    }
                    else if (strLength == 41)
                    {
                        LastRowCount = 5;
                    }
                    else if (strLength == 51)
                    {
                        LastRowCount = 6;
                    }
                    int j = 0;
                    for (int k = 1; k < LastRowCount; k++)
                    {
                        Details = resp[j + 1] + "," + resp[j + 2] + "," + resp[j + 3] + "," + resp[j + 4] + "," +
                                  resp[j + 5] + "," + resp[j + 6] + "," + resp[j + 7] + "," + resp[j + 8] + "," +
                                  resp[j + 9] + "," + resp[j + 10];



                        j = j + k;
                        j = k * 10;
                    }

                }
                string[] Strcount = Details.Split(',');
                return Details;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public static byte[] Sign(byte[] data, X509Certificate2 certificate)
        {
            if (data == null)
                throw new ArgumentNullException("data");
            if (certificate == null)
                throw new ArgumentNullException("certificate");

            // setup the data to sign
            ContentInfo content = new ContentInfo(data);
            SignedCms signedCms = new SignedCms(content, false);
            CmsSigner signer = new CmsSigner(SubjectIdentifierType.IssuerAndSerialNumber, certificate);
            // create the signature
            signedCms.ComputeSignature(signer);
            return signedCms.Encode();
        }

        #endregion

        #region Status Codes

        private static string ErrorCodeToString1(MembershipCreateStatus createStatus)
        {
            // See http://go.microsoft.com/fwlink/?LinkID=177550 for
            // a full list of status codes.
            switch (createStatus)
            {
                case MembershipCreateStatus.DuplicateUserName:
                    return "User name already exists. Please enter a different user name.";

                case MembershipCreateStatus.DuplicateEmail:
                    return
                        "A user name for that e-mail address already exists. Please enter a different e-mail address.";

                case MembershipCreateStatus.InvalidPassword:
                    return "The password provided is invalid. Please enter a valid password value.";

                case MembershipCreateStatus.InvalidEmail:
                    return "The e-mail address provided is invalid. Please check the value and try again.";

                case MembershipCreateStatus.InvalidAnswer:
                    return "The password retrieval answer provided is invalid. Please check the value and try again.";

                case MembershipCreateStatus.InvalidQuestion:
                    return "The password retrieval question provided is invalid. Please check the value and try again.";

                case MembershipCreateStatus.InvalidUserName:
                    return "The user name provided is invalid. Please check the value and try again.";

                case MembershipCreateStatus.ProviderError:
                    return
                        "The authentication provider returned an error. Please verify your entry and try again. If the problem persists, please contact your system administrator.";

                case MembershipCreateStatus.UserRejected:
                    return
                        "The user creation request has been canceled. Please verify your entry and try again. If the problem persists, please contact your system administrator.";

                default:
                    return
                        "An unknown error occurred. Please verify your entry and try again. If the problem persists, please contact your system administrator.";
            }
        }

        #endregion

        #region Faculty Registration Page & PH.D details PDF Download

        public ActionResult FacultyData(string strfacultyId, string reg)
        {
            if (!string.IsNullOrEmpty(strfacultyId))
            {
                int fid =
                    Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(strfacultyId,
                        WebConfigurationManager.AppSettings["CryptoKey"]));
                // fid = 125662;
                string pdfPath = string.Empty;
                if (fid != 0 && reg != null)
                {
                    pdfPath = SaveFacultyDataPdf(fid, reg);
                    pdfPath = pdfPath.Replace("/", "\\");
                }
                return File(pdfPath, "application/pdf", reg + ".pdf");
            }
            else
            {
                return RedirectToAction("LogOn", "Account");
            }
        }
        //int preview, 
        public string SaveFacultyDataPdf(int fid, string reg)
        {
            string fullPath = string.Empty;
            //Set page size as A4
            Document pdfDoc = new Document(PageSize.A4, 50, 50, 40, 40);
            string path = Server.MapPath("~/Content/PDFReports/temp/FacultyPrint");
            if (!Directory.Exists(Server.MapPath("~/Content/PDFReports/temp/FacultyPrint")))
            {
                Directory.CreateDirectory(Server.MapPath("~/Content/PDFReports/temp/FacultyPrint"));
            }
            const int DelayOnRetry = 3000;
            try
            {
                //if (preview == 0)
                //{
                fullPath = path + "/" + "Faculty_Data_Print_" + reg + DateTime.Now.ToString("yyyMMddHHmmss") + ".pdf"; //
                PdfWriter pdfWriter = PdfWriter.GetInstance(pdfDoc, new FileStream(fullPath, FileMode.Create));
                ITextEvents iTextEvents = new ITextEvents();
                iTextEvents.CollegeCode = reg;
                iTextEvents.CollegeName = reg;
                iTextEvents.formType = "Faculty Information";
                pdfWriter.PageEvent = iTextEvents;
                //}
            }
            catch (IOException e)
            {
                Thread.Sleep(DelayOnRetry);
            }

            //Open PDF Document to write data
            pdfDoc.Open();

            //Assign Html content in a string to write in PDF
            string contents = string.Empty;

            StreamReader sr;

            //Read file from server path
            sr = System.IO.File.OpenText(Server.MapPath("~/Content/FacultyData.html"));
            //store content in the variable
            contents = sr.ReadToEnd();
            sr.Close();
            //contents = GetFacultyData(fid, contents);
            //contents = GetPhdFacultyData(fid, contents);
            //  contents = affiliationType(collegeId, contents);
            StringBuilder str = new StringBuilder();
            str.Append(GetFacultyData(fid, contents));
            str.Append("<br />");
            str.Append(GetIntPhdFacultyData(fid, contents));
            str.Append("<br />");
            //Read string contents using stream reader and convert html to parsed conent
            //var parsedHtmlElements = HTMLWorker.ParseToList(new StringReader(contents), null);
            var parsedHtmlElements = HTMLWorker.ParseToList(new StringReader(str.ToString()), null);
            //Get each array values from parsed elements and add to the PDF document
            bool pageRotated = false;
            int count = 0;
            foreach (var htmlElement in parsedHtmlElements)
            {
                count++;
                if (count == 100)
                {
                }
                if (htmlElement.Equals("<textarea>"))
                {
                    pdfDoc.NewPage();
                }

                if (htmlElement.Chunks.Count >= 3)
                {
                    if (htmlElement.Chunks.Count == 4)
                    {
                        pdfDoc.SetPageSize(iTextSharp.text.PageSize.A4.Rotate());
                        pdfDoc.SetMargins(60, 50, 50, 50);
                        pageRotated = true;
                    }
                    else
                    {
                        if (pageRotated == true)
                        {
                            pdfDoc.SetPageSize(iTextSharp.text.PageSize.A4);
                            pdfDoc.SetMargins(60, 50, 50, 50);
                            pageRotated = false;
                        }
                    }
                    pdfDoc.NewPage();
                }
                else
                {
                    pdfDoc.Add(htmlElement as IElement);
                }
            }

            //Close your PDF
            pdfDoc.Close();
            if (pdfDoc.IsOpen())
            {
                pdfDoc.Close();
            }

            string returnPath = string.Empty;
            returnPath = fullPath;
            return returnPath;
        }

        public string GetFacultyData(int fid, string contents)
        {
            var facultydata = (from r in db.jntuh_registered_faculty
                               join f in db.jntuh_college_faculty_registered on r.RegistrationNumber equals f.RegistrationNumber into Regdata
                               from reg in Regdata.DefaultIfEmpty()
                               join ca in db.jntuh_college on reg.collegeId equals ca.id into rcdata
                               from rc in rcdata.DefaultIfEmpty()

                               join dep in db.jntuh_department on reg.DepartmentId equals dep.id into rcdepdata
                               from rcd in rcdepdata.DefaultIfEmpty()
                               join des in db.jntuh_designation on reg.FacultySpecializationId equals des.id into rcdepdesData
                               from rcdd in rcdepdesData.DefaultIfEmpty()
                               where r.id == fid
                               select new FacultyRegistration()
                               {
                                   id = r.id,
                                   CollegeId = reg.collegeId == null ? 0 : reg.collegeId,
                                   CollegeName = rc.collegeName == null ? "NotWorking" : rc.collegeName,
                                   Eid = r.UserId,
                                   Type = r.type,
                                   RegistrationNumber = r.RegistrationNumber,
                                   FirstName = r.FirstName,
                                   LastName = r.LastName,
                                   MiddleName = r.MiddleName,
                                   GenderId = r.GenderId,
                                   FatherOrhusbandName = r.FatherOrHusbandName,
                                   MotherName = r.MotherName,
                                   DateOfBirth = r.DateOfBirth,
                                   WorkingStatus = r.WorkingStatus,
                                   facultyCategory = r.WorkingType,
                                   DesignationId = r.DesignationId,
                                   designation = rcdd.designation,
                                   OtherDesignation = r.OtherDesignation,
                                   DepartmentId = r.DepartmentId,
                                   department = rcd.departmentName,
                                   OtherDepartment = r.OtherDesignation,
                                   GrossSalary = r.grosssalary,
                                   DateOfAppointment = r.DateOfAppointment,
                                   isFacultyRatifiedByJNTU = r.isFacultyRatifiedByJNTU,
                                   ProceedingsNo = r.ProceedingsNumber,
                                   SelectionCommitteeProcedings = r.ProceedingDocument,
                                   AICTEFacultyId = r.AICTEFacultyId,
                                   TotalExperience = r.TotalExperience,


                                   TotalExperiencePresentCollege = r.TotalExperiencePresentCollege,
                                   PANNumber = r.PANNumber,
                                   AadhaarNumber = r.AadhaarNumber != null ? r.AadhaarNumber.Substring(0, 8) + "XXXX" : "-",
                                   Mobile = r.Mobile,
                                   Email = r.Email,
                                   National = r.National,
                                   InterNational = r.InterNational,
                                   Awards = r.Awards,
                                   Citation = r.Citation,
                                   facultyPhoto = r.Photo,
                                   facultyPANCardDocument = r.PANDocument,
                                   facultyAadhaarCardDocument = r.AadhaarDocument,
                                   isActive = r.isActive,
                                   isApproved = r.isApproved,
                                   BlacklistFaculty = r.Blacklistfaculy,
                                   VerificationStatus = r.AbsentforVerification
                               }).ToList();
            FacultyRegistration regFaculty = new FacultyRegistration();

            if (fid != 0)
            {
                regFaculty.GenderId = null;
                regFaculty.isFacultyRatifiedByJNTU = null;
                jntuh_registered_faculty faculty = db.jntuh_registered_faculty.Find(fid);

                if (faculty != null)
                {
                    regFaculty.id = fid;
                    regFaculty.Type = faculty.type;
                    regFaculty.RegistrationNumber = faculty.RegistrationNumber;
                    regFaculty.UserName = db.my_aspnet_users.Where(u => u.id == faculty.UserId).Select(u => u.name).FirstOrDefault();
                    regFaculty.Email = faculty.Email;
                    regFaculty.UniqueID = faculty.UniqueID;
                    regFaculty.FirstName = faculty.FirstName;
                    regFaculty.MiddleName = faculty.MiddleName;
                    regFaculty.LastName = faculty.LastName;
                    regFaculty.FatherOrhusbandName = faculty.FatherOrHusbandName;
                    regFaculty.MotherName = faculty.MotherName;
                    regFaculty.GenderId = faculty.GenderId;
                    //In DB Working Type Means Faculty Category Like: OC,SC,BC...
                    regFaculty.facultyCategory = faculty.WorkingType;
                    regFaculty.CollegeId =
                        db.jntuh_college_faculty_registered.Where(
                            f => f.RegistrationNumber == regFaculty.RegistrationNumber)
                            .Select(s => s.collegeId)
                            .FirstOrDefault();

                    if (regFaculty.CollegeId == 0 || regFaculty.CollegeId == null)
                    {
                        regFaculty.CollegeId =
                                  db.jntuh_college_principal_registered.Where(
                                      f => f.RegistrationNumber == regFaculty.RegistrationNumber)
                                      .Select(s => s.collegeId)
                                      .FirstOrDefault();
                    }


                    if (faculty.DateOfBirth != null)
                    {
                        regFaculty.facultyDateOfBirth =
                            UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfBirth.ToString());
                    }
                    regFaculty.Mobile = faculty.Mobile;
                    regFaculty.facultyPhoto = faculty.Photo;
                    regFaculty.PANNumber = faculty.PANNumber;
                    regFaculty.facultyPANCardDocument = faculty.PANDocument;
                    regFaculty.AadhaarNumber = faculty.AadhaarNumber;
                    regFaculty.facultyAadhaarCardDocument = faculty.AadhaarDocument;
                    regFaculty.IncomeTaxFileview = faculty.IncometaxDocument;
                    regFaculty.WorkingStatus = faculty.WorkingStatus;
                    regFaculty.TotalExperience = faculty.TotalExperience;
                    regFaculty.TotalExperiencePresentCollege = faculty.TotalExperiencePresentCollege;
                    if (regFaculty.CollegeId != 0)
                    {
                        regFaculty.CollegeName = db.jntuh_college.Where(a => a.id == regFaculty.CollegeId).Select(z => z.collegeName + " (" + z.collegeCode + ")").FirstOrDefault();
                    }






                    faculty.DepartmentId = db.jntuh_college_faculty_registered.Where(
                            f => f.RegistrationNumber == regFaculty.RegistrationNumber)
                            .Select(s => s.DepartmentId)
                            .FirstOrDefault();

                    if (faculty.DepartmentId != null)
                    {
                        regFaculty.department = db.jntuh_department.Find(faculty.DepartmentId).departmentName;
                    }
                    regFaculty.DepartmentId = faculty.DepartmentId;
                    regFaculty.OtherDepartment = faculty.OtherDepartment;
                    List<jntuh_registered_faculty_experience> registered_faculty_experience =
                      db.jntuh_registered_faculty_experience.Where(
                          r =>
                              r.facultyId == regFaculty.id && r.createdBycollegeId != null)
                          .Select(s => s)
                          .ToList();

                    var facultyexperiance = registered_faculty_experience.Where(
                            r => r.facultyId == regFaculty.id && r.createdBycollegeId == regFaculty.CollegeId && r.facultyJoiningOrder != null)
                            .Select(s => s)
                            .ToList()
                            .LastOrDefault();
                    if (facultyexperiance != null)
                    {
                        faculty.DesignationId = facultyexperiance.facultyDesignationId;
                        if (faculty.DesignationId != null)
                        {
                            regFaculty.designation = db.jntuh_designation.Find(faculty.DesignationId).designation;
                        }
                        regFaculty.DesignationId = faculty.DesignationId;
                        regFaculty.OtherDesignation = facultyexperiance.OtherDesignation;
                        regFaculty.facultyDateOfAppointment =
                                UAAAS.Models.Utilities.MMDDYY2DDMMYY(facultyexperiance.facultyDateOfAppointment.ToString());
                        regFaculty.facultyAppointmentLetter = facultyexperiance.facultyJoiningOrder;
                        regFaculty.GrossSalary = facultyexperiance.facultySalary;
                        if (!string.IsNullOrEmpty(regFaculty.facultyDateOfAppointment))
                        {
                            int fromyear = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[2]);
                            int frommonth = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[1]);
                            int fromdate = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[0]);

                            DateTime zeroTime = new DateTime(1, 1, 1);
                            DateTime olddate = new DateTime(fromyear, frommonth, fromdate);
                            DateTime curdate = DateTime.Now;

                            var Difference = curdate - olddate;

                            if (Difference.Days > 0)
                            {
                                int years = (zeroTime + Difference).Year - 1;
                                int months = (zeroTime + Difference).Month - 1;
                                int days = (zeroTime + Difference).Day;

                                regFaculty.showPresentCollegeExperiance = years + " Years " + months + " Months " + days + " Days";
                            }
                        }

                    }
                    //For The Experiance
                    var experiance =
                        registered_faculty_experience.Where(
                            e =>
                                e.createdBycollegeId != null && e.facultyId == regFaculty.id &&
                                e.facultyDateOfResignation != null && e.facultyDateOfResignation != null).Select(s => s).ToList();
                    int exyears = 0;
                    int exmonths = 0;
                    int exdays = 0;
                    foreach (var Experiencefaculty in experiance)
                    {
                        if (Experiencefaculty.facultyDateOfAppointment != null && Experiencefaculty.facultyDateOfResignation != null)
                        {
                            int fromyear = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[2]);
                            int frommonth = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[0]);
                            int fromdate = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[1]);


                            // Experiencefaculty.facultyDateOfResignation = UAAAS.Models.Utilities.MMDDYY2DDMMYY(Experiencefaculty.facultyDateOfResignation);

                            int year = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[2]);
                            int month = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[0]);
                            int date = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[1]);

                            DateTime zeroTime = new DateTime(1, 1, 1);
                            DateTime olddate = new DateTime(fromyear, frommonth, fromdate);
                            DateTime curdate = new DateTime(year, month, date);

                            var Difference = curdate - olddate;

                            if (Difference.Days > 0)
                            {
                                int years = (zeroTime + Difference).Year - 1;
                                int months = (zeroTime + Difference).Month - 1;
                                int days = (zeroTime + Difference).Day;

                                exyears = exyears + years;
                                exmonths = exmonths + months;
                                exdays = exdays + days;
                            }
                        }

                    }
                    while (exdays >= 30)
                    {
                        exdays = exdays - 30;
                        exmonths++;
                    }

                    while (exmonths >= 12)
                    {
                        exmonths = exmonths - 12;
                        exyears++;
                    }
                    regFaculty.showTotalExperience = exyears + " Years " + exmonths + " Months " + exdays + " Days";
                }
            }
            var facultyeducationdata = (from educatgy in db.jntuh_education_category
                                        join edu in db.jntuh_registered_faculty_education on educatgy.id equals edu.educationId
                                        where
                                            edu.facultyId == fid &&
                                            (educatgy.id == 1 || educatgy.id == 3 || educatgy.id == 4 || educatgy.id == 5 || educatgy.id == 6 || educatgy.id == 9)
                                        select new
                                        {
                                            id = edu.id,
                                            educationId = educatgy.id,
                                            facultyId = edu.facultyId,
                                            studiedEducation = edu.courseStudied,
                                            educationName = educatgy.educationCategoryName,
                                            specialization = edu.specialization,
                                            passedYear = edu.passedYear,
                                            marksPercentage = edu.marksPercentage,
                                            division = edu.division,
                                            boardOrUniversity = edu.boardOrUniversity,
                                            placeOfEducation = edu.placeOfEducation,
                                            certificte = edu.certificate,

                                        }).ToList();
            string contentdata = string.Empty;

            var Gender = "";
            var presentworking = "";
            if (facultydata[0].GenderId == 1)
            {
                Gender = "Male";
            }
            else
            {
                Gender = "FeMale";
            }

            if (facultydata[0].WorkingStatus == true)
            {
                presentworking = "Yes";
            }
            else
            {
                presentworking = "No";
            }

            string facultyphoto = "";

            string url = Get_BarCode(fid);

            if (!string.IsNullOrEmpty(facultydata[0].facultyPhoto))
            {
                facultyphoto = "/Content/Upload/Faculty/PHOTOS/" + facultydata[0].facultyPhoto;
            }
            string imgpath = @"~" + facultyphoto.Replace("%20", " ");
            imgpath = System.Web.HttpContext.Current.Server.MapPath(imgpath);


            string facultyPAndoc = "";
            if (!string.IsNullOrEmpty(facultydata[0].facultyPANCardDocument))
            {
                facultyPAndoc = "/Content/Upload/Faculty/PANCARDS/" + facultydata[0].facultyPANCardDocument;
            }
            string pandocpath = @"~" + facultyPAndoc.Replace("%20", " ");
            pandocpath = System.Web.HttpContext.Current.Server.MapPath(pandocpath);

            string facultyAadhaaardoc = "";
            if (!string.IsNullOrEmpty(facultydata[0].facultyAadhaarCardDocument))
            {
                facultyAadhaaardoc = "/Content/Upload/Faculty/AADHAARCARDS/" + facultydata[0].facultyAadhaarCardDocument;
            }
            string aadhaardocpath = @"~" + facultyAadhaaardoc.Replace("%20", " ");
            aadhaardocpath = System.Web.HttpContext.Current.Server.MapPath(aadhaardocpath);

            string facultySCMdoc = "";
            if (!string.IsNullOrEmpty(facultydata[0].SelectionCommitteeProcedings))
            {
                facultySCMdoc = "/Content/Upload/Faculty/PROCEEDINGS/" + facultydata[0].SelectionCommitteeProcedings;
            }
            string scmdocpath = @"~" + facultySCMdoc.Replace("%20", " ");
            scmdocpath = System.Web.HttpContext.Current.Server.MapPath(scmdocpath);

            string Middlename = "--";
            if (!string.IsNullOrEmpty(facultydata[0].MiddleName))
            {
                Middlename = facultydata[0].MiddleName;
            }

            contentdata += "<div>";
            contentdata += "<p style='color:darkblue;font-family:inherit;text-align:center;font-size:13px;font-family:Times New Roman'>Jawaharlal Nehru Technological University Hyderabad</p>";
            contentdata += "</div>";
            contentdata += "<div><p style='color:darkblue;font-family:inherit;text-align:center;font-size:13px;font-family:Times New Roman'>Directorate of Affiliations & Academic Audit </p></div>";
            contentdata += "<div><p style='color:darkblue;font-family:inherit;text-align:center;font-size:13px;font-family:Times New Roman'>Kukatpally, Hyderabad – 500 085, Telangana, India</p></div>";
            contentdata += "<br/>";
            if (facultydata[0].BlacklistFaculty == true)
                contentdata += "<p style='text-align:left;font-size:10px;'>You are Blacklisted due to possessing of ingenuine UG/PG/Ph.D. Certificates.</p><br/>";
            if (facultydata[0].VerificationStatus == true)
                contentdata += "<p style='text-align:left;font-size:10px;'>Your Candidature is made inactive due to your absence for physical verification.</p><br/>";
            contentdata += "<p style='text-align:left;font-size:10px;'><b><u>Faculty Registration Information :</b></u></p>";
            contentdata += "<br/><table border='0'cellspacing='0' cellpadding='4'  width='100%' class='auto' style='font-size:10px;border-collapse:collapse'>"; //cellspacing='0' cellpadding='5'
            contentdata += "<tr><td style='text-align:left' width='16%'>Registration ID&nbsp;&nbsp;:</td><td  style='text-align:left'  width='47%'>" +
            facultydata[0].RegistrationNumber + "</td>";

            if (imgpath != null)
            {
                string FacultyParsing = string.Empty;
                string strFacultyPhoto = string.Empty;
                var ServerPath = "http://jntuhaac.in/Content/Upload/Faculty/Photos/" + facultydata[0].facultyPhoto;

                // byte[] data;
                //WebClient client = new WebClient();
                //data = client.DownloadData(ServerPath);

                #region With-Out Html Parsing
                try
                {
                    if (!string.IsNullOrEmpty(imgpath))
                    {
                        FacultyParsing += "<p align='center'><img src='" + HtmlEncoder.Encode(imgpath.Trim()) + "' align='center'  width='80' height='80' /></p>";
                        var ParseEliments = HTMLWorker.ParseToList(new StringReader(FacultyParsing), null);

                        if (imgpath.Contains("."))
                        {
                            strFacultyPhoto = "<img style='text-align:left'  alt=''src='" + HtmlEncoder.Encode(imgpath.Trim()) + "' height='80'  width='80' />";
                            contentdata += "<td rowspan=2  width='18%'><p align='center'>" + strFacultyPhoto + "</p></td>";
                        }
                        else
                        {
                            contentdata += "<td rowspan=2  width='18%'><p align='center'>&nbsp;</p></td>";
                        }
                    }
                    else
                    {
                        contentdata += "<td rowspan=2  width='18%'><p align='center'>&nbsp;</p></td>";
                    }
                }
                catch (Exception ex)
                {
                    contentdata += "<td rowspan=2  width='18%'><p align='center'>&nbsp;</p></td>";
                    //try
                    //{
                    //    FacultyParsing = string.Empty;
                    //    strFacultyPhoto = string.Empty;
                    //    if (!string.IsNullOrEmpty(ServerPath))
                    //    {
                    //        FacultyParsing += "<p align='center'><img src='" + HtmlEncoder.Encode(ServerPath.Trim()) + "' align='center'  width='80' height='80' /></p>";
                    //        var ParseEliments = HTMLWorker.ParseToList(new StringReader(FacultyParsing), null);

                    //        if (ServerPath.Contains("."))
                    //        {
                    //            strFacultyPhoto = "<img style='text-align:left'  alt=''src='" + HtmlEncoder.Encode(ServerPath.Trim()) + "' height='80'  width='80' />";
                    //            contentdata += "<td rowspan=2  width='18%'><p align='center'>" + strFacultyPhoto + "</p></td>";
                    //        }
                    //        else
                    //        {
                    //            contentdata += "<td rowspan=2  width='18%'><p align='center'>&nbsp;</p></td>";
                    //        }
                    //    }
                    //    else
                    //    {
                    //        contentdata += "<td rowspan=2  width='18%'><p align='center'>&nbsp;</p></td>";
                    //    }
                    //}
                    //catch (Exception exe)
                    //{
                    //    contentdata += "<td rowspan=2  width='18%'><p align='center'>&nbsp;</p></td>";
                    //}
                }
                #endregion
            }
            else
            {
                contentdata += "<td style='text-align:left'  rowspan=2  width='18%'>----</td>";
            }

            if (url != null)
            {
                contentdata += "<td rowspan=2  width='18%'><img style='text-align:left'  src='" + url +
                       "' height='80' Width='80'/></td>";
            }
            else
            {
                contentdata += "<td style='text-align:left'   rowspan=2 width='18%'>----</td>";
            }
            contentdata += "</tr>";
            contentdata += "<tr>";
            contentdata += "<td style='text-align:left' width='16%'>First Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<br/>Middle Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<br/>Last Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</td><td style='text-align:left' width='47%'>" + facultydata[0].FirstName + "<br/>"
                + facultydata[0].MiddleName + "<br/>" + facultydata[0].LastName + "</td>";

            contentdata += "</tr>";
            contentdata += "</table>";

            contentdata += "<p style='text-align:left;font-size:10px;'><b><u>Faculty Basic Information :</b></u></p>";
            contentdata += "<br/><table border='1'cellspacing='0' cellpadding='4'   width='100%' class='auto' style='font-size:10px;border-collapse:collapse'>"; //cellspacing='0' cellpadding='5'

            contentdata += "<tr><td style='text-align:left'>Father's/Husband's Name : </td><td style='text-align:left'>" +
                     facultydata[0].FatherOrhusbandName + "</td>";
            contentdata += "<td style='text-align:left'>Mother Name : </td><td style='text-align:left'>" + facultydata[0].MotherName +
                           "</td></tr>";

            contentdata += "<tr><td style='text-align:left'>Gender : </td><td style='text-align:left'>" + Gender + "</td>";
            contentdata += "<td style='text-align:left'>Date of Birth  : </td><td style='text-align:left'>" +
                           UAAAS.Models.Utilities.MMDDYY2DDMMYY(facultydata[0].DateOfBirth.ToString())
                           + "</td></tr>";
            contentdata += "<tr><td style='text-align:left'>Mobile No : </td><td style='text-align:left'>" +
                          facultydata[0].Mobile + "</td><td style='text-align:left'  width='13%'>Email :</td><td  style='text-align:left'  width='45%'>" +
                facultydata[0].Email + "</td></tr>";

            contentdata += "<tr><td style='text-align:left'>PAN Number :</td><td style='text-align:left'>"
                + facultydata[0].PANNumber + "</td><td style='text-align:left'>Aadhaar Number : </td><td style='text-align:left'>"
                + facultydata[0].AadhaarNumber +
                         "</td></tr>";

            contentdata += "<tr>";
            if (pandocpath != null)
            {
                contentdata += "<td style='text-align:left'>PAN  Document : </td><td style='text-align:left'>Yes</td>";
            }
            else
            {
                contentdata += "<td style='text-align:left'>PAN  Document : </td><td style='text-align:left'>No</td>";
            }

            if (aadhaardocpath != null)
            {
                contentdata += "<td style='text-align:left'>Aadhaaar Document  : </td><td style='text-align:left'>Yes</td>";
            }
            else
            {
                contentdata += "<td style='text-align:left'>Aadhaaar Document  : </td><td style='text-align:left'>No</td>";
            }
            contentdata += "<tr><td style='text-align:left'>Category : </td><td style='text-align:left'>" +
                      facultydata[0].facultyCategory +
                      "</td><td></td><td></td></tr>";

            contentdata += "</tr></table>";

            contentdata += "<p style='text-align:left;font-size:10px;'><b><u>Faculty College Information : (Automatically taken from College Portal Where Presently Working)</b></u></p>";

            if (facultydata[0].CollegeName != null || facultydata[0].CollegeName != "")
            {
                contentdata += "<br/><table border='1'cellspacing='0' cellpadding='4'  width='100%' class='auto' style='font-size:10px;border-collapse:collapse'>"; //cellspacing='0' cellpadding='5'

                contentdata += "<tr style='text-align:left' colspan=3 width='50%'><td>Name of the College presently working in</td><td style='text-align:left' colspan=3 width='50%'>" + regFaculty.CollegeName + "</td></tr>";
                contentdata += "</tr></table>";
            }
            else
            {
                contentdata += "<div style='text-align:center'>No CollegeDetails Are Found</div>";
            }

            contentdata += "<table border='1'cellspacing='0' cellpadding='4'  width='100%' class='auto' style='font-size:10px;border-collapse:collapse'>"; //cellspacing='0' cellpadding='5'
            contentdata += "<tr><td style='text-align:left'>Department  : </td><td style='text-align:left'>" + facultydata[0].department +
                         "</td>";
            contentdata += "<td style='text-align:left'>Designation  : </td><td style='text-align:left'>" + regFaculty.designation +
                           "</td></tr>";

            contentdata += "<tr><td style='text-align:left'>Experience in the present Institution (years)</td><td style='text-align:left'>" +
                 regFaculty.showPresentCollegeExperiance +
                "</td><td style='text-align:left'>Total Experience  : </td><td style='text-align:left'>" +
                          regFaculty.showTotalExperience +
                           "</td></tr>";

            contentdata += "<tr><td style='text-align:left'>AICTE Faculty Id :</td><td style='text-align:left'>" + facultydata[0].AICTEFacultyId +
                           "</td><td style='text-align:left'>Gross Salary Last Drawn:</td><td style='text-align:left'>" +
                             regFaculty.GrossSalary + "</td></tr>";

            contentdata += "<tr><td style='text-align:left'>Date of Appointment  : </td><td style='text-align:left'>" +
                //+
                regFaculty.facultyDateOfAppointment +
                         "</td><td></td><td></td></tr>";

            contentdata += "</table>";

            contentdata += "<p style='text-align:left;font-size:10px;'><b><u>Faculty Education Information :</b></u></p>";
            if (facultyeducationdata.Count != 0 && facultyeducationdata.Count != null)
            {

                contentdata += "<br/><table border='1'cellspacing='0' cellpadding='4'  width='100%' class='auto' style='font-size:9px;border-collapse:collapse'>"; //cellspacing='0' cellpadding='5'
                contentdata += "<tr>";
                contentdata += "<td width='11%' style='text-align:left'>Education Name</td>";
                contentdata += "<td width='12%' style='text-align:left'>Course Studied</td>";
                contentdata += "<td width='14%' style='text-align:left'>Branch /Specialization</td>";
                contentdata += "<td width='9%' style='text-align:left'>Year of Passing</td>";
                contentdata += "<td width='9%' style='text-align:left'>% of Marks /CGPA</td>";
                contentdata += "<td width='8%' style='text-align:left'>Division</td>";
                contentdata += "<td width='20%' style='text-align:left'>Board /University</td>";
                contentdata += "<td width='11%' style='text-align:left'>Place</td>";
                contentdata += "<td width='6%' style='text-align:left'>Ceritificate</td>";
                contentdata += "</tr>";
                foreach (var item in facultyeducationdata)
                {
                    if (item.educationId == 6 && item.passedYear == 0)
                    {
                        //var phdexsistdata = db.jntuh_faculty_phddetails.Where(p => p.Facultyid == fid).Select(s => s).FirstOrDefault();
                        //string CerificateStatus = phdexsistdata == null ? "No" : "Yes";
                        //contentdata += "<tr>";
                        //contentdata += "<td width='11%' style='text-align:left'>" + item.educationName + "</td>";
                        //contentdata += "<td width='12%' style='text-align:left'>" + item.studiedEducation + "</td>";
                        //contentdata += "<td width='14%' style='text-align:left'>" + item.specialization + "</td>";
                        //contentdata += "<td width='9%' style='text-align:left'>" + item.passedYear + "</td>";
                        //contentdata += "<td width='9%' style='text-align:left'>" + item.marksPercentage + "</td>";
                        //contentdata += "<td width='8%' style='text-align:left'>" + item.division + "</td>";
                        //contentdata += "<td width='20%' style='text-align:left'>" + item.boardOrUniversity + "</td>";
                        //contentdata += "<td width='11%' style='text-align:left'>" + item.placeOfEducation + "</td>";
                        //contentdata += "<td width='6%' style='text-align:left'>" + CerificateStatus + "</td>";
                        //contentdata += "</tr>";
                    }
                    else
                    {
                        string facultycertificatedoc = "";
                        if (!string.IsNullOrEmpty(item.certificte))
                        {
                            facultycertificatedoc = "/Content/Upload/Faculty/CERTIFICATES/" + item.certificte;
                        }
                        string certificatedocpath = @"~" + facultycertificatedoc.Replace("%20", " ");
                        certificatedocpath = System.Web.HttpContext.Current.Server.MapPath(certificatedocpath);
                        string CerificateStatus = item.certificte == null ? "No" : "Yes";
                        contentdata += "<tr>";
                        contentdata += "<td width='11%' style='text-align:left'>" + item.educationName + "</td>";
                        contentdata += "<td width='12%' style='text-align:left'>" + item.studiedEducation + "</td>";
                        contentdata += "<td width='14%' style='text-align:left'>" + item.specialization + "</td>";
                        contentdata += "<td width='9%' style='text-align:left'>" + item.passedYear + "</td>";
                        contentdata += "<td width='9%' style='text-align:left'>" + item.marksPercentage + "</td>";
                        contentdata += "<td width='8%' style='text-align:left'>" + item.division + "</td>";
                        contentdata += "<td width='20%' style='text-align:left'>" + item.boardOrUniversity + "</td>";
                        contentdata += "<td width='11%' style='text-align:left'>" + item.placeOfEducation + "</td>";
                        contentdata += "<td width='6%' style='text-align:left'>" + CerificateStatus + "</td>";
                        contentdata += "</tr>";
                    }
                }
                contentdata += "</table>";
            }
            else
            {
                contentdata += "<div style='text-align:center'>No EducationDetails Are Found</div>";
            }

            contents = contents.Replace("##COLLEGE_RANDOMCODE##", contentdata);
            return contents;
        }

        public string Get_BarCode(int fid)
        {
            string BarCodeDetails = string.Empty;
            //int FacultyId
            // string RegistrationNumber = "1960-171007-170838";
            string strimagebarcodedetails = string.Empty;
            var Facultyinformation = db.jntuh_registered_faculty.Where(r => r.id == fid).Select(e => e).FirstOrDefault();
            string facultyDateOfBirth = string.Empty;
            string facultyAadhaarNumber = "-";
            if (!String.IsNullOrEmpty(Facultyinformation.AadhaarNumber))
                facultyAadhaarNumber = Facultyinformation.AadhaarNumber.Substring(0, 8) + "XXXX";

            if (Facultyinformation.DateOfBirth != null)
            {
                facultyDateOfBirth =
                    UAAAS.Models.Utilities.MMDDYY2DDMMYY(Facultyinformation.DateOfBirth.ToString());
            }

            string CC = db.jntuh_college.Where(c => c.id == Facultyinformation.collegeId).Select(c => c.collegeCode.ToUpper()).FirstOrDefault();
            BarCodeDetails = "CC :" + CC + ", RegNo :" + Facultyinformation.RegistrationNumber + ", Name :" + (Facultyinformation.FirstName + " " + Facultyinformation.MiddleName + " " + Facultyinformation.LastName) + ", DOB :" + facultyDateOfBirth + ", Mobile :" + Facultyinformation.Mobile + ", EmailId :" + Facultyinformation.Email + ", AadhaarNumber :" + facultyAadhaarNumber;
            string CollegeInformation = string.Empty;
            Gma.QrCodeNet.Encoding.QrEncoder qrEncoder = new Gma.QrCodeNet.Encoding.QrEncoder(Gma.QrCodeNet.Encoding.ErrorCorrectionLevel.H);
            Gma.QrCodeNet.Encoding.QrCode qrCode = new Gma.QrCodeNet.Encoding.QrCode();
            qrEncoder.TryEncode(BarCodeDetails, out qrCode);
            Gma.QrCodeNet.Encoding.Windows.Render.GraphicsRenderer renderer = new Gma.QrCodeNet.Encoding.Windows.Render.GraphicsRenderer(new Gma.QrCodeNet.Encoding.Windows.Render.FixedModuleSize(4, Gma.QrCodeNet.Encoding.Windows.Render.QuietZoneModules.Four), System.Drawing.Brushes.Black, System.Drawing.Brushes.White);

            Stream memoryStream = new MemoryStream();
            renderer.WriteToStream(qrCode.Matrix, ImageFormat.Png, memoryStream);
            // very important to reset memory stream to a starting position, otherwise you would get 0 bytes returned
            memoryStream.Position = 0;

            var resultStream = new FileStreamResult(memoryStream, "image/png");
            resultStream.FileDownloadName = String.Format("{0}.png", CC + "_" + Facultyinformation.RegistrationNumber + "_QRCode");

            System.Drawing.Image v = System.Drawing.Image.FromStream(memoryStream);
            if (!Directory.Exists(Server.MapPath("~/Content/BarcodeImage")))
            {
                Directory.CreateDirectory(Server.MapPath("~/Content/BarcodeImage"));
            }
            var ext = resultStream.ContentType;
            var Filename = resultStream.FileDownloadName;

            System.Drawing.Image img = v;
            img.Save(string.Format("{0}/{1}", Server.MapPath("~/Content/BarcodeImage"), Filename));

            string Filepath = Server.MapPath("~/Content/BarcodeImage/" + Filename);
            return Filepath;
        }

        public string GetIntPhdFacultyData(int fid, string contents)
        {
            var contentdata = string.Empty;
            var phddetails = new FacultyphdDetails();
            var phdtypeslist = new List<SelectListItem>();
            phdtypeslist.Add(new SelectListItem { Text = "Full Time/ Regular", Value = "1" });
            phdtypeslist.Add(new SelectListItem { Text = "Part Time/ External", Value = "2" });
            ViewBag.phdtype = phdtypeslist;
            var phdexsistdata = db.jntuh_faculty_phddetails.Where(p => p.Facultyid == fid).Select(s => s).FirstOrDefault();
            if (phdexsistdata != null)
            {
                phddetails.PhdType = Convert.ToInt32(phdexsistdata.Phdtype);
                phddetails.PhdnotificationIssued = phdexsistdata.Notificationissued;
                var phdnotificationissuedlist = new List<SelectListItem>();
                phdnotificationissuedlist.Add(new SelectListItem { Text = "Online", Value = "1" });
                phdnotificationissuedlist.Add(new SelectListItem { Text = "Offline", Value = "2" });
                ViewBag.phdnotificationissuedlist = phdnotificationissuedlist;
                if (phdexsistdata.Notificationissued > 0)
                {
                    phddetails.PhdnotificationIssuedTxt = phdnotificationissuedlist.First(i => i.Value == phdexsistdata.Notificationissued.ToString()).Text;
                }
                phddetails.PhdTypeid = phdtypeslist.First(i => i.Value == phddetails.PhdType.ToString()).Text;
                phddetails.PhdawardYear = Convert.ToInt32(phdexsistdata.Phdawardyear);
                phddetails.PhdAdmissionYear = Convert.ToInt32(phdexsistdata.AdmissionYear);
                phddetails.University = phdexsistdata.University;
                phddetails.PlaceofUniversity = phdexsistdata.Placeofuniversity;
                phddetails.PhdTitle = phdexsistdata.Phdtitle;
                phddetails.UniversityType = Convert.ToInt32(phdexsistdata.Universitytype);
                phddetails.SupervisorName1 = phdexsistdata.Supervisorname1;
                phddetails.SupervisorName2 = phdexsistdata.Supervisorname2;
                phddetails.SupervisorName3 = phdexsistdata.Supervisorname3;
                phddetails.AdmissionLetterpath = phdexsistdata.Admissionletter;
                phddetails.PrephdLetterpath = phdexsistdata.Prephdletter;
                phddetails.GenuinenessLetterpath = phdexsistdata.Genuinenessletter;
                phddetails.CollegeAuthenticationLetterpath = phdexsistdata.Collegeauthaticationletter;
                phddetails.ThesiscoverPagepath = phdexsistdata.Thesiscoverpage;
                phddetails.OtherLetterpath = phdexsistdata.Otherletter;
                //New Fields
                phddetails.PhdnotificationIssued = phdexsistdata.Notificationissued;
                phddetails.RegistrationNumberOrHallticketNo = phdexsistdata.Hallticketnumber;
                phddetails.HowmanyreviewsRRMattended = phdexsistdata.Reviewsattended;
                phddetails.HowmanypapersPublished = phdexsistdata.Paperspublished;
                phddetails.Externalexamineratthetimeofdefense = phdexsistdata.Timeofdefense;
                var universitytypelist = new List<SelectListItem>();
                universitytypelist.Add(new SelectListItem { Text = "Central", Value = "1" });
                universitytypelist.Add(new SelectListItem { Text = "State", Value = "2" });
                universitytypelist.Add(new SelectListItem { Text = "Private", Value = "3" });
                universitytypelist.Add(new SelectListItem { Text = "Deemed to be University", Value = "4" });
                universitytypelist.Add(new SelectListItem { Text = "International University", Value = "5" });
                ViewBag.universitytype = universitytypelist;
                if (phdexsistdata.Universitytype != null && phdexsistdata.Universitytype > 0)
                {
                    phddetails.UniversityTypeTxt = universitytypelist.First(i => i.Value == phdexsistdata.Universitytype.ToString()).Text;
                }
                phddetails.PressnotDateTxt = Models.Utilities.MMDDYY2DDMMYY(phdexsistdata.Vivadate.ToString());
                phddetails.BOSChairpersonatthetimeofThesisSubmission = phdexsistdata.Boschairperson;
                phddetails.DateofVivaTxt = Models.Utilities.MMDDYY2DDMMYY(phdexsistdata.Pressnotification.ToString());
                phddetails.HaveyouattendConvocation = phdexsistdata.Convocationattended != null
                    ? (bool)phdexsistdata.Convocationattended
                    : false;
                phddetails.PhdofferingDepartment = phdexsistdata.Department;
                phddetails.PhdSpecialization = phdexsistdata.Specialization;
                phddetails.NoCformthecollegepath = phdexsistdata.Nocletter;
                phddetails.UniversityWebsite = phdexsistdata.Website;
                phddetails.UniversityAddress = phdexsistdata.Address;
                phddetails.HowmanypapersPublishedduringPhdWork = phdexsistdata.PaperspublishedDPW;
                phddetails.Phdodpath = phdexsistdata.Phdod;
                phddetails.InterNationalJrnls = phdexsistdata.IntNationalJrnls;
                phddetails.NationalJrnls = phdexsistdata.NationalJrnls;
                phddetails.InterNationalCnfrs = phdexsistdata.IntNationalCnfrns;
                phddetails.NationalCnfrs = phdexsistdata.NationalCnfrns;
                phddetails.InterNationalJrnlspath = phdexsistdata.IntNationalJrnlsDocLetter;
                phddetails.NationalJrnlspath = phdexsistdata.NationalJrnlsDocLetter;
                phddetails.InterNationalCnfrspath = phdexsistdata.IntNationalCnfrnsLetter;
                phddetails.NationalCnfrspath = phdexsistdata.NationalCnfrnsLetter;
                phddetails.HaveyouattendConvocationTxt = phdexsistdata.Convocationattended == true ? "Yes" : "No";
                var AdmissionLetterpath1 = string.IsNullOrEmpty(phddetails.AdmissionLetterpath) ? "No" : "Yes";
                var NoCformthecollegepathdocpath1 = string.IsNullOrEmpty(phddetails.NoCformthecollegepath) ? "No" : "Yes";
                var PrephdLetterpath1 = string.IsNullOrEmpty(phddetails.PrephdLetterpath) ? "No" : "Yes";
                var Phdodpath1 = string.IsNullOrEmpty(phddetails.Phdodpath) ? "No" : "Yes";
                var GenuinenessLetterpath = string.IsNullOrEmpty(phddetails.GenuinenessLetterpath) ? "No" : "Yes";
                var CollegeAuthenticationLetterpath = string.IsNullOrEmpty(phddetails.CollegeAuthenticationLetterpath) ? "No" : "Yes";
                var ThesiscoverPagepath = string.IsNullOrEmpty(phddetails.ThesiscoverPagepath) ? "No" : "Yes";
                var OtherLetterpath = string.IsNullOrEmpty(phddetails.OtherLetterpath) ? "No" : "Yes";
                var Gender = "";
                var presentworking = "";
                var facultyphoto = "";
                //var url = PhdGet_BarCode(fid);
                contentdata +=
                    "<br/><br/><p style='text-align:left;font-size:10px;'><b><u>Faculty Ph.D. Details :</b></u></p>";
                contentdata +=
                    "<br/><table border='1'cellspacing='0' cellpadding='4'  width='100%' class='auto' style='font-size:10px;border-collapse:collapse'>";
                //cellspacing='0' cellpadding='5'

                contentdata +=
                    "<tr><td style='text-align:left' colspan=2>Ph.D. Specialization</td><td style='text-align:left' colspan=2>" +
                    phddetails.PhdSpecialization +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=2>Department Offering Ph.D.</td><td style='text-align:left' colspan=2>" +
                    phddetails.PhdofferingDepartment +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=2>University/Institute Type from which Ph.D. Degree is awarded</td><td style='text-align:left' colspan=2>" +
                    phddetails.UniversityTypeTxt +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=2>Course Type</td><td style='text-align:left' colspan=2>" +
                    phddetails.PhdTypeid +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=2>Ph.D. Notification Issued</td><td style='text-align:left' colspan=2>" +
                    phddetails.PhdnotificationIssuedTxt +
                    "</td></tr>";
                contentdata +=
                    "<tr><td style='text-align:left' colspan=2>Ph.D. Registration Number/ Hall Ticket Number</td><td style='text-align:left' colspan=2>" +
                    phddetails.RegistrationNumberOrHallticketNo +
                    "</td></tr>";
                contentdata +=
                    "<tr><td style='text-align:left' colspan=2>Admission Letter,ID Card</td><td style='text-align:left' colspan=2>" +
                    AdmissionLetterpath1 +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=2>Year of Admission</td><td style='text-align:left' colspan=2>" +
                    phddetails.PhdAdmissionYear +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=2>Exact Date of Final viva</td><td style='text-align:left' colspan=2>" +
                    phddetails.PressnotDateTxt +
                    "</td></tr>";
                contentdata +=
                    "<tr><td style='text-align:left' colspan=2>Date of Ph.D. Notification of the University</td><td style='text-align:left' colspan=2>" +
                    phddetails.DateofVivaTxt +
                    "</td></tr>";
                contentdata +=
                    "<tr><td style='text-align:left' colspan=2>Year of Award of Degree</td><td style='text-align:left' colspan=2>" +
                    phddetails.PhdawardYear +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=2>Supervisor Name1</td><td style='text-align:left' colspan=2>" +
                    phddetails.SupervisorName1 +
                    "</td></tr>";
                contentdata +=
                    "<tr><td style='text-align:left' colspan=2>Supervisor Name2</td><td style='text-align:left' colspan=2>" +
                    phddetails.SupervisorName2 +
                    "</td></tr>";
                contentdata +=
                    "<tr><td style='text-align:left' colspan=2>Supervisor Name3</td><td style='text-align:left' colspan=2>" +
                    phddetails.SupervisorName3 +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=1>Thesis Title</td><td style='text-align:left' colspan=3>" +
                    phddetails.PhdTitle +
                    "</td></tr>";

                contentdata +=
                    "<tr> <td style='text-align:left' colspan=1>Name of the University Address</td><td style='text-align:left' colspan=3>" +
                    phddetails.University + "," + "" + "<br/>" + phddetails.UniversityAddress + "," + phddetails.PlaceofUniversity + "</td></tr>";
                //"" + "<br/>" + phddetails.PlaceofUniversity + phddetails.UniversityWebsite + "," + "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=3>How Many Review meetings Attended</td><td style='text-align:left' colspan=3>" +
                    phddetails.HowmanyreviewsRRMattended +
                    "</td></tr>";

                var InterNationalJrnlspath = String.IsNullOrEmpty(phddetails.InterNationalJrnlspath) ? "No" : "Yes";

                contentdata +=
                    "<tr>   <td style='text-align:left' colspan=2> Number of International Publications</td><td style='text-align:left'>" +
                    phddetails.InterNationalJrnls + "</td><td style='text-align:left'>" +
                    InterNationalJrnlspath + "</td></tr>";

                var NationalJrnlspath = String.IsNullOrEmpty(phddetails.NationalJrnlspath) ? "No" : "Yes";

                contentdata +=
                    "<tr>  <td style='text-align:left' colspan=2>Number of National Publications</td><td style='text-align:left'>" +
                    phddetails.NationalJrnls +
                    "</td><td style='text-align:left'>" + NationalJrnlspath +
                    "</td></tr>";

                var InterNationalCnfrspath = String.IsNullOrEmpty(phddetails.InterNationalCnfrspath) ? "No" : "Yes";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=2>Number of papers presented at International Conferences</td><td style='text-align:left'>" +
                    phddetails.InterNationalCnfrs + "</td><td style='text-align:left'>" +
                    InterNationalCnfrspath + "</td></tr>";

                var NationalCnfrspath = String.IsNullOrEmpty(phddetails.NationalCnfrspath) ? "No" : "Yes";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=2>Number of papers presented at National Conferences</td><td style='text-align:left'>" +
                    phddetails.NationalCnfrs +
                    "</td><td style='text-align:left'>" + NationalCnfrspath +
                    "</td></tr>";
                contentdata +=
                    "<tr><td style='text-align:left' colspan=3>How many Papers Published During PhD Work</td><td style='text-align:left' colspan=3>" +
                    phddetails.HowmanypapersPublishedduringPhdWork +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=3>Name of the External Examiner during thesis defence</td><td style='text-align:left' colspan=3>" +
                    phddetails.Externalexamineratthetimeofdefense +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=3>Name of the BOS Chairperson at the time of Thesis Submission</td><td style='text-align:left' colspan=3>" +
                    phddetails.BOSChairpersonatthetimeofThesisSubmission +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=3>Whether attended Convocation in person</td><td style='text-align:left' colspan=3>" +
                    phddetails.HaveyouattendConvocationTxt +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=3>NOC from the college to pursue Ph.D.</td><td style='text-align:left' colspan=3>" +
                    NoCformthecollegepathdocpath1 +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=3>Pre-Ph.D exam/equivalent result proof</td><td style='text-align:left' colspan=3>" +
                    PrephdLetterpath1 +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=3>Original Degree Certificate</td><td style='text-align:left' colspan=3>" +
                    Phdodpath1 +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=3>Genuineness Letter (obtain through proper channel)</td><td style='text-align:left' colspan=3>" +
                    GenuinenessLetterpath +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=3>College Certified Letter(Duly Signed by Principal)</td><td style='text-align:left' colspan=3>" +
                    CollegeAuthenticationLetterpath +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=3>Thesis Cover Pages(including Examiner Signed Certificates)</td><td style='text-align:left' colspan=3>" +
                    ThesiscoverPagepath +
                    "</td></tr>";

                contentdata +=
                    "<tr><td style='text-align:left' colspan=3>Other Supporting Documents(Optional)</td><td style='text-align:left' colspan=3>" +
                    OtherLetterpath +
                    "</td></tr>";
                contentdata += "</table>";
            }
            contents = contents.Replace("##COLLEGE_RANDOMCODE##", contentdata);
            return contents;
        }

        #endregion

        [HttpGet]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult UploadPhd(string fid)
        {
            return RedirectToAction("Logon", "Account");
            int fID = 0;
            int? userId = 0;
            if (Membership.GetUser(User.Identity.Name) == null)
                return RedirectToAction("Logon", "Account");
            else
                userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            string RegistrationNumber = string.Empty;

            if (fid != null)
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(fid.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]));
            else if (userId != null && userId != 0)
            {
                RegistrationNumber = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(e => e.RegistrationNumber).FirstOrDefault();
                fID = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber == RegistrationNumber).Select(a => a.id).FirstOrDefault();
            }
            else
            {
                TempData["SUCCESS"] = null;
                return RedirectToAction("Logon", "Account");
            }

            var PhdUploadRegNos = new string[] { "9725-180831-130259", "3423-181126-115420", "9970-181124-144721", "7687-180818-104509", "1098-190117-151219", "6881-190201-230301", "3900-190118-164906", "7923-181121-164854", "2550-181119-145038", "5171-190109-104507", "9126-190221-124712", "4366-190110-150224", "7099-180827-225822", "3953-181122-103401", "8763-180810-120532", "5581-190223-155944", "4587-190222-120550", "4338-190117-170926", "3503-190116-151859", "3624-190108-130727", "2326-180728-155220", "0550-181122-175616", "9458-181122-120754", "1605-190110-104753", "3062-181226-184208", "0337-190309-154816", "7990-190202-160519", "4063-190103-135331", "4923-181122-112453", "3914-180818-135552", "6033-181122-103850", "3568-190110-142247", "8710-180811-113645", "2695-181206-140923", "8143-190109-152412", "9455-180818-115900", "9447-190117-163707", "4506-181120-142944", "4467-190109-151508", "3444-190109-154325", "1894-181122-145725", "5545-180818-143441", "6814-181122-235750", "2178-190117-235603", "7016-181122-164855", "5212-181122-140924", "8935-190112-122525", "5949-190116-124419", "6249-180813-113119", "0034-180705-102815", "4443-190109-143534", "4556-190113-183217", "0198-190111-115403", "4003-190111-143528", "2074-190110-180736", "9236-190111-112601", "5827-181121-181735", "4703-181223-121930", "2619-190103-165444", "5071-181122-173530", "4800-190110-105645", "8881-190309-143540", "0210-190117-135021", "5116-190103-154840", "1861-180713-120211", "8296-180709-150552", "7473-180810-135702", "3834-180819-141327", "6819-190109-105019", "9918-190117-131124", "7660-180724-165320", "4686-181120-143250", "0354-190117-155744", "2439-180810-111213", "1868-180707-105651", "9838-190117-162642", "2487-181122-110746", "8795-181119-115018", "5567-190109-155657", "1543-150410-124317", "4344-150414-124521", "77150331-132926", "86150406-140936", "2242-150418-161201", "9572-180202-162309", "85150402-141643", "0982-170207-163256", "63150402-153845", "01150404-160810", "2651-170107-141447", "0121-150420-175901", "5228-170520-115145", "6756-171227-114219", "7105-170913-153202", "2793-150410-105925", "9255-171220-162451", "9768-150408-132307", "7380-150409-163333", "63150404-153418", "15150405-100921", "2264-160120-120822", "56150405-132159", "15150404-120400", "7737-160224-114006", "3912-170109-135248", "89150402-151343", "8478-150408-080254", "1857-151219-070105", "0748-150408-110058", "4424-160229-122026", "5328-150411-185917", "73150402-134234", "2741-170520-103020", "56150404-131739", "91150403-203812", "98150401-144356", "54150402-101940", "02150407-123353", "18150407-124822", "5507-161120-154946", "94150407-135259", "97150404-122618", "1405-150408-103825", "5075-150408-111536", "1799-150413-175756", "5975-150410-125248", "30150403-221932", "5533-160227-120854", "9604-170126-072933", "7390-171227-120250", "9225-150619-210159", "8989-150412-162737", "08150331-164950", "7574-150420-194505", "0791-150410-131235", "69150402-130719", "6429-171013-143509", "25150330-153821", "8423-170522-001654", "1510-180201-184307", "47150406-172413", "1477-170918-122613", "4352-150408-112247", "2360-170103-112140", "2016-160123-145438", "6677-150418-144656", "2244-150413-155716", "5689-150415-165857", "88150404-141603", "12150402-143139", "4505-151222-222218", "98150407-101936", "6929-180202-095206", "3676-150411-114239", "2147-170207-113015", "4133-151217-083345", "27150406-115709", "23150331-132018", "9586-150424-151656", "8120-170914-123934", "09150407-100424", "0901-190109-144826", "1718-150411-170214", "2036-160225-124616", "9599-180125-095753", "8097-170912-123118", "39150407-103442", "7974-150408-123904", "9840-150412-102941", "79150402-155932", "8691-150409-103444", "56150402-161602", "6733-150413-154015", "3699-150409-141131", "5211-150413-175016", "6121-161111-143654", "4346-150408-143246", "0882-150409-163224", "0702-150408-163553", "7395-150412-152735", "4276-150408-105757", "1077-161022-142829", "3434-160602-132427", "3046-160308-145343", "7320-150417-235617", "82150331-170936", "9496-170914-143416", "68150331-163036", "8792-170912-150834", "9735-170914-145310", "9670-150411-154738", "2726-171129-134611", "5986-150412-150934", "3323-150409-121955", "3049-180208-154023", "37150407-151802", "3641-150408-125852", "4478-180416-215532", "5346-150408-130712", "39150407-160902", "25150406-185744", "47150406-170828", "26150407-125358", "3122-150408-230445", "93150404-131153", "6376-151218-120643", "5356-180131-005247", "7404-170204-203116", "61150406-170248", "60150403-174125" };
            var PhdRegistrationNumber = db.jntuh_registered_faculty.Where(e => e.id == fID).Select(e => e.RegistrationNumber).FirstOrDefault();
            TempData["PhDUploadCheck"] = "false";
            if (!PhdUploadRegNos.Contains(PhdRegistrationNumber))
                return RedirectToAction("Index", "NewOnlineRegistration", new { id = fid });

            var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FPHDU").Select(a => a.id).FirstOrDefault();
            DateTime? facultyeditfromdate = DateTime.Now;
            DateTime? facultyeditclosedate = DateTime.Now; ;
            if (FacultyEditLinkId != 0)
            {
                facultyeditfromdate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditLinkId && a.isActive == true).Select(s => s.fromdate).FirstOrDefault();
                facultyeditclosedate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditLinkId && a.isActive == true).Select(s => s.todate).FirstOrDefault();
            }

            FacultyRegistration regFaculty = new FacultyRegistration();

            var currentDate = DateTime.Now;
            if (facultyeditfromdate == null || facultyeditclosedate == null)
                return RedirectToAction("Index", "NewOnlineRegistration", new { id = fid });
            else if (currentDate > facultyeditclosedate)
                return RedirectToAction("Index", "NewOnlineRegistration", new { id = fid });

            List<SelectListItem> years = new List<SelectListItem>();
            for (int i = 1940; i <= DateTime.Now.Year; i++)
            {
                years.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.years = years;

            List<SelectListItem> division = new List<SelectListItem>();
            for (int i = 1; i <= 5; i++)
            {
                division.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.division = division;

            PhDUpload UploadPhD = new PhDUpload();
            UploadPhD.facultyId = fID;
            TempData["status"] = "false";
            string inactivereg = db.jntuh_registered_faculty.Where(i => i.id == fID && i.isActive != false).Select(s => s.RegistrationNumber).FirstOrDefault();
            if (String.IsNullOrEmpty(inactivereg))
            {
                TempData["ERROR"] = "Edit option not provided as this registration number was surrendered under multiple registrations";
                return RedirectToAction("Index", "NewOnlineRegistration", new { id = fid });
            }

            string fregnoa = db.jntuh_registered_faculty.Where(i => i.id == fID && (i.type == "Adjunct" || i.Blacklistfaculy == true || i.AbsentforVerification == true)).Select(s => s.RegistrationNumber).FirstOrDefault();
            if (!string.IsNullOrEmpty(fregnoa))
            {
                TempData["ERROR"] = "You don't have permissions to Edit";
                return RedirectToAction("Index", "NewOnlineRegistration", new { id = fid });
            }

            #region Auto Populate Condition.
            var specializations = db.jntuh_specialization.Where(s => s.isActive == true).Select(a => a).ToList();

            var ugspecializations = (from s in specializations
                                     join d in db.jntuh_department on s.departmentId equals d.id
                                     join de in db.jntuh_degree on d.degreeId equals de.id
                                     select new
                                     {
                                         id = s.id,
                                         specializationname = s.specializationName
                                     }).ToList();

            UploadPhD.total_specializations = new List<string>() { "Test" };
            foreach (var item1 in ugspecializations)
            {
                UploadPhD.total_specializations.Add(item1.specializationname);
            }

            var Education = db.jntuh_registered_faculty_education.Select(e => new { educationid = e.educationId, coursestudied = e.courseStudied, universites = e.boardOrUniversity, places = e.placeOfEducation, specialization = e.specialization }).ToList();

            var RegisteredFacultyEducation_Courses = Education.Select(e => e.coursestudied.Trim()).Distinct().ToList();
            var RegisteredFacultyEducation_universities = Education.Where(z => z.universites != null).Select(e => e.universites.Trim()).Distinct().ToList();
            var RegisteredFacultyEducation_places = Education.Where(z => z.places != null).Select(e => e.places).Distinct().ToList();
            var RegisteredFacultyEducation_UGspecialization = Education.Where(a => (a.educationid == 3 || a.educationid == 4 || a.educationid == 6) && a.specialization != null).Select(e => e.specialization.Trim()).Distinct().ToList();


            foreach (var UG in RegisteredFacultyEducation_UGspecialization)
            {
                UploadPhD.total_specializations.Add(UG.Trim());
            }
            UploadPhD.total_specializations.Remove("Test");

            // UploadPhD.total_specializations = UploadPhD.total_specializations.Distinct().ToList();

            UploadPhD.universitys = new List<string>() { "Rajiv Gandhi University", "Assam University", "Tezpur University", "University of Hyderabad, Hyderabad", "Maulana Azad National Urdu University", "English   and   Foreign   Languages   University", "Jamia Millia Islamia", "University of Delhi", "JawaharLal Nehru University", "Indira Gandhi National Open University", "South Asian University", "The  Indira  Gandhi  National  Tribal  University", "Dr. Harisingh Gour Vishwavidyalaya", "Mahatma  Gandhi  Antarrashtriya  Hindi  Vishwavidyalaya", "Mizoram University", "North Eastern Hill University", "Manipur University", "Central Agricultural University", "Nagaland University", "Pondicherry  University", "Sikkim University", "Tripura University", "Aligarh Muslim University", "Babasaheb  Bhimrao  Ambedkar  University", "Banaras Hindu University", "University of Allahabad", "Rajiv  Gandhi  National  Aviation  University", "Rani  Lakshmi  Bai  Central  Agricultural  University", "Visva Bharati, Shantiniketan", "Hemwati Nandan Bahuguna Garhwal University", "Central University of Tamil Nadu", "Indian Maritime University", "Central  University  of  Rajasthan", "Central University of Punjab", "Central University of Orissa", "Central University of Kerala", "Central University of Karnataka", "Central University of Jharkhand", "Central University of Kashmir, Transit Campus", "Central University of Jammu, Bagla (Rahya-Suchani)", "Central University of Himachal Pradesh", "Central University of Haryana", "Guru  Ghasidas  Vishwavidyalaya", "Central University of Bihar", "Nalanda University", "Mahatma  Gandhi  Central  University", "Central University of Gujarat", "Academy of Maritime Education and Training", "Amrita Vishwa Vidyapeetham", "Avinashilingam Institute for Home Science & Higher Education for Women", "B.L.D.E.", "B.S. Abdur Rahman Institute of Science and Technology", "Banasthai Vidyapith", "Bharath Institute of Higher Education & Research", "Bharati Vidyapeeth", "Bhatkhande Music Institute", "Birla Institute of Technology", "Birla Institute of Technology & Science", "Central Institute of Buddhist Studies(CIBS)", "Central Institute of Fisheries Education", "Central Institute of Higher Tibetan Studies", "Chennai Mathematical Institute", "Chettinad Academy of Research and Education (CARE)", "Chinmaya Vishwavidyapeeth", "Christ", "D.Y Patil Educational Society", "Datta Meghe Institute of Medical Sciences", "Dayalbagh Educational Institute", "Deccan College Postgraduate & Research Institute", "Dr. D.Y. Patil Vidyapeeth", "Dr. M.G.R. Educational and Research Institute", "Forest Research Institute", "Gandhi Institute of Technology and Management (GITAM)", "Gandhiigram Rural Institute", "Gokhale Institute of Politics & Economics", "Graphic Era", "Gujarat Vidyapith", "Gurukul Kangri vidyapeeth", "Hindustan Institute of Technology and Science (HITS)", "Homi Bhabha National Institute, Regd. Office", "ICFAI Foundation for Higher Education", "IIS", "Indain Institute of Foreigen Trade", "Indian Agricultural Research Institute", "Indian Association for the Cultivation of Science (IACS)", "Indian Institute of Information Technology and Management", "Indian Institute of Science", "Indian Institute of Space Science and Technology", "Indian Law Institute", "Indian School of Mines", "Indian Veterinary Research Institute", "Indira Gandhi Institute of Development Research", "Institute of Advanced Studies in Education", "Institute of Chemical Technology", "Institute of liver and Biliary Sciences", "Instituteof Armamrnt Technology", "International Institute for Population Sciences", "International Institute of Information Technology", "Jain", "Jain Vishva Bharati Institute", "Jamia Hamdard", "Janardan Rai Nagar Rajasthan Vidyapeeth", "Jawahar lal Nehru Centre for Advanced Scientific Research", "Jaypee Institute of Information Technology", "JSS Academy of Higher Education & Research", "K.L.E. Academy of Higher Education and Research", "Kalasalingam Academy of Research and Education", "Kalinga Institute of Industrial Technology", "Karpagam Academy of Higher Education", "Karunya Institute of Technology and Sciences", "Kerala Kalamandalam", "Koneru Lakshmaiah Education Foundation", "Krishna Institute of Medical Sciences", "Lakshmibai National Institute of Physical Education", "Lingaya's Vidyapeeth", "LNM Istitute of Information Technology", "Maharishi Markandeshwar (Deemed to be University)", "Manav Rachna International Institute of Research and Studies", "Manipal Academy of Higher Education", "Meenakshi Academy of Higher Education and Research", "MGM Institute of Health Sciences", "Narsee Monjee Institute of Management Studies", "National Brain Research Centre", "National Dairy Research Institute", "National Institute of Food Technology, Entrepreneurship & Management (NIFTEM)", "National Institute of Mental Health & Neuro Sciences", "National Museum Institute of History of Arts, Conservation and Musicology", "National Rail and Transportation Institute", "National University of Educational Planning & Administration", "Nava Nalanda Mahavihara", "Nehru Gram Bharati", "NITTE", "Noorul Islam Centre for Higher Education", "North Eastern Regional Institute of Science & Technology", "Padmashree Dr.D.Y. Patil Vidyapeeeth", "Pandit Dwarka Prasad Mishra Indian Institute of Information Technology", "Periyar Manaimmai Institute of Science & Technology (PMIST)", "Ponnaiyan Ramajayam Institute of Science & technology (PMIST)", "Pravara Institute of Medical Sciences", "Punjab Engineering College", "Rajiv Gandhi National Institute of Youth Development", "Ramakrishna Mission Vivekananda Educational and Research Institute", "Rashtriya Sanskrit Sansthana", "Rashtriya Sanskrit Vidyapeeth", "S.R.M Institute of Science and Technology", "Sam Higginbottom Institute of Agriculture, Technology & Sciences", "Sant Longowal Institute of Engineering and Technology", "Santosh", "Sathyabama Institute of Science and Technology", "Saveetha Institute of Medical and Technical Sciences", "Shanmugha Arts Science Technology & Research Academy (SASTRA)", "Shobhit Institute of Engineering & Technology", "Shri Lal Bahadur Shastri Rashtriya Sanskrit Vidyapith", "Siksha 'O' Anusandhan", "Sri Balaji Vidyapeeth (Deemed to be University)", "Sri Chandrasekharendra Saraswathi Vishwa Mahavidyalaya", "Sri Devraj Urs Academy of Higher Education and Research", "Sri Ramachandra Medical College and Research Institute", "Sri Sathya Sai Institute of Higher Learning", "Sri Siddhartha Academy of Higher Education", "St. Peterâ€™s Institute of Higher Education and Research", "Sumandeep Vidyapeeth", "Swami Vivekananda Yoga Anusandhana Samsthana", "Symbiosis International", "Tata Institute of Fundamental Research", "Tata Institute of Social Sciences", "TERI School of Advanced studies", "Thapar Institute of Engineering & Technology", "Tilak Maharashtra Vidyapeeth", "Vel Tech Rangarajan Dr. Sagunthala R & D Institute of Science and Technology", "Vellore Institute of Technology", "VELS Institute of Science Technology & Advanced Studies (VISTAS)", "Vignan's Foundation for Science, Technology and Research", "Vinayaka Missionâ€™s Research Foundation", "Yenepoya", "A.P.J. Abdul Kalam Technological University", "Acharaya N.G.Ranga Agricultural University", "Acharaya Nagarjuna University", "Adikavi Nannaya University", "Akkamahadevi women's University (Formerly known as Karnataka State Women's University)", "Alagappa University", "Aliah University", "Allahabad State University", "Ambedkar University Delhi (AUD)", "Anand Agricultural University", "Andhra University", "Anna University", "Annamalai University", "Arybhatta Knowledge University", "Assam Agricultural University", "Assam Rajiv Gandhi University of Co-operative Management", "Assam Science & Technology University", "Assam Womens University", "Atal Bihari Vajpayee Hindi Vishwavidyalaya", "Awadesh Pratap Singh University", "Ayush and Health Sciences University of Chhattisgarh", "Baba Farid University of Health Sciences", "Baba Ghulam Shah Badshah University", "Babasaheb Bhimrao Ambedkar Bihar University", "Banda University of Agriculture & Technology", "Bangalore University", "Bankura University", "Barkatullaah University", "Bastar Vishwavidyalaya", "Bengaluru Central University", "Bengaluru North University", "Berhampur University", "Bhagat Phool Singh Mahila Vishwavidyalaya", "Bhakta Kavi Narsinh Mehta University", "Bharathiar University", "Bharathidasan University", "Bhupender Narayan Mandal University", "Bidhan Chandra Krishi Vishwavidyalaya", "Bihar Agricultural University", "Biju Patnaik University of Technology", "Bilaspur Vishwavidyalaya", "Binod Bihari Mahto Koylanchal University", "Birsa Agricultural University", "Bodoland University", "Bundelkhand University", "Burdwan University", "Calcutta University", "Calicut University", "CEPT University", "Ch. Bansi Lal University", "Chanakya National Law University", "Chandr Shekhar Azad University of Agriculture & Technology", "Chatrapati Sahuji Maharaj Kanpur University", "Chaudhary Devi Lal University", "Chaudhary Ranbir Singh University", "Chaudhary Sarwan Kumar Himachal Pradesh Krishi Vishvavidyalaya", "Chhattisgarh Kamdhenu Vishwavidyalaya", "Chhattisgarh Swami Vivekanad Technical Universty", "Childrens University", "Choudary Charan Singh Haryana Agricultural Univeersity", "Choudary Charan Singh University", "Cluster University of Jammu", "Cluster University of Srinagar", "Cochin Unviersity of Science & Technology", "Cooch Behar Panchanan Barma University", "Cotton University", "Damodaram Sanjivayya National Law University", "Davangere University", "Deen Bandhu Chhotu Ram University of Sciences & Technology", "Deen Dayal Upadhyay Gorakhpur University", "Delhi Pharmaceutical Sciences & Research University", "Delhi Technological University", "Devi Ahilya Vishwavidyalaya", "Dharmashastra National Law University", "Dharmsinh Desai University", "Diamond Harbour Womens University", "Dibrugarh University", "Doon University", "Dr Shyama Prasad Mukherjee University", "Dr. A.P.J. Abdul Kalam Technical University", "Dr. B. R. Ambedkar University of Social Sciences", "Dr. B.R. Ambedkar University", "Dr. B.R.Ambedkar Open University", "Dr. B.R.Ambedkar University", "Dr. Babasaheb Ambedkar Marathwada University", "Dr. Babasaheb Ambedkar Open University", "Dr. Babasaheb AmbedkarTechnological University", "Dr. Bhimrao Ambedkar Law University", "Dr. N.T.R. University of Health Sciences", "Dr. Punjabrao Deshmukh Krishi Vidyapeeth", "Dr. Ram Manohar Lohia Awadh University", "Dr. Ram Manohar Lohiya National Law University", "Dr. Shakuntala Misra National Rehabilitation University", "Dr. Shyama Prasad University", "Dr. Y.S.Parmar University of Horticulture & Forestry", "Dr. Y.S.R. Horticultural Univerity", "Dravidian University", "Durg Vishwavidyalaya", "Fakir Mohan University", "G.B.Pant University of Agriculture & Technology", "Gangadhar Meher University", "Gauhati University", "Gautam Buddha University", "Goa University", "Gondwana University", "Govind Guru Tribal University", "Gujarat Agricultural University", "Gujarat Ayurveda University", "Gujarat Forensic Sciences University", "Gujarat National Law University", "Gujarat Technological University", "Gujarat University", "Gujarat University of Transplantation Sciences", "Gulbarga University", "Guru Angad Dev Veterinary & Animal Sciences University", "Guru Gobind Singh Indraprastha Vishwavidyalaya", "Guru Jambeshwar University of Science and Technology", "Guru Nanak Dev University", "Guru Ravidas Ayurved University", "Harcourt Butler Technical University", "Haridev Joshi University of Journalism and Mass Communication", "Haryana Vishwakarma Skill University", "Hemchandracharya North Gujarat University", "Hemwati Nandan Bahuguna Medical Education University", "Hidayatullah National Law University", "Himachal Pradesh National Law University", "Himachal Pradesh Technical University", "Himachal Pradesh University", "Indian Institute of Teacher Education", "Indira Gandhi Delhi Technical University for Women", "Indira Gandhi Krishi Vishwavidyalaya", "Indira Gandhi University", "Indira Kala Sangeet Vishwavidyalaya", "Indraprastha Institute of Information Technology", "Institute of Infrastructure Technology Research and Management", "International Institute of Information Technology (IIIT)", "Islamic University of Sciences & Technology University", "Jadavpur University", "Jagadguru Ramanandacharya Sanskrit University", "Jai Naraim Vyas University", "Jai Prakash vishwavidyalaya(university)", "Jammu University", "Jananayak Chandrashekhar University", "Jawaharlal Nehru Architecture and Fine Arts University", "Jawaharlal Nehru Krishi Vishwavidyalaya", "Jawaharlal Nehru Technological University", "Jharkhand Raksha Shakti University", "Jiwaji University", "Junagarh Agricultural University", "Kakatiya University", "Kaloji Narayan Rao University of Health Sciences", "Kalyani University", "Kamdhenu University", "Kameshwar Singh.Darbhanga Sanskrit Vishwavidyalaya", "Kannada University", "Kannur University", "Karanataka State Law University", "Karanataka State Open University", "Karanataka University", "Karanataka Veterinary, Animal & Fisheries Science University", "Karnataka Folklore University", "Karnataka Sanskrit University", "Karnataka State Rural Development and Panchayat Raj University", "Kashmir University", "Kavi Kulguru Kalidas Sanskrit Vishwavidyalaya", "Kazi Nazrul University", "Kerala Agricultural Unviersity", "Kerala University", "Kerala University of Fisheries & Ocean Studies", "Kerala University of Health Sciences", "Kerala Veterinary & Animal Sciences University", "Khallikote University", "Khwaja Moinuddin Chishti Urdu, Arabi-Farsi University", "King Georges Medical University", "Kolhan University", "Konkan Krishi Vidyapeeth", "Krantiguru Shyamji Krishna Verma Kachchh University", "Krishna Kanta Handique State Open University", "Krishna University", "Krishnakumarsinhji Bhavnagar University", "KSGH Music and Performing Arts University", "Kumar Bhaskar Varma Sanskrit & Ancient Studies University", "Kumaun University", "Kurukshetra University", "Kushabhau Thakre Patrakarita Avam Jansanchar Vishwavidyalaya", "Kuvempu University", "Lala Lajpat Rai University of Veterinary & Animal Sciences", "Lalit Narayan Mithila University", "Lucknow University", "M.J.P. Rohilkhand University", "M.P.Bhoj (open) University", "Madan Mohan Malaviya University of Technology", "Madaras University", "Madhya Pradesh Pashu Chikitsa Vigyan Vishwavidyalaya", "Madurai Kamraj University", "Magadh University", "Mahamaya Technical University", "Maharahtra University of Health Sciences", "Maharaja Bir Bikram University", "Maharaja Chhatrasal Bundelkhand Vishwavidyalaya", "Maharaja Ganga Singh University", "Maharaja Ranjit Singh Punjab Technical University", "Maharaja Sayajirao University of Baroda", "Maharaja Surajmal Brij University", "Maharana Partap Horticultural University", "Maharana Pratap University of Agriculture & Technology", "Maharashtra Animal & Fishery Sciences University", "Maharashtra National Law University", "Maharashtra National Law University,", "Maharishi Dayanand Saraswati University", "Maharishi Dayanand University", "Maharshi Panini Sanskrit Evam Vedic Vishwavidyalaya", "Mahatam Gandhi Kashi Vidyapeeth", "Mahatma Gandhi Chitrakoot Gramodaya Vishwavidyalaya", "Mahatma Gandhi University", "Mahatma Gandhi Unversity", "Mahatma Phule Krishi Vidyapeeth", "Makhanlal Chaturvedi National University of Journalism & Communication", "Mangalore University", "Manipur Technical University", "Manipur University of Culture", "Manonmaniam Sundarnar University", "Marathwada Agricultural University", "Maulana Abul Kalam Azad University of Technology", "Maulana Mazharul Haque Arabic & Persian University", "Mohan Lal Shukhadia University", "Mother Teresa Womens University", "Mumbai University", "Munger University", "Mysore University", "Nalanda Open University", "Narendra Deo University of Agriculture & Technology", "National Academy of Legal Studies & Research University", "National Law Institute University", "National law School of India University", "National Law Universituy", "National Law University", "National Law University and Judicial Academy", "National University of Advanced Legal Studies (NUALS)", "National University of Study & Research in Law", "Navsari Agriculture University", "Netaji Shubhash Open University", "Nilamber-Pitamber University", "Nizams Institute of Medical Sciences", "North Benagal University", "North Maharashtra University", "North Orissa University", "Odisha State Open University", "Orissa University Of Agriculture & Technology", "Osmania University", "Palamuru University", "Pandit S N Shukla University", "Patliputra University", "Patna University", "Periyar University", "Potti Sreeramulu Teugu Universtity", "Presidency University", "Professor Jayashankar Telangana State Agricultural University", "Pt. Bhagwat Dayal Sharma University of Health Sciences", "Pt. Sundarlal Sharma (Open) University", "Pt.Ravishankar Shukla University", "Punjab Agriculture University", "Punjab Technical University", "Punjab University", "Punjabi University", "Purnea University", "Rabindra Bharati University", "Raiganj University", "Raj Rishi Bhartrihari Matsya University", "Raja Mansingh Tomar Music & Arts University", "Rajasthan Ayurveda University", "Rajasthan ILD Skills University (RISU)", "Rajasthan Technical University", "Rajasthan University", "Rajasthan University of Health Sciences", "Rajasthan University of Veterinary & Animal Sciences", "Rajendra Agricultural University", "Rajiv Gandhi Prodoyogiki Vishwavidyalaya", "Rajiv Gandhi University of Health Science", "Rajiv Gandhi University of Knowledge Technology", "Rajmata Vijayaraje Scindia Krishi Vishwa Vidyalaya", "Raksha Shakti University", "Rama Devi Womens University", "Ranchi University", "Rani Channamma University", "Rani Durgavati Vishwavidyalaya", "Ravenshaw University", "Rayalaseema University", "Sambalpur University", "Sampurnanand Sanskrit Vishwavidyalaya", "Sanchi University of Buddhist-Indic Studies", "Sant Gadge Baba Amravati University", "Sardar Krushinagar Dantiwada Agricultural University", "Sardar Patel University", "Sardar Patel University of Police, Security & Criminal Justice", "Sardar Vallabh Bhai Patel University of Agriculture & Technology", "Sarguja University", "Satavahana University", "Saurashtra University", "Savitribai Phule Pune University", "Shekhawati University", "Sher-e-Kashmir University of Agricultural Science & Technology", "Shivaji University", "shree guru gobind singh tricentenary university", "Shree Sankaracharaya University of Sanskrit", "Shree Somnath Sanskrit University", "Shri Govind Guru University", "Shri Jagannath Sanskrit Vishwavidyalaya", "Shri Mata Vaishno Devi University", "Siddharth University", "Sidho-Kanho-Birsha University", "Sido Kanhu University", "Smt. Nathibai Damodar Thackersey Womens University", "Solapur University", "Sri Dev Suman Uttarakhand Vishwavidyalaya", "Sri Konda Laxman Telangana State Horticultural University", "Sri krishnadevaraya University", "Sri P V Narsimha Rao Telangana Veterinary University", "Sri Padmavati Mahila Vishwavidyalayam", "Sri Venkateswara Institute of Medical Sciences", "Sri Venkateswara University", "Sri Venkateswara Vedic University", "Sri Venkateswara Veterinary University", "Srimanta Sankaradeva University of Health Sciences", "State University of Performing and Visual Arts", "Swami Keshwanand Rajasthan Agriculture University", "Swami Ramanand Teerth Marathwada University", "Swarnim Gujarat Sports University", "T.M. Bhagalpur University", "Tamil Nadu Fisheries University", "Tamil Nadu Music and Fine Arts University", "Tamil Nadu Open University", "Tamil Nadu Teacher Education University", "Tamil University", "Tamilnadu Agricultural University", "Tamilnadu Dr. Ambedkar Law University", "Tamilnadu Dr. M.G.R.Medical University", "Tamilnadu National Law School", "Tamilnadu Physical Educaton and Sports University", "Tamilnadu Veterinary & Animal Sciences University", "Telangana University", "The Bengal Engineering & Science University", "The Rajiv Gandhi National University of Law", "The Rashtrasant Tukadoji Maharaj Nagpur University", "The Sanskrit College and University", "The West Bengal National University of Juridical Science", "The West Bengal University of Health Sciences", "Thiruvalluvar University", "Thunchath Ezhuthachan Malayalam University", "Tumkur University", "U.P. Pandit Deen Dayal Upadhyaya Pashu Chikitsa Vigyan Vishwavidhyalaya Evam Go-Anusandhan Sansthan", "U.P. Rajarshi Tandon Open University", "U.P.King Georges University of Dental Sciences", "University of Agricultural Sciences", "University of Horticultural Sciences", "University of Kota", "Univesity of Gour Banga", "Utkal University", "Utkal University of Culture", "Uttar Banga Krishi Vishwavidyalaya", "Uttar Pradesh University of Medical Sciences", "Uttarakhand Aawasiya Viswavidyalaya", "Uttarakhand Ayurved University", "Uttarakhand Open University", "Uttarakhand Sanskrit University", "Uttarakhand Technical University", "Vardhman Mahaveer Open University", "Veer Bahadur Singh Purvanchal University", "Veer Chandra Singh Garhwali Uttarakhand University of Horticulture & Forestry", "Veer Kunwar Singh University", "Veer Narmad South Gujarat University", "Veer Surendra Sai Institute of Medical Science and Research", "Veer Surendra Sai University of Technology", "Vesveswaraiah Technological University", "Vidya Sagar University", "Vijayanagara Sri Krishnadevaraya University", "Vikram Simhapuri University", "Vikram University", "Vinoba Bhave University", "West Bengal State University", "West Bengal University of Animal and Fishery Sciences", "West Bengal University of Teachers, Training, Education Planning and Administration", "Yashwant Rao Chavan Maharashtra Open University", "YMCA University of Science & Technology", "Yogi Vemana University" };
            UploadPhD.places = new List<string>() { "Arunachal Pradesh", "Assam", "Telangana", "Delhi", "Madhya Pradesh", "Maharashtra", "Mizoram", "Meghalaya", "Manipur", "Nagaland", "Pondicherry", "Sikkim", "Tripura", "Uttar Pradesh", "West Bengal", "Uttarakhand", "Tamil Nadu", "Rajasthan", "Punjab", "Orissa", "Kerala", "Karnataka", "Jharkhand", "Jammu & Kashmir", "Himachal", "Pradesh", "Haryana", "Chhattisgarh", "Bihar", "Gujarat", "Jammu and Kashmir", "Andhra Pradesh", "Chandigarh", "Puducherry", "Himachal Pradesh", "Goa" };
            UploadPhD.Courses = new List<string>() { "BE", "BTech", "ME", "MTech", "MBA", "MCA", "BCA", "PharmD", "BPharmacy", "MPharmacy", "BCom", "MCom", "BSC", "MSC", "M.A", "BA", "BZC", "MPhil", "PhD" };

            foreach (var course in RegisteredFacultyEducation_Courses)
            {
                //if (!regFaculty.Courses.Contains(course.Trim()))
                UploadPhD.Courses.Add(course.Trim());
            }

            foreach (var university in RegisteredFacultyEducation_universities)
            {
                UploadPhD.universitys.Add(university.Trim());
            }

            foreach (var place in RegisteredFacultyEducation_places)
            {
                UploadPhD.places.Add(place.Trim());
            }
            #endregion



            var phdeducation = db.jntuh_registered_faculty_education.Where(a => a.facultyId == fID && a.educationId == 6).Select(a => a).FirstOrDefault();
            if (phdeducation != null)
            {
                if (phdeducation.createdOn > facultyeditfromdate)
                {
                    UploadPhD.PhD_educationId = 6;
                    UploadPhD.PhD_hallticketno = phdeducation.hallticketnumber;
                    UploadPhD.PhD_educationName = "PhD";
                    UploadPhD.PhD_studiedEducation = phdeducation.courseStudied;
                    UploadPhD.PhD_specialization = phdeducation.specialization;
                    UploadPhD.PhD_passedYear = phdeducation.passedYear;
                    UploadPhD.PhD_percentage = phdeducation.marksPercentage;
                    UploadPhD.PhD_division = phdeducation.division == null ? 0 : phdeducation.division;
                    UploadPhD.PhD_university = phdeducation.boardOrUniversity;
                    UploadPhD.PhD_place = phdeducation.placeOfEducation;
                    UploadPhD.PhD_facultyCertificate = phdeducation.certificate;
                    //TempData["ERROR"] = "Already you have added the phD in our portal..";
                    TempData["status"] = "true";
                    return View(UploadPhD);
                }
                else
                {
                    TempData["ERROR"] = "Already you have the phD in our portal..";
                    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
                }
            }
            return View(UploadPhD);
        }

        [HttpPost]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult UploadPhd(PhDUpload UploadPhD, string fid)
        {
            return RedirectToAction("Logon", "Account");
            MembershipUser user = Membership.GetUser(User.Identity.Name);
            if (user == null)
                return RedirectToAction("Logon", "Account");
            if (UploadPhD != null && UploadPhD.PhD_certificate != null)
            {
                int fID = 0;
                string RegistrationNumber = string.Empty;
                int userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
                if (UploadPhD.facultyId != null)
                    fID = UploadPhD.facultyId;
                else if (userId != null && userId != 0)
                {
                    RegistrationNumber = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(e => e.RegistrationNumber).FirstOrDefault();
                    fID = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber == RegistrationNumber).Select(a => a.id).FirstOrDefault();
                }
                else
                    return RedirectToAction("Logon", "Account");

                string certificatesPath = "~/Content/Upload/Faculty/CERTIFICATES";


                if (!Directory.Exists(Server.MapPath(certificatesPath)))
                    Directory.CreateDirectory(Server.MapPath(certificatesPath));

                var ext = Path.GetExtension(UploadPhD.PhD_certificate.FileName);
                if (ext.ToUpper().Equals(".JPG") || ext.ToUpper().Equals(".JPEG"))
                {
                    var FacultyObj = db.jntuh_registered_faculty.Where(a => a.id == fID).Select(a => a).FirstOrDefault();
                    string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                             FacultyObj.FirstName.Substring(0, 1) + "-" +
                                             FacultyObj.LastName.Substring(0, 1) + "_" + UploadPhD.PhD_studiedEducation;
                    UploadPhD.PhD_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath), fileName, ext));
                    UploadPhD.PhD_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                }

                jntuh_registered_faculty_education education = new jntuh_registered_faculty_education();

                education.facultyId = fID;
                education.hallticketnumber = string.IsNullOrEmpty(UploadPhD.PhD_hallticketno) ? UploadPhD.PhD_hallticketno : UploadPhD.PhD_hallticketno.Trim();
                education.educationId = 6;
                education.courseStudied = string.IsNullOrEmpty(UploadPhD.PhD_studiedEducation) ? UploadPhD.PhD_studiedEducation : UploadPhD.PhD_studiedEducation.Trim();
                education.specialization = string.IsNullOrEmpty(UploadPhD.PhD_specialization) ? UploadPhD.PhD_specialization : UploadPhD.PhD_specialization.Trim();
                education.passedYear = UploadPhD.PhD_passedYear == null ? 0 : (int)UploadPhD.PhD_passedYear;
                education.marksPercentage = UploadPhD.PhD_percentage == null ? 0 : (decimal)UploadPhD.PhD_percentage;
                education.division = UploadPhD.PhD_division == null ? 0 : (int)UploadPhD.PhD_division;
                education.boardOrUniversity = string.IsNullOrEmpty(UploadPhD.PhD_university) ? UploadPhD.PhD_university : UploadPhD.PhD_university.Trim();
                education.placeOfEducation = string.IsNullOrEmpty(UploadPhD.PhD_place) ? UploadPhD.PhD_place : UploadPhD.PhD_place.Trim();
                education.certificate = UploadPhD.PhD_facultyCertificate;
                education.isActive = false;
                education.createdBy = userId;
                education.createdOn = DateTime.Now;
                education.updatedBy = null;
                education.updatedOn = null;

                db.jntuh_registered_faculty_education.Add(education);
                db.SaveChanges();

                TempData["SUCCESS"] = "Faculty Phd is Inserted Successfully.";
            }
            else
                TempData["ERROR"] = "Something Went Wrong,Please Try Again.";
            return RedirectToAction("UploadPhd");
        }

        [HttpGet]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult FacultyeditfieldsRequests(string fid)
        {
            int fID = 0;
            int? userId = 0;
            if (Membership.GetUser(User.Identity.Name) == null)
                return RedirectToAction("Logon", "Account");
            else
                userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            string RegistrationNumber = string.Empty;

            if (fid != null)
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(fid.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]));
            else if (userId != null && userId != 0)
            {
                RegistrationNumber = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(e => e.RegistrationNumber).FirstOrDefault();
                fID = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber == RegistrationNumber).Select(a => a.id).FirstOrDefault();
            }
            else
            {
                TempData["SUCCESS"] = null;
                return RedirectToAction("Logon", "Account");
            }
            FacultyEditFieldnames filedname = new FacultyEditFieldnames();
            //Faculty Deatils
            var faculty = db.jntuh_registered_faculty.Where(r => r.id == fID).Select(s => s).FirstOrDefault();
            if (faculty != null)
            {
                //filedname.id = fID;
                //filedname.Type = faculty.type;
                //filedname.RegistrationNumber = faculty.RegistrationNumber;
                //filedname.UserName = db.my_aspnet_users.Where(u => u.id == faculty.UserId).Select(u => u.name).FirstOrDefault();
                //filedname.Email = faculty.Email;
                //filedname.UniqueID = faculty.UniqueID;
                //filedname.FirstName = faculty.FirstName;
                //filedname.MiddleName = faculty.MiddleName;
                //filedname.LastName = faculty.LastName;
                filedname.FatherOrhusbandName = faculty.FatherOrHusbandName;
                filedname.MotherName = faculty.MotherName;
                filedname.GenderId = faculty.GenderId;
                filedname.AadhaarNumber = faculty.AadhaarNumber;
                filedname.PanNumber = faculty.PANNumber;
            }

            //
            // var EditRequests = db.jntuh_registered_faculty_edit_fields.Select(m => new EditFields { FieldId = m.Id, Field = m.fieldDescription, isSelect = false }).ToList();
            var EditRequests = db.jntuh_registered_faculty_edit_fields.Where(s => s.IsActive == true).Select(m => new EditFields { FieldId = m.Id, Field = m.fieldName.Replace(" ", "").Replace("'", "").Replace("/", "Or").Replace("%", "percentage"), FieldDesc = m.fieldDescription, isSelect = false }).ToList();

            filedname.facultyId = fID;
            filedname.EditCheckboxs = EditRequests;

            var RequestsData = db.jntuh_faculty_edit_requests.Where(s => s.facultyId == fID).Select(s => s).ToList();

            //Code writen by siva for Faculty Edit Fields.
            var FacultyEditFieldsLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FFE").Select(a => a.id).FirstOrDefault();
            DateTime? facultyEditFieldsfromdate = DateTime.Now;
            DateTime? facultyEditFieldsclosedate = DateTime.Now; ;
            if (FacultyEditFieldsLinkId != 0)
            {
                facultyEditFieldsfromdate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditFieldsLinkId && a.isActive == true).Select(s => s.fromdate).FirstOrDefault();
                facultyEditFieldsclosedate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditFieldsLinkId && a.isActive == true).Select(s => s.todate).FirstOrDefault();
            }

            var currentDate = DateTime.Now;
            if (currentDate > facultyEditFieldsclosedate)
                return RedirectToAction("RequestsList", new { fid = UAAAS.Models.Utilities.EncryptString(fID.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]) });
            else
            {
                if (RequestsData.Count != 0)
                    return RedirectToAction("RequestsList", new { fid = UAAAS.Models.Utilities.EncryptString(fID.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]) });
                else
                    return View(filedname);
            }
        }

        [HttpPost]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult FacultyeditfieldsRequests(FacultyEditFieldnames facultyfields)
        {
            int fID = 0;
            int? userId = 0;
            string RegistrationNumber = string.Empty;
            if (Membership.GetUser(User.Identity.Name) == null)
                return RedirectToAction("LogOn", "Account");
            userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);

            if (userId != null && userId != 0)
            {
                RegistrationNumber = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(e => e.RegistrationNumber).FirstOrDefault();
                fID = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber == RegistrationNumber).Select(a => a.id).FirstOrDefault();
            }
            else
            {
                TempData["SUCCESS"] = null;
                return RedirectToAction("Logon", "Account");
            }
            var faculty =
                db.jntuh_registered_faculty.Where(r => r.id == facultyfields.facultyId).Select(s => s).FirstOrDefault();
            string facultysupportfile = "~/Content/Upload/Faculty/FieldEditSupportDocuments";
            try
            {
                if (facultyfields.facultyId != 0 && facultyfields.facultyId != null && facultyfields.EditCheckboxs.Where(s => s.isSelect == true).Count() != 0)
                {
                    var editrequests = db.jntuh_faculty_edit_requests.Where(s => s.facultyId == facultyfields.facultyId).Select(s => s).ToList();
                    if (editrequests.Count == 0)
                    {
                        foreach (var item in facultyfields.EditCheckboxs.Where(s => s.isSelect == true).ToList())
                        {
                            jntuh_faculty_edit_requests request = new jntuh_faculty_edit_requests();
                            if (item.Suportdocument != null)
                            {
                                if (!Directory.Exists(Server.MapPath(facultysupportfile)))
                                {
                                    Directory.CreateDirectory(Server.MapPath(facultysupportfile));
                                }

                                var ext = Path.GetExtension(item.Suportdocument.FileName);

                                if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                                {
                                    string fileName = item.FieldId + "-" + faculty.RegistrationNumber + "-" + DateTime.Now.ToString("yyyyMMdd-HHmmssffffff");
                                    item.Suportdocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(facultysupportfile),
                                        fileName, ext));
                                    item.SuportdocumentView = string.Format("{0}{1}", fileName, ext);
                                }
                            }
                            request.facultyId = facultyfields.facultyId;
                            request.fieldId = item.FieldId;
                            request.requestReason = item.requestReason;
                            request.supportingDocs = item.SuportdocumentView;
                            request.isApproved = 0;
                            request.rejectReason = null;
                            request.isActive = true;
                            request.createdOn = DateTime.Now;
                            request.createdBy = userId;
                            request.updatedOn = null;
                            request.updatedBy = null;
                            db.jntuh_faculty_edit_requests.Add(request);
                            db.SaveChanges();
                        }
                    }
                    TempData["SUCCESS"] = "Edit request saved Successfully.";
                }

            }
            catch (Exception ex)
            {
                TempData["ERROR"] = "Some thing Went Wrong.";
            }
            return RedirectToAction("RequestsList", new { fid = UAAAS.Models.Utilities.EncryptString(fID.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]) });
        }

        [HttpGet]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult RequestsList(string fid)
        {
            int fID = 0;
            int? userId = 0;
            string RegistrationNumber = string.Empty;
            if (Membership.GetUser(User.Identity.Name) == null)
                return RedirectToAction("LogOn", "Account");
            userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);

            if (fid != null)
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(fid.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]));
            else if (userId != null && userId != 0)
            {
                RegistrationNumber = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(e => e.RegistrationNumber).FirstOrDefault();
                fID = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber == RegistrationNumber).Select(a => a.id).FirstOrDefault();
            }
            else
            {
                TempData["SUCCESS"] = null;
                return RedirectToAction("Logon", "Account");
            }

            //Code writen by siva for Faculty Edit Fields.
            var FacultyEditFieldsLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FFE").Select(a => a.id).FirstOrDefault();
            DateTime? facultyEditFieldsfromdate = DateTime.Now;
            DateTime? facultyEditFieldsclosedate = DateTime.Now; ;
            if (FacultyEditFieldsLinkId != 0)
            {
                facultyEditFieldsfromdate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditFieldsLinkId && a.isActive == true).Select(s => s.fromdate).FirstOrDefault();
                facultyEditFieldsclosedate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditFieldsLinkId && a.isActive == true).Select(s => s.todate).FirstOrDefault();
            }
            TempData["EditFieldsLink"] = "false";
            var currentDate = DateTime.Now;
            if (currentDate > facultyEditFieldsclosedate)
                TempData["EditFieldsLink"] = "false";
            else
                TempData["EditFieldsLink"] = "true";

            var RequestsData = db.jntuh_faculty_edit_requests.Where(s => s.facultyId == fID).Select(s => s).ToList();
            if (RequestsData.Count != 0)
            {
                var requests = (from r in db.jntuh_registered_faculty_edit_fields.ToList()
                                join req in RequestsData on r.Id equals req.fieldId
                                select new EditFields
                                {
                                    Id = req.facultyId,
                                    Field = r.fieldName,
                                    requestReason = req.requestReason,
                                    isApproved = req.isApproved,
                                    createddate = req.createdOn.ToString()
                                }).ToList();
                return View(requests);
            }
            else
            {
                return RedirectToAction("FacultyeditfieldsRequests", new { fid = UAAAS.Models.Utilities.EncryptString(fID.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]) });
            }
        }

        [HttpGet]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult EditfieldsRequests(string fid)
        {
            int fID = 0;
            int? userId = 0;
            if (Membership.GetUser(User.Identity.Name) == null)
                return RedirectToAction("Logon", "Account");
            else
                userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            string RegistrationNumber = string.Empty;

            if (fid != null)
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(fid.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]));
            else if (userId != null && userId != 0)
            {
                RegistrationNumber = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(e => e.RegistrationNumber).FirstOrDefault();
                fID = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber == RegistrationNumber).Select(a => a.id).FirstOrDefault();
            }
            else
            {
                TempData["SUCCESS"] = null;
                return RedirectToAction("Logon", "Account");
            }

            //Code writen by siva for Faculty Edit Fields.
            var FacultyEditFieldsLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FFE").Select(a => a.id).FirstOrDefault();
            DateTime? facultyEditFieldsfromdate = DateTime.Now;
            DateTime? facultyEditFieldsclosedate = DateTime.Now; ;
            if (FacultyEditFieldsLinkId != 0)
            {
                facultyEditFieldsfromdate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditFieldsLinkId && a.isActive == true).Select(s => s.fromdate).FirstOrDefault();
                facultyEditFieldsclosedate = db.jntuh_college_links_assigned.Where(a => a.linkId == FacultyEditFieldsLinkId && a.isActive == true).Select(s => s.todate).FirstOrDefault();
            }
            TempData["EditFieldsLink"] = "false";
            var currentDate = DateTime.Now;
            if (currentDate > facultyEditFieldsclosedate)
                return RedirectToAction("RequestsList", new { fid = UAAAS.Models.Utilities.EncryptString(fID.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]) });
            List<FacultyEditFieldnames> FacultyEditFieldnames = new List<FacultyEditFieldnames>();
            var EditRequests = db.jntuh_registered_faculty_edit_fields.Where(s => s.IsActive == true).Select(m => new EditFields { FieldId = m.Id, Field = m.fieldName.Replace(" ", "").Replace("'", "").Replace("/", "Or").Replace("%", "percentage"), FieldDesc = m.fieldDescription, isSelect = false }).ToList();
            // var EditRequests = db.jntuh_registered_faculty_edit_fields.Select(m => new EditFields { FieldId = m.Id, Field = m.fieldName.Replace(" ", "").Replace("'", "").Replace("/", "Or").Replace("%", "percentage"),FieldDesc = m.fieldDescription, isSelect = false }).ToList();
            //faculty_edit_fieldnames filedname = new faculty_edit_fieldnames();
            //filedname.facultyId = fID;
            //filedname.EditCheckboxs = EditRequests;
            //var RequestsData = db.jntuh_faculty_edit_requests.Where(s => s.facultyId == fID).Select(s => s).ToList();
            //if (RequestsData.Count != 0)
            //{
            //    foreach (var item in filedname.EditCheckboxs)
            //    {
            //        item.Id = RequestsData.Where(s => s.fieldId == item.FieldId).Select(s => s.id).FirstOrDefault();
            //        item.isSelect = RequestsData.Where(s => s.fieldId == item.FieldId).Count() > 0 ? true : false;
            //        item.requestReason = RequestsData.Where(s => s.fieldId == item.FieldId).Select(s => s.requestReason).FirstOrDefault();
            //    }
            //}
            var faculty = db.jntuh_registered_faculty.Where(r => r.id == fID).Select(s => s).FirstOrDefault();
            FacultyEditFieldnames filedname = new FacultyEditFieldnames();
            filedname.facultyId = fID;
            filedname.EditCheckboxs = EditRequests;
            var RequestsData = db.jntuh_faculty_edit_requests.Where(s => s.facultyId == fID).Select(s => s).ToList();
            //if (RequestsData.Count != 0)
            //{
            foreach (var item in filedname.EditCheckboxs)
            {
                item.Id = RequestsData.Where(s => s.fieldId == item.FieldId).Select(s => s.id).FirstOrDefault();
                item.isSelect = RequestsData.Where(s => s.fieldId == item.FieldId).Count() > 0 ? true : false;
                item.requestReason = RequestsData.Where(s => s.fieldId == item.FieldId).Select(s => s.requestReason).FirstOrDefault();
                item.SuportdocumentView = RequestsData.Where(s => s.fieldId == item.FieldId).Select(s => s.supportingDocs).FirstOrDefault();
                //if (item.FieldId == 11)
                //{
                //    item.Fieldorginal = faculty.PANNumber.Trim();
                //}
                switch (item.FieldId)
                {
                    case 8:
                        item.Fieldorginal = UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfBirth.ToString());
                        break;
                    case 9:
                        item.Fieldorginal = faculty.Mobile.Trim();
                        break;
                    case 10:
                        if (faculty.AadhaarNumber != null)
                            item.Fieldorginal = faculty.AadhaarNumber.Trim();
                        break;
                    case 11:
                        item.Fieldorginal = faculty.PANNumber.Trim();
                        break;
                    case 12:
                        item.Fieldorginal = faculty.Photo.Trim();
                        break;
                    case 13:
                        item.Fieldorginal = faculty.AadhaarDocument.Trim();
                        break;
                    case 14:
                        item.Fieldorginal = faculty.PANDocument.Trim();
                        break;
                    case 16:
                        item.Fieldorginal = faculty.DepartmentId.ToString();
                        break;
                    case 17:
                        item.Fieldorginal = faculty.DesignationId.ToString();
                        break;
                    case 18:
                        if (faculty.DateOfAppointment != null)
                            item.Fieldorginal = UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfAppointment.ToString());
                        break;
                    //case 11:
                    //    item.Fieldorginal = faculty.PANNumber.Trim();
                    //    break;
                    //case 12:
                    //    item.Fieldorginal = faculty.PANNumber.Trim();
                    //    break;
                }

            }
            //}
            FacultyEditFieldnames.Add(filedname);
            return View(filedname);
        }

        [HttpPost]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult EditfieldsRequests(FacultyEditFieldnames facultyfields)
        {
            int fID = 0;
            int? userId = 0;
            string RegistrationNumber = string.Empty;
            if (Membership.GetUser(User.Identity.Name) == null)
                return RedirectToAction("LogOn", "Account");
            userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            string facultysupportfile = "~/Content/Upload/Faculty/FieldEditSupportDocuments";
            if (userId != null && userId != 0)
            {
                RegistrationNumber = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(e => e.RegistrationNumber).FirstOrDefault();
                fID = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber == RegistrationNumber).Select(a => a.id).FirstOrDefault();
            }
            else
            {
                TempData["SUCCESS"] = null;
                return RedirectToAction("Logon", "Account");
            }
            //Writtenby Narayana Reddy

            var cheeckededitfiels = facultyfields.EditCheckboxs.Where(a => a.isSelect == true).Select(s => s).ToList();
            try
            {
                foreach (var save in cheeckededitfiels)
                {
                    jntuh_faculty_edit_requests editrequests =
                       db.jntuh_faculty_edit_requests.Where(a => a.facultyId == fID && a.fieldId == save.FieldId)
                           .Select(s => s)
                           .FirstOrDefault();
                    if (save.Suportdocument != null)
                    {
                        if (!Directory.Exists(Server.MapPath(facultysupportfile)))
                        {
                            Directory.CreateDirectory(Server.MapPath(facultysupportfile));
                        }

                        var ext = Path.GetExtension(save.Suportdocument.FileName);
                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = save.FieldId + "-" + DateTime.Now.ToString("yyyyMMdd-HHmmssffffff");
                            save.Suportdocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(facultysupportfile),
                                fileName, ext));
                            save.SuportdocumentView = string.Format("{0}{1}", fileName, ext);
                        }
                        else if (ext.ToUpper().Equals(".PDF") || ext.ToUpper().Equals(".PDF"))
                        {
                            string fileName = save.FieldId + "-" + DateTime.Now.ToString("yyyyMMdd-HHmmssffffff");
                            save.Suportdocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(facultysupportfile),
                                fileName, ext));
                            save.SuportdocumentView = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        save.SuportdocumentView = editrequests.supportingDocs;
                    }

                    if (editrequests == null)
                    {
                        jntuh_faculty_edit_requests neweditrequests = new jntuh_faculty_edit_requests();
                        neweditrequests.fieldId = save.FieldId;
                        neweditrequests.facultyId = fID;
                        neweditrequests.requestReason = save.requestReason;
                        neweditrequests.supportingDocs = save.SuportdocumentView;
                        neweditrequests.isActive = true;
                        neweditrequests.isApproved = 1;
                        neweditrequests.rejectReason = null;
                        neweditrequests.createdOn = DateTime.Now;
                        neweditrequests.createdBy = userId;
                        neweditrequests.updatedOn = null;
                        neweditrequests.updatedBy = null;
                        db.jntuh_faculty_edit_requests.Add(neweditrequests);
                        db.SaveChanges();

                    }
                    else
                    {
                        editrequests.requestReason = save.requestReason;
                        editrequests.supportingDocs = save.SuportdocumentView;
                        editrequests.createdBy = userId;
                        editrequests.updatedOn = DateTime.Now;
                        editrequests.updatedBy = userId;
                        db.Entry(editrequests).State = EntityState.Modified;
                        db.SaveChanges();
                    }
                }
            }
            catch (Exception ex)
            {
                TempData["ERROR"] = "Some thing Went Wrong.Please Try Again.";
            }

            //try
            //{
            //    var editrequests = db.jntuh_faculty_edit_requests.Where(s => s.facultyId == facultyfields.facultyId).Select(s => s).ToList();
            //    foreach (var item2 in editrequests)
            //    {
            //        var Idcheck = facultyfields.EditCheckboxs.Where(s => s.FieldId == item2.fieldId && s.isSelect == true).Select(a => a.Id).FirstOrDefault();
            //        if (Idcheck != 0 && Idcheck != null)
            //        {
            //            jntuh_faculty_edit_requests request = editrequests.Where(s => s.id == item2.id).Select(s => s).FirstOrDefault();
            //            request.requestReason = facultyfields.EditCheckboxs.Where(s => s.FieldId == item2.fieldId && s.isSelect == true).Select(a => a.requestReason).FirstOrDefault(); ;
            //            request.updatedBy = userId;
            //            request.updatedOn = DateTime.Now;
            //            db.Entry(request).State = EntityState.Modified;
            //            db.SaveChanges();
            //        }
            //        else if (Idcheck == 0 || Idcheck == null)
            //        {
            //            jntuh_faculty_edit_requests request = editrequests.Where(s => s.id == item2.id).Select(s => s).FirstOrDefault();
            //            if (request != null)
            //            {
            //                db.jntuh_faculty_edit_requests.Remove(request);
            //                db.SaveChanges();
            //            }
            //        }                   
            //    }
            //    var Aftereditrequests = db.jntuh_faculty_edit_requests.Where(s => s.facultyId == facultyfields.facultyId).Select(s => s).ToList();
            //    var FieldIds = Aftereditrequests.Select(a => a.fieldId).ToList();
            //    foreach (var item3 in facultyfields.EditCheckboxs.Where(s => s.isSelect == true).ToList())
            //    {
            //        if(!FieldIds.Contains(item3.FieldId))
            //        {
            //            jntuh_faculty_edit_requests request = new jntuh_faculty_edit_requests();
            //            if (item3.Suportdocument != null)
            //            {
            //                if (!Directory.Exists(Server.MapPath(facultysupportfile)))
            //                {
            //                    Directory.CreateDirectory(Server.MapPath(facultysupportfile));
            //                }

            //                var ext = Path.GetExtension(item3.Suportdocument.FileName);
            //                if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
            //                {
            //                    string fileName = item3.FieldId + "-" + DateTime.Now.ToString("yyyyMMdd-HHmmssffffff");
            //                    item3.Suportdocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(facultysupportfile),
            //                        fileName, ext));
            //                    item3.SuportdocumentView = string.Format("{0}{1}", fileName, ext);
            //                }
            //                else if (ext.ToUpper().Equals(".PDF") || ext.ToUpper().Equals(".PDF"))
            //                {
            //                    string fileName = item3.FieldId + "-" + DateTime.Now.ToString("yyyyMMdd-HHmmssffffff");
            //                    item3.Suportdocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(facultysupportfile),
            //                        fileName, ext));
            //                    item3.SuportdocumentView = string.Format("{0}{1}", fileName, ext);
            //                }
            //            }
            //            request.facultyId = facultyfields.facultyId;
            //            request.fieldId = item3.FieldId;
            //            request.requestReason = item3.requestReason;
            //            request.supportingDocs = null;
            //            request.isApproved = 0;
            //            request.rejectReason = null;
            //            request.isActive = true;
            //            request.createdOn = DateTime.Now;
            //            request.createdBy = userId;
            //            request.updatedOn = null;
            //            request.updatedBy = null;
            //            db.jntuh_faculty_edit_requests.Add(request);
            //            db.SaveChanges();
            //        }
            //    }
            //    TempData["SUCCESS"] = "Edit request Updated Successfully.";
            //}

            return RedirectToAction("RequestsList", new { fid = UAAAS.Models.Utilities.EncryptString(fID.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]) });
        }

        [HttpGet]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult FacultyExperience(string id)
        {
            MembershipUser userdata = Membership.GetUser(User.Identity.Name);

            if (userdata == null)
            {
                return RedirectToAction("LogOn", "Account");
            }
            int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            int fID = 0;
            string RegistrationNumber = string.Empty;
            if (id != null)
            {
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(id.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]));
                if (fID == 113698)
                {
                    fID = Convert.ToInt32(ConfigurationManager.AppSettings["testRegnumberfid"]);
                }
            }
            else if (userId != null)
            {
                RegistrationNumber = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(e => e.RegistrationNumber).FirstOrDefault();
            }
            else
            {
                return RedirectToAction("LogOn", "Account");
            }
            // fID = 93609;

            List<SelectListItem> colleges = new List<SelectListItem>();
            var jntuh_college = db.jntuh_college.ToList();

            var PresentColleges = jntuh_college.Where(a => a.isActive == true).Select(a => new { CollegeId = a.id, collegeCode = a.collegeCode, CollegeName = a.collegeName + "(" + a.collegeCode + ")" }).ToList();
            ViewBag.PresentColleges = PresentColleges;

            var colleges_list = jntuh_college.Select(a => new { CollegeId = a.id, collegeCode = a.collegeCode, CollegeName = a.collegeName + "(" + a.collegeCode + ")" }).ToList();

            colleges = colleges_list.Select(s => new SelectListItem { Value = s.CollegeId.ToString(), Text = s.CollegeName }).ToList();
            colleges.Add(new SelectListItem { Value = "0", Text = "Others" });
            ViewBag.Colleges = colleges.Where(i => i.Value != "375").OrderBy(s => s.Value).ToList();

            var Designation = db.jntuh_designation.Where(e => e.isActive == true).Select(a => new { Id = a.id, designation = a.designation }).Take(4).ToList();
            ViewBag.Designation = Designation;
            var registered_faculty = new jntuh_registered_faculty();

            if (fID != 0)
            {
                registered_faculty = db.jntuh_registered_faculty.Where(a => a.id == fID).FirstOrDefault();
            }
            else
            {
                registered_faculty = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber == RegistrationNumber).FirstOrDefault();
            }

            //Black List and Verification Status Flags Checking.....
            var RegisteredFacultyId = db.jntuh_registered_faculty.Where(e => e.id == registered_faculty.id && (e.Blacklistfaculy == true || e.AbsentforVerification == true)).Select(e => e.id).FirstOrDefault();
            if (RegisteredFacultyId != 0)
            {
                return RedirectToAction("ViewFacultyDetails", new { fid = id });
            }

            var jntuh_college_edit_status = new int[] { 375, 2, 4, 5, 6, 7, 8, 9, 11, 12, 17, 20, 22, 23, 24, 26, 27, 29, 30, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 52, 54, 55, 56, 58, 59, 60, 65, 67, 68, 69, 70, 72, 74, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 95, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 206, 207, 210, 211, 213, 214, 215, 217, 218, 219, 222, 223, 225, 227, 228, 229, 230, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 249, 250, 252, 253, 254, 256, 260, 261, 262, 263, 264, 266, 267, 271, 273, 276, 282, 283, 286, 287, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 327, 329, 330, 332, 334, 335, 336, 342, 343, 348, 349, 350, 352, 353, 355, 360, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 379, 380, 382, 384, 385, 386, 389, 391, 392, 393, 394, 395, 399, 400, 403, 410, 411, 413, 414, 416, 420, 421, 422, 423, 424, 428, 429, 430, 435, 436, 439, 441, 442, 443, 445, 448, 449, 452, 454, 455 };

            List<FacultyExperience> Explist = new List<FacultyExperience>();
            FacultyExperience experience = new FacultyExperience();
            experience.facultyId = registered_faculty.id;
            experience.RegistrationNumber = registered_faculty.RegistrationNumber;
            experience.Name = registered_faculty.FirstName + " " + registered_faculty.MiddleName + "" + registered_faculty.LastName;
            experience.firstName = registered_faculty.FirstName;
            experience.middleName = registered_faculty.MiddleName;
            experience.lastName = registered_faculty.LastName;
            experience.FacultyCollegeid = db.jntuh_college_faculty_registered.Where(s => s.RegistrationNumber == registered_faculty.RegistrationNumber && jntuh_college_edit_status.Contains(s.collegeId)).Select(a => a.collegeId).FirstOrDefault();
            if (experience.FacultyCollegeid == null || experience.FacultyCollegeid == 0)
            {
                experience.FacultyCollegeid = db.jntuh_college_principal_registered.Where(s => s.RegistrationNumber == registered_faculty.RegistrationNumber && jntuh_college_edit_status.Contains(s.collegeId)).Select(a => a.collegeId).FirstOrDefault();
            }
            var PresentExperienceList = db.jntuh_registered_faculty_experience.Where(a => a.facultyId == registered_faculty.id && a.facultyRelievingLetter == null && a.facultyDateOfResignation == null && a.createdBycollegeId == null).Select(a => a).FirstOrDefault();

            if (PresentExperienceList != null)
            {
                experience.PresentCollegeid = PresentExperienceList.collegeId;
                experience.PresentCollegeCode =
                    jntuh_college.Where(s => s.id == experience.PresentCollegeid)
                        .Select(a => a.collegeCode)
                        .FirstOrDefault();
                experience.PresentCollegeName =
                    jntuh_college.Where(s => s.id == experience.PresentCollegeid)
                        .Select(a => a.collegeName)
                        .FirstOrDefault();
                experience.PresentDesignationId = PresentExperienceList.facultyDesignationId;
                experience.PresentDesignation =
                    Designation.Where(a => a.Id == experience.PresentDesignationId)
                        .Select(z => z.designation)
                        .FirstOrDefault();
                experience.PresentOtherDesignation = PresentExperienceList.OtherDesignation;
                experience.PresentfacultyDateOfAppointment =
                    PresentExperienceList.facultyDateOfAppointment.ToString().Split(' ')[0];
                experience.PresentfacultyJoiningDocument = PresentExperienceList.facultyJoiningOrder;
                if (!string.IsNullOrEmpty(experience.PresentfacultyDateOfAppointment))
                {
                    int Presentfromyear = Convert.ToInt32(experience.PresentfacultyDateOfAppointment.Split('/')[2]);
                    int Presentfrommonth = Convert.ToInt32(experience.PresentfacultyDateOfAppointment.Split('/')[0]);
                    int Presentfromdate = Convert.ToInt32(experience.PresentfacultyDateOfAppointment.Split('/')[1]);

                    DateTime zeroTime = new DateTime(1, 1, 1);
                    DateTime Appointmentdate = new DateTime(Presentfromyear, Presentfrommonth, Presentfromdate);
                    var curdate = DateTime.Now;

                    var Difference = curdate - Appointmentdate;
                    if (Difference.Days > 0)
                    {
                        int years = (zeroTime + Difference).Year - 1;
                        int months = (zeroTime + Difference).Month - 1;
                        int days = (zeroTime + Difference).Day;

                        experience.PresentCollegeTotalExperience = years + " Years " + months + " Months " + days + "Days";
                    }

                }

            }
            var ExperienceList = new List<jntuh_registered_faculty_experience>();

            //if(PresentExperienceList != null)
            //{
            //    ExperienceList = db.jntuh_registered_faculty_experience.Where(a => a.facultyId == registered_faculty.id && a.Id != PresentExperienceList.Id).ToList();
            //}
            //else
            //{
            //    ExperienceList = db.jntuh_registered_faculty_experience.Where(a => a.facultyId == registered_faculty.id).ToList();
            //}

            ExperienceList = db.jntuh_registered_faculty_experience.Where(a => a.facultyId == registered_faculty.id && a.facultyDateOfResignation != null && a.createdBycollegeId == null).ToList();

            foreach (var item in ExperienceList)
            {
                FacultyExperience Experiencefaculty = new FacultyExperience();
                Experiencefaculty.EId = item.Id;
                //Experiencefaculty.facultyId = item.facultyId;
                Experiencefaculty.Collegeid = item.collegeId;
                Experiencefaculty.CollegeCode = item.collegeId == 375 ? "-" : jntuh_college.Where(e => e.id == item.collegeId).Select(s => s.collegeCode).FirstOrDefault();
                Experiencefaculty.CollegeName = item.collegeId == 375 ? "Others" : jntuh_college.Where(e => e.id == item.collegeId).Select(s => s.collegeName).FirstOrDefault();
                Experiencefaculty.OtherCollegeName = item.OtherCollege;
                Experiencefaculty.Designation = Designation.Where(a => a.Id == item.facultyDesignationId).Select(z => z.designation).FirstOrDefault();
                Experiencefaculty.OtherDesignation = item.OtherDesignation;
                Experiencefaculty.facultyDateOfAppointment = item.facultyDateOfAppointment.ToString().Split(' ')[0];
                Experiencefaculty.facultyDateOfResignation = item.facultyDateOfResignation.ToString().Split(' ')[0];

                // Experiencefaculty.facultyDateOfAppointment = UAAAS.Models.Utilities.MMDDYY2DDMMYY(Experiencefaculty.facultyDateOfAppointment);
                if (!string.IsNullOrEmpty(Experiencefaculty.facultyDateOfAppointment) && !string.IsNullOrEmpty(Experiencefaculty.facultyDateOfResignation))
                {
                    int fromyear = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.Split('/')[2]);
                    int frommonth = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.Split('/')[0]);
                    int fromdate = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.Split('/')[1]);


                    // Experiencefaculty.facultyDateOfResignation = UAAAS.Models.Utilities.MMDDYY2DDMMYY(Experiencefaculty.facultyDateOfResignation);

                    int year = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.Split('/')[2]);
                    int month = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.Split('/')[0]);
                    int date = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.Split('/')[1]);

                    DateTime zeroTime = new DateTime(1, 1, 1);
                    DateTime olddate = new DateTime(fromyear, frommonth, fromdate);
                    DateTime curdate = new DateTime(year, month, date);

                    var Difference = curdate - olddate;
                    if (Difference.Days > 0)
                    {
                        int years = (zeroTime + Difference).Year - 1;
                        int months = (zeroTime + Difference).Month - 1;
                        int days = (zeroTime + Difference).Day;

                        Experiencefaculty.TotalExperience = years + " Years " + months + " Months " + days + "Days";
                    }


                    Experiencefaculty.facultyJoiningDocument = item.facultyJoiningOrder;
                    Experiencefaculty.facultyRelievingDocument = item.facultyRelievingLetter;
                    Experiencefaculty.facultySCMDocument = item.FacultySCMDocument;
                    Experiencefaculty.facultySalary = item.facultySalary;
                    Explist.Add(Experiencefaculty);
                }

            }

            experience.experiencelist = Explist;
            if (Roles.IsUserInRole("Admin"))
            {
                return View("FacultyExperienceViewForAdmin", experience);
            }
            return View(experience);
        }

        [HttpPost]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult FacultyExperience(FacultyExperience Experience)
        {
            MembershipUser userdata = Membership.GetUser(User.Identity.Name);

            if (userdata == null)
            {
                return RedirectToAction("LogOn", "Account");
            }
            int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            string RegistrationNumber = string.Empty;
            // userId = 112506;
            try
            {
                if (Experience.PresentCollegeid != null || Experience.Collegeid != null)
                {
                    var facultyexperiencedocumentspath = "~/Content/Upload/Faculty/ExperienceDocuments";

                    jntuh_registered_faculty_experience facultyexperience = new jntuh_registered_faculty_experience();
                    facultyexperience.facultyId = Experience.facultyId;
                    facultyexperience.collegeId = Experience.Collegeid == 0 ? 375 : Experience.Collegeid;
                    facultyexperience.OtherCollege = Experience.Collegeid == 0 ? Experience.OtherCollegeName : null;
                    facultyexperience.facultyDesignationId = Experience.DesignationId;
                    facultyexperience.OtherDesignation = Experience.DesignationId == 4 ? Experience.OtherDesignation : null;

                    if (Experience.facultyDateOfAppointment != null)
                        facultyexperience.facultyDateOfAppointment = UAAAS.Models.Utilities.DDMMYY2MMDDYY(Experience.facultyDateOfAppointment);

                    if (Experience.facultyDateOfResignation != null)
                        facultyexperience.facultyDateOfResignation = UAAAS.Models.Utilities.DDMMYY2MMDDYY(Experience.facultyDateOfResignation);



                    //Faculty Joining Order Document
                    if (Experience.PresentJoiningOrder != null)
                    {
                        if (!Directory.Exists(Server.MapPath(facultyexperiencedocumentspath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(facultyexperiencedocumentspath));
                        }

                        var ext = Path.GetExtension(Experience.PresentJoiningOrder.FileName);

                        if (ext.ToUpper().Equals(".PDF"))
                        {
                            string CheckLastName = string.Empty;
                            if (String.IsNullOrEmpty(Experience.lastName))
                            {
                                CheckLastName = Experience.middleName;
                            }
                            else
                            {
                                CheckLastName = Experience.lastName;
                            }
                            string filename = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") +
                                                 "-" + Experience.firstName.Substring(0, 1) + "-" + CheckLastName.Substring(0, 1) + "_JO";
                            Experience.PresentJoiningOrder.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(facultyexperiencedocumentspath), filename, ext));
                            Experience.PresentfacultyJoiningDocument = string.Format("{0}{1}", filename, ext);
                        }
                    }
                    else
                    {
                        Experience.PresentfacultyJoiningDocument = Experience.PresentfacultyJoiningDocument;
                    }

                    //Faculty Joining Order Document
                    if (Experience.JoiningOrder != null)
                    {
                        if (!Directory.Exists(Server.MapPath(facultyexperiencedocumentspath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(facultyexperiencedocumentspath));
                        }

                        var ext = Path.GetExtension(Experience.JoiningOrder.FileName);

                        if (ext.ToUpper().Equals(".PDF"))
                        {
                            string CheckLastName = string.Empty;
                            if (String.IsNullOrEmpty(Experience.lastName))
                            {
                                CheckLastName = Experience.middleName;
                            }
                            else
                            {
                                CheckLastName = Experience.lastName;
                            }
                            string filename = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") +
                                                 "-" + Experience.firstName.Substring(0, 1) + "-" + CheckLastName.Substring(0, 1) + "_JO";
                            Experience.JoiningOrder.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(facultyexperiencedocumentspath), filename, ext));
                            Experience.facultyJoiningDocument = string.Format("{0}{1}", filename, ext);
                        }
                    }
                    else
                    {
                        Experience.facultyJoiningDocument = Experience.facultyJoiningDocument;
                    }

                    //Faculty Reliving Order Document
                    if (Experience.RelievingOrder != null)
                    {
                        if (!Directory.Exists(Server.MapPath(facultyexperiencedocumentspath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(facultyexperiencedocumentspath));
                        }

                        var ext = Path.GetExtension(Experience.RelievingOrder.FileName);

                        if (ext.ToUpper().Equals(".PDF"))
                        {
                            string CheckLastName = string.Empty;
                            if (String.IsNullOrEmpty(Experience.lastName))
                            {
                                CheckLastName = Experience.middleName;
                            }
                            else
                            {
                                CheckLastName = Experience.lastName;
                            }
                            string filename = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") +
                                                  "-" + Experience.firstName.Substring(0, 1) + "-" + CheckLastName.Substring(0, 1) + "_RO";
                            Experience.RelievingOrder.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(facultyexperiencedocumentspath), filename, ext));
                            Experience.facultyRelievingDocument = string.Format("{0}{1}", filename, ext);
                        }
                    }
                    else
                    {
                        Experience.facultyRelievingDocument = Experience.facultyRelievingDocument;
                    }

                    //Faculty SCM  Document
                    if (Experience.SCMDocument != null)
                    {
                        if (!Directory.Exists(Server.MapPath(facultyexperiencedocumentspath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(facultyexperiencedocumentspath));
                        }

                        var ext = Path.GetExtension(Experience.SCMDocument.FileName);
                        if (ext.ToUpper().Equals(".PDF"))
                        {
                            string CheckLastName = string.Empty;
                            if (String.IsNullOrEmpty(Experience.lastName))
                            {
                                CheckLastName = Experience.middleName;
                            }
                            else
                            {
                                CheckLastName = Experience.lastName;
                            }
                            string filename = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-"
                                + Experience.firstName.Substring(0, 1) + "-" + CheckLastName.Substring(0, 1) + "_SCM";
                            Experience.SCMDocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(facultyexperiencedocumentspath), filename, ext));
                            Experience.facultySCMDocument = string.Format("{0}{1}", filename, ext);
                        }
                    }
                    else
                    {
                        Experience.facultySCMDocument = null;
                    }

                    facultyexperience.facultyJoiningOrder = Experience.facultyJoiningDocument;
                    facultyexperience.facultyRelievingLetter = Experience.facultyRelievingDocument;
                    facultyexperience.FacultySCMDocument = Experience.facultySCMDocument;
                    facultyexperience.facultySalary = Experience.facultySalary;
                    facultyexperience.isActive = false;
                    facultyexperience.createdOn = DateTime.Now;
                    facultyexperience.createdBy = userId;
                    facultyexperience.updatedOn = null;
                    facultyexperience.updatedBy = null;


                    if (facultyexperience.collegeId != null)
                    {
                        if (facultyexperience.collegeId != null && facultyexperience.facultyJoiningOrder != null && facultyexperience.facultyRelievingLetter != null && facultyexperience.facultyDateOfAppointment != null && facultyexperience.facultyDateOfResignation != null)
                        {
                            int DOAyear = Convert.ToInt32(Experience.facultyDateOfAppointment.Split('/')[2]);
                            int DOAmonth = Convert.ToInt32(Experience.facultyDateOfAppointment.Split('/')[1]);
                            int DOAdate = Convert.ToInt32(Experience.facultyDateOfAppointment.Split('/')[0]);

                            DateTime Check_DOA = new DateTime(DOAyear, DOAmonth, DOAdate);

                            int DORyear = Convert.ToInt32(Experience.facultyDateOfResignation.Split('/')[2]);
                            int DORmonth = Convert.ToInt32(Experience.facultyDateOfResignation.Split('/')[1]);
                            int DORdate = Convert.ToInt32(Experience.facultyDateOfResignation.Split('/')[0]);

                            DateTime Check_DOR = new DateTime(DORyear, DORmonth, DORdate);

                            var registered_faculty_experience = db.jntuh_registered_faculty_experience.Where(a => a.facultyId == facultyexperience.facultyId && a.facultyDateOfAppointment == Check_DOA && a.facultyDateOfResignation == Check_DOR).Select(a => a.Id).FirstOrDefault();
                            if (registered_faculty_experience == 0 || registered_faculty_experience == null)
                            {
                                db.jntuh_registered_faculty_experience.Add(facultyexperience);
                                db.SaveChanges();
                                TempData["SUCCESS"] = "Experience Details Saved Successfully";
                            }
                            else
                            {
                                TempData["ERROR"] = "Experience Data already exists";
                            }
                        }
                        else
                        {
                            TempData["ERROR"] = "Experience Data is Not Saved. Please Try Again";
                        }
                    }


                    if (Experience.PresentCollegeid != null && Experience.PresentDesignationId != null && Experience.PresentfacultyJoiningDocument != null && Experience.PresentfacultyDateOfAppointment != null)
                    {
                        jntuh_registered_faculty_experience Presentfacultyexperience = new jntuh_registered_faculty_experience();
                        Presentfacultyexperience.facultyId = Experience.facultyId;
                        Presentfacultyexperience.collegeId = Experience.PresentCollegeid;
                        Presentfacultyexperience.OtherCollege = null;
                        Presentfacultyexperience.facultyDesignationId = Experience.PresentDesignationId;
                        Presentfacultyexperience.OtherDesignation = Experience.PresentDesignationId == 4 ? Experience.PresentOtherDesignation : null;

                        if (Experience.PresentfacultyDateOfAppointment != null)
                            Presentfacultyexperience.facultyDateOfAppointment = UAAAS.Models.Utilities.DDMMYY2MMDDYY(Experience.PresentfacultyDateOfAppointment);

                        Presentfacultyexperience.facultyJoiningOrder = Experience.PresentfacultyJoiningDocument;
                        Presentfacultyexperience.facultyDateOfResignation = null;
                        Presentfacultyexperience.facultyRelievingLetter = null;
                        Presentfacultyexperience.isActive = false;
                        Presentfacultyexperience.createdOn = DateTime.Now;
                        Presentfacultyexperience.createdBy = userId;
                        Presentfacultyexperience.updatedOn = null;
                        Presentfacultyexperience.updatedBy = null;

                        var PresentExperienceList = db.jntuh_registered_faculty_experience.Where(a => a.facultyId == Experience.facultyId && a.facultyRelievingLetter == null && a.facultyDateOfResignation == null).Select(a => a).FirstOrDefault();
                        if (PresentExperienceList != null)
                        {
                            TempData["ERROR"] = "Present College appointment details are already exists";
                        }
                        else
                        {
                            db.jntuh_registered_faculty_experience.Add(Presentfacultyexperience);
                            db.SaveChanges();
                            TempData["SUCCESS"] = "present College appointment Details Saved Successfully";
                        }
                    }

                    return RedirectToAction("IndexRegistration", "NewOnlineRegistration", new { id = UAAAS.Models.Utilities.EncryptString(Experience.facultyId.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]) });
                }
                else
                {
                    TempData["ERROR"] = "Add your present College appointment details first";
                    return RedirectToAction("FacultyExperience", "NewOnlineRegistration", new { id = UAAAS.Models.Utilities.EncryptString(Experience.facultyId.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]) });
                }
            }
            catch (Exception ex)
            {
                TempData["ERROR"] = "Experience Data is Not Saved. Please Try Again";
                if (userId != null)
                {
                    RegistrationNumber = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(e => e.RegistrationNumber).FirstOrDefault();
                }
                else
                {
                    return RedirectToAction("LogOn", "Account");
                }
                return RedirectToAction("FacultyExperience", "NewOnlineRegistration", new { id = UAAAS.Models.Utilities.EncryptString(Experience.facultyId.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]) });
            }

        }

        public ActionResult CheckExperienceDates(int facultyId, string facultyDateOfAppointment, string facultyDateOfResignation)
        {
            MembershipUser userdata = Membership.GetUser(User.Identity.Name);

            if (userdata == null)
            {
                return RedirectToAction("FacultyExperience", "NewOnlineRegistration");
            }

            var status = false;
            var message = string.Empty;
            var userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);

            var facultyid = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(a => a.id).FirstOrDefault();
            if (facultyid == 113698)
            {
                facultyid = Convert.ToInt32(ConfigurationManager.AppSettings["testRegnumberfid"]);
                userId = Convert.ToInt32(ConfigurationManager.AppSettings["FacultyUserId"]);
            }
            if (facultyDateOfAppointment != null && facultyDateOfResignation != null)
            {
                int Appointmentyear = Convert.ToInt32(facultyDateOfAppointment.Split('/')[2]);
                int Appointmentmonth = Convert.ToInt32(facultyDateOfAppointment.Split('/')[1]);
                int Appointmentdate = Convert.ToInt32(facultyDateOfAppointment.Split('/')[0]);

                DateTime DOA = new DateTime(Appointmentyear, Appointmentmonth, Appointmentdate);

                int Resignationyear = Convert.ToInt32(facultyDateOfResignation.Split('/')[2]);
                int Resignationmonth = Convert.ToInt32(facultyDateOfResignation.Split('/')[1]);
                int Resignationdate = Convert.ToInt32(facultyDateOfResignation.Split('/')[0]);

                DateTime DOR = new DateTime(Resignationyear, Resignationmonth, Resignationdate);

                if (DOA > DOR)
                {
                    status = true;
                    message = "End Date is not less than Start Date";
                    return Json(new { status = status, message = message }, JsonRequestBehavior.AllowGet);
                }

                var Experience = db.jntuh_registered_faculty_experience.Where(s => s.facultyId == facultyid && s.facultyDateOfResignation != null).Select(e => e).ToList();

                if (Experience.Count != 0)
                {
                    foreach (var item in Experience)
                    {
                        //string Appointment = UAAAS.Models.Utilities.MMDDYY2DDMMYY(item.facultyDateOfAppointment.ToString());
                        //string Resignation = UAAAS.Models.Utilities.MMDDYY2DDMMYY(item.facultyDateOfResignation.ToString());
                        if (item.facultyDateOfAppointment != null && item.facultyDateOfResignation != null)
                        {
                            string Appointment = item.facultyDateOfAppointment.ToString().Split(' ')[0];
                            string Resignation = item.facultyDateOfResignation.ToString().Split(' ')[0];

                            int Appyear = Convert.ToInt32(Appointment.Split('/')[2]);
                            int Appmonth = Convert.ToInt32(Appointment.Split('/')[0]);
                            int Appdate = Convert.ToInt32(Appointment.Split('/')[1]);

                            DateTime DateOfApp = new DateTime(Appyear, Appmonth, Appdate);

                            int Resignyear = Convert.ToInt32(Resignation.Split('/')[2]);
                            int Resignmonth = Convert.ToInt32(Resignation.Split('/')[0]);
                            int Resigndate = Convert.ToInt32(Resignation.Split('/')[1]);

                            DateTime DateOfResign = new DateTime(Resignyear, Resignmonth, Resigndate);

                            if (DateOfApp >= DOA && DateOfResign <= DOR)
                            {
                                status = true;
                                message = "You are already working in this peroid as per your claim";
                                break;
                            }
                            if (DateOfApp >= DOA && DateOfResign >= DOR)
                            {
                                if (DOA == DOR)
                                {
                                    status = true;
                                    message = "";
                                    // break;
                                }
                                else if (DOA <= DateOfApp && DOR <= DateOfApp)
                                {
                                    status = false;
                                    message = "";
                                    // break;
                                }
                                else
                                {
                                    status = true;
                                    message = "You are already working in this peroid as per your claim";
                                    break;
                                }
                            }
                            if (DateOfApp <= DOA && DateOfResign <= DOR)
                            {
                                if (DOA == DOR)
                                {
                                    status = true;
                                    message = "";
                                    //break;
                                }
                                else if (DOA >= DateOfResign && DOR > DateOfResign)
                                {
                                    status = false;
                                    message = "";
                                    // break;
                                }
                                else
                                {
                                    status = true;
                                    message = "You are already working in this peroid as per your claim";
                                    break;
                                }
                            }
                            if (DateOfApp <= DOA && DateOfResign >= DOR)
                            {
                                status = true;
                                message = "You are already working in this peroid as per your claim";
                                break;
                            }
                        }

                    }
                    return Json(new { status = status, message = message }, JsonRequestBehavior.AllowGet);
                }
                return Json(new { status = false, message = message }, JsonRequestBehavior.AllowGet);
            }
            return Json(new { status = true, message = "Please Select Date" }, JsonRequestBehavior.AllowGet);
        }

        public ActionResult EditCheckExperienceDates(int facultyId, string facultyDateOfAppointment, string facultyDateOfResignation, int ID)
        {
            MembershipUser userdata = Membership.GetUser(User.Identity.Name);
            if (userdata == null)
            {
                return RedirectToAction("FacultyExperience", "NewOnlineRegistration");
            }

            var status = false;
            var message = string.Empty;
            var userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);

            var facultyid = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(a => a.id).FirstOrDefault();

            if (facultyDateOfAppointment != null && facultyDateOfResignation != null)
            {
                int Appointmentyear = Convert.ToInt32(facultyDateOfAppointment.Split('/')[2]);
                int Appointmentmonth = Convert.ToInt32(facultyDateOfAppointment.Split('/')[1]);
                int Appointmentdate = Convert.ToInt32(facultyDateOfAppointment.Split('/')[0]);

                DateTime DOA = new DateTime(Appointmentyear, Appointmentmonth, Appointmentdate);

                int Resignationyear = Convert.ToInt32(facultyDateOfResignation.Split('/')[2]);
                int Resignationmonth = Convert.ToInt32(facultyDateOfResignation.Split('/')[1]);
                int Resignationdate = Convert.ToInt32(facultyDateOfResignation.Split('/')[0]);

                DateTime DOR = new DateTime(Resignationyear, Resignationmonth, Resignationdate);

                if (DOA > DOR)
                {
                    status = true;
                    message = "End Date is not less than Start Date";
                    return Json(new { status = status, message = message }, JsonRequestBehavior.AllowGet);
                }

                var Experience = db.jntuh_registered_faculty_experience.Where(s => s.facultyId == facultyid && s.facultyDateOfResignation != null && s.Id != ID).Select(e => e).ToList();
                if (Experience.Count != 0)
                {
                    foreach (var item in Experience)
                    {
                        //string Appointment = UAAAS.Models.Utilities.MMDDYY2DDMMYY(item.facultyDateOfAppointment.ToString());
                        //string Resignation = UAAAS.Models.Utilities.MMDDYY2DDMMYY(item.facultyDateOfResignation.ToString());

                        string Appointment = item.facultyDateOfAppointment.ToString().Split(' ')[0];
                        string Resignation = item.facultyDateOfResignation.ToString().Split(' ')[0];

                        int Appyear = Convert.ToInt32(Appointment.Split('/')[2]);
                        int Appmonth = Convert.ToInt32(Appointment.Split('/')[0]);
                        int Appdate = Convert.ToInt32(Appointment.Split('/')[1]);

                        DateTime DateOfApp = new DateTime(Appyear, Appmonth, Appdate);

                        int Resignyear = Convert.ToInt32(Resignation.Split('/')[2]);
                        int Resignmonth = Convert.ToInt32(Resignation.Split('/')[0]);
                        int Resigndate = Convert.ToInt32(Resignation.Split('/')[1]);

                        DateTime DateOfResign = new DateTime(Resignyear, Resignmonth, Resigndate);

                        if (DateOfApp >= DOA && DateOfResign <= DOR)
                        {
                            status = true;
                            message = "You are already working in this peroid as per your claim";
                            break;
                        }
                        if (DateOfApp >= DOA && DateOfResign >= DOR)
                        {
                            if (DOA == DOR)
                            {
                                status = true;
                                message = "";
                                // break;
                            }
                            else if (DOA <= DateOfApp && DOR <= DateOfApp)
                            {
                                status = false;
                                message = "";
                                // break;
                            }
                            else
                            {
                                status = true;
                                message = "You are already working in this peroid as per your claim";
                                break;
                            }
                        }
                        if (DateOfApp <= DOA && DateOfResign <= DOR)
                        {
                            if (DOA == DOR)
                            {
                                status = true;
                                message = "";
                                //break;
                            }
                            else if (DOA >= DateOfResign && DOR > DateOfResign)
                            {
                                status = false;
                                message = "";
                                // break;
                            }
                            else
                            {
                                status = true;
                                message = "You are already working in this peroid as per your claim";
                                break;
                            }
                        }
                        if (DateOfApp <= DOA && DateOfResign >= DOR)
                        {
                            status = true;
                            message = "You are already working in this peroid as per your claim";
                            break;
                        }
                    }
                    return Json(new { status = status, message = message }, JsonRequestBehavior.AllowGet);
                }
                //if (Experience.Where(a => a.facultyDateOfAppointment >= DOA && a.facultyDateOfResignation <= DOR).Select(s=>s).Count() != null)
                //{
                //    status = true;
                //    message = "You are already working in this peroid as per your claim";
                //    break;
                //}

                return Json(new { status = false, message = message }, JsonRequestBehavior.AllowGet);
            }
            return Json(new { status = true, message = "Please Select Date" }, JsonRequestBehavior.AllowGet);
        }

        public ActionResult DeletePresentcollegeExperience(string facultyId)
        {
            MembershipUser userdata = Membership.GetUser(User.Identity.Name);

            if (userdata == null)
            {
                return RedirectToAction("LogOn", "Account");
            }
            int userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            if (facultyId != null)
            {
                int FacultyID = db.jntuh_registered_faculty.Where(s => s.UserId == userId).Select(s => s.id).FirstOrDefault();
                var jntuh_registered_faculty_experience = db.jntuh_registered_faculty_experience.Where(s => s.facultyId == FacultyID && s.facultyDateOfResignation == null && s.facultyRelievingLetter == null).Select(a => a).FirstOrDefault();
                if (jntuh_registered_faculty_experience != null)
                {
                    db.jntuh_registered_faculty_experience.Remove(jntuh_registered_faculty_experience);
                    db.SaveChanges();
                    TempData["Success"] = "Present Institute Details are Deleted Successfully.";
                }

            }
            return RedirectToAction("FacultyExperience");
        }

        public ActionResult DeletePreviouscollegeExperience(int? EId)
        {
            // return RedirectToAction("FacultyExperience");

            MembershipUser userdata = Membership.GetUser(User.Identity.Name);

            if (userdata == null)
            {
                return RedirectToAction("LogOn", "Account");
            }
            int userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            if (EId != null)
            {
                var jntuh_registered_faculty_experience = db.jntuh_registered_faculty_experience.Where(s => s.Id == EId).Select(a => a).FirstOrDefault();
                if (jntuh_registered_faculty_experience != null)
                {
                    db.jntuh_registered_faculty_experience.Remove(jntuh_registered_faculty_experience);
                    db.SaveChanges();
                    TempData["Success"] = "Previous Institute Details are Deleted Successfully.";
                }

            }
            return RedirectToAction("IndexRegistration");
        }

        //Faculty PHD Details New Screen Written By Narayana Reddy
        public ActionResult FacultyphdDetails(string fid)
        {
            //return RedirectToAction("Index", "UnderConstruction");
            if (Membership.GetUser(User.Identity.Name) == null)
                return RedirectToAction("Logon", "Account");
            int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            int fID = 0;
            if (fid != null)
            {
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(fid.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]));
            }
            else
            {
                fID =
                    db.jntuh_registered_faculty.Where(r => r.UserId == userId).Select(s => s.id).FirstOrDefault();
            }
            if (fID == 113698)
            {
                fID = Convert.ToInt32(ConfigurationManager.AppSettings["testRegnumberfid"]);
            }
            var registredfaculty = db.jntuh_registered_faculty.Where(r => r.id == fID).Select(s => s).FirstOrDefault();
            if (registredfaculty == null)
            {
                TempData["ERROR"] = "Faculty Details not found.";
            }
            FacultyphdDetails phddetails = new FacultyphdDetails();
            List<SelectListItem> phdtypeslist = new List<SelectListItem>();
            phdtypeslist.Add(new SelectListItem { Text = "Full Time/ Regular", Value = "1" });
            phdtypeslist.Add(new SelectListItem { Text = "Part Time/ External", Value = "2" });
            ViewBag.phdtype = phdtypeslist;

            List<SelectListItem> phdnotificationissuedlist = new List<SelectListItem>();
            phdnotificationissuedlist.Add(new SelectListItem { Text = "Online", Value = "1" });
            phdnotificationissuedlist.Add(new SelectListItem { Text = "Offline", Value = "2" });
            ViewBag.phdnotificationissuedlist = phdnotificationissuedlist;

            List<SelectListItem> phdofferingDepartmentsList = new List<SelectListItem>();
            var departments = db.jntuh_department.Where(r => r.degreeId == 4).Select(s => s).ToList();
            foreach (var item in departments)
            {
                phdofferingDepartmentsList.Add(new SelectListItem { Text = item.departmentDescription.ToString(), Value = item.id.ToString() });
            }
            //phdofferingDepartmentsList.Add(new SelectListItem {Text = "Others",Value = "0"});
            phdofferingDepartmentsList = phdofferingDepartmentsList.OrderByDescending(c => c.Value).ToList();
            ViewBag.phdofferingDepartmentsList = phdofferingDepartmentsList;
            phddetails.PhdDepts = phdofferingDepartmentsList.Select(s => s.Text).ToList();
            List<SelectListItem> phdofferingSpecList = new List<SelectListItem>();
            var specialization = db.jntuh_specialization.Select(s => s).ToList();
            foreach (var item in specialization)
            {
                phdofferingSpecList.Add(new SelectListItem { Text = item.specializationDescription.ToString(), Value = item.id.ToString() });
            }
            //phdofferingSpecList.Add(new SelectListItem { Text = "Others", Value = "0" });
            phdofferingSpecList = phdofferingSpecList.OrderByDescending(c => c.Value).ToList();
            ViewBag.phdofferingSpecList = phdofferingSpecList;
            phddetails.PhdSpecs = phdofferingSpecList.Select(s => s.Text).ToList();
            List<SelectListItem> years = new List<SelectListItem>();
            for (int i = 1970; i <= DateTime.Now.Year; i++)
            {
                years.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.years = years;
            phddetails.Universitys = new List<string>() { "JawaharLal Nehru Technologial University Hyderabad", "JawaharLal Nehru Technologial University Kakinada", "JawaharLal Nehru Technologial University Anathapur", "Rajiv Gandhi University", "Assam University", "Tezpur University", "University of Hyderabad, Hyderabad", "Maulana Azad National Urdu University", "English   and   Foreign   Languages   University", "Jamia Millia Islamia", "University of Delhi", "JawaharLal Nehru University", "Indira Gandhi National Open University", "South Asian University", "The  Indira  Gandhi  National  Tribal  University", "Dr. Harisingh Gour Vishwavidyalaya", "Mahatma  Gandhi  Antarrashtriya  Hindi  Vishwavidyalaya", "Mizoram University", "North Eastern Hill University", "Manipur University", "Central Agricultural University", "Nagaland University", "Pondicherry  University", "Sikkim University", "Tripura University", "Aligarh Muslim University", "Babasaheb  Bhimrao  Ambedkar  University", "Banaras Hindu University", "University of Allahabad", "Rajiv  Gandhi  National  Aviation  University", "Rani  Lakshmi  Bai  Central  Agricultural  University", "Visva Bharati, Shantiniketan", "Hemwati Nandan Bahuguna Garhwal University", "Central University of Tamil Nadu", "Indian Maritime University", "Central  University  of  Rajasthan", "Central University of Punjab", "Central University of Orissa", "Central University of Kerala", "Central University of Karnataka", "Central University of Jharkhand", "Central University of Kashmir, Transit Campus", "Central University of Jammu, Bagla (Rahya-Suchani)", "Central University of Himachal Pradesh", "Central University of Haryana", "Guru  Ghasidas  Vishwavidyalaya", "Central University of Bihar", "Nalanda University", "Mahatma  Gandhi  Central  University", "Central University of Gujarat", "Academy of Maritime Education and Training", "Amrita Vishwa Vidyapeetham", "Avinashilingam Institute for Home Science & Higher Education for Women", "B.L.D.E.", "B.S. Abdur Rahman Institute of Science and Technology", "Banasthai Vidyapith", "Bharath Institute of Higher Education & Research", "Bharati Vidyapeeth", "Bhatkhande Music Institute", "Birla Institute of Technology", "Birla Institute of Technology & Science", "Central Institute of Buddhist Studies(CIBS)", "Central Institute of Fisheries Education", "Central Institute of Higher Tibetan Studies", "Chennai Mathematical Institute", "Chettinad Academy of Research and Education (CARE)", "Chinmaya Vishwavidyapeeth", "Christ", "D.Y Patil Educational Society", "Datta Meghe Institute of Medical Sciences", "Dayalbagh Educational Institute", "Deccan College Postgraduate & Research Institute", "Dr. D.Y. Patil Vidyapeeth", "Dr. M.G.R. Educational and Research Institute", "Forest Research Institute", "Gandhi Institute of Technology and Management (GITAM)", "Gandhiigram Rural Institute", "Gokhale Institute of Politics & Economics", "Graphic Era", "Gujarat Vidyapith", "Gurukul Kangri vidyapeeth", "Hindustan Institute of Technology and Science (HITS)", "Homi Bhabha National Institute, Regd. Office", "ICFAI Foundation for Higher Education", "IIS", "Indain Institute of Foreigen Trade", "Indian Agricultural Research Institute", "Indian Association for the Cultivation of Science (IACS)", "Indian Institute of Information Technology and Management", "Indian Institute of Science", "Indian Institute of Space Science and Technology", "Indian Law Institute", "Indian School of Mines", "Indian Veterinary Research Institute", "Indira Gandhi Institute of Development Research", "Institute of Advanced Studies in Education", "Institute of Chemical Technology", "Institute of liver and Biliary Sciences", "Instituteof Armamrnt Technology", "International Institute for Population Sciences", "International Institute of Information Technology", "Jain", "Jain Vishva Bharati Institute", "Jamia Hamdard", "Janardan Rai Nagar Rajasthan Vidyapeeth", "Jawahar lal Nehru Centre for Advanced Scientific Research", "Jaypee Institute of Information Technology", "JSS Academy of Higher Education & Research", "K.L.E. Academy of Higher Education and Research", "Kalasalingam Academy of Research and Education", "Kalinga Institute of Industrial Technology", "Karpagam Academy of Higher Education", "Karunya Institute of Technology and Sciences", "Kerala Kalamandalam", "Koneru Lakshmaiah Education Foundation", "Krishna Institute of Medical Sciences", "Lakshmibai National Institute of Physical Education", "Lingaya's Vidyapeeth", "LNM Istitute of Information Technology", "Maharishi Markandeshwar (Deemed to be University)", "Manav Rachna International Institute of Research and Studies", "Manipal Academy of Higher Education", "Meenakshi Academy of Higher Education and Research", "MGM Institute of Health Sciences", "Narsee Monjee Institute of Management Studies", "National Brain Research Centre", "National Dairy Research Institute", "National Institute of Food Technology, Entrepreneurship & Management (NIFTEM)", "National Institute of Mental Health & Neuro Sciences", "National Museum Institute of History of Arts, Conservation and Musicology", "National Rail and Transportation Institute", "National University of Educational Planning & Administration", "Nava Nalanda Mahavihara", "Nehru Gram Bharati", "NITTE", "Noorul Islam Centre for Higher Education", "North Eastern Regional Institute of Science & Technology", "Padmashree Dr.D.Y. Patil Vidyapeeeth", "Pandit Dwarka Prasad Mishra Indian Institute of Information Technology", "Periyar Manaimmai Institute of Science & Technology (PMIST)", "Ponnaiyan Ramajayam Institute of Science & technology (PMIST)", "Pravara Institute of Medical Sciences", "Punjab Engineering College", "Rajiv Gandhi National Institute of Youth Development", "Ramakrishna Mission Vivekananda Educational and Research Institute", "Rashtriya Sanskrit Sansthana", "Rashtriya Sanskrit Vidyapeeth", "S.R.M Institute of Science and Technology", "Sam Higginbottom Institute of Agriculture, Technology & Sciences", "Sant Longowal Institute of Engineering and Technology", "Santosh", "Sathyabama Institute of Science and Technology", "Saveetha Institute of Medical and Technical Sciences", "Shanmugha Arts Science Technology & Research Academy (SASTRA)", "Shobhit Institute of Engineering & Technology", "Shri Lal Bahadur Shastri Rashtriya Sanskrit Vidyapith", "Siksha 'O' Anusandhan", "Sri Balaji Vidyapeeth (Deemed to be University)", "Sri Chandrasekharendra Saraswathi Vishwa Mahavidyalaya", "Sri Devraj Urs Academy of Higher Education and Research", "Sri Ramachandra Medical College and Research Institute", "Sri Sathya Sai Institute of Higher Learning", "Sri Siddhartha Academy of Higher Education", "St. Peterâ€™s Institute of Higher Education and Research", "Sumandeep Vidyapeeth", "Swami Vivekananda Yoga Anusandhana Samsthana", "Symbiosis International", "Tata Institute of Fundamental Research", "Tata Institute of Social Sciences", "TERI School of Advanced studies", "Thapar Institute of Engineering & Technology", "Tilak Maharashtra Vidyapeeth", "Vel Tech Rangarajan Dr. Sagunthala R & D Institute of Science and Technology", "Vellore Institute of Technology", "VELS Institute of Science Technology & Advanced Studies (VISTAS)", "Vignan's Foundation for Science, Technology and Research", "Vinayaka Missionâ€™s Research Foundation", "Yenepoya", "A.P.J. Abdul Kalam Technological University", "Acharaya N.G.Ranga Agricultural University", "Acharaya Nagarjuna University", "Adikavi Nannaya University", "Akkamahadevi women's University (Formerly known as Karnataka State Women's University)", "Alagappa University", "Aliah University", "Allahabad State University", "Ambedkar University Delhi (AUD)", "Anand Agricultural University", "Andhra University", "Anna University", "Annamalai University", "Arybhatta Knowledge University", "Assam Agricultural University", "Assam Rajiv Gandhi University of Co-operative Management", "Assam Science & Technology University", "Assam Womens University", "Atal Bihari Vajpayee Hindi Vishwavidyalaya", "Awadesh Pratap Singh University", "Ayush and Health Sciences University of Chhattisgarh", "Baba Farid University of Health Sciences", "Baba Ghulam Shah Badshah University", "Babasaheb Bhimrao Ambedkar Bihar University", "Banda University of Agriculture & Technology", "Bangalore University", "Bankura University", "Barkatullaah University", "Bastar Vishwavidyalaya", "Bengaluru Central University", "Bengaluru North University", "Berhampur University", "Bhagat Phool Singh Mahila Vishwavidyalaya", "Bhakta Kavi Narsinh Mehta University", "Bharathiar University", "Bharathidasan University", "Bhupender Narayan Mandal University", "Bidhan Chandra Krishi Vishwavidyalaya", "Bihar Agricultural University", "Biju Patnaik University of Technology", "Bilaspur Vishwavidyalaya", "Binod Bihari Mahto Koylanchal University", "Birsa Agricultural University", "Bodoland University", "Bundelkhand University", "Burdwan University", "Calcutta University", "Calicut University", "CEPT University", "Ch. Bansi Lal University", "Chanakya National Law University", "Chandr Shekhar Azad University of Agriculture & Technology", "Chatrapati Sahuji Maharaj Kanpur University", "Chaudhary Devi Lal University", "Chaudhary Ranbir Singh University", "Chaudhary Sarwan Kumar Himachal Pradesh Krishi Vishvavidyalaya", "Chhattisgarh Kamdhenu Vishwavidyalaya", "Chhattisgarh Swami Vivekanad Technical Universty", "Childrens University", "Choudary Charan Singh Haryana Agricultural Univeersity", "Choudary Charan Singh University", "Cluster University of Jammu", "Cluster University of Srinagar", "Cochin Unviersity of Science & Technology", "Cooch Behar Panchanan Barma University", "Cotton University", "Damodaram Sanjivayya National Law University", "Davangere University", "Deen Bandhu Chhotu Ram University of Sciences & Technology", "Deen Dayal Upadhyay Gorakhpur University", "Delhi Pharmaceutical Sciences & Research University", "Delhi Technological University", "Devi Ahilya Vishwavidyalaya", "Dharmashastra National Law University", "Dharmsinh Desai University", "Diamond Harbour Womens University", "Dibrugarh University", "Doon University", "Dr Shyama Prasad Mukherjee University", "Dr. A.P.J. Abdul Kalam Technical University", "Dr. B. R. Ambedkar University of Social Sciences", "Dr. B.R. Ambedkar University", "Dr. B.R.Ambedkar Open University", "Dr. B.R.Ambedkar University", "Dr. Babasaheb Ambedkar Marathwada University", "Dr. Babasaheb Ambedkar Open University", "Dr. Babasaheb AmbedkarTechnological University", "Dr. Bhimrao Ambedkar Law University", "Dr. N.T.R. University of Health Sciences", "Dr. Punjabrao Deshmukh Krishi Vidyapeeth", "Dr. Ram Manohar Lohia Awadh University", "Dr. Ram Manohar Lohiya National Law University", "Dr. Shakuntala Misra National Rehabilitation University", "Dr. Shyama Prasad University", "Dr. Y.S.Parmar University of Horticulture & Forestry", "Dr. Y.S.R. Horticultural Univerity", "Dravidian University", "Durg Vishwavidyalaya", "Fakir Mohan University", "G.B.Pant University of Agriculture & Technology", "Gangadhar Meher University", "Gauhati University", "Gautam Buddha University", "Goa University", "Gondwana University", "Govind Guru Tribal University", "Gujarat Agricultural University", "Gujarat Ayurveda University", "Gujarat Forensic Sciences University", "Gujarat National Law University", "Gujarat Technological University", "Gujarat University", "Gujarat University of Transplantation Sciences", "Gulbarga University", "Guru Angad Dev Veterinary & Animal Sciences University", "Guru Gobind Singh Indraprastha Vishwavidyalaya", "Guru Jambeshwar University of Science and Technology", "Guru Nanak Dev University", "Guru Ravidas Ayurved University", "Harcourt Butler Technical University", "Haridev Joshi University of Journalism and Mass Communication", "Haryana Vishwakarma Skill University", "Hemchandracharya North Gujarat University", "Hemwati Nandan Bahuguna Medical Education University", "Hidayatullah National Law University", "Himachal Pradesh National Law University", "Himachal Pradesh Technical University", "Himachal Pradesh University", "Indian Institute of Teacher Education", "Indira Gandhi Delhi Technical University for Women", "Indira Gandhi Krishi Vishwavidyalaya", "Indira Gandhi University", "Indira Kala Sangeet Vishwavidyalaya", "Indraprastha Institute of Information Technology", "Institute of Infrastructure Technology Research and Management", "International Institute of Information Technology (IIIT)", "Islamic University of Sciences & Technology University", "Jadavpur University", "Jagadguru Ramanandacharya Sanskrit University", "Jai Naraim Vyas University", "Jai Prakash vishwavidyalaya(university)", "Jammu University", "Jananayak Chandrashekhar University", "Jawaharlal Nehru Architecture and Fine Arts University", "Jawaharlal Nehru Krishi Vishwavidyalaya", "Jawaharlal Nehru Technological University", "Jharkhand Raksha Shakti University", "Jiwaji University", "Junagarh Agricultural University", "Kakatiya University", "Kaloji Narayan Rao University of Health Sciences", "Kalyani University", "Kamdhenu University", "Kameshwar Singh.Darbhanga Sanskrit Vishwavidyalaya", "Kannada University", "Kannur University", "Karanataka State Law University", "Karanataka State Open University", "Karanataka University", "Karanataka Veterinary, Animal & Fisheries Science University", "Karnataka Folklore University", "Karnataka Sanskrit University", "Karnataka State Rural Development and Panchayat Raj University", "Kashmir University", "Kavi Kulguru Kalidas Sanskrit Vishwavidyalaya", "Kazi Nazrul University", "Kerala Agricultural Unviersity", "Kerala University", "Kerala University of Fisheries & Ocean Studies", "Kerala University of Health Sciences", "Kerala Veterinary & Animal Sciences University", "Khallikote University", "Khwaja Moinuddin Chishti Urdu, Arabi-Farsi University", "King Georges Medical University", "Kolhan University", "Konkan Krishi Vidyapeeth", "Krantiguru Shyamji Krishna Verma Kachchh University", "Krishna Kanta Handique State Open University", "Krishna University", "Krishnakumarsinhji Bhavnagar University", "KSGH Music and Performing Arts University", "Kumar Bhaskar Varma Sanskrit & Ancient Studies University", "Kumaun University", "Kurukshetra University", "Kushabhau Thakre Patrakarita Avam Jansanchar Vishwavidyalaya", "Kuvempu University", "Lala Lajpat Rai University of Veterinary & Animal Sciences", "Lalit Narayan Mithila University", "Lucknow University", "M.J.P. Rohilkhand University", "M.P.Bhoj (open) University", "Madan Mohan Malaviya University of Technology", "Madaras University", "Madhya Pradesh Pashu Chikitsa Vigyan Vishwavidyalaya", "Madurai Kamraj University", "Magadh University", "Mahamaya Technical University", "Maharahtra University of Health Sciences", "Maharaja Bir Bikram University", "Maharaja Chhatrasal Bundelkhand Vishwavidyalaya", "Maharaja Ganga Singh University", "Maharaja Ranjit Singh Punjab Technical University", "Maharaja Sayajirao University of Baroda", "Maharaja Surajmal Brij University", "Maharana Partap Horticultural University", "Maharana Pratap University of Agriculture & Technology", "Maharashtra Animal & Fishery Sciences University", "Maharashtra National Law University", "Maharashtra National Law University,", "Maharishi Dayanand Saraswati University", "Maharishi Dayanand University", "Maharshi Panini Sanskrit Evam Vedic Vishwavidyalaya", "Mahatam Gandhi Kashi Vidyapeeth", "Mahatma Gandhi Chitrakoot Gramodaya Vishwavidyalaya", "Mahatma Gandhi University", "Mahatma Gandhi Unversity", "Mahatma Phule Krishi Vidyapeeth", "Makhanlal Chaturvedi National University of Journalism & Communication", "Mangalore University", "Manipur Technical University", "Manipur University of Culture", "Manonmaniam Sundarnar University", "Marathwada Agricultural University", "Maulana Abul Kalam Azad University of Technology", "Maulana Mazharul Haque Arabic & Persian University", "Mohan Lal Shukhadia University", "Mother Teresa Womens University", "Mumbai University", "Munger University", "Mysore University", "Nalanda Open University", "Narendra Deo University of Agriculture & Technology", "National Academy of Legal Studies & Research University", "National Law Institute University", "National law School of India University", "National Law Universituy", "National Law University", "National Law University and Judicial Academy", "National University of Advanced Legal Studies (NUALS)", "National University of Study & Research in Law", "Navsari Agriculture University", "Netaji Shubhash Open University", "Nilamber-Pitamber University", "Nizams Institute of Medical Sciences", "North Benagal University", "North Maharashtra University", "North Orissa University", "Odisha State Open University", "Orissa University Of Agriculture & Technology", "Osmania University", "Palamuru University", "Pandit S N Shukla University", "Patliputra University", "Patna University", "Periyar University", "Potti Sreeramulu Teugu Universtity", "Presidency University", "Professor Jayashankar Telangana State Agricultural University", "Pt. Bhagwat Dayal Sharma University of Health Sciences", "Pt. Sundarlal Sharma (Open) University", "Pt.Ravishankar Shukla University", "Punjab Agriculture University", "Punjab Technical University", "Punjab University", "Punjabi University", "Purnea University", "Rabindra Bharati University", "Raiganj University", "Raj Rishi Bhartrihari Matsya University", "Raja Mansingh Tomar Music & Arts University", "Rajasthan Ayurveda University", "Rajasthan ILD Skills University (RISU)", "Rajasthan Technical University", "Rajasthan University", "Rajasthan University of Health Sciences", "Rajasthan University of Veterinary & Animal Sciences", "Rajendra Agricultural University", "Rajiv Gandhi Prodoyogiki Vishwavidyalaya", "Rajiv Gandhi University of Health Science", "Rajiv Gandhi University of Knowledge Technology", "Rajmata Vijayaraje Scindia Krishi Vishwa Vidyalaya", "Raksha Shakti University", "Rama Devi Womens University", "Ranchi University", "Rani Channamma University", "Rani Durgavati Vishwavidyalaya", "Ravenshaw University", "Rayalaseema University", "Sambalpur University", "Sampurnanand Sanskrit Vishwavidyalaya", "Sanchi University of Buddhist-Indic Studies", "Sant Gadge Baba Amravati University", "Sardar Krushinagar Dantiwada Agricultural University", "Sardar Patel University", "Sardar Patel University of Police, Security & Criminal Justice", "Sardar Vallabh Bhai Patel University of Agriculture & Technology", "Sarguja University", "Satavahana University", "Saurashtra University", "Savitribai Phule Pune University", "Shekhawati University", "Sher-e-Kashmir University of Agricultural Science & Technology", "Shivaji University", "shree guru gobind singh tricentenary university", "Shree Sankaracharaya University of Sanskrit", "Shree Somnath Sanskrit University", "Shri Govind Guru University", "Shri Jagannath Sanskrit Vishwavidyalaya", "Shri Mata Vaishno Devi University", "Siddharth University", "Sidho-Kanho-Birsha University", "Sido Kanhu University", "Smt. Nathibai Damodar Thackersey Womens University", "Solapur University", "Sri Dev Suman Uttarakhand Vishwavidyalaya", "Sri Konda Laxman Telangana State Horticultural University", "Sri krishnadevaraya University", "Sri P V Narsimha Rao Telangana Veterinary University", "Sri Padmavati Mahila Vishwavidyalayam", "Sri Venkateswara Institute of Medical Sciences", "Sri Venkateswara University", "Sri Venkateswara Vedic University", "Sri Venkateswara Veterinary University", "Srimanta Sankaradeva University of Health Sciences", "State University of Performing and Visual Arts", "Swami Keshwanand Rajasthan Agriculture University", "Swami Ramanand Teerth Marathwada University", "Swarnim Gujarat Sports University", "T.M. Bhagalpur University", "Tamil Nadu Fisheries University", "Tamil Nadu Music and Fine Arts University", "Tamil Nadu Open University", "Tamil Nadu Teacher Education University", "Tamil University", "Tamilnadu Agricultural University", "Tamilnadu Dr. Ambedkar Law University", "Tamilnadu Dr. M.G.R.Medical University", "Tamilnadu National Law School", "Tamilnadu Physical Educaton and Sports University", "Tamilnadu Veterinary & Animal Sciences University", "Telangana University", "The Bengal Engineering & Science University", "The Rajiv Gandhi National University of Law", "The Rashtrasant Tukadoji Maharaj Nagpur University", "The Sanskrit College and University", "The West Bengal National University of Juridical Science", "The West Bengal University of Health Sciences", "Thiruvalluvar University", "Thunchath Ezhuthachan Malayalam University", "Tumkur University", "U.P. Pandit Deen Dayal Upadhyaya Pashu Chikitsa Vigyan Vishwavidhyalaya Evam Go-Anusandhan Sansthan", "U.P. Rajarshi Tandon Open University", "U.P.King Georges University of Dental Sciences", "University of Agricultural Sciences", "University of Horticultural Sciences", "University of Kota", "Univesity of Gour Banga", "Utkal University", "Utkal University of Culture", "Uttar Banga Krishi Vishwavidyalaya", "Uttar Pradesh University of Medical Sciences", "Uttarakhand Aawasiya Viswavidyalaya", "Uttarakhand Ayurved University", "Uttarakhand Open University", "Uttarakhand Sanskrit University", "Uttarakhand Technical University", "Vardhman Mahaveer Open University", "Veer Bahadur Singh Purvanchal University", "Veer Chandra Singh Garhwali Uttarakhand University of Horticulture & Forestry", "Veer Kunwar Singh University", "Veer Narmad South Gujarat University", "Veer Surendra Sai Institute of Medical Science and Research", "Veer Surendra Sai University of Technology", "Vesveswaraiah Technological University", "Vidya Sagar University", "Vijayanagara Sri Krishnadevaraya University", "Vikram Simhapuri University", "Vikram University", "Vinoba Bhave University", "West Bengal State University", "West Bengal University of Animal and Fishery Sciences", "West Bengal University of Teachers, Training, Education Planning and Administration", "Yashwant Rao Chavan Maharashtra Open University", "YMCA University of Science & Technology", "Yogi Vemana University" };
            // phddetails.Universitys = new List<string>() { "Rajiv Gandhi University", "Assam University", "Tezpur University", "University of Hyderabad, Hyderabad", "Maulana Azad National Urdu University", "English   and   Foreign   Languages   University", "Jamia Millia Islamia", "University of Delhi", "JawaharLal Nehru University", "Indira Gandhi National Open University", "South Asian University", "The  Indira  Gandhi  National  Tribal  University", "Dr. Harisingh Gour Vishwavidyalaya", "Mahatma  Gandhi  Antarrashtriya  Hindi  Vishwavidyalaya", "Mizoram University", "North Eastern Hill University", "Manipur University", "Central Agricultural University", "Nagaland University", "Pondicherry  University", "Sikkim University", "Tripura University", "Aligarh Muslim University", "Babasaheb  Bhimrao  Ambedkar  University", "Banaras Hindu University", "University of Allahabad", "Rajiv  Gandhi  National  Aviation  University", "Rani  Lakshmi  Bai  Central  Agricultural  University", "Visva Bharati, Shantiniketan", "Hemwati Nandan Bahuguna Garhwal University", "Central University of Tamil Nadu", "Indian Maritime University", "Central  University  of  Rajasthan", "Central University of Punjab", "Central University of Orissa", "Central University of Kerala", "Central University of Karnataka", "Central University of Jharkhand", "Central University of Kashmir, Transit Campus", "Central University of Jammu, Bagla (Rahya-Suchani)", "Central University of Himachal Pradesh", "Central University of Haryana", "Guru  Ghasidas  Vishwavidyalaya", "Central University of Bihar", "Nalanda University", "Mahatma  Gandhi  Central  University", "Central University of Gujarat", "Academy of Maritime Education and Training", "Amrita Vishwa Vidyapeetham", "Avinashilingam Institute for Home Science & Higher Education for Women", "B.L.D.E.", "B.S. Abdur Rahman Institute of Science and Technology", "Banasthai Vidyapith", "Bharath Institute of Higher Education & Research", "Bharati Vidyapeeth", "Bhatkhande Music Institute", "Birla Institute of Technology", "Birla Institute of Technology & Science", "Central Institute of Buddhist Studies(CIBS)", "Central Institute of Fisheries Education", "Central Institute of Higher Tibetan Studies", "Chennai Mathematical Institute", "Chettinad Academy of Research and Education (CARE)", "Chinmaya Vishwavidyapeeth", "Christ", "D.Y Patil Educational Society", "Datta Meghe Institute of Medical Sciences", "Dayalbagh Educational Institute", "Deccan College Postgraduate & Research Institute", "Dr. D.Y. Patil Vidyapeeth", "Dr. M.G.R. Educational and Research Institute", "Forest Research Institute", "Gandhi Institute of Technology and Management (GITAM)", "Gandhiigram Rural Institute", "Gokhale Institute of Politics & Economics", "Graphic Era", "Gujarat Vidyapith", "Gurukul Kangri vidyapeeth", "Hindustan Institute of Technology and Science (HITS)", "Homi Bhabha National Institute, Regd. Office", "ICFAI Foundation for Higher Education", "IIS", "Indain Institute of Foreigen Trade", "Indian Agricultural Research Institute", "Indian Association for the Cultivation of Science (IACS)", "Indian Institute of Information Technology and Management", "Indian Institute of Science", "Indian Institute of Space Science and Technology", "Indian Law Institute", "Indian School of Mines", "Indian Veterinary Research Institute", "Indira Gandhi Institute of Development Research", "Institute of Advanced Studies in Education", "Institute of Chemical Technology", "Institute of liver and Biliary Sciences", "Instituteof Armamrnt Technology", "International Institute for Population Sciences", "International Institute of Information Technology", "Jain", "Jain Vishva Bharati Institute", "Jamia Hamdard", "Janardan Rai Nagar Rajasthan Vidyapeeth", "Jawahar lal Nehru Centre for Advanced Scientific Research", "Jaypee Institute of Information Technology", "JSS Academy of Higher Education & Research", "K.L.E. Academy of Higher Education and Research", "Kalasalingam Academy of Research and Education", "Kalinga Institute of Industrial Technology", "Karpagam Academy of Higher Education", "Karunya Institute of Technology and Sciences", "Kerala Kalamandalam", "Koneru Lakshmaiah Education Foundation", "Krishna Institute of Medical Sciences", "Lakshmibai National Institute of Physical Education", "Lingaya's Vidyapeeth", "LNM Istitute of Information Technology", "Maharishi Markandeshwar (Deemed to be University)", "Manav Rachna International Institute of Research and Studies", "Manipal Academy of Higher Education", "Meenakshi Academy of Higher Education and Research", "MGM Institute of Health Sciences", "Narsee Monjee Institute of Management Studies", "National Brain Research Centre", "National Dairy Research Institute", "National Institute of Food Technology, Entrepreneurship & Management (NIFTEM)", "National Institute of Mental Health & Neuro Sciences", "National Museum Institute of History of Arts, Conservation and Musicology", "National Rail and Transportation Institute", "National University of Educational Planning & Administration", "Nava Nalanda Mahavihara", "Nehru Gram Bharati", "NITTE", "Noorul Islam Centre for Higher Education", "North Eastern Regional Institute of Science & Technology", "Padmashree Dr.D.Y. Patil Vidyapeeeth", "Pandit Dwarka Prasad Mishra Indian Institute of Information Technology", "Periyar Manaimmai Institute of Science & Technology (PMIST)", "Ponnaiyan Ramajayam Institute of Science & technology (PMIST)", "Pravara Institute of Medical Sciences", "Punjab Engineering College", "Rajiv Gandhi National Institute of Youth Development", "Ramakrishna Mission Vivekananda Educational and Research Institute", "Rashtriya Sanskrit Sansthana", "Rashtriya Sanskrit Vidyapeeth", "S.R.M Institute of Science and Technology", "Sam Higginbottom Institute of Agriculture, Technology & Sciences", "Sant Longowal Institute of Engineering and Technology", "Santosh", "Sathyabama Institute of Science and Technology", "Saveetha Institute of Medical and Technical Sciences", "Shanmugha Arts Science Technology & Research Academy (SASTRA)", "Shobhit Institute of Engineering & Technology", "Shri Lal Bahadur Shastri Rashtriya Sanskrit Vidyapith", "Siksha 'O' Anusandhan", "Sri Balaji Vidyapeeth (Deemed to be University)", "Sri Chandrasekharendra Saraswathi Vishwa Mahavidyalaya", "Sri Devraj Urs Academy of Higher Education and Research", "Sri Ramachandra Medical College and Research Institute", "Sri Sathya Sai Institute of Higher Learning", "Sri Siddhartha Academy of Higher Education", "St. Peterâ€™s Institute of Higher Education and Research", "Sumandeep Vidyapeeth", "Swami Vivekananda Yoga Anusandhana Samsthana", "Symbiosis International", "Tata Institute of Fundamental Research", "Tata Institute of Social Sciences", "TERI School of Advanced studies", "Thapar Institute of Engineering & Technology", "Tilak Maharashtra Vidyapeeth", "Vel Tech Rangarajan Dr. Sagunthala R & D Institute of Science and Technology", "Vellore Institute of Technology", "VELS Institute of Science Technology & Advanced Studies (VISTAS)", "Vignan's Foundation for Science, Technology and Research", "Vinayaka Missionâ€™s Research Foundation", "Yenepoya", "A.P.J. Abdul Kalam Technological University", "Acharaya N.G.Ranga Agricultural University", "Acharaya Nagarjuna University", "Adikavi Nannaya University", "Akkamahadevi women's University (Formerly known as Karnataka State Women's University)", "Alagappa University", "Aliah University", "Allahabad State University", "Ambedkar University Delhi (AUD)", "Anand Agricultural University", "Andhra University", "Anna University", "Annamalai University", "Arybhatta Knowledge University", "Assam Agricultural University", "Assam Rajiv Gandhi University of Co-operative Management", "Assam Science & Technology University", "Assam Womens University", "Atal Bihari Vajpayee Hindi Vishwavidyalaya", "Awadesh Pratap Singh University", "Ayush and Health Sciences University of Chhattisgarh", "Baba Farid University of Health Sciences", "Baba Ghulam Shah Badshah University", "Babasaheb Bhimrao Ambedkar Bihar University", "Banda University of Agriculture & Technology", "Bangalore University", "Bankura University", "Barkatullaah University", "Bastar Vishwavidyalaya", "Bengaluru Central University", "Bengaluru North University", "Berhampur University", "Bhagat Phool Singh Mahila Vishwavidyalaya", "Bhakta Kavi Narsinh Mehta University", "Bharathiar University", "Bharathidasan University", "Bhupender Narayan Mandal University", "Bidhan Chandra Krishi Vishwavidyalaya", "Bihar Agricultural University", "Biju Patnaik University of Technology", "Bilaspur Vishwavidyalaya", "Binod Bihari Mahto Koylanchal University", "Birsa Agricultural University", "Bodoland University", "Bundelkhand University", "Burdwan University", "Calcutta University", "Calicut University", "CEPT University", "Ch. Bansi Lal University", "Chanakya National Law University", "Chandr Shekhar Azad University of Agriculture & Technology", "Chatrapati Sahuji Maharaj Kanpur University", "Chaudhary Devi Lal University", "Chaudhary Ranbir Singh University", "Chaudhary Sarwan Kumar Himachal Pradesh Krishi Vishvavidyalaya", "Chhattisgarh Kamdhenu Vishwavidyalaya", "Chhattisgarh Swami Vivekanad Technical Universty", "Childrens University", "Choudary Charan Singh Haryana Agricultural Univeersity", "Choudary Charan Singh University", "Cluster University of Jammu", "Cluster University of Srinagar", "Cochin Unviersity of Science & Technology", "Cooch Behar Panchanan Barma University", "Cotton University", "Damodaram Sanjivayya National Law University", "Davangere University", "Deen Bandhu Chhotu Ram University of Sciences & Technology", "Deen Dayal Upadhyay Gorakhpur University", "Delhi Pharmaceutical Sciences & Research University", "Delhi Technological University", "Devi Ahilya Vishwavidyalaya", "Dharmashastra National Law University", "Dharmsinh Desai University", "Diamond Harbour Womens University", "Dibrugarh University", "Doon University", "Dr Shyama Prasad Mukherjee University", "Dr. A.P.J. Abdul Kalam Technical University", "Dr. B. R. Ambedkar University of Social Sciences", "Dr. B.R. Ambedkar University", "Dr. B.R.Ambedkar Open University", "Dr. B.R.Ambedkar University", "Dr. Babasaheb Ambedkar Marathwada University", "Dr. Babasaheb Ambedkar Open University", "Dr. Babasaheb AmbedkarTechnological University", "Dr. Bhimrao Ambedkar Law University", "Dr. N.T.R. University of Health Sciences", "Dr. Punjabrao Deshmukh Krishi Vidyapeeth", "Dr. Ram Manohar Lohia Awadh University", "Dr. Ram Manohar Lohiya National Law University", "Dr. Shakuntala Misra National Rehabilitation University", "Dr. Shyama Prasad University", "Dr. Y.S.Parmar University of Horticulture & Forestry", "Dr. Y.S.R. Horticultural Univerity", "Dravidian University", "Durg Vishwavidyalaya", "Fakir Mohan University", "G.B.Pant University of Agriculture & Technology", "Gangadhar Meher University", "Gauhati University", "Gautam Buddha University", "Goa University", "Gondwana University", "Govind Guru Tribal University", "Gujarat Agricultural University", "Gujarat Ayurveda University", "Gujarat Forensic Sciences University", "Gujarat National Law University", "Gujarat Technological University", "Gujarat University", "Gujarat University of Transplantation Sciences", "Gulbarga University", "Guru Angad Dev Veterinary & Animal Sciences University", "Guru Gobind Singh Indraprastha Vishwavidyalaya", "Guru Jambeshwar University of Science and Technology", "Guru Nanak Dev University", "Guru Ravidas Ayurved University", "Harcourt Butler Technical University", "Haridev Joshi University of Journalism and Mass Communication", "Haryana Vishwakarma Skill University", "Hemchandracharya North Gujarat University", "Hemwati Nandan Bahuguna Medical Education University", "Hidayatullah National Law University", "Himachal Pradesh National Law University", "Himachal Pradesh Technical University", "Himachal Pradesh University", "Indian Institute of Teacher Education", "Indira Gandhi Delhi Technical University for Women", "Indira Gandhi Krishi Vishwavidyalaya", "Indira Gandhi University", "Indira Kala Sangeet Vishwavidyalaya", "Indraprastha Institute of Information Technology", "Institute of Infrastructure Technology Research and Management", "International Institute of Information Technology (IIIT)", "Islamic University of Sciences & Technology University", "Jadavpur University", "Jagadguru Ramanandacharya Sanskrit University", "Jai Naraim Vyas University", "Jai Prakash vishwavidyalaya(university)", "Jammu University", "Jananayak Chandrashekhar University", "Jawaharlal Nehru Architecture and Fine Arts University", "Jawaharlal Nehru Krishi Vishwavidyalaya", "Jawaharlal Nehru Technological University", "Jharkhand Raksha Shakti University", "Jiwaji University", "Junagarh Agricultural University", "Kakatiya University", "Kaloji Narayan Rao University of Health Sciences", "Kalyani University", "Kamdhenu University", "Kameshwar Singh.Darbhanga Sanskrit Vishwavidyalaya", "Kannada University", "Kannur University", "Karanataka State Law University", "Karanataka State Open University", "Karanataka University", "Karanataka Veterinary, Animal & Fisheries Science University", "Karnataka Folklore University", "Karnataka Sanskrit University", "Karnataka State Rural Development and Panchayat Raj University", "Kashmir University", "Kavi Kulguru Kalidas Sanskrit Vishwavidyalaya", "Kazi Nazrul University", "Kerala Agricultural Unviersity", "Kerala University", "Kerala University of Fisheries & Ocean Studies", "Kerala University of Health Sciences", "Kerala Veterinary & Animal Sciences University", "Khallikote University", "Khwaja Moinuddin Chishti Urdu, Arabi-Farsi University", "King Georges Medical University", "Kolhan University", "Konkan Krishi Vidyapeeth", "Krantiguru Shyamji Krishna Verma Kachchh University", "Krishna Kanta Handique State Open University", "Krishna University", "Krishnakumarsinhji Bhavnagar University", "KSGH Music and Performing Arts University", "Kumar Bhaskar Varma Sanskrit & Ancient Studies University", "Kumaun University", "Kurukshetra University", "Kushabhau Thakre Patrakarita Avam Jansanchar Vishwavidyalaya", "Kuvempu University", "Lala Lajpat Rai University of Veterinary & Animal Sciences", "Lalit Narayan Mithila University", "Lucknow University", "M.J.P. Rohilkhand University", "M.P.Bhoj (open) University", "Madan Mohan Malaviya University of Technology", "Madaras University", "Madhya Pradesh Pashu Chikitsa Vigyan Vishwavidyalaya", "Madurai Kamraj University", "Magadh University", "Mahamaya Technical University", "Maharahtra University of Health Sciences", "Maharaja Bir Bikram University", "Maharaja Chhatrasal Bundelkhand Vishwavidyalaya", "Maharaja Ganga Singh University", "Maharaja Ranjit Singh Punjab Technical University", "Maharaja Sayajirao University of Baroda", "Maharaja Surajmal Brij University", "Maharana Partap Horticultural University", "Maharana Pratap University of Agriculture & Technology", "Maharashtra Animal & Fishery Sciences University", "Maharashtra National Law University", "Maharashtra National Law University,", "Maharishi Dayanand Saraswati University", "Maharishi Dayanand University", "Maharshi Panini Sanskrit Evam Vedic Vishwavidyalaya", "Mahatam Gandhi Kashi Vidyapeeth", "Mahatma Gandhi Chitrakoot Gramodaya Vishwavidyalaya", "Mahatma Gandhi University", "Mahatma Gandhi Unversity", "Mahatma Phule Krishi Vidyapeeth", "Makhanlal Chaturvedi National University of Journalism & Communication", "Mangalore University", "Manipur Technical University", "Manipur University of Culture", "Manonmaniam Sundarnar University", "Marathwada Agricultural University", "Maulana Abul Kalam Azad University of Technology", "Maulana Mazharul Haque Arabic & Persian University", "Mohan Lal Shukhadia University", "Mother Teresa Womens University", "Mumbai University", "Munger University", "Mysore University", "Nalanda Open University", "Narendra Deo University of Agriculture & Technology", "National Academy of Legal Studies & Research University", "National Law Institute University", "National law School of India University", "National Law Universituy", "National Law University", "National Law University and Judicial Academy", "National University of Advanced Legal Studies (NUALS)", "National University of Study & Research in Law", "Navsari Agriculture University", "Netaji Shubhash Open University", "Nilamber-Pitamber University", "Nizams Institute of Medical Sciences", "North Benagal University", "North Maharashtra University", "North Orissa University", "Odisha State Open University", "Orissa University Of Agriculture & Technology", "Osmania University", "Palamuru University", "Pandit S N Shukla University", "Patliputra University", "Patna University", "Periyar University", "Potti Sreeramulu Teugu Universtity", "Presidency University", "Professor Jayashankar Telangana State Agricultural University", "Pt. Bhagwat Dayal Sharma University of Health Sciences", "Pt. Sundarlal Sharma (Open) University", "Pt.Ravishankar Shukla University", "Punjab Agriculture University", "Punjab Technical University", "Punjab University", "Punjabi University", "Purnea University", "Rabindra Bharati University", "Raiganj University", "Raj Rishi Bhartrihari Matsya University", "Raja Mansingh Tomar Music & Arts University", "Rajasthan Ayurveda University", "Rajasthan ILD Skills University (RISU)", "Rajasthan Technical University", "Rajasthan University", "Rajasthan University of Health Sciences", "Rajasthan University of Veterinary & Animal Sciences", "Rajendra Agricultural University", "Rajiv Gandhi Prodoyogiki Vishwavidyalaya", "Rajiv Gandhi University of Health Science", "Rajiv Gandhi University of Knowledge Technology", "Rajmata Vijayaraje Scindia Krishi Vishwa Vidyalaya", "Raksha Shakti University", "Rama Devi Womens University", "Ranchi University", "Rani Channamma University", "Rani Durgavati Vishwavidyalaya", "Ravenshaw University", "Rayalaseema University", "Sambalpur University", "Sampurnanand Sanskrit Vishwavidyalaya", "Sanchi University of Buddhist-Indic Studies", "Sant Gadge Baba Amravati University", "Sardar Krushinagar Dantiwada Agricultural University", "Sardar Patel University", "Sardar Patel University of Police, Security & Criminal Justice", "Sardar Vallabh Bhai Patel University of Agriculture & Technology", "Sarguja University", "Satavahana University", "Saurashtra University", "Savitribai Phule Pune University", "Shekhawati University", "Sher-e-Kashmir University of Agricultural Science & Technology", "Shivaji University", "shree guru gobind singh tricentenary university", "Shree Sankaracharaya University of Sanskrit", "Shree Somnath Sanskrit University", "Shri Govind Guru University", "Shri Jagannath Sanskrit Vishwavidyalaya", "Shri Mata Vaishno Devi University", "Siddharth University", "Sidho-Kanho-Birsha University", "Sido Kanhu University", "Smt. Nathibai Damodar Thackersey Womens University", "Solapur University", "Sri Dev Suman Uttarakhand Vishwavidyalaya", "Sri Konda Laxman Telangana State Horticultural University", "Sri krishnadevaraya University", "Sri P V Narsimha Rao Telangana Veterinary University", "Sri Padmavati Mahila Vishwavidyalayam", "Sri Venkateswara Institute of Medical Sciences", "Sri Venkateswara University", "Sri Venkateswara Vedic University", "Sri Venkateswara Veterinary University", "Srimanta Sankaradeva University of Health Sciences", "State University of Performing and Visual Arts", "Swami Keshwanand Rajasthan Agriculture University", "Swami Ramanand Teerth Marathwada University", "Swarnim Gujarat Sports University", "T.M. Bhagalpur University", "Tamil Nadu Fisheries University", "Tamil Nadu Music and Fine Arts University", "Tamil Nadu Open University", "Tamil Nadu Teacher Education University", "Tamil University", "Tamilnadu Agricultural University", "Tamilnadu Dr. Ambedkar Law University", "Tamilnadu Dr. M.G.R.Medical University", "Tamilnadu National Law School", "Tamilnadu Physical Educaton and Sports University", "Tamilnadu Veterinary & Animal Sciences University", "Telangana University", "The Bengal Engineering & Science University", "The Rajiv Gandhi National University of Law", "The Rashtrasant Tukadoji Maharaj Nagpur University", "The Sanskrit College and University", "The West Bengal National University of Juridical Science", "The West Bengal University of Health Sciences", "Thiruvalluvar University", "Thunchath Ezhuthachan Malayalam University", "Tumkur University", "U.P. Pandit Deen Dayal Upadhyaya Pashu Chikitsa Vigyan Vishwavidhyalaya Evam Go-Anusandhan Sansthan", "U.P. Rajarshi Tandon Open University", "U.P.King Georges University of Dental Sciences", "University of Agricultural Sciences", "University of Horticultural Sciences", "University of Kota", "Univesity of Gour Banga", "Utkal University", "Utkal University of Culture", "Uttar Banga Krishi Vishwavidyalaya", "Uttar Pradesh University of Medical Sciences", "Uttarakhand Aawasiya Viswavidyalaya", "Uttarakhand Ayurved University", "Uttarakhand Open University", "Uttarakhand Sanskrit University", "Uttarakhand Technical University", "Vardhman Mahaveer Open University", "Veer Bahadur Singh Purvanchal University", "Veer Chandra Singh Garhwali Uttarakhand University of Horticulture & Forestry", "Veer Kunwar Singh University", "Veer Narmad South Gujarat University", "Veer Surendra Sai Institute of Medical Science and Research", "Veer Surendra Sai University of Technology", "Vesveswaraiah Technological University", "Vidya Sagar University", "Vijayanagara Sri Krishnadevaraya University", "Vikram Simhapuri University", "Vikram University", "Vinoba Bhave University", "West Bengal State University", "West Bengal University of Animal and Fishery Sciences", "West Bengal University of Teachers, Training, Education Planning and Administration", "Yashwant Rao Chavan Maharashtra Open University", "YMCA University of Science & Technology", "Yogi Vemana University" };
            phddetails.Places = new List<string>() { "Arunachal Pradesh", "Assam", "Telangana", "Delhi", "Madhya Pradesh", "Maharashtra", "Mizoram", "Meghalaya", "Manipur", "Nagaland", "Pondicherry", "Sikkim", "Tripura", "Uttar Pradesh", "West Bengal", "Uttarakhand", "Tamil Nadu", "Rajasthan", "Punjab", "Orissa", "Kerala", "Karnataka", "Jharkhand", "Jammu & Kashmir", "Himachal", "Pradesh", "Haryana", "Chhattisgarh", "Bihar", "Gujarat", "Jammu and Kashmir", "Andhra Pradesh", "Chandigarh", "Puducherry", "Himachal Pradesh", "Goa" };
            List<SelectListItem> universitytypelist = new List<SelectListItem>();
            universitytypelist.Add(new SelectListItem { Text = "Central", Value = "1" });
            universitytypelist.Add(new SelectListItem { Text = "State", Value = "2" });
            universitytypelist.Add(new SelectListItem { Text = "Private", Value = "3" });
            universitytypelist.Add(new SelectListItem { Text = "Deemed to be University", Value = "4" });
            universitytypelist.Add(new SelectListItem { Text = "International University", Value = "5" });
            ViewBag.universitytype = universitytypelist;
            if (registredfaculty != null)
            {
                phddetails.RegistrationNumber = registredfaculty.RegistrationNumber.Trim();
                phddetails.FacultyId = registredfaculty.id;
                phddetails.FirstName = registredfaculty.FirstName != null ? registredfaculty.FirstName.Trim() : registredfaculty.FirstName;
                phddetails.MiddleName = registredfaculty.MiddleName != null ? registredfaculty.MiddleName.Trim() : registredfaculty.MiddleName;
                phddetails.LastName = registredfaculty.LastName != null ? registredfaculty.LastName.Trim() : registredfaculty.LastName;
                phddetails.HaveyouprephdLetter = true;
            }
            var collegefaculty =
                db.jntuh_college_faculty_registered.Where(
                    r => r.RegistrationNumber == registredfaculty.RegistrationNumber.Trim())
                    .Select(s => s)
                    .FirstOrDefault();
            if (collegefaculty != null)
            {
                var college =
                    db.jntuh_college.Where(c => c.id == collegefaculty.collegeId).Select(s => s).FirstOrDefault();
                phddetails.CollegeCode = college.collegeCode.Trim();
                phddetails.CollegeName = college.collegeName.Trim();
            }
            var phdexsistdata =
                db.jntuh_faculty_phddetails.Where(p => p.Facultyid == registredfaculty.id)
                    .Select(s => s)
                    .FirstOrDefault();
            if (phdexsistdata != null)
            {
                phddetails.PhdType = Convert.ToInt32(phdexsistdata.Phdtype);
                phddetails.PhdawardYear = Convert.ToInt32(phdexsistdata.Phdawardyear);
                phddetails.University = phdexsistdata.University;
                phddetails.PlaceofUniversity = phdexsistdata.Placeofuniversity;
                phddetails.PhdTitle = phdexsistdata.Phdtitle;
                phddetails.UniversityType = Convert.ToInt32(phdexsistdata.Universitytype);
                phddetails.SupervisorName1 = phdexsistdata.Supervisorname1;
                phddetails.SupervisorName2 = phdexsistdata.Supervisorname2;
                phddetails.SupervisorName3 = phdexsistdata.Supervisorname3;
                phddetails.AdmissionLetterpath = phdexsistdata.Admissionletter;
                phddetails.PrephdLetterpath = phdexsistdata.Prephdletter;
                phddetails.GenuinenessLetterpath = phdexsistdata.Genuinenessletter;
                phddetails.CollegeAuthenticationLetterpath = phdexsistdata.Collegeauthaticationletter;
                phddetails.ThesiscoverPagepath = phdexsistdata.Thesiscoverpage;
                phddetails.OtherLetterpath = phdexsistdata.Otherletter;
                //New Fields
                phddetails.PhdnotificationIssued = phdexsistdata.Notificationissued;
                phddetails.RegistrationNumberOrHallticketNo = phdexsistdata.Hallticketnumber;
                phddetails.HowmanyreviewsRRMattended = phdexsistdata.Reviewsattended;
                phddetails.HowmanypapersPublished = phdexsistdata.Paperspublished;
                phddetails.Externalexamineratthetimeofdefense = phdexsistdata.Timeofdefense;
                phddetails.Exactdateoffinalviva = phdexsistdata.Vivadate;
                phddetails.BOSChairpersonatthetimeofThesisSubmission = phdexsistdata.Boschairperson;
                phddetails.PressnotificationofyourPhDDegree = phdexsistdata.Pressnotification;
                phddetails.HaveyouattendConvocation = phdexsistdata.Convocationattended != null ? (bool)phdexsistdata.Convocationattended : false;
                phddetails.PhdofferingDepartment = phdexsistdata.Department;
                phddetails.PhdSpecialization = phdexsistdata.Specialization;
                phddetails.NoCformthecollegepath = phdexsistdata.Nocletter;
                phddetails.UniversityWebsite = phdexsistdata.Website;
                phddetails.UniversityAddress = phdexsistdata.Address;
                phddetails.HowmanypapersPublishedduringPhdWork = phdexsistdata.PaperspublishedDPW;
                phddetails.Phdodpath = phdexsistdata.Phdod;
                //phddetails.Phdod = phdexsistdata.Thesiscoverpage;
                return RedirectToAction("ViewFacultyphdDetails", new { fid = fid });
            }
            return View(phddetails);
        }

        [HttpPost]
        public ActionResult FacultyphdDetails(FacultyphdDetails phddetails)
        {
            //return RedirectToAction("Index", "UnderConstruction");
            if (Membership.GetUser(User.Identity.Name) == null)
                return RedirectToAction("Logon", "Account");
            int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            const string phdadmissionletters = "~/Content/Upload/Faculty/PHDDetails/AdmissionLetters";
            const string prephdletters = "~/Content/Upload/Faculty/PHDDetails/PrePHDs";
            const string phdods = "~/Content/Upload/Faculty/PHDDetails/PHDODs";
            const string thesispages = "~/Content/Upload/Faculty/PHDDetails/ThesisPages";
            const string genuinenessletters = "~/Content/Upload/Faculty/PHDDetails/GenuinenessLetters";
            //College Authentication means College Certified Letter(Duly Signed by Principal)
            const string collegeauthenticationletters = "~/Content/Upload/Faculty/PHDDetails/CollegeAuthenticationLetters";
            const string nocfromthecollegeletters = "~/Content/Upload/Faculty/PHDDetails/NOCfromCollege";
            const string otherletters = "~/Content/Upload/Faculty/PHDDetails/OtherLetters";
            const string intnationaljrnletter = "~/Content/Upload/Faculty/PHDDetails/InternationalJournalLetters";
            const string nationaljrnletter = "~/Content/Upload/Faculty/PHDDetails/NationalJournalLetters";
            const string intnationalconfrletter = "~/Content/Upload/Faculty/PHDDetails/InternationalConferenceLetters";
            const string nationalcnfrletter = "~/Content/Upload/Faculty/PHDDetails/NationalConferenceLetters";
            if (phddetails.FacultyId != 0)
            {
                var registredfaculty =
                    db.jntuh_registered_faculty.Where(r => r.id == phddetails.FacultyId).Select(s => s).FirstOrDefault();
                var facultyphdeduaction =
                    db.jntuh_registered_faculty_education.Where(
                        r => r.facultyId == phddetails.FacultyId && r.educationId == 6).Select(s => s).FirstOrDefault();
                if (registredfaculty != null)
                {
                    if (phddetails.AdmissionLetter != null && phddetails.CollegeAuthenticationLetter != null &&
                        phddetails.GenuinenessLetter != null && phddetails.Phdod != null &&
                        phddetails.ThesiscoverPage != null) //phddetails.PrephdLetter != null && 
                    {
                        if (!Directory.Exists(Server.MapPath(phdadmissionletters)))
                        {
                            Directory.CreateDirectory(Server.MapPath(phdadmissionletters));
                        }
                        if (!Directory.Exists(Server.MapPath(prephdletters)))
                        {
                            Directory.CreateDirectory(Server.MapPath(prephdletters));
                        }
                        if (!Directory.Exists(Server.MapPath(phdods)))
                        {
                            Directory.CreateDirectory(Server.MapPath(phdods));
                        }
                        if (!Directory.Exists(Server.MapPath(thesispages)))
                        {
                            Directory.CreateDirectory(Server.MapPath(thesispages));
                        }
                        if (!Directory.Exists(Server.MapPath(genuinenessletters)))
                        {
                            Directory.CreateDirectory(Server.MapPath(genuinenessletters));
                        }
                        if (!Directory.Exists(Server.MapPath(collegeauthenticationletters)))
                        {
                            Directory.CreateDirectory(Server.MapPath(collegeauthenticationletters));
                        }
                        if (!Directory.Exists(Server.MapPath(nocfromthecollegeletters)))
                        {
                            Directory.CreateDirectory(Server.MapPath(nocfromthecollegeletters));
                        }
                        if (!Directory.Exists(Server.MapPath(otherletters)))
                        {
                            Directory.CreateDirectory(Server.MapPath(otherletters));
                        }
                        if (!Directory.Exists(Server.MapPath(intnationaljrnletter)))
                        {
                            Directory.CreateDirectory(Server.MapPath(intnationaljrnletter));
                        }
                        if (!Directory.Exists(Server.MapPath(nationaljrnletter)))
                        {
                            Directory.CreateDirectory(Server.MapPath(nationaljrnletter));
                        }
                        if (!Directory.Exists(Server.MapPath(intnationalconfrletter)))
                        {
                            Directory.CreateDirectory(Server.MapPath(intnationalconfrletter));
                        }
                        if (!Directory.Exists(Server.MapPath(nationalcnfrletter)))
                        {
                            Directory.CreateDirectory(Server.MapPath(nationalcnfrletter));
                        }
                        //PHD Admission Letter Saving (AL) with Extension
                        var ext1 = Path.GetExtension(phddetails.AdmissionLetter.FileName);
                        if (ext1 != null && ext1.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              phddetails.FirstName.Substring(0, 1) + "-" +
                                              phddetails.LastName.Substring(0, 1) + "-AL";
                            phddetails.AdmissionLetter.SaveAs(string.Format("{0}/{1}{2}",
                                Server.MapPath(phdadmissionletters), fileName, ext1));
                            phddetails.AdmissionLetterpath = string.Format("{0}{1}", fileName, ext1);
                        }

                        if (phddetails.PrephdLetter != null)
                        {
                            //PHD Pre Phd Letter Saving (PP) with Extension
                            var ext2 = Path.GetExtension(phddetails.PrephdLetter.FileName);
                            if (ext2 != null && ext2.ToUpper().Equals(".PDF"))
                            {
                                string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                                  phddetails.FirstName.Substring(0, 1) + "-" +
                                                  phddetails.LastName.Substring(0, 1) + "-PP";
                                phddetails.PrephdLetter.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(prephdletters),
                                    fileName, ext2));
                                phddetails.PrephdLetterpath = string.Format("{0}{1}", fileName, ext2);
                            }
                        }

                        //PHD Thesis Letter Saving (TP) with Extension
                        var ext3 = Path.GetExtension(phddetails.ThesiscoverPage.FileName);
                        if (ext3 != null && ext3.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              phddetails.FirstName.Substring(0, 1) + "-" +
                                              phddetails.LastName.Substring(0, 1) + "-TP";
                            phddetails.ThesiscoverPage.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(thesispages),
                                fileName, ext3));
                            phddetails.ThesiscoverPagepath = string.Format("{0}{1}", fileName, ext3);
                        }
                        //PHD OD Saving (OD) with Extension
                        var ext4 = Path.GetExtension(phddetails.Phdod.FileName);
                        if (ext4 != null && ext4.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              phddetails.FirstName.Substring(0, 1) + "-" +
                                              phddetails.LastName.Substring(0, 1) + "-OD";
                            phddetails.Phdod.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(phdods), fileName, ext4));
                            phddetails.Phdodpath = string.Format("{0}{1}", fileName, ext3);
                        }
                        //PHD Genuineness Letter Saving (GL) with Extension
                        var ext5 = Path.GetExtension(phddetails.GenuinenessLetter.FileName);
                        if (ext5 != null && ext5.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              phddetails.FirstName.Substring(0, 1) + "-" +
                                              phddetails.LastName.Substring(0, 1) + "-GL";
                            phddetails.GenuinenessLetter.SaveAs(string.Format("{0}/{1}{2}",
                                Server.MapPath(genuinenessletters), fileName, ext5));
                            phddetails.GenuinenessLetterpath = string.Format("{0}{1}", fileName, ext5);
                        }
                        //PHD College Aunthentation Letter Saving (AL) with Extension
                        var ext6 = Path.GetExtension(phddetails.CollegeAuthenticationLetter.FileName);
                        if (ext6 != null && ext6.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              phddetails.FirstName.Substring(0, 1) + "-" +
                                              phddetails.LastName.Substring(0, 1) + "-CA";
                            phddetails.CollegeAuthenticationLetter.SaveAs(string.Format("{0}/{1}{2}",
                                Server.MapPath(collegeauthenticationletters), fileName, ext6));
                            phddetails.CollegeAuthenticationLetterpath = string.Format("{0}{1}", fileName, ext6);
                        }
                        //NOC from the College Saving with NOC
                        if (phddetails.NoCformthecollege != null)
                        {
                            var ext8 = Path.GetExtension(phddetails.NoCformthecollege.FileName);
                            if (ext8 != null && ext6.ToUpper().Equals(".PDF"))
                            {
                                string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                                  phddetails.FirstName.Substring(0, 1) + "-" +
                                                  phddetails.LastName.Substring(0, 1) + "-NOC";
                                phddetails.NoCformthecollege.SaveAs(string.Format("{0}/{1}{2}",
                                    Server.MapPath(nocfromthecollegeletters), fileName, ext8));
                                phddetails.NoCformthecollegepath = string.Format("{0}{1}", fileName, ext8);
                            }
                        }
                        //PHD Other Letter Saving (OL) with Extension
                        if (phddetails.OtherLetter != null)
                        {
                            var ext7 = Path.GetExtension(phddetails.OtherLetter.FileName);
                            if (ext7 != null && ext7.ToUpper().Equals(".PDF"))
                            {
                                string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                                  phddetails.FirstName.Substring(0, 1) + "-" +
                                                  phddetails.LastName.Substring(0, 1) + "-OL";
                                phddetails.OtherLetter.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(otherletters),
                                    fileName, ext7));
                                phddetails.OtherLetterpath = string.Format("{0}{1}", fileName, ext6);
                            }
                        }

                        //International Journals Letter Saving (INTNATJRNL) with Extension
                        if (phddetails.InterNationalJrnlsLetter != null)
                        {
                            var ext7 = Path.GetExtension(phddetails.InterNationalJrnlsLetter.FileName);
                            if (ext7 != null && ext7.ToUpper().Equals(".PDF"))
                            {
                                string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                                  phddetails.FirstName.Substring(0, 1) + "-" +
                                                  phddetails.LastName.Substring(0, 1) + "-INTNATJRNL";
                                phddetails.InterNationalJrnlsLetter.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(intnationaljrnletter),
                                    fileName, ext7));
                                phddetails.InterNationalJrnlspath = string.Format("{0}{1}", fileName, ext6);
                            }
                        }

                        //National Journals Letter Saving (NATJRNL) with Extension
                        if (phddetails.NationalJrnlsLetter != null)
                        {
                            var ext7 = Path.GetExtension(phddetails.NationalJrnlsLetter.FileName);
                            if (ext7 != null && ext7.ToUpper().Equals(".PDF"))
                            {
                                string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                                  phddetails.FirstName.Substring(0, 1) + "-" +
                                                  phddetails.LastName.Substring(0, 1) + "-NATJRNL";
                                phddetails.NationalJrnlsLetter.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(nationaljrnletter),
                                    fileName, ext7));
                                phddetails.NationalJrnlspath = string.Format("{0}{1}", fileName, ext6);
                            }
                        }

                        //International Conference Letter Saving (INTNATCNFRS) with Extension
                        if (phddetails.InterNationalCnfrsLetter != null)
                        {
                            var ext7 = Path.GetExtension(phddetails.InterNationalCnfrsLetter.FileName);
                            if (ext7 != null && ext7.ToUpper().Equals(".PDF"))
                            {
                                string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                                  phddetails.FirstName.Substring(0, 1) + "-" +
                                                  phddetails.LastName.Substring(0, 1) + "-INTNATCNFRS";
                                phddetails.InterNationalCnfrsLetter.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(intnationalconfrletter),
                                    fileName, ext7));
                                phddetails.InterNationalCnfrspath = string.Format("{0}{1}", fileName, ext6);
                            }
                        }

                        //National Conference Letter Saving (NATCNFRS) with Extension
                        if (phddetails.NationalCnfrsLetter != null)
                        {
                            var ext7 = Path.GetExtension(phddetails.NationalCnfrsLetter.FileName);
                            if (ext7 != null && ext7.ToUpper().Equals(".PDF"))
                            {
                                string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                                  phddetails.FirstName.Substring(0, 1) + "-" +
                                                  phddetails.LastName.Substring(0, 1) + "-NATCNFRS";
                                phddetails.NationalCnfrsLetter.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(nationalcnfrletter),
                                    fileName, ext7));
                                phddetails.NationalCnfrspath = string.Format("{0}{1}", fileName, ext6);
                            }
                        }
                        jntuh_faculty_phddetails facultyphd = new jntuh_faculty_phddetails();
                        facultyphd.Facultyid = phddetails.FacultyId;
                        facultyphd.Phdtype = phddetails.PhdType;
                        facultyphd.Phdawardyear = phddetails.PhdawardYear;
                        facultyphd.AdmissionYear = phddetails.PhdAdmissionYear;
                        facultyphd.University = phddetails.University != null ? phddetails.University.Trim().ToUpper() : phddetails.University;
                        facultyphd.Placeofuniversity = phddetails.PlaceofUniversity != null ? phddetails.PlaceofUniversity.Trim().ToUpper() : phddetails.PlaceofUniversity;
                        facultyphd.Universitytype = phddetails.UniversityType;
                        facultyphd.Phdtitle = phddetails.PhdTitle.Trim();
                        facultyphd.Admissionletter = phddetails.AdmissionLetterpath.Trim();
                        facultyphd.Prephdletter = phddetails.PrephdLetterpath != null ? phddetails.PrephdLetterpath.Trim() : null;
                        facultyphd.Supervisorname1 = phddetails.SupervisorName1 != null ? phddetails.SupervisorName1.Trim().ToUpper() : null;
                        facultyphd.Supervisorname2 = phddetails.SupervisorName2 != null ? phddetails.SupervisorName2.Trim().ToUpper() : null;
                        facultyphd.Supervisorname3 = phddetails.SupervisorName3 != null ? phddetails.SupervisorName3.Trim().ToUpper() : null;
                        facultyphd.Thesiscoverpage = phddetails.ThesiscoverPagepath.Trim();
                        facultyphd.Admissionletter = phddetails.AdmissionLetterpath.Trim();
                        facultyphd.Thesis = null;
                        //Adding Some Fields after 01/11/2019
                        facultyphd.Website = phddetails.UniversityWebsite != null
                            ? phddetails.UniversityWebsite.Trim().ToUpper()
                            : phddetails.UniversityWebsite;
                        facultyphd.Address = phddetails.UniversityAddress != null
                            ? phddetails.UniversityAddress.Trim().ToUpper()
                            : phddetails.UniversityAddress;
                        facultyphd.Nocletter = phddetails.NoCformthecollege != null ? phddetails.NoCformthecollegepath.Trim() : null;
                        facultyphd.Notificationissued = phddetails.PhdnotificationIssued;
                        facultyphd.Reviewsattended = phddetails.HowmanyreviewsRRMattended;
                        facultyphd.Paperspublished = phddetails.HowmanypapersPublished;
                        facultyphd.PaperspublishedDPW = phddetails.HowmanypapersPublishedduringPhdWork;
                        facultyphd.Vivadate = phddetails.Exactdateoffinalviva;
                        facultyphd.Boschairperson = phddetails.BOSChairpersonatthetimeofThesisSubmission;
                        facultyphd.Timeofdefense = phddetails.Externalexamineratthetimeofdefense;
                        facultyphd.Pressnotification = phddetails.PressnotificationofyourPhDDegree;
                        facultyphd.Convocationattended = phddetails.HaveyouattendConvocation;
                        facultyphd.Department = phddetails.PhdofferingDepartment.Trim().ToUpper();
                        facultyphd.Specialization = phddetails.PhdSpecialization.Trim().ToUpper();
                        facultyphd.Hallticketnumber = phddetails.RegistrationNumberOrHallticketNo.Trim();
                        //facultyphd. = phddetails.PhdnotificationIssued;
                        facultyphd.Phdod = phddetails.Phdodpath != null ? phddetails.Phdodpath.Trim() : null; ;
                        facultyphd.Genuinenessletter = phddetails.GenuinenessLetterpath.Trim();
                        facultyphd.Collegeauthaticationletter = phddetails.CollegeAuthenticationLetterpath.Trim();
                        facultyphd.Otherletter = phddetails.OtherLetterpath != null ? phddetails.OtherLetterpath.Trim() : null;
                        facultyphd.IntNationalJrnlsDocLetter = phddetails.InterNationalJrnlspath != null ? phddetails.InterNationalJrnlspath.Trim() : null;
                        facultyphd.NationalJrnlsDocLetter = phddetails.NationalJrnlspath != null ? phddetails.NationalJrnlspath.Trim() : null;
                        facultyphd.IntNationalCnfrnsLetter = phddetails.InterNationalCnfrspath != null ? phddetails.InterNationalCnfrspath.Trim() : null;
                        facultyphd.NationalCnfrnsLetter = phddetails.NationalCnfrspath != null ? phddetails.NationalCnfrspath.Trim() : null;
                        facultyphd.IntNationalJrnls = phddetails.InterNationalJrnls;
                        facultyphd.NationalJrnls = phddetails.NationalJrnls;
                        facultyphd.IntNationalCnfrns = phddetails.InterNationalCnfrs;
                        facultyphd.NationalCnfrns = phddetails.NationalCnfrs;
                        facultyphd.Phdstatus = false;
                        facultyphd.Remarks = null;
                        facultyphd.Isactive = true;
                        facultyphd.Createdby = userId;
                        facultyphd.Createdon = DateTime.Now;
                        facultyphd.Updatedby = null;
                        facultyphd.Updatedon = null;
                        db.jntuh_faculty_phddetails.Add(facultyphd);
                        db.SaveChanges();
                        TempData["SUCCESS"] = "Ph.D Details Uploaded successfully";
                    }
                    else
                    {
                        TempData["ERROR"] = "File Upload missing.";
                    }
                }
                else
                {
                    TempData["ERROR"] = "Faculty Details not found.";
                }
            }
            return RedirectToAction("FacultyphdDetails");
        }

        public ActionResult EditFacultyphdDetails(string fid)
        {
            //return RedirectToAction("Index", "UnderConstruction");

            //For edit condition start
            var todayDate = DateTime.Now;
            int actualYear = db.jntuh_academic_year.Where(a => a.isActive == true && a.isPresentAcademicYear == true).Select(a => a.actualYear).FirstOrDefault();
            int prAy =
                db.jntuh_academic_year.Where(a => a.actualYear == (actualYear + 1)).Select(s => s.id).FirstOrDefault();
            var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
            if (FacultyEditLinkId != 0)
            {
                var facultyedit = db.jntuh_college_links_assigned.Where(l => l.linkId == FacultyEditLinkId && l.academicyearId == prAy && l.isActive == true && l.fromdate <= todayDate && l.todate >= todayDate).Select(s => s).FirstOrDefault();
                if (facultyedit != null)
                {
                    ViewBag.ShowEditButton = true;
                }
                else
                    return RedirectToAction("FacultyphdDetails");
            }
            //end
            if (Membership.GetUser(User.Identity.Name) == null)
                return RedirectToAction("Logon", "Account");
            int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            int fID = 0;
            if (fid != null)
            {
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(fid.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]));
            }
            else
            {
                fID =
                    db.jntuh_registered_faculty.Where(r => r.UserId == userId).Select(s => s.id).FirstOrDefault();
            }
            var registredfaculty = db.jntuh_registered_faculty.Where(r => r.id == fID).Select(s => s).FirstOrDefault();
            if (registredfaculty == null)
            {
                TempData["ERROR"] = "Faculty Details not found.";
            }
            FacultyphdDetails phddetails = new FacultyphdDetails();
            List<SelectListItem> phdtypeslist = new List<SelectListItem>();
            phdtypeslist.Add(new SelectListItem { Text = "Full Time/ Regular", Value = "1" });
            phdtypeslist.Add(new SelectListItem { Text = "Part Time/ External", Value = "2" });
            ViewBag.phdtype = phdtypeslist;

            List<SelectListItem> phdnotificationissuedlist = new List<SelectListItem>();
            phdnotificationissuedlist.Add(new SelectListItem { Text = "Online", Value = "1" });
            phdnotificationissuedlist.Add(new SelectListItem { Text = "Offline", Value = "2" });
            ViewBag.phdnotificationissuedlist = phdnotificationissuedlist;

            List<SelectListItem> phdofferingDepartmentsList = new List<SelectListItem>();
            var departments = db.jntuh_department.Where(r => r.degreeId == 4).Select(s => s).ToList();
            foreach (var item in departments)
            {
                phdofferingDepartmentsList.Add(new SelectListItem { Text = item.departmentDescription.ToString(), Value = item.id.ToString() });
            }
            //phdofferingDepartmentsList.Add(new SelectListItem {Text = "Others",Value = "0"});
            phdofferingDepartmentsList = phdofferingDepartmentsList.OrderByDescending(c => c.Value).ToList();
            ViewBag.phdofferingDepartmentsList = phdofferingDepartmentsList;
            phddetails.PhdDepts = phdofferingDepartmentsList.Select(s => s.Text).ToList();
            List<SelectListItem> phdofferingSpecList = new List<SelectListItem>();
            var specialization = db.jntuh_specialization.Select(s => s).ToList();
            foreach (var item in specialization)
            {
                phdofferingSpecList.Add(new SelectListItem { Text = item.specializationDescription.ToString(), Value = item.id.ToString() });
            }
            //phdofferingSpecList.Add(new SelectListItem { Text = "Others", Value = "0" });
            phdofferingSpecList = phdofferingSpecList.OrderByDescending(c => c.Value).ToList();
            ViewBag.phdofferingSpecList = phdofferingSpecList;
            phddetails.PhdSpecs = phdofferingSpecList.Select(s => s.Text).ToList();
            List<SelectListItem> years = new List<SelectListItem>();
            for (int i = 1970; i <= DateTime.Now.Year; i++)
            {
                years.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.years = years;
            phddetails.Universitys = new List<string>() { "JawaharLal Nehru Technologial University Hyderabad", "JawaharLal Nehru Technologial University Kakinada", "JawaharLal Nehru Technologial University Anathapur", "Rajiv Gandhi University", "Assam University", "Tezpur University", "University of Hyderabad, Hyderabad", "Maulana Azad National Urdu University", "English   and   Foreign   Languages   University", "Jamia Millia Islamia", "University of Delhi", "JawaharLal Nehru University", "Indira Gandhi National Open University", "South Asian University", "The  Indira  Gandhi  National  Tribal  University", "Dr. Harisingh Gour Vishwavidyalaya", "Mahatma  Gandhi  Antarrashtriya  Hindi  Vishwavidyalaya", "Mizoram University", "North Eastern Hill University", "Manipur University", "Central Agricultural University", "Nagaland University", "Pondicherry  University", "Sikkim University", "Tripura University", "Aligarh Muslim University", "Babasaheb  Bhimrao  Ambedkar  University", "Banaras Hindu University", "University of Allahabad", "Rajiv  Gandhi  National  Aviation  University", "Rani  Lakshmi  Bai  Central  Agricultural  University", "Visva Bharati, Shantiniketan", "Hemwati Nandan Bahuguna Garhwal University", "Central University of Tamil Nadu", "Indian Maritime University", "Central  University  of  Rajasthan", "Central University of Punjab", "Central University of Orissa", "Central University of Kerala", "Central University of Karnataka", "Central University of Jharkhand", "Central University of Kashmir, Transit Campus", "Central University of Jammu, Bagla (Rahya-Suchani)", "Central University of Himachal Pradesh", "Central University of Haryana", "Guru  Ghasidas  Vishwavidyalaya", "Central University of Bihar", "Nalanda University", "Mahatma  Gandhi  Central  University", "Central University of Gujarat", "Academy of Maritime Education and Training", "Amrita Vishwa Vidyapeetham", "Avinashilingam Institute for Home Science & Higher Education for Women", "B.L.D.E.", "B.S. Abdur Rahman Institute of Science and Technology", "Banasthai Vidyapith", "Bharath Institute of Higher Education & Research", "Bharati Vidyapeeth", "Bhatkhande Music Institute", "Birla Institute of Technology", "Birla Institute of Technology & Science", "Central Institute of Buddhist Studies(CIBS)", "Central Institute of Fisheries Education", "Central Institute of Higher Tibetan Studies", "Chennai Mathematical Institute", "Chettinad Academy of Research and Education (CARE)", "Chinmaya Vishwavidyapeeth", "Christ", "D.Y Patil Educational Society", "Datta Meghe Institute of Medical Sciences", "Dayalbagh Educational Institute", "Deccan College Postgraduate & Research Institute", "Dr. D.Y. Patil Vidyapeeth", "Dr. M.G.R. Educational and Research Institute", "Forest Research Institute", "Gandhi Institute of Technology and Management (GITAM)", "Gandhiigram Rural Institute", "Gokhale Institute of Politics & Economics", "Graphic Era", "Gujarat Vidyapith", "Gurukul Kangri vidyapeeth", "Hindustan Institute of Technology and Science (HITS)", "Homi Bhabha National Institute, Regd. Office", "ICFAI Foundation for Higher Education", "IIS", "Indain Institute of Foreigen Trade", "Indian Agricultural Research Institute", "Indian Association for the Cultivation of Science (IACS)", "Indian Institute of Information Technology and Management", "Indian Institute of Science", "Indian Institute of Space Science and Technology", "Indian Law Institute", "Indian School of Mines", "Indian Veterinary Research Institute", "Indira Gandhi Institute of Development Research", "Institute of Advanced Studies in Education", "Institute of Chemical Technology", "Institute of liver and Biliary Sciences", "Instituteof Armamrnt Technology", "International Institute for Population Sciences", "International Institute of Information Technology", "Jain", "Jain Vishva Bharati Institute", "Jamia Hamdard", "Janardan Rai Nagar Rajasthan Vidyapeeth", "Jawahar lal Nehru Centre for Advanced Scientific Research", "Jaypee Institute of Information Technology", "JSS Academy of Higher Education & Research", "K.L.E. Academy of Higher Education and Research", "Kalasalingam Academy of Research and Education", "Kalinga Institute of Industrial Technology", "Karpagam Academy of Higher Education", "Karunya Institute of Technology and Sciences", "Kerala Kalamandalam", "Koneru Lakshmaiah Education Foundation", "Krishna Institute of Medical Sciences", "Lakshmibai National Institute of Physical Education", "Lingaya's Vidyapeeth", "LNM Istitute of Information Technology", "Maharishi Markandeshwar (Deemed to be University)", "Manav Rachna International Institute of Research and Studies", "Manipal Academy of Higher Education", "Meenakshi Academy of Higher Education and Research", "MGM Institute of Health Sciences", "Narsee Monjee Institute of Management Studies", "National Brain Research Centre", "National Dairy Research Institute", "National Institute of Food Technology, Entrepreneurship & Management (NIFTEM)", "National Institute of Mental Health & Neuro Sciences", "National Museum Institute of History of Arts, Conservation and Musicology", "National Rail and Transportation Institute", "National University of Educational Planning & Administration", "Nava Nalanda Mahavihara", "Nehru Gram Bharati", "NITTE", "Noorul Islam Centre for Higher Education", "North Eastern Regional Institute of Science & Technology", "Padmashree Dr.D.Y. Patil Vidyapeeeth", "Pandit Dwarka Prasad Mishra Indian Institute of Information Technology", "Periyar Manaimmai Institute of Science & Technology (PMIST)", "Ponnaiyan Ramajayam Institute of Science & technology (PMIST)", "Pravara Institute of Medical Sciences", "Punjab Engineering College", "Rajiv Gandhi National Institute of Youth Development", "Ramakrishna Mission Vivekananda Educational and Research Institute", "Rashtriya Sanskrit Sansthana", "Rashtriya Sanskrit Vidyapeeth", "S.R.M Institute of Science and Technology", "Sam Higginbottom Institute of Agriculture, Technology & Sciences", "Sant Longowal Institute of Engineering and Technology", "Santosh", "Sathyabama Institute of Science and Technology", "Saveetha Institute of Medical and Technical Sciences", "Shanmugha Arts Science Technology & Research Academy (SASTRA)", "Shobhit Institute of Engineering & Technology", "Shri Lal Bahadur Shastri Rashtriya Sanskrit Vidyapith", "Siksha 'O' Anusandhan", "Sri Balaji Vidyapeeth (Deemed to be University)", "Sri Chandrasekharendra Saraswathi Vishwa Mahavidyalaya", "Sri Devraj Urs Academy of Higher Education and Research", "Sri Ramachandra Medical College and Research Institute", "Sri Sathya Sai Institute of Higher Learning", "Sri Siddhartha Academy of Higher Education", "St. Peterâ€™s Institute of Higher Education and Research", "Sumandeep Vidyapeeth", "Swami Vivekananda Yoga Anusandhana Samsthana", "Symbiosis International", "Tata Institute of Fundamental Research", "Tata Institute of Social Sciences", "TERI School of Advanced studies", "Thapar Institute of Engineering & Technology", "Tilak Maharashtra Vidyapeeth", "Vel Tech Rangarajan Dr. Sagunthala R & D Institute of Science and Technology", "Vellore Institute of Technology", "VELS Institute of Science Technology & Advanced Studies (VISTAS)", "Vignan's Foundation for Science, Technology and Research", "Vinayaka Missionâ€™s Research Foundation", "Yenepoya", "A.P.J. Abdul Kalam Technological University", "Acharaya N.G.Ranga Agricultural University", "Acharaya Nagarjuna University", "Adikavi Nannaya University", "Akkamahadevi women's University (Formerly known as Karnataka State Women's University)", "Alagappa University", "Aliah University", "Allahabad State University", "Ambedkar University Delhi (AUD)", "Anand Agricultural University", "Andhra University", "Anna University", "Annamalai University", "Arybhatta Knowledge University", "Assam Agricultural University", "Assam Rajiv Gandhi University of Co-operative Management", "Assam Science & Technology University", "Assam Womens University", "Atal Bihari Vajpayee Hindi Vishwavidyalaya", "Awadesh Pratap Singh University", "Ayush and Health Sciences University of Chhattisgarh", "Baba Farid University of Health Sciences", "Baba Ghulam Shah Badshah University", "Babasaheb Bhimrao Ambedkar Bihar University", "Banda University of Agriculture & Technology", "Bangalore University", "Bankura University", "Barkatullaah University", "Bastar Vishwavidyalaya", "Bengaluru Central University", "Bengaluru North University", "Berhampur University", "Bhagat Phool Singh Mahila Vishwavidyalaya", "Bhakta Kavi Narsinh Mehta University", "Bharathiar University", "Bharathidasan University", "Bhupender Narayan Mandal University", "Bidhan Chandra Krishi Vishwavidyalaya", "Bihar Agricultural University", "Biju Patnaik University of Technology", "Bilaspur Vishwavidyalaya", "Binod Bihari Mahto Koylanchal University", "Birsa Agricultural University", "Bodoland University", "Bundelkhand University", "Burdwan University", "Calcutta University", "Calicut University", "CEPT University", "Ch. Bansi Lal University", "Chanakya National Law University", "Chandr Shekhar Azad University of Agriculture & Technology", "Chatrapati Sahuji Maharaj Kanpur University", "Chaudhary Devi Lal University", "Chaudhary Ranbir Singh University", "Chaudhary Sarwan Kumar Himachal Pradesh Krishi Vishvavidyalaya", "Chhattisgarh Kamdhenu Vishwavidyalaya", "Chhattisgarh Swami Vivekanad Technical Universty", "Childrens University", "Choudary Charan Singh Haryana Agricultural Univeersity", "Choudary Charan Singh University", "Cluster University of Jammu", "Cluster University of Srinagar", "Cochin Unviersity of Science & Technology", "Cooch Behar Panchanan Barma University", "Cotton University", "Damodaram Sanjivayya National Law University", "Davangere University", "Deen Bandhu Chhotu Ram University of Sciences & Technology", "Deen Dayal Upadhyay Gorakhpur University", "Delhi Pharmaceutical Sciences & Research University", "Delhi Technological University", "Devi Ahilya Vishwavidyalaya", "Dharmashastra National Law University", "Dharmsinh Desai University", "Diamond Harbour Womens University", "Dibrugarh University", "Doon University", "Dr Shyama Prasad Mukherjee University", "Dr. A.P.J. Abdul Kalam Technical University", "Dr. B. R. Ambedkar University of Social Sciences", "Dr. B.R. Ambedkar University", "Dr. B.R.Ambedkar Open University", "Dr. B.R.Ambedkar University", "Dr. Babasaheb Ambedkar Marathwada University", "Dr. Babasaheb Ambedkar Open University", "Dr. Babasaheb AmbedkarTechnological University", "Dr. Bhimrao Ambedkar Law University", "Dr. N.T.R. University of Health Sciences", "Dr. Punjabrao Deshmukh Krishi Vidyapeeth", "Dr. Ram Manohar Lohia Awadh University", "Dr. Ram Manohar Lohiya National Law University", "Dr. Shakuntala Misra National Rehabilitation University", "Dr. Shyama Prasad University", "Dr. Y.S.Parmar University of Horticulture & Forestry", "Dr. Y.S.R. Horticultural Univerity", "Dravidian University", "Durg Vishwavidyalaya", "Fakir Mohan University", "G.B.Pant University of Agriculture & Technology", "Gangadhar Meher University", "Gauhati University", "Gautam Buddha University", "Goa University", "Gondwana University", "Govind Guru Tribal University", "Gujarat Agricultural University", "Gujarat Ayurveda University", "Gujarat Forensic Sciences University", "Gujarat National Law University", "Gujarat Technological University", "Gujarat University", "Gujarat University of Transplantation Sciences", "Gulbarga University", "Guru Angad Dev Veterinary & Animal Sciences University", "Guru Gobind Singh Indraprastha Vishwavidyalaya", "Guru Jambeshwar University of Science and Technology", "Guru Nanak Dev University", "Guru Ravidas Ayurved University", "Harcourt Butler Technical University", "Haridev Joshi University of Journalism and Mass Communication", "Haryana Vishwakarma Skill University", "Hemchandracharya North Gujarat University", "Hemwati Nandan Bahuguna Medical Education University", "Hidayatullah National Law University", "Himachal Pradesh National Law University", "Himachal Pradesh Technical University", "Himachal Pradesh University", "Indian Institute of Teacher Education", "Indira Gandhi Delhi Technical University for Women", "Indira Gandhi Krishi Vishwavidyalaya", "Indira Gandhi University", "Indira Kala Sangeet Vishwavidyalaya", "Indraprastha Institute of Information Technology", "Institute of Infrastructure Technology Research and Management", "International Institute of Information Technology (IIIT)", "Islamic University of Sciences & Technology University", "Jadavpur University", "Jagadguru Ramanandacharya Sanskrit University", "Jai Naraim Vyas University", "Jai Prakash vishwavidyalaya(university)", "Jammu University", "Jananayak Chandrashekhar University", "Jawaharlal Nehru Architecture and Fine Arts University", "Jawaharlal Nehru Krishi Vishwavidyalaya", "Jawaharlal Nehru Technological University", "Jharkhand Raksha Shakti University", "Jiwaji University", "Junagarh Agricultural University", "Kakatiya University", "Kaloji Narayan Rao University of Health Sciences", "Kalyani University", "Kamdhenu University", "Kameshwar Singh.Darbhanga Sanskrit Vishwavidyalaya", "Kannada University", "Kannur University", "Karanataka State Law University", "Karanataka State Open University", "Karanataka University", "Karanataka Veterinary, Animal & Fisheries Science University", "Karnataka Folklore University", "Karnataka Sanskrit University", "Karnataka State Rural Development and Panchayat Raj University", "Kashmir University", "Kavi Kulguru Kalidas Sanskrit Vishwavidyalaya", "Kazi Nazrul University", "Kerala Agricultural Unviersity", "Kerala University", "Kerala University of Fisheries & Ocean Studies", "Kerala University of Health Sciences", "Kerala Veterinary & Animal Sciences University", "Khallikote University", "Khwaja Moinuddin Chishti Urdu, Arabi-Farsi University", "King Georges Medical University", "Kolhan University", "Konkan Krishi Vidyapeeth", "Krantiguru Shyamji Krishna Verma Kachchh University", "Krishna Kanta Handique State Open University", "Krishna University", "Krishnakumarsinhji Bhavnagar University", "KSGH Music and Performing Arts University", "Kumar Bhaskar Varma Sanskrit & Ancient Studies University", "Kumaun University", "Kurukshetra University", "Kushabhau Thakre Patrakarita Avam Jansanchar Vishwavidyalaya", "Kuvempu University", "Lala Lajpat Rai University of Veterinary & Animal Sciences", "Lalit Narayan Mithila University", "Lucknow University", "M.J.P. Rohilkhand University", "M.P.Bhoj (open) University", "Madan Mohan Malaviya University of Technology", "Madaras University", "Madhya Pradesh Pashu Chikitsa Vigyan Vishwavidyalaya", "Madurai Kamraj University", "Magadh University", "Mahamaya Technical University", "Maharahtra University of Health Sciences", "Maharaja Bir Bikram University", "Maharaja Chhatrasal Bundelkhand Vishwavidyalaya", "Maharaja Ganga Singh University", "Maharaja Ranjit Singh Punjab Technical University", "Maharaja Sayajirao University of Baroda", "Maharaja Surajmal Brij University", "Maharana Partap Horticultural University", "Maharana Pratap University of Agriculture & Technology", "Maharashtra Animal & Fishery Sciences University", "Maharashtra National Law University", "Maharashtra National Law University,", "Maharishi Dayanand Saraswati University", "Maharishi Dayanand University", "Maharshi Panini Sanskrit Evam Vedic Vishwavidyalaya", "Mahatam Gandhi Kashi Vidyapeeth", "Mahatma Gandhi Chitrakoot Gramodaya Vishwavidyalaya", "Mahatma Gandhi University", "Mahatma Gandhi Unversity", "Mahatma Phule Krishi Vidyapeeth", "Makhanlal Chaturvedi National University of Journalism & Communication", "Mangalore University", "Manipur Technical University", "Manipur University of Culture", "Manonmaniam Sundarnar University", "Marathwada Agricultural University", "Maulana Abul Kalam Azad University of Technology", "Maulana Mazharul Haque Arabic & Persian University", "Mohan Lal Shukhadia University", "Mother Teresa Womens University", "Mumbai University", "Munger University", "Mysore University", "Nalanda Open University", "Narendra Deo University of Agriculture & Technology", "National Academy of Legal Studies & Research University", "National Law Institute University", "National law School of India University", "National Law Universituy", "National Law University", "National Law University and Judicial Academy", "National University of Advanced Legal Studies (NUALS)", "National University of Study & Research in Law", "Navsari Agriculture University", "Netaji Shubhash Open University", "Nilamber-Pitamber University", "Nizams Institute of Medical Sciences", "North Benagal University", "North Maharashtra University", "North Orissa University", "Odisha State Open University", "Orissa University Of Agriculture & Technology", "Osmania University", "Palamuru University", "Pandit S N Shukla University", "Patliputra University", "Patna University", "Periyar University", "Potti Sreeramulu Teugu Universtity", "Presidency University", "Professor Jayashankar Telangana State Agricultural University", "Pt. Bhagwat Dayal Sharma University of Health Sciences", "Pt. Sundarlal Sharma (Open) University", "Pt.Ravishankar Shukla University", "Punjab Agriculture University", "Punjab Technical University", "Punjab University", "Punjabi University", "Purnea University", "Rabindra Bharati University", "Raiganj University", "Raj Rishi Bhartrihari Matsya University", "Raja Mansingh Tomar Music & Arts University", "Rajasthan Ayurveda University", "Rajasthan ILD Skills University (RISU)", "Rajasthan Technical University", "Rajasthan University", "Rajasthan University of Health Sciences", "Rajasthan University of Veterinary & Animal Sciences", "Rajendra Agricultural University", "Rajiv Gandhi Prodoyogiki Vishwavidyalaya", "Rajiv Gandhi University of Health Science", "Rajiv Gandhi University of Knowledge Technology", "Rajmata Vijayaraje Scindia Krishi Vishwa Vidyalaya", "Raksha Shakti University", "Rama Devi Womens University", "Ranchi University", "Rani Channamma University", "Rani Durgavati Vishwavidyalaya", "Ravenshaw University", "Rayalaseema University", "Sambalpur University", "Sampurnanand Sanskrit Vishwavidyalaya", "Sanchi University of Buddhist-Indic Studies", "Sant Gadge Baba Amravati University", "Sardar Krushinagar Dantiwada Agricultural University", "Sardar Patel University", "Sardar Patel University of Police, Security & Criminal Justice", "Sardar Vallabh Bhai Patel University of Agriculture & Technology", "Sarguja University", "Satavahana University", "Saurashtra University", "Savitribai Phule Pune University", "Shekhawati University", "Sher-e-Kashmir University of Agricultural Science & Technology", "Shivaji University", "shree guru gobind singh tricentenary university", "Shree Sankaracharaya University of Sanskrit", "Shree Somnath Sanskrit University", "Shri Govind Guru University", "Shri Jagannath Sanskrit Vishwavidyalaya", "Shri Mata Vaishno Devi University", "Siddharth University", "Sidho-Kanho-Birsha University", "Sido Kanhu University", "Smt. Nathibai Damodar Thackersey Womens University", "Solapur University", "Sri Dev Suman Uttarakhand Vishwavidyalaya", "Sri Konda Laxman Telangana State Horticultural University", "Sri krishnadevaraya University", "Sri P V Narsimha Rao Telangana Veterinary University", "Sri Padmavati Mahila Vishwavidyalayam", "Sri Venkateswara Institute of Medical Sciences", "Sri Venkateswara University", "Sri Venkateswara Vedic University", "Sri Venkateswara Veterinary University", "Srimanta Sankaradeva University of Health Sciences", "State University of Performing and Visual Arts", "Swami Keshwanand Rajasthan Agriculture University", "Swami Ramanand Teerth Marathwada University", "Swarnim Gujarat Sports University", "T.M. Bhagalpur University", "Tamil Nadu Fisheries University", "Tamil Nadu Music and Fine Arts University", "Tamil Nadu Open University", "Tamil Nadu Teacher Education University", "Tamil University", "Tamilnadu Agricultural University", "Tamilnadu Dr. Ambedkar Law University", "Tamilnadu Dr. M.G.R.Medical University", "Tamilnadu National Law School", "Tamilnadu Physical Educaton and Sports University", "Tamilnadu Veterinary & Animal Sciences University", "Telangana University", "The Bengal Engineering & Science University", "The Rajiv Gandhi National University of Law", "The Rashtrasant Tukadoji Maharaj Nagpur University", "The Sanskrit College and University", "The West Bengal National University of Juridical Science", "The West Bengal University of Health Sciences", "Thiruvalluvar University", "Thunchath Ezhuthachan Malayalam University", "Tumkur University", "U.P. Pandit Deen Dayal Upadhyaya Pashu Chikitsa Vigyan Vishwavidhyalaya Evam Go-Anusandhan Sansthan", "U.P. Rajarshi Tandon Open University", "U.P.King Georges University of Dental Sciences", "University of Agricultural Sciences", "University of Horticultural Sciences", "University of Kota", "Univesity of Gour Banga", "Utkal University", "Utkal University of Culture", "Uttar Banga Krishi Vishwavidyalaya", "Uttar Pradesh University of Medical Sciences", "Uttarakhand Aawasiya Viswavidyalaya", "Uttarakhand Ayurved University", "Uttarakhand Open University", "Uttarakhand Sanskrit University", "Uttarakhand Technical University", "Vardhman Mahaveer Open University", "Veer Bahadur Singh Purvanchal University", "Veer Chandra Singh Garhwali Uttarakhand University of Horticulture & Forestry", "Veer Kunwar Singh University", "Veer Narmad South Gujarat University", "Veer Surendra Sai Institute of Medical Science and Research", "Veer Surendra Sai University of Technology", "Vesveswaraiah Technological University", "Vidya Sagar University", "Vijayanagara Sri Krishnadevaraya University", "Vikram Simhapuri University", "Vikram University", "Vinoba Bhave University", "West Bengal State University", "West Bengal University of Animal and Fishery Sciences", "West Bengal University of Teachers, Training, Education Planning and Administration", "Yashwant Rao Chavan Maharashtra Open University", "YMCA University of Science & Technology", "Yogi Vemana University" };
            // phddetails.Universitys = new List<string>() { "Rajiv Gandhi University", "Assam University", "Tezpur University", "University of Hyderabad, Hyderabad", "Maulana Azad National Urdu University", "English   and   Foreign   Languages   University", "Jamia Millia Islamia", "University of Delhi", "JawaharLal Nehru University", "Indira Gandhi National Open University", "South Asian University", "The  Indira  Gandhi  National  Tribal  University", "Dr. Harisingh Gour Vishwavidyalaya", "Mahatma  Gandhi  Antarrashtriya  Hindi  Vishwavidyalaya", "Mizoram University", "North Eastern Hill University", "Manipur University", "Central Agricultural University", "Nagaland University", "Pondicherry  University", "Sikkim University", "Tripura University", "Aligarh Muslim University", "Babasaheb  Bhimrao  Ambedkar  University", "Banaras Hindu University", "University of Allahabad", "Rajiv  Gandhi  National  Aviation  University", "Rani  Lakshmi  Bai  Central  Agricultural  University", "Visva Bharati, Shantiniketan", "Hemwati Nandan Bahuguna Garhwal University", "Central University of Tamil Nadu", "Indian Maritime University", "Central  University  of  Rajasthan", "Central University of Punjab", "Central University of Orissa", "Central University of Kerala", "Central University of Karnataka", "Central University of Jharkhand", "Central University of Kashmir, Transit Campus", "Central University of Jammu, Bagla (Rahya-Suchani)", "Central University of Himachal Pradesh", "Central University of Haryana", "Guru  Ghasidas  Vishwavidyalaya", "Central University of Bihar", "Nalanda University", "Mahatma  Gandhi  Central  University", "Central University of Gujarat", "Academy of Maritime Education and Training", "Amrita Vishwa Vidyapeetham", "Avinashilingam Institute for Home Science & Higher Education for Women", "B.L.D.E.", "B.S. Abdur Rahman Institute of Science and Technology", "Banasthai Vidyapith", "Bharath Institute of Higher Education & Research", "Bharati Vidyapeeth", "Bhatkhande Music Institute", "Birla Institute of Technology", "Birla Institute of Technology & Science", "Central Institute of Buddhist Studies(CIBS)", "Central Institute of Fisheries Education", "Central Institute of Higher Tibetan Studies", "Chennai Mathematical Institute", "Chettinad Academy of Research and Education (CARE)", "Chinmaya Vishwavidyapeeth", "Christ", "D.Y Patil Educational Society", "Datta Meghe Institute of Medical Sciences", "Dayalbagh Educational Institute", "Deccan College Postgraduate & Research Institute", "Dr. D.Y. Patil Vidyapeeth", "Dr. M.G.R. Educational and Research Institute", "Forest Research Institute", "Gandhi Institute of Technology and Management (GITAM)", "Gandhiigram Rural Institute", "Gokhale Institute of Politics & Economics", "Graphic Era", "Gujarat Vidyapith", "Gurukul Kangri vidyapeeth", "Hindustan Institute of Technology and Science (HITS)", "Homi Bhabha National Institute, Regd. Office", "ICFAI Foundation for Higher Education", "IIS", "Indain Institute of Foreigen Trade", "Indian Agricultural Research Institute", "Indian Association for the Cultivation of Science (IACS)", "Indian Institute of Information Technology and Management", "Indian Institute of Science", "Indian Institute of Space Science and Technology", "Indian Law Institute", "Indian School of Mines", "Indian Veterinary Research Institute", "Indira Gandhi Institute of Development Research", "Institute of Advanced Studies in Education", "Institute of Chemical Technology", "Institute of liver and Biliary Sciences", "Instituteof Armamrnt Technology", "International Institute for Population Sciences", "International Institute of Information Technology", "Jain", "Jain Vishva Bharati Institute", "Jamia Hamdard", "Janardan Rai Nagar Rajasthan Vidyapeeth", "Jawahar lal Nehru Centre for Advanced Scientific Research", "Jaypee Institute of Information Technology", "JSS Academy of Higher Education & Research", "K.L.E. Academy of Higher Education and Research", "Kalasalingam Academy of Research and Education", "Kalinga Institute of Industrial Technology", "Karpagam Academy of Higher Education", "Karunya Institute of Technology and Sciences", "Kerala Kalamandalam", "Koneru Lakshmaiah Education Foundation", "Krishna Institute of Medical Sciences", "Lakshmibai National Institute of Physical Education", "Lingaya's Vidyapeeth", "LNM Istitute of Information Technology", "Maharishi Markandeshwar (Deemed to be University)", "Manav Rachna International Institute of Research and Studies", "Manipal Academy of Higher Education", "Meenakshi Academy of Higher Education and Research", "MGM Institute of Health Sciences", "Narsee Monjee Institute of Management Studies", "National Brain Research Centre", "National Dairy Research Institute", "National Institute of Food Technology, Entrepreneurship & Management (NIFTEM)", "National Institute of Mental Health & Neuro Sciences", "National Museum Institute of History of Arts, Conservation and Musicology", "National Rail and Transportation Institute", "National University of Educational Planning & Administration", "Nava Nalanda Mahavihara", "Nehru Gram Bharati", "NITTE", "Noorul Islam Centre for Higher Education", "North Eastern Regional Institute of Science & Technology", "Padmashree Dr.D.Y. Patil Vidyapeeeth", "Pandit Dwarka Prasad Mishra Indian Institute of Information Technology", "Periyar Manaimmai Institute of Science & Technology (PMIST)", "Ponnaiyan Ramajayam Institute of Science & technology (PMIST)", "Pravara Institute of Medical Sciences", "Punjab Engineering College", "Rajiv Gandhi National Institute of Youth Development", "Ramakrishna Mission Vivekananda Educational and Research Institute", "Rashtriya Sanskrit Sansthana", "Rashtriya Sanskrit Vidyapeeth", "S.R.M Institute of Science and Technology", "Sam Higginbottom Institute of Agriculture, Technology & Sciences", "Sant Longowal Institute of Engineering and Technology", "Santosh", "Sathyabama Institute of Science and Technology", "Saveetha Institute of Medical and Technical Sciences", "Shanmugha Arts Science Technology & Research Academy (SASTRA)", "Shobhit Institute of Engineering & Technology", "Shri Lal Bahadur Shastri Rashtriya Sanskrit Vidyapith", "Siksha 'O' Anusandhan", "Sri Balaji Vidyapeeth (Deemed to be University)", "Sri Chandrasekharendra Saraswathi Vishwa Mahavidyalaya", "Sri Devraj Urs Academy of Higher Education and Research", "Sri Ramachandra Medical College and Research Institute", "Sri Sathya Sai Institute of Higher Learning", "Sri Siddhartha Academy of Higher Education", "St. Peterâ€™s Institute of Higher Education and Research", "Sumandeep Vidyapeeth", "Swami Vivekananda Yoga Anusandhana Samsthana", "Symbiosis International", "Tata Institute of Fundamental Research", "Tata Institute of Social Sciences", "TERI School of Advanced studies", "Thapar Institute of Engineering & Technology", "Tilak Maharashtra Vidyapeeth", "Vel Tech Rangarajan Dr. Sagunthala R & D Institute of Science and Technology", "Vellore Institute of Technology", "VELS Institute of Science Technology & Advanced Studies (VISTAS)", "Vignan's Foundation for Science, Technology and Research", "Vinayaka Missionâ€™s Research Foundation", "Yenepoya", "A.P.J. Abdul Kalam Technological University", "Acharaya N.G.Ranga Agricultural University", "Acharaya Nagarjuna University", "Adikavi Nannaya University", "Akkamahadevi women's University (Formerly known as Karnataka State Women's University)", "Alagappa University", "Aliah University", "Allahabad State University", "Ambedkar University Delhi (AUD)", "Anand Agricultural University", "Andhra University", "Anna University", "Annamalai University", "Arybhatta Knowledge University", "Assam Agricultural University", "Assam Rajiv Gandhi University of Co-operative Management", "Assam Science & Technology University", "Assam Womens University", "Atal Bihari Vajpayee Hindi Vishwavidyalaya", "Awadesh Pratap Singh University", "Ayush and Health Sciences University of Chhattisgarh", "Baba Farid University of Health Sciences", "Baba Ghulam Shah Badshah University", "Babasaheb Bhimrao Ambedkar Bihar University", "Banda University of Agriculture & Technology", "Bangalore University", "Bankura University", "Barkatullaah University", "Bastar Vishwavidyalaya", "Bengaluru Central University", "Bengaluru North University", "Berhampur University", "Bhagat Phool Singh Mahila Vishwavidyalaya", "Bhakta Kavi Narsinh Mehta University", "Bharathiar University", "Bharathidasan University", "Bhupender Narayan Mandal University", "Bidhan Chandra Krishi Vishwavidyalaya", "Bihar Agricultural University", "Biju Patnaik University of Technology", "Bilaspur Vishwavidyalaya", "Binod Bihari Mahto Koylanchal University", "Birsa Agricultural University", "Bodoland University", "Bundelkhand University", "Burdwan University", "Calcutta University", "Calicut University", "CEPT University", "Ch. Bansi Lal University", "Chanakya National Law University", "Chandr Shekhar Azad University of Agriculture & Technology", "Chatrapati Sahuji Maharaj Kanpur University", "Chaudhary Devi Lal University", "Chaudhary Ranbir Singh University", "Chaudhary Sarwan Kumar Himachal Pradesh Krishi Vishvavidyalaya", "Chhattisgarh Kamdhenu Vishwavidyalaya", "Chhattisgarh Swami Vivekanad Technical Universty", "Childrens University", "Choudary Charan Singh Haryana Agricultural Univeersity", "Choudary Charan Singh University", "Cluster University of Jammu", "Cluster University of Srinagar", "Cochin Unviersity of Science & Technology", "Cooch Behar Panchanan Barma University", "Cotton University", "Damodaram Sanjivayya National Law University", "Davangere University", "Deen Bandhu Chhotu Ram University of Sciences & Technology", "Deen Dayal Upadhyay Gorakhpur University", "Delhi Pharmaceutical Sciences & Research University", "Delhi Technological University", "Devi Ahilya Vishwavidyalaya", "Dharmashastra National Law University", "Dharmsinh Desai University", "Diamond Harbour Womens University", "Dibrugarh University", "Doon University", "Dr Shyama Prasad Mukherjee University", "Dr. A.P.J. Abdul Kalam Technical University", "Dr. B. R. Ambedkar University of Social Sciences", "Dr. B.R. Ambedkar University", "Dr. B.R.Ambedkar Open University", "Dr. B.R.Ambedkar University", "Dr. Babasaheb Ambedkar Marathwada University", "Dr. Babasaheb Ambedkar Open University", "Dr. Babasaheb AmbedkarTechnological University", "Dr. Bhimrao Ambedkar Law University", "Dr. N.T.R. University of Health Sciences", "Dr. Punjabrao Deshmukh Krishi Vidyapeeth", "Dr. Ram Manohar Lohia Awadh University", "Dr. Ram Manohar Lohiya National Law University", "Dr. Shakuntala Misra National Rehabilitation University", "Dr. Shyama Prasad University", "Dr. Y.S.Parmar University of Horticulture & Forestry", "Dr. Y.S.R. Horticultural Univerity", "Dravidian University", "Durg Vishwavidyalaya", "Fakir Mohan University", "G.B.Pant University of Agriculture & Technology", "Gangadhar Meher University", "Gauhati University", "Gautam Buddha University", "Goa University", "Gondwana University", "Govind Guru Tribal University", "Gujarat Agricultural University", "Gujarat Ayurveda University", "Gujarat Forensic Sciences University", "Gujarat National Law University", "Gujarat Technological University", "Gujarat University", "Gujarat University of Transplantation Sciences", "Gulbarga University", "Guru Angad Dev Veterinary & Animal Sciences University", "Guru Gobind Singh Indraprastha Vishwavidyalaya", "Guru Jambeshwar University of Science and Technology", "Guru Nanak Dev University", "Guru Ravidas Ayurved University", "Harcourt Butler Technical University", "Haridev Joshi University of Journalism and Mass Communication", "Haryana Vishwakarma Skill University", "Hemchandracharya North Gujarat University", "Hemwati Nandan Bahuguna Medical Education University", "Hidayatullah National Law University", "Himachal Pradesh National Law University", "Himachal Pradesh Technical University", "Himachal Pradesh University", "Indian Institute of Teacher Education", "Indira Gandhi Delhi Technical University for Women", "Indira Gandhi Krishi Vishwavidyalaya", "Indira Gandhi University", "Indira Kala Sangeet Vishwavidyalaya", "Indraprastha Institute of Information Technology", "Institute of Infrastructure Technology Research and Management", "International Institute of Information Technology (IIIT)", "Islamic University of Sciences & Technology University", "Jadavpur University", "Jagadguru Ramanandacharya Sanskrit University", "Jai Naraim Vyas University", "Jai Prakash vishwavidyalaya(university)", "Jammu University", "Jananayak Chandrashekhar University", "Jawaharlal Nehru Architecture and Fine Arts University", "Jawaharlal Nehru Krishi Vishwavidyalaya", "Jawaharlal Nehru Technological University", "Jharkhand Raksha Shakti University", "Jiwaji University", "Junagarh Agricultural University", "Kakatiya University", "Kaloji Narayan Rao University of Health Sciences", "Kalyani University", "Kamdhenu University", "Kameshwar Singh.Darbhanga Sanskrit Vishwavidyalaya", "Kannada University", "Kannur University", "Karanataka State Law University", "Karanataka State Open University", "Karanataka University", "Karanataka Veterinary, Animal & Fisheries Science University", "Karnataka Folklore University", "Karnataka Sanskrit University", "Karnataka State Rural Development and Panchayat Raj University", "Kashmir University", "Kavi Kulguru Kalidas Sanskrit Vishwavidyalaya", "Kazi Nazrul University", "Kerala Agricultural Unviersity", "Kerala University", "Kerala University of Fisheries & Ocean Studies", "Kerala University of Health Sciences", "Kerala Veterinary & Animal Sciences University", "Khallikote University", "Khwaja Moinuddin Chishti Urdu, Arabi-Farsi University", "King Georges Medical University", "Kolhan University", "Konkan Krishi Vidyapeeth", "Krantiguru Shyamji Krishna Verma Kachchh University", "Krishna Kanta Handique State Open University", "Krishna University", "Krishnakumarsinhji Bhavnagar University", "KSGH Music and Performing Arts University", "Kumar Bhaskar Varma Sanskrit & Ancient Studies University", "Kumaun University", "Kurukshetra University", "Kushabhau Thakre Patrakarita Avam Jansanchar Vishwavidyalaya", "Kuvempu University", "Lala Lajpat Rai University of Veterinary & Animal Sciences", "Lalit Narayan Mithila University", "Lucknow University", "M.J.P. Rohilkhand University", "M.P.Bhoj (open) University", "Madan Mohan Malaviya University of Technology", "Madaras University", "Madhya Pradesh Pashu Chikitsa Vigyan Vishwavidyalaya", "Madurai Kamraj University", "Magadh University", "Mahamaya Technical University", "Maharahtra University of Health Sciences", "Maharaja Bir Bikram University", "Maharaja Chhatrasal Bundelkhand Vishwavidyalaya", "Maharaja Ganga Singh University", "Maharaja Ranjit Singh Punjab Technical University", "Maharaja Sayajirao University of Baroda", "Maharaja Surajmal Brij University", "Maharana Partap Horticultural University", "Maharana Pratap University of Agriculture & Technology", "Maharashtra Animal & Fishery Sciences University", "Maharashtra National Law University", "Maharashtra National Law University,", "Maharishi Dayanand Saraswati University", "Maharishi Dayanand University", "Maharshi Panini Sanskrit Evam Vedic Vishwavidyalaya", "Mahatam Gandhi Kashi Vidyapeeth", "Mahatma Gandhi Chitrakoot Gramodaya Vishwavidyalaya", "Mahatma Gandhi University", "Mahatma Gandhi Unversity", "Mahatma Phule Krishi Vidyapeeth", "Makhanlal Chaturvedi National University of Journalism & Communication", "Mangalore University", "Manipur Technical University", "Manipur University of Culture", "Manonmaniam Sundarnar University", "Marathwada Agricultural University", "Maulana Abul Kalam Azad University of Technology", "Maulana Mazharul Haque Arabic & Persian University", "Mohan Lal Shukhadia University", "Mother Teresa Womens University", "Mumbai University", "Munger University", "Mysore University", "Nalanda Open University", "Narendra Deo University of Agriculture & Technology", "National Academy of Legal Studies & Research University", "National Law Institute University", "National law School of India University", "National Law Universituy", "National Law University", "National Law University and Judicial Academy", "National University of Advanced Legal Studies (NUALS)", "National University of Study & Research in Law", "Navsari Agriculture University", "Netaji Shubhash Open University", "Nilamber-Pitamber University", "Nizams Institute of Medical Sciences", "North Benagal University", "North Maharashtra University", "North Orissa University", "Odisha State Open University", "Orissa University Of Agriculture & Technology", "Osmania University", "Palamuru University", "Pandit S N Shukla University", "Patliputra University", "Patna University", "Periyar University", "Potti Sreeramulu Teugu Universtity", "Presidency University", "Professor Jayashankar Telangana State Agricultural University", "Pt. Bhagwat Dayal Sharma University of Health Sciences", "Pt. Sundarlal Sharma (Open) University", "Pt.Ravishankar Shukla University", "Punjab Agriculture University", "Punjab Technical University", "Punjab University", "Punjabi University", "Purnea University", "Rabindra Bharati University", "Raiganj University", "Raj Rishi Bhartrihari Matsya University", "Raja Mansingh Tomar Music & Arts University", "Rajasthan Ayurveda University", "Rajasthan ILD Skills University (RISU)", "Rajasthan Technical University", "Rajasthan University", "Rajasthan University of Health Sciences", "Rajasthan University of Veterinary & Animal Sciences", "Rajendra Agricultural University", "Rajiv Gandhi Prodoyogiki Vishwavidyalaya", "Rajiv Gandhi University of Health Science", "Rajiv Gandhi University of Knowledge Technology", "Rajmata Vijayaraje Scindia Krishi Vishwa Vidyalaya", "Raksha Shakti University", "Rama Devi Womens University", "Ranchi University", "Rani Channamma University", "Rani Durgavati Vishwavidyalaya", "Ravenshaw University", "Rayalaseema University", "Sambalpur University", "Sampurnanand Sanskrit Vishwavidyalaya", "Sanchi University of Buddhist-Indic Studies", "Sant Gadge Baba Amravati University", "Sardar Krushinagar Dantiwada Agricultural University", "Sardar Patel University", "Sardar Patel University of Police, Security & Criminal Justice", "Sardar Vallabh Bhai Patel University of Agriculture & Technology", "Sarguja University", "Satavahana University", "Saurashtra University", "Savitribai Phule Pune University", "Shekhawati University", "Sher-e-Kashmir University of Agricultural Science & Technology", "Shivaji University", "shree guru gobind singh tricentenary university", "Shree Sankaracharaya University of Sanskrit", "Shree Somnath Sanskrit University", "Shri Govind Guru University", "Shri Jagannath Sanskrit Vishwavidyalaya", "Shri Mata Vaishno Devi University", "Siddharth University", "Sidho-Kanho-Birsha University", "Sido Kanhu University", "Smt. Nathibai Damodar Thackersey Womens University", "Solapur University", "Sri Dev Suman Uttarakhand Vishwavidyalaya", "Sri Konda Laxman Telangana State Horticultural University", "Sri krishnadevaraya University", "Sri P V Narsimha Rao Telangana Veterinary University", "Sri Padmavati Mahila Vishwavidyalayam", "Sri Venkateswara Institute of Medical Sciences", "Sri Venkateswara University", "Sri Venkateswara Vedic University", "Sri Venkateswara Veterinary University", "Srimanta Sankaradeva University of Health Sciences", "State University of Performing and Visual Arts", "Swami Keshwanand Rajasthan Agriculture University", "Swami Ramanand Teerth Marathwada University", "Swarnim Gujarat Sports University", "T.M. Bhagalpur University", "Tamil Nadu Fisheries University", "Tamil Nadu Music and Fine Arts University", "Tamil Nadu Open University", "Tamil Nadu Teacher Education University", "Tamil University", "Tamilnadu Agricultural University", "Tamilnadu Dr. Ambedkar Law University", "Tamilnadu Dr. M.G.R.Medical University", "Tamilnadu National Law School", "Tamilnadu Physical Educaton and Sports University", "Tamilnadu Veterinary & Animal Sciences University", "Telangana University", "The Bengal Engineering & Science University", "The Rajiv Gandhi National University of Law", "The Rashtrasant Tukadoji Maharaj Nagpur University", "The Sanskrit College and University", "The West Bengal National University of Juridical Science", "The West Bengal University of Health Sciences", "Thiruvalluvar University", "Thunchath Ezhuthachan Malayalam University", "Tumkur University", "U.P. Pandit Deen Dayal Upadhyaya Pashu Chikitsa Vigyan Vishwavidhyalaya Evam Go-Anusandhan Sansthan", "U.P. Rajarshi Tandon Open University", "U.P.King Georges University of Dental Sciences", "University of Agricultural Sciences", "University of Horticultural Sciences", "University of Kota", "Univesity of Gour Banga", "Utkal University", "Utkal University of Culture", "Uttar Banga Krishi Vishwavidyalaya", "Uttar Pradesh University of Medical Sciences", "Uttarakhand Aawasiya Viswavidyalaya", "Uttarakhand Ayurved University", "Uttarakhand Open University", "Uttarakhand Sanskrit University", "Uttarakhand Technical University", "Vardhman Mahaveer Open University", "Veer Bahadur Singh Purvanchal University", "Veer Chandra Singh Garhwali Uttarakhand University of Horticulture & Forestry", "Veer Kunwar Singh University", "Veer Narmad South Gujarat University", "Veer Surendra Sai Institute of Medical Science and Research", "Veer Surendra Sai University of Technology", "Vesveswaraiah Technological University", "Vidya Sagar University", "Vijayanagara Sri Krishnadevaraya University", "Vikram Simhapuri University", "Vikram University", "Vinoba Bhave University", "West Bengal State University", "West Bengal University of Animal and Fishery Sciences", "West Bengal University of Teachers, Training, Education Planning and Administration", "Yashwant Rao Chavan Maharashtra Open University", "YMCA University of Science & Technology", "Yogi Vemana University" };
            phddetails.Places = new List<string>() { "Arunachal Pradesh", "Assam", "Telangana", "Delhi", "Madhya Pradesh", "Maharashtra", "Mizoram", "Meghalaya", "Manipur", "Nagaland", "Pondicherry", "Sikkim", "Tripura", "Uttar Pradesh", "West Bengal", "Uttarakhand", "Tamil Nadu", "Rajasthan", "Punjab", "Orissa", "Kerala", "Karnataka", "Jharkhand", "Jammu & Kashmir", "Himachal", "Pradesh", "Haryana", "Chhattisgarh", "Bihar", "Gujarat", "Jammu and Kashmir", "Andhra Pradesh", "Chandigarh", "Puducherry", "Himachal Pradesh", "Goa" };
            List<SelectListItem> universitytypelist = new List<SelectListItem>();
            universitytypelist.Add(new SelectListItem { Text = "Central", Value = "1" });
            universitytypelist.Add(new SelectListItem { Text = "State", Value = "2" });
            universitytypelist.Add(new SelectListItem { Text = "Private", Value = "3" });
            universitytypelist.Add(new SelectListItem { Text = "Deemed to be University", Value = "4" });
            universitytypelist.Add(new SelectListItem { Text = "International University", Value = "5" });
            ViewBag.universitytype = universitytypelist;
            if (registredfaculty != null)
            {
                phddetails.RegistrationNumber = registredfaculty.RegistrationNumber.Trim();
                phddetails.FacultyId = registredfaculty.id;
                phddetails.FirstName = registredfaculty.FirstName != null ? registredfaculty.FirstName.Trim() : registredfaculty.FirstName;
                phddetails.MiddleName = registredfaculty.MiddleName != null ? registredfaculty.MiddleName.Trim() : registredfaculty.MiddleName;
                phddetails.LastName = registredfaculty.LastName != null ? registredfaculty.LastName.Trim() : registredfaculty.LastName;
                phddetails.HaveyouprephdLetter = true;
            }
            var collegefaculty =
                db.jntuh_college_faculty_registered.Where(
                    r => r.RegistrationNumber == registredfaculty.RegistrationNumber.Trim())
                    .Select(s => s)
                    .FirstOrDefault();
            if (collegefaculty != null)
            {
                var college =
                    db.jntuh_college.Where(c => c.id == collegefaculty.collegeId).Select(s => s).FirstOrDefault();
                phddetails.CollegeCode = college.collegeCode.Trim();
                phddetails.CollegeName = college.collegeName.Trim();
            }
            var phdexsistdata =
                db.jntuh_faculty_phddetails.Where(p => p.Facultyid == registredfaculty.id)
                    .Select(s => s)
                    .FirstOrDefault();
            if (phdexsistdata != null)
            {
                //if ((bool)phdexsistdata.IsSubmitted)
                //{
                //    return RedirectToAction("ViewFacultyphdDetails", new { fid = fid });
                //}
                phddetails.Id = phdexsistdata.Id;
                phddetails.PhdType = Convert.ToInt32(phdexsistdata.Phdtype);
                phddetails.PhdTypeid = phdtypeslist.First(i => i.Value == phddetails.PhdType.ToString()).Text;
                phddetails.PhdawardYear = Convert.ToInt32(phdexsistdata.Phdawardyear);
                phddetails.PhdAdmissionYear = Convert.ToInt32(phdexsistdata.AdmissionYear);
                phddetails.University = phdexsistdata.University;
                phddetails.PlaceofUniversity = phdexsistdata.Placeofuniversity;
                phddetails.PhdTitle = phdexsistdata.Phdtitle;
                phddetails.UniversityType = Convert.ToInt32(phdexsistdata.Universitytype);
                if (phdexsistdata.Universitytype != null && phdexsistdata.Universitytype > 0)
                {
                    phddetails.UniversityTypeTxt = universitytypelist.Where(i => i.Value == phdexsistdata.Universitytype.ToString()).First().Text;
                }
                phddetails.SupervisorName1 = phdexsistdata.Supervisorname1;
                phddetails.SupervisorName2 = phdexsistdata.Supervisorname2;
                phddetails.SupervisorName3 = phdexsistdata.Supervisorname3;
                phddetails.AdmissionLetterpath = phdexsistdata.Admissionletter;
                phddetails.PrephdLetterpath = phdexsistdata.Prephdletter;
                phddetails.GenuinenessLetterpath = phdexsistdata.Genuinenessletter;
                phddetails.CollegeAuthenticationLetterpath = phdexsistdata.Collegeauthaticationletter;
                phddetails.ThesiscoverPagepath = phdexsistdata.Thesiscoverpage;
                phddetails.OtherLetterpath = phdexsistdata.Otherletter;
                //New Fields
                phddetails.PhdnotificationIssued = phdexsistdata.Notificationissued;
                phddetails.RegistrationNumberOrHallticketNo = phdexsistdata.Hallticketnumber;
                phddetails.HowmanyreviewsRRMattended = phdexsistdata.Reviewsattended;
                phddetails.HowmanypapersPublished = phdexsistdata.Paperspublished;
                phddetails.Externalexamineratthetimeofdefense = phdexsistdata.Timeofdefense;
                phddetails.BOSChairpersonatthetimeofThesisSubmission = phdexsistdata.Boschairperson;
                if (phdexsistdata.Vivadate != null)
                    phddetails.Exactdateviva = UAAAS.Models.Utilities.MMDDYY2DDMMYY(phdexsistdata.Vivadate.ToString());
                if (phdexsistdata.Pressnotification != null)
                    phddetails.PressnotificationPhDDegree = UAAAS.Models.Utilities.MMDDYY2DDMMYY(phdexsistdata.Pressnotification.ToString());
                //phddetails.Exactdateoffinalviva = phdexsistdata.Vivadate;
                //phddetails.PressnotificationofyourPhDDegree = phdexsistdata.Pressnotification;
                phddetails.HaveyouattendConvocation = phdexsistdata.Convocationattended != null ? (bool)phdexsistdata.Convocationattended : false;
                phddetails.PhdofferingDepartment = phdexsistdata.Department;
                phddetails.PhdSpecialization = phdexsistdata.Specialization;
                phddetails.NoCformthecollegepath = phdexsistdata.Nocletter;
                phddetails.UniversityWebsite = phdexsistdata.Website;
                phddetails.UniversityAddress = phdexsistdata.Address;
                phddetails.HowmanypapersPublishedduringPhdWork = phdexsistdata.PaperspublishedDPW;
                phddetails.Phdodpath = phdexsistdata.Phdod;

                phddetails.InterNationalJrnls = phdexsistdata.IntNationalJrnls;
                phddetails.NationalJrnls = phdexsistdata.NationalJrnls;
                phddetails.InterNationalCnfrs = phdexsistdata.IntNationalCnfrns;
                phddetails.NationalCnfrs = phdexsistdata.NationalCnfrns;

                phddetails.InterNationalJrnlspath = phdexsistdata.IntNationalJrnlsDocLetter;
                phddetails.NationalJrnlspath = phdexsistdata.NationalJrnlsDocLetter;
                phddetails.InterNationalCnfrspath = phdexsistdata.IntNationalCnfrnsLetter;
                phddetails.NationalCnfrspath = phdexsistdata.NationalCnfrnsLetter;
                //phddetails.Phdod = phdexsistdata.Thesiscoverpage;
                //return RedirectToAction("ViewFacultyphdDetails", new { fid = fid });
            }
            return View(phddetails);
        }

        [HttpPost]
        public ActionResult EditFacultyphdDetails(FacultyphdDetails phddetails)
        {
            //return RedirectToAction("Index", "UnderConstruction");
            if (Membership.GetUser(User.Identity.Name) == null)
                return RedirectToAction("Logon", "Account");
            int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            const string phdadmissionletters = "~/Content/Upload/Faculty/PHDDetails/AdmissionLetters";
            const string prephdletters = "~/Content/Upload/Faculty/PHDDetails/PrePHDs";
            const string phdods = "~/Content/Upload/Faculty/PHDDetails/PHDODs";
            const string thesispages = "~/Content/Upload/Faculty/PHDDetails/ThesisPages";
            const string genuinenessletters = "~/Content/Upload/Faculty/PHDDetails/GenuinenessLetters";
            //College Authentication means College Certified Letter(Duly Signed by Principal)
            const string collegeauthenticationletters = "~/Content/Upload/Faculty/PHDDetails/CollegeAuthenticationLetters";
            const string nocfromthecollegeletters = "~/Content/Upload/Faculty/PHDDetails/NOCfromCollege";
            const string otherletters = "~/Content/Upload/Faculty/PHDDetails/OtherLetters";
            const string intnationaljrnletter = "~/Content/Upload/Faculty/PHDDetails/InternationalJournalLetters";
            const string nationaljrnletter = "~/Content/Upload/Faculty/PHDDetails/NationalJournalLetters";
            const string intnationalconfrletter = "~/Content/Upload/Faculty/PHDDetails/InternationalConferenceLetters";
            const string nationalcnfrletter = "~/Content/Upload/Faculty/PHDDetails/NationalConferenceLetters";
            if (phddetails.FacultyId != 0)
            {
                var registredfaculty =
                    db.jntuh_registered_faculty.Where(r => r.id == phddetails.FacultyId).Select(s => s).FirstOrDefault();
                var facultyphdeduaction =
                    db.jntuh_registered_faculty_education.Where(
                        r => r.facultyId == phddetails.FacultyId && r.educationId == 6).Select(s => s).FirstOrDefault();
                if (registredfaculty != null)
                {
                    //if (phddetails.AdmissionLetter != null && phddetails.CollegeAuthenticationLetter != null &&
                    //    phddetails.GenuinenessLetter != null && phddetails.Phdod != null &&
                    //    phddetails.ThesiscoverPage != null) //phddetails.PrephdLetter != null && 
                    //{
                    if (!Directory.Exists(Server.MapPath(phdadmissionletters)))
                    {
                        Directory.CreateDirectory(Server.MapPath(phdadmissionletters));
                    }
                    if (!Directory.Exists(Server.MapPath(prephdletters)))
                    {
                        Directory.CreateDirectory(Server.MapPath(prephdletters));
                    }
                    if (!Directory.Exists(Server.MapPath(phdods)))
                    {
                        Directory.CreateDirectory(Server.MapPath(phdods));
                    }
                    if (!Directory.Exists(Server.MapPath(thesispages)))
                    {
                        Directory.CreateDirectory(Server.MapPath(thesispages));
                    }
                    if (!Directory.Exists(Server.MapPath(genuinenessletters)))
                    {
                        Directory.CreateDirectory(Server.MapPath(genuinenessletters));
                    }
                    if (!Directory.Exists(Server.MapPath(collegeauthenticationletters)))
                    {
                        Directory.CreateDirectory(Server.MapPath(collegeauthenticationletters));
                    }
                    if (!Directory.Exists(Server.MapPath(nocfromthecollegeletters)))
                    {
                        Directory.CreateDirectory(Server.MapPath(nocfromthecollegeletters));
                    }
                    if (!Directory.Exists(Server.MapPath(otherletters)))
                    {
                        Directory.CreateDirectory(Server.MapPath(otherletters));
                    }
                    if (!Directory.Exists(Server.MapPath(intnationaljrnletter)))
                    {
                        Directory.CreateDirectory(Server.MapPath(intnationaljrnletter));
                    }
                    if (!Directory.Exists(Server.MapPath(nationaljrnletter)))
                    {
                        Directory.CreateDirectory(Server.MapPath(nationaljrnletter));
                    }
                    if (!Directory.Exists(Server.MapPath(intnationalconfrletter)))
                    {
                        Directory.CreateDirectory(Server.MapPath(intnationalconfrletter));
                    }
                    if (!Directory.Exists(Server.MapPath(nationalcnfrletter)))
                    {
                        Directory.CreateDirectory(Server.MapPath(nationalcnfrletter));
                    }
                    //PHD Admission Letter Saving (AL) with Extension
                    if (phddetails.AdmissionLetter != null)
                    {
                        var ext1 = Path.GetExtension(phddetails.AdmissionLetter.FileName);
                        if (ext1 != null && ext1.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              phddetails.FirstName.Substring(0, 1) + "-" +
                                              phddetails.LastName.Substring(0, 1) + "-AL";
                            phddetails.AdmissionLetter.SaveAs(string.Format("{0}/{1}{2}",
                                Server.MapPath(phdadmissionletters), fileName, ext1));
                            phddetails.AdmissionLetterpath = string.Format("{0}{1}", fileName, ext1);
                        }
                    }
                    if (phddetails.PrephdLetter != null)
                    {
                        //PHD Pre Phd Letter Saving (PP) with Extension
                        var ext2 = Path.GetExtension(phddetails.PrephdLetter.FileName);
                        if (ext2 != null && ext2.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              phddetails.FirstName.Substring(0, 1) + "-" +
                                              phddetails.LastName.Substring(0, 1) + "-PP";
                            phddetails.PrephdLetter.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(prephdletters),
                                fileName, ext2));
                            phddetails.PrephdLetterpath = string.Format("{0}{1}", fileName, ext2);
                        }
                    }

                    if (phddetails.ThesiscoverPage != null)
                    {
                        //PHD Thesis Letter Saving (TP) with Extension
                        var ext3 = Path.GetExtension(phddetails.ThesiscoverPage.FileName);
                        if (ext3 != null && ext3.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              phddetails.FirstName.Substring(0, 1) + "-" +
                                              phddetails.LastName.Substring(0, 1) + "-TP";
                            phddetails.ThesiscoverPage.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(thesispages),
                                fileName, ext3));
                            phddetails.ThesiscoverPagepath = string.Format("{0}{1}", fileName, ext3);
                        }
                    }

                    if (phddetails.Phdod != null)
                    {
                        //PHD OD Saving (OD) with Extension
                        var ext4 = Path.GetExtension(phddetails.Phdod.FileName);
                        if (ext4 != null && ext4.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              phddetails.FirstName.Substring(0, 1) + "-" +
                                              phddetails.LastName.Substring(0, 1) + "-OD";
                            phddetails.Phdod.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(phdods), fileName, ext4));
                            phddetails.Phdodpath = string.Format("{0}{1}", fileName, ext4);
                        }
                    }

                    if (phddetails.GenuinenessLetter != null)
                    {
                        //PHD Genuineness Letter Saving (GL) with Extension
                        var ext5 = Path.GetExtension(phddetails.GenuinenessLetter.FileName);
                        if (ext5 != null && ext5.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              phddetails.FirstName.Substring(0, 1) + "-" +
                                              phddetails.LastName.Substring(0, 1) + "-GL";
                            phddetails.GenuinenessLetter.SaveAs(string.Format("{0}/{1}{2}",
                                Server.MapPath(genuinenessletters), fileName, ext5));
                            phddetails.GenuinenessLetterpath = string.Format("{0}{1}", fileName, ext5);
                        }
                    }

                    if (phddetails.CollegeAuthenticationLetter != null)
                    {
                        //PHD College Aunthentation Letter Saving (AL) with Extension
                        var ext6 = Path.GetExtension(phddetails.CollegeAuthenticationLetter.FileName);
                        if (ext6 != null && ext6.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              phddetails.FirstName.Substring(0, 1) + "-" +
                                              phddetails.LastName.Substring(0, 1) + "-CA";
                            phddetails.CollegeAuthenticationLetter.SaveAs(string.Format("{0}/{1}{2}",
                                Server.MapPath(collegeauthenticationletters), fileName, ext6));
                            phddetails.CollegeAuthenticationLetterpath = string.Format("{0}{1}", fileName, ext6);
                        }
                    }
                    //NOC from the College Saving with NOC
                    if (phddetails.NoCformthecollege != null)
                    {
                        var ext8 = Path.GetExtension(phddetails.NoCformthecollege.FileName);
                        if (ext8 != null && ext8.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              phddetails.FirstName.Substring(0, 1) + "-" +
                                              phddetails.LastName.Substring(0, 1) + "-NOC";
                            phddetails.NoCformthecollege.SaveAs(string.Format("{0}/{1}{2}",
                                Server.MapPath(nocfromthecollegeletters), fileName, ext8));
                            phddetails.NoCformthecollegepath = string.Format("{0}{1}", fileName, ext8);
                        }
                    }

                    //PHD Other Letter Saving (OL) with Extension
                    if (phddetails.OtherLetter != null)
                    {
                        var ext7 = Path.GetExtension(phddetails.OtherLetter.FileName);
                        if (ext7 != null && ext7.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              phddetails.FirstName.Substring(0, 1) + "-" +
                                              phddetails.LastName.Substring(0, 1) + "-OL";
                            phddetails.OtherLetter.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(otherletters),
                                fileName, ext7));
                            phddetails.OtherLetterpath = string.Format("{0}{1}", fileName, ext7);
                        }
                    }

                    //International Journals Letter Saving (INTNATJRNL) with Extension
                    if (phddetails.InterNationalJrnlsLetter != null)
                    {
                        var ext7 = Path.GetExtension(phddetails.InterNationalJrnlsLetter.FileName);
                        if (ext7 != null && ext7.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              phddetails.FirstName.Substring(0, 1) + "-" +
                                              phddetails.LastName.Substring(0, 1) + "-INTNATJRNL";
                            phddetails.InterNationalJrnlsLetter.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(intnationaljrnletter),
                                fileName, ext7));
                            phddetails.InterNationalJrnlspath = string.Format("{0}{1}", fileName, ext7);
                        }
                    }

                    //National Journals Letter Saving (NATJRNL) with Extension
                    if (phddetails.NationalJrnlsLetter != null)
                    {
                        var ext7 = Path.GetExtension(phddetails.NationalJrnlsLetter.FileName);
                        if (ext7 != null && ext7.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              phddetails.FirstName.Substring(0, 1) + "-" +
                                              phddetails.LastName.Substring(0, 1) + "-NATJRNL";
                            phddetails.NationalJrnlsLetter.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(nationaljrnletter),
                                fileName, ext7));
                            phddetails.NationalJrnlspath = string.Format("{0}{1}", fileName, ext7);
                        }
                    }

                    //International Conference Letter Saving (INTNATCNFRS) with Extension
                    if (phddetails.InterNationalCnfrsLetter != null)
                    {
                        var ext7 = Path.GetExtension(phddetails.InterNationalCnfrsLetter.FileName);
                        if (ext7 != null && ext7.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              phddetails.FirstName.Substring(0, 1) + "-" +
                                              phddetails.LastName.Substring(0, 1) + "-INTNATCNFRS";
                            phddetails.InterNationalCnfrsLetter.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(intnationalconfrletter),
                                fileName, ext7));
                            phddetails.InterNationalCnfrspath = string.Format("{0}{1}", fileName, ext7);
                        }
                    }

                    //National Conference Letter Saving (NATCNFRS) with Extension
                    if (phddetails.NationalCnfrsLetter != null)
                    {
                        var ext7 = Path.GetExtension(phddetails.NationalCnfrsLetter.FileName);
                        if (ext7 != null && ext7.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              phddetails.FirstName.Substring(0, 1) + "-" +
                                              phddetails.LastName.Substring(0, 1) + "-NATCNFRS";
                            phddetails.NationalCnfrsLetter.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(nationalcnfrletter),
                                fileName, ext7));
                            phddetails.NationalCnfrspath = string.Format("{0}{1}", fileName, ext7);
                        }
                    }
                    if (phddetails.Id > 0)
                    {
                        var facultyphd = db.jntuh_faculty_phddetails.Find(phddetails.Id);
                        if (facultyphd != null)
                        {
                            try
                            {
                                facultyphd.Facultyid = phddetails.FacultyId;
                                facultyphd.Phdtype = phddetails.PhdType;
                                facultyphd.Phdawardyear = phddetails.PhdawardYear;
                                facultyphd.AdmissionYear = phddetails.PhdAdmissionYear;
                                facultyphd.University = phddetails.University != null ? phddetails.University.Trim().ToUpper() : phddetails.University;
                                facultyphd.Placeofuniversity = phddetails.PlaceofUniversity != null ? phddetails.PlaceofUniversity.Trim().ToUpper() : phddetails.PlaceofUniversity;
                                facultyphd.Universitytype = phddetails.UniversityType;
                                facultyphd.Phdtitle = phddetails.PhdTitle.Trim();
                                facultyphd.Admissionletter = phddetails.AdmissionLetterpath.Trim();
                                facultyphd.Prephdletter = phddetails.PrephdLetterpath != null ? phddetails.PrephdLetterpath.Trim() : null;
                                facultyphd.Supervisorname1 = phddetails.SupervisorName1 != null ? phddetails.SupervisorName1.Trim().ToUpper() : null;
                                facultyphd.Supervisorname2 = phddetails.SupervisorName2 != null ? phddetails.SupervisorName2.Trim().ToUpper() : null;
                                facultyphd.Supervisorname3 = phddetails.SupervisorName3 != null ? phddetails.SupervisorName3.Trim().ToUpper() : null;
                                facultyphd.Thesiscoverpage = phddetails.ThesiscoverPagepath.Trim();
                                facultyphd.Admissionletter = phddetails.AdmissionLetterpath.Trim();
                                facultyphd.Thesis = null;
                                //Adding Some Fields after 01/11/2019
                                facultyphd.Website = phddetails.UniversityWebsite != null
                                    ? phddetails.UniversityWebsite.Trim().ToUpper()
                                    : phddetails.UniversityWebsite;
                                facultyphd.Address = phddetails.UniversityAddress != null
                                    ? phddetails.UniversityAddress.Trim().ToUpper()
                                    : phddetails.UniversityAddress;
                                facultyphd.Nocletter = phddetails.NoCformthecollegepath != null ? phddetails.NoCformthecollegepath.Trim() : null;
                                facultyphd.Notificationissued = phddetails.PhdnotificationIssued;
                                facultyphd.Reviewsattended = phddetails.HowmanyreviewsRRMattended;
                                facultyphd.Paperspublished = phddetails.HowmanypapersPublished;
                                facultyphd.PaperspublishedDPW = phddetails.HowmanypapersPublishedduringPhdWork;
                                facultyphd.Boschairperson = phddetails.BOSChairpersonatthetimeofThesisSubmission;
                                facultyphd.Timeofdefense = phddetails.Externalexamineratthetimeofdefense;
                                if (phddetails.PressnotificationPhDDegree != null)
                                    phddetails.PressnotificationPhDDegree = UAAAS.Models.Utilities.MMDDYY2DDMMYY(phddetails.PressnotificationPhDDegree);
                                if (phddetails.Exactdateviva != null)
                                    phddetails.Exactdateviva = UAAAS.Models.Utilities.MMDDYY2DDMMYY(phddetails.Exactdateviva);
                                facultyphd.Vivadate = Convert.ToDateTime(phddetails.Exactdateviva);
                                facultyphd.Pressnotification = Convert.ToDateTime(phddetails.PressnotificationPhDDegree);
                                facultyphd.Convocationattended = phddetails.HaveyouattendConvocation;
                                facultyphd.Department = phddetails.PhdofferingDepartment.Trim().ToUpper();
                                facultyphd.Specialization = phddetails.PhdSpecialization.Trim().ToUpper();
                                facultyphd.Hallticketnumber = phddetails.RegistrationNumberOrHallticketNo.Trim();
                                //facultyphd. = phddetails.PhdnotificationIssued;
                                facultyphd.Phdod = phddetails.Phdodpath != null ? phddetails.Phdodpath.Trim() : null; ;
                                facultyphd.Genuinenessletter = phddetails.GenuinenessLetterpath.Trim();
                                facultyphd.Collegeauthaticationletter = phddetails.CollegeAuthenticationLetterpath.Trim();
                                facultyphd.Otherletter = phddetails.OtherLetterpath != null ? phddetails.OtherLetterpath.Trim() : null;
                                facultyphd.IntNationalJrnlsDocLetter = phddetails.InterNationalJrnlspath != null ? phddetails.InterNationalJrnlspath.Trim() : null;
                                facultyphd.NationalJrnlsDocLetter = phddetails.NationalJrnlspath != null ? phddetails.NationalJrnlspath.Trim() : null;
                                facultyphd.IntNationalCnfrnsLetter = phddetails.InterNationalCnfrspath != null ? phddetails.InterNationalCnfrspath.Trim() : null;
                                facultyphd.NationalCnfrnsLetter = phddetails.NationalCnfrspath != null ? phddetails.NationalCnfrspath.Trim() : null;
                                facultyphd.IntNationalJrnls = phddetails.InterNationalJrnls;
                                facultyphd.NationalJrnls = phddetails.NationalJrnls;
                                facultyphd.IntNationalCnfrns = phddetails.InterNationalCnfrs;
                                facultyphd.NationalCnfrns = phddetails.NationalCnfrs;
                                facultyphd.Phdstatus = false;
                                facultyphd.Remarks = null;
                                facultyphd.Isactive = true;
                                facultyphd.Updatedby = userId;
                                facultyphd.Updatedon = DateTime.Now;
                                db.Entry(facultyphd).State = EntityState.Modified;
                                db.SaveChanges();
                                TempData["SUCCESS"] = "Ph.D Details Updated successfully";
                            }
                            catch (DbEntityValidationException e)
                            {
                                foreach (var eve in e.EntityValidationErrors)
                                {
                                    Console.WriteLine("Entity of type \"{0}\" in state \"{1}\" has the following validation errors:",
                                        eve.Entry.Entity.GetType().Name, eve.Entry.State);
                                    foreach (var ve in eve.ValidationErrors)
                                    {
                                        Console.WriteLine("- Property: \"{0}\", Error: \"{1}\"",
                                            ve.PropertyName, ve.ErrorMessage);
                                    }
                                }
                                throw;
                            }

                        }
                    }
                    else
                    {
                        TempData["ERROR"] = "Error while updating.";
                    }
                    //}
                    //else
                    //{
                    //    TempData["ERROR"] = "File Upload missing.";
                    //}
                }
                else
                {
                    TempData["ERROR"] = "Faculty Details not found.";
                }
            }
            return RedirectToAction("FacultyphdDetails");
        }

        //View Faculty PHD Details New Screen Written By Nag
        public ActionResult ViewFacultyphdDetails(string fid)
        {
            if (Membership.GetUser(User.Identity.Name) == null)
                return RedirectToAction("Logon", "Account");
            int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            int fID = 0;
            if (fid != null)
            {
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(fid.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]));
            }
            else
            {
                fID =
                    db.jntuh_registered_faculty.Where(r => r.UserId == userId).Select(s => s.id).FirstOrDefault();
            }
            if (fID == 113698)
            {
                fID = Convert.ToInt32(ConfigurationManager.AppSettings["testRegnumberfid"]);
            }
            ViewBag.fid = fid;
            var todayDate = DateTime.Now;

            //For edit condition start
            int actualYear = db.jntuh_academic_year.Where(a => a.isActive == true && a.isPresentAcademicYear == true).Select(a => a.actualYear).FirstOrDefault();
            int prAy =
                db.jntuh_academic_year.Where(a => a.actualYear == (actualYear + 1)).Select(s => s.id).FirstOrDefault();
            var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
            if (FacultyEditLinkId != 0)
            {
                var facultyedit = db.jntuh_college_links_assigned.Where(l => l.linkId == FacultyEditLinkId && l.academicyearId == prAy && l.isActive == true && l.fromdate <= todayDate && l.todate >= todayDate).Select(s => s).FirstOrDefault();
                if (facultyedit != null)
                {
                    ViewBag.ShowEditButton = true;
                }
                else
                    ViewBag.ShowEditButton = null;
            }
            //end
            var registredfaculty = db.jntuh_registered_faculty.Where(r => r.id == fID).Select(s => s).FirstOrDefault();
            if (registredfaculty == null)
            {
                TempData["ERROR"] = "Faculty Details not found.";
            }
            FacultyphdDetails phddetails = new FacultyphdDetails();
            List<SelectListItem> phdtypeslist = new List<SelectListItem>();
            phdtypeslist.Add(new SelectListItem { Text = "Full Time/ Regular", Value = "1" });
            phdtypeslist.Add(new SelectListItem { Text = "Part Time/ External", Value = "2" });
            ViewBag.phdtype = phdtypeslist;

            List<SelectListItem> phdnotificationissuedlist = new List<SelectListItem>();
            phdnotificationissuedlist.Add(new SelectListItem { Text = "Online", Value = "1" });
            phdnotificationissuedlist.Add(new SelectListItem { Text = "Offline", Value = "2" });
            ViewBag.phdnotificationissuedlist = phdnotificationissuedlist;

            List<SelectListItem> phdofferingDepartmentsList = new List<SelectListItem>();
            var departments = db.jntuh_department.Where(r => r.degreeId == 4).Select(s => s).ToList();
            foreach (var item in departments)
            {
                phdofferingDepartmentsList.Add(new SelectListItem { Text = item.departmentDescription.ToString(), Value = item.id.ToString() });
            }
            //phdofferingDepartmentsList.Add(new SelectListItem {Text = "Others",Value = "0"});
            phdofferingDepartmentsList = phdofferingDepartmentsList.OrderByDescending(c => c.Value).ToList();
            ViewBag.phdofferingDepartmentsList = phdofferingDepartmentsList;
            phddetails.PhdDepts = phdofferingDepartmentsList.Select(s => s.Text).ToList();
            List<SelectListItem> phdofferingSpecList = new List<SelectListItem>();
            var specialization = db.jntuh_specialization.Select(s => s).ToList();
            foreach (var item in specialization)
            {
                phdofferingSpecList.Add(new SelectListItem { Text = item.specializationDescription.ToString(), Value = item.id.ToString() });
            }
            //phdofferingSpecList.Add(new SelectListItem { Text = "Others", Value = "0" });
            phdofferingSpecList = phdofferingSpecList.OrderByDescending(c => c.Value).ToList();
            ViewBag.phdofferingSpecList = phdofferingSpecList;
            phddetails.PhdSpecs = phdofferingSpecList.Select(s => s.Text).ToList();
            List<SelectListItem> years = new List<SelectListItem>();
            for (int i = 1970; i <= DateTime.Now.Year; i++)
            {
                years.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.years = years;
            phddetails.Universitys = new List<string>() { "JawaharLal Nehru Technologial University Hyderabad", "JawaharLal Nehru Technologial University Kakinada", "JawaharLal Nehru Technologial University Anathapur", "Rajiv Gandhi University", "Assam University", "Tezpur University", "University of Hyderabad, Hyderabad", "Maulana Azad National Urdu University", "English   and   Foreign   Languages   University", "Jamia Millia Islamia", "University of Delhi", "JawaharLal Nehru University", "Indira Gandhi National Open University", "South Asian University", "The  Indira  Gandhi  National  Tribal  University", "Dr. Harisingh Gour Vishwavidyalaya", "Mahatma  Gandhi  Antarrashtriya  Hindi  Vishwavidyalaya", "Mizoram University", "North Eastern Hill University", "Manipur University", "Central Agricultural University", "Nagaland University", "Pondicherry  University", "Sikkim University", "Tripura University", "Aligarh Muslim University", "Babasaheb  Bhimrao  Ambedkar  University", "Banaras Hindu University", "University of Allahabad", "Rajiv  Gandhi  National  Aviation  University", "Rani  Lakshmi  Bai  Central  Agricultural  University", "Visva Bharati, Shantiniketan", "Hemwati Nandan Bahuguna Garhwal University", "Central University of Tamil Nadu", "Indian Maritime University", "Central  University  of  Rajasthan", "Central University of Punjab", "Central University of Orissa", "Central University of Kerala", "Central University of Karnataka", "Central University of Jharkhand", "Central University of Kashmir, Transit Campus", "Central University of Jammu, Bagla (Rahya-Suchani)", "Central University of Himachal Pradesh", "Central University of Haryana", "Guru  Ghasidas  Vishwavidyalaya", "Central University of Bihar", "Nalanda University", "Mahatma  Gandhi  Central  University", "Central University of Gujarat", "Academy of Maritime Education and Training", "Amrita Vishwa Vidyapeetham", "Avinashilingam Institute for Home Science & Higher Education for Women", "B.L.D.E.", "B.S. Abdur Rahman Institute of Science and Technology", "Banasthai Vidyapith", "Bharath Institute of Higher Education & Research", "Bharati Vidyapeeth", "Bhatkhande Music Institute", "Birla Institute of Technology", "Birla Institute of Technology & Science", "Central Institute of Buddhist Studies(CIBS)", "Central Institute of Fisheries Education", "Central Institute of Higher Tibetan Studies", "Chennai Mathematical Institute", "Chettinad Academy of Research and Education (CARE)", "Chinmaya Vishwavidyapeeth", "Christ", "D.Y Patil Educational Society", "Datta Meghe Institute of Medical Sciences", "Dayalbagh Educational Institute", "Deccan College Postgraduate & Research Institute", "Dr. D.Y. Patil Vidyapeeth", "Dr. M.G.R. Educational and Research Institute", "Forest Research Institute", "Gandhi Institute of Technology and Management (GITAM)", "Gandhiigram Rural Institute", "Gokhale Institute of Politics & Economics", "Graphic Era", "Gujarat Vidyapith", "Gurukul Kangri vidyapeeth", "Hindustan Institute of Technology and Science (HITS)", "Homi Bhabha National Institute, Regd. Office", "ICFAI Foundation for Higher Education", "IIS", "Indain Institute of Foreigen Trade", "Indian Agricultural Research Institute", "Indian Association for the Cultivation of Science (IACS)", "Indian Institute of Information Technology and Management", "Indian Institute of Science", "Indian Institute of Space Science and Technology", "Indian Law Institute", "Indian School of Mines", "Indian Veterinary Research Institute", "Indira Gandhi Institute of Development Research", "Institute of Advanced Studies in Education", "Institute of Chemical Technology", "Institute of liver and Biliary Sciences", "Instituteof Armamrnt Technology", "International Institute for Population Sciences", "International Institute of Information Technology", "Jain", "Jain Vishva Bharati Institute", "Jamia Hamdard", "Janardan Rai Nagar Rajasthan Vidyapeeth", "Jawahar lal Nehru Centre for Advanced Scientific Research", "Jaypee Institute of Information Technology", "JSS Academy of Higher Education & Research", "K.L.E. Academy of Higher Education and Research", "Kalasalingam Academy of Research and Education", "Kalinga Institute of Industrial Technology", "Karpagam Academy of Higher Education", "Karunya Institute of Technology and Sciences", "Kerala Kalamandalam", "Koneru Lakshmaiah Education Foundation", "Krishna Institute of Medical Sciences", "Lakshmibai National Institute of Physical Education", "Lingaya's Vidyapeeth", "LNM Istitute of Information Technology", "Maharishi Markandeshwar (Deemed to be University)", "Manav Rachna International Institute of Research and Studies", "Manipal Academy of Higher Education", "Meenakshi Academy of Higher Education and Research", "MGM Institute of Health Sciences", "Narsee Monjee Institute of Management Studies", "National Brain Research Centre", "National Dairy Research Institute", "National Institute of Food Technology, Entrepreneurship & Management (NIFTEM)", "National Institute of Mental Health & Neuro Sciences", "National Museum Institute of History of Arts, Conservation and Musicology", "National Rail and Transportation Institute", "National University of Educational Planning & Administration", "Nava Nalanda Mahavihara", "Nehru Gram Bharati", "NITTE", "Noorul Islam Centre for Higher Education", "North Eastern Regional Institute of Science & Technology", "Padmashree Dr.D.Y. Patil Vidyapeeeth", "Pandit Dwarka Prasad Mishra Indian Institute of Information Technology", "Periyar Manaimmai Institute of Science & Technology (PMIST)", "Ponnaiyan Ramajayam Institute of Science & technology (PMIST)", "Pravara Institute of Medical Sciences", "Punjab Engineering College", "Rajiv Gandhi National Institute of Youth Development", "Ramakrishna Mission Vivekananda Educational and Research Institute", "Rashtriya Sanskrit Sansthana", "Rashtriya Sanskrit Vidyapeeth", "S.R.M Institute of Science and Technology", "Sam Higginbottom Institute of Agriculture, Technology & Sciences", "Sant Longowal Institute of Engineering and Technology", "Santosh", "Sathyabama Institute of Science and Technology", "Saveetha Institute of Medical and Technical Sciences", "Shanmugha Arts Science Technology & Research Academy (SASTRA)", "Shobhit Institute of Engineering & Technology", "Shri Lal Bahadur Shastri Rashtriya Sanskrit Vidyapith", "Siksha 'O' Anusandhan", "Sri Balaji Vidyapeeth (Deemed to be University)", "Sri Chandrasekharendra Saraswathi Vishwa Mahavidyalaya", "Sri Devraj Urs Academy of Higher Education and Research", "Sri Ramachandra Medical College and Research Institute", "Sri Sathya Sai Institute of Higher Learning", "Sri Siddhartha Academy of Higher Education", "St. Peterâ€™s Institute of Higher Education and Research", "Sumandeep Vidyapeeth", "Swami Vivekananda Yoga Anusandhana Samsthana", "Symbiosis International", "Tata Institute of Fundamental Research", "Tata Institute of Social Sciences", "TERI School of Advanced studies", "Thapar Institute of Engineering & Technology", "Tilak Maharashtra Vidyapeeth", "Vel Tech Rangarajan Dr. Sagunthala R & D Institute of Science and Technology", "Vellore Institute of Technology", "VELS Institute of Science Technology & Advanced Studies (VISTAS)", "Vignan's Foundation for Science, Technology and Research", "Vinayaka Missionâ€™s Research Foundation", "Yenepoya", "A.P.J. Abdul Kalam Technological University", "Acharaya N.G.Ranga Agricultural University", "Acharaya Nagarjuna University", "Adikavi Nannaya University", "Akkamahadevi women's University (Formerly known as Karnataka State Women's University)", "Alagappa University", "Aliah University", "Allahabad State University", "Ambedkar University Delhi (AUD)", "Anand Agricultural University", "Andhra University", "Anna University", "Annamalai University", "Arybhatta Knowledge University", "Assam Agricultural University", "Assam Rajiv Gandhi University of Co-operative Management", "Assam Science & Technology University", "Assam Womens University", "Atal Bihari Vajpayee Hindi Vishwavidyalaya", "Awadesh Pratap Singh University", "Ayush and Health Sciences University of Chhattisgarh", "Baba Farid University of Health Sciences", "Baba Ghulam Shah Badshah University", "Babasaheb Bhimrao Ambedkar Bihar University", "Banda University of Agriculture & Technology", "Bangalore University", "Bankura University", "Barkatullaah University", "Bastar Vishwavidyalaya", "Bengaluru Central University", "Bengaluru North University", "Berhampur University", "Bhagat Phool Singh Mahila Vishwavidyalaya", "Bhakta Kavi Narsinh Mehta University", "Bharathiar University", "Bharathidasan University", "Bhupender Narayan Mandal University", "Bidhan Chandra Krishi Vishwavidyalaya", "Bihar Agricultural University", "Biju Patnaik University of Technology", "Bilaspur Vishwavidyalaya", "Binod Bihari Mahto Koylanchal University", "Birsa Agricultural University", "Bodoland University", "Bundelkhand University", "Burdwan University", "Calcutta University", "Calicut University", "CEPT University", "Ch. Bansi Lal University", "Chanakya National Law University", "Chandr Shekhar Azad University of Agriculture & Technology", "Chatrapati Sahuji Maharaj Kanpur University", "Chaudhary Devi Lal University", "Chaudhary Ranbir Singh University", "Chaudhary Sarwan Kumar Himachal Pradesh Krishi Vishvavidyalaya", "Chhattisgarh Kamdhenu Vishwavidyalaya", "Chhattisgarh Swami Vivekanad Technical Universty", "Childrens University", "Choudary Charan Singh Haryana Agricultural Univeersity", "Choudary Charan Singh University", "Cluster University of Jammu", "Cluster University of Srinagar", "Cochin Unviersity of Science & Technology", "Cooch Behar Panchanan Barma University", "Cotton University", "Damodaram Sanjivayya National Law University", "Davangere University", "Deen Bandhu Chhotu Ram University of Sciences & Technology", "Deen Dayal Upadhyay Gorakhpur University", "Delhi Pharmaceutical Sciences & Research University", "Delhi Technological University", "Devi Ahilya Vishwavidyalaya", "Dharmashastra National Law University", "Dharmsinh Desai University", "Diamond Harbour Womens University", "Dibrugarh University", "Doon University", "Dr Shyama Prasad Mukherjee University", "Dr. A.P.J. Abdul Kalam Technical University", "Dr. B. R. Ambedkar University of Social Sciences", "Dr. B.R. Ambedkar University", "Dr. B.R.Ambedkar Open University", "Dr. B.R.Ambedkar University", "Dr. Babasaheb Ambedkar Marathwada University", "Dr. Babasaheb Ambedkar Open University", "Dr. Babasaheb AmbedkarTechnological University", "Dr. Bhimrao Ambedkar Law University", "Dr. N.T.R. University of Health Sciences", "Dr. Punjabrao Deshmukh Krishi Vidyapeeth", "Dr. Ram Manohar Lohia Awadh University", "Dr. Ram Manohar Lohiya National Law University", "Dr. Shakuntala Misra National Rehabilitation University", "Dr. Shyama Prasad University", "Dr. Y.S.Parmar University of Horticulture & Forestry", "Dr. Y.S.R. Horticultural Univerity", "Dravidian University", "Durg Vishwavidyalaya", "Fakir Mohan University", "G.B.Pant University of Agriculture & Technology", "Gangadhar Meher University", "Gauhati University", "Gautam Buddha University", "Goa University", "Gondwana University", "Govind Guru Tribal University", "Gujarat Agricultural University", "Gujarat Ayurveda University", "Gujarat Forensic Sciences University", "Gujarat National Law University", "Gujarat Technological University", "Gujarat University", "Gujarat University of Transplantation Sciences", "Gulbarga University", "Guru Angad Dev Veterinary & Animal Sciences University", "Guru Gobind Singh Indraprastha Vishwavidyalaya", "Guru Jambeshwar University of Science and Technology", "Guru Nanak Dev University", "Guru Ravidas Ayurved University", "Harcourt Butler Technical University", "Haridev Joshi University of Journalism and Mass Communication", "Haryana Vishwakarma Skill University", "Hemchandracharya North Gujarat University", "Hemwati Nandan Bahuguna Medical Education University", "Hidayatullah National Law University", "Himachal Pradesh National Law University", "Himachal Pradesh Technical University", "Himachal Pradesh University", "Indian Institute of Teacher Education", "Indira Gandhi Delhi Technical University for Women", "Indira Gandhi Krishi Vishwavidyalaya", "Indira Gandhi University", "Indira Kala Sangeet Vishwavidyalaya", "Indraprastha Institute of Information Technology", "Institute of Infrastructure Technology Research and Management", "International Institute of Information Technology (IIIT)", "Islamic University of Sciences & Technology University", "Jadavpur University", "Jagadguru Ramanandacharya Sanskrit University", "Jai Naraim Vyas University", "Jai Prakash vishwavidyalaya(university)", "Jammu University", "Jananayak Chandrashekhar University", "Jawaharlal Nehru Architecture and Fine Arts University", "Jawaharlal Nehru Krishi Vishwavidyalaya", "Jawaharlal Nehru Technological University", "Jharkhand Raksha Shakti University", "Jiwaji University", "Junagarh Agricultural University", "Kakatiya University", "Kaloji Narayan Rao University of Health Sciences", "Kalyani University", "Kamdhenu University", "Kameshwar Singh.Darbhanga Sanskrit Vishwavidyalaya", "Kannada University", "Kannur University", "Karanataka State Law University", "Karanataka State Open University", "Karanataka University", "Karanataka Veterinary, Animal & Fisheries Science University", "Karnataka Folklore University", "Karnataka Sanskrit University", "Karnataka State Rural Development and Panchayat Raj University", "Kashmir University", "Kavi Kulguru Kalidas Sanskrit Vishwavidyalaya", "Kazi Nazrul University", "Kerala Agricultural Unviersity", "Kerala University", "Kerala University of Fisheries & Ocean Studies", "Kerala University of Health Sciences", "Kerala Veterinary & Animal Sciences University", "Khallikote University", "Khwaja Moinuddin Chishti Urdu, Arabi-Farsi University", "King Georges Medical University", "Kolhan University", "Konkan Krishi Vidyapeeth", "Krantiguru Shyamji Krishna Verma Kachchh University", "Krishna Kanta Handique State Open University", "Krishna University", "Krishnakumarsinhji Bhavnagar University", "KSGH Music and Performing Arts University", "Kumar Bhaskar Varma Sanskrit & Ancient Studies University", "Kumaun University", "Kurukshetra University", "Kushabhau Thakre Patrakarita Avam Jansanchar Vishwavidyalaya", "Kuvempu University", "Lala Lajpat Rai University of Veterinary & Animal Sciences", "Lalit Narayan Mithila University", "Lucknow University", "M.J.P. Rohilkhand University", "M.P.Bhoj (open) University", "Madan Mohan Malaviya University of Technology", "Madaras University", "Madhya Pradesh Pashu Chikitsa Vigyan Vishwavidyalaya", "Madurai Kamraj University", "Magadh University", "Mahamaya Technical University", "Maharahtra University of Health Sciences", "Maharaja Bir Bikram University", "Maharaja Chhatrasal Bundelkhand Vishwavidyalaya", "Maharaja Ganga Singh University", "Maharaja Ranjit Singh Punjab Technical University", "Maharaja Sayajirao University of Baroda", "Maharaja Surajmal Brij University", "Maharana Partap Horticultural University", "Maharana Pratap University of Agriculture & Technology", "Maharashtra Animal & Fishery Sciences University", "Maharashtra National Law University", "Maharashtra National Law University,", "Maharishi Dayanand Saraswati University", "Maharishi Dayanand University", "Maharshi Panini Sanskrit Evam Vedic Vishwavidyalaya", "Mahatam Gandhi Kashi Vidyapeeth", "Mahatma Gandhi Chitrakoot Gramodaya Vishwavidyalaya", "Mahatma Gandhi University", "Mahatma Gandhi Unversity", "Mahatma Phule Krishi Vidyapeeth", "Makhanlal Chaturvedi National University of Journalism & Communication", "Mangalore University", "Manipur Technical University", "Manipur University of Culture", "Manonmaniam Sundarnar University", "Marathwada Agricultural University", "Maulana Abul Kalam Azad University of Technology", "Maulana Mazharul Haque Arabic & Persian University", "Mohan Lal Shukhadia University", "Mother Teresa Womens University", "Mumbai University", "Munger University", "Mysore University", "Nalanda Open University", "Narendra Deo University of Agriculture & Technology", "National Academy of Legal Studies & Research University", "National Law Institute University", "National law School of India University", "National Law Universituy", "National Law University", "National Law University and Judicial Academy", "National University of Advanced Legal Studies (NUALS)", "National University of Study & Research in Law", "Navsari Agriculture University", "Netaji Shubhash Open University", "Nilamber-Pitamber University", "Nizams Institute of Medical Sciences", "North Benagal University", "North Maharashtra University", "North Orissa University", "Odisha State Open University", "Orissa University Of Agriculture & Technology", "Osmania University", "Palamuru University", "Pandit S N Shukla University", "Patliputra University", "Patna University", "Periyar University", "Potti Sreeramulu Teugu Universtity", "Presidency University", "Professor Jayashankar Telangana State Agricultural University", "Pt. Bhagwat Dayal Sharma University of Health Sciences", "Pt. Sundarlal Sharma (Open) University", "Pt.Ravishankar Shukla University", "Punjab Agriculture University", "Punjab Technical University", "Punjab University", "Punjabi University", "Purnea University", "Rabindra Bharati University", "Raiganj University", "Raj Rishi Bhartrihari Matsya University", "Raja Mansingh Tomar Music & Arts University", "Rajasthan Ayurveda University", "Rajasthan ILD Skills University (RISU)", "Rajasthan Technical University", "Rajasthan University", "Rajasthan University of Health Sciences", "Rajasthan University of Veterinary & Animal Sciences", "Rajendra Agricultural University", "Rajiv Gandhi Prodoyogiki Vishwavidyalaya", "Rajiv Gandhi University of Health Science", "Rajiv Gandhi University of Knowledge Technology", "Rajmata Vijayaraje Scindia Krishi Vishwa Vidyalaya", "Raksha Shakti University", "Rama Devi Womens University", "Ranchi University", "Rani Channamma University", "Rani Durgavati Vishwavidyalaya", "Ravenshaw University", "Rayalaseema University", "Sambalpur University", "Sampurnanand Sanskrit Vishwavidyalaya", "Sanchi University of Buddhist-Indic Studies", "Sant Gadge Baba Amravati University", "Sardar Krushinagar Dantiwada Agricultural University", "Sardar Patel University", "Sardar Patel University of Police, Security & Criminal Justice", "Sardar Vallabh Bhai Patel University of Agriculture & Technology", "Sarguja University", "Satavahana University", "Saurashtra University", "Savitribai Phule Pune University", "Shekhawati University", "Sher-e-Kashmir University of Agricultural Science & Technology", "Shivaji University", "shree guru gobind singh tricentenary university", "Shree Sankaracharaya University of Sanskrit", "Shree Somnath Sanskrit University", "Shri Govind Guru University", "Shri Jagannath Sanskrit Vishwavidyalaya", "Shri Mata Vaishno Devi University", "Siddharth University", "Sidho-Kanho-Birsha University", "Sido Kanhu University", "Smt. Nathibai Damodar Thackersey Womens University", "Solapur University", "Sri Dev Suman Uttarakhand Vishwavidyalaya", "Sri Konda Laxman Telangana State Horticultural University", "Sri krishnadevaraya University", "Sri P V Narsimha Rao Telangana Veterinary University", "Sri Padmavati Mahila Vishwavidyalayam", "Sri Venkateswara Institute of Medical Sciences", "Sri Venkateswara University", "Sri Venkateswara Vedic University", "Sri Venkateswara Veterinary University", "Srimanta Sankaradeva University of Health Sciences", "State University of Performing and Visual Arts", "Swami Keshwanand Rajasthan Agriculture University", "Swami Ramanand Teerth Marathwada University", "Swarnim Gujarat Sports University", "T.M. Bhagalpur University", "Tamil Nadu Fisheries University", "Tamil Nadu Music and Fine Arts University", "Tamil Nadu Open University", "Tamil Nadu Teacher Education University", "Tamil University", "Tamilnadu Agricultural University", "Tamilnadu Dr. Ambedkar Law University", "Tamilnadu Dr. M.G.R.Medical University", "Tamilnadu National Law School", "Tamilnadu Physical Educaton and Sports University", "Tamilnadu Veterinary & Animal Sciences University", "Telangana University", "The Bengal Engineering & Science University", "The Rajiv Gandhi National University of Law", "The Rashtrasant Tukadoji Maharaj Nagpur University", "The Sanskrit College and University", "The West Bengal National University of Juridical Science", "The West Bengal University of Health Sciences", "Thiruvalluvar University", "Thunchath Ezhuthachan Malayalam University", "Tumkur University", "U.P. Pandit Deen Dayal Upadhyaya Pashu Chikitsa Vigyan Vishwavidhyalaya Evam Go-Anusandhan Sansthan", "U.P. Rajarshi Tandon Open University", "U.P.King Georges University of Dental Sciences", "University of Agricultural Sciences", "University of Horticultural Sciences", "University of Kota", "Univesity of Gour Banga", "Utkal University", "Utkal University of Culture", "Uttar Banga Krishi Vishwavidyalaya", "Uttar Pradesh University of Medical Sciences", "Uttarakhand Aawasiya Viswavidyalaya", "Uttarakhand Ayurved University", "Uttarakhand Open University", "Uttarakhand Sanskrit University", "Uttarakhand Technical University", "Vardhman Mahaveer Open University", "Veer Bahadur Singh Purvanchal University", "Veer Chandra Singh Garhwali Uttarakhand University of Horticulture & Forestry", "Veer Kunwar Singh University", "Veer Narmad South Gujarat University", "Veer Surendra Sai Institute of Medical Science and Research", "Veer Surendra Sai University of Technology", "Vesveswaraiah Technological University", "Vidya Sagar University", "Vijayanagara Sri Krishnadevaraya University", "Vikram Simhapuri University", "Vikram University", "Vinoba Bhave University", "West Bengal State University", "West Bengal University of Animal and Fishery Sciences", "West Bengal University of Teachers, Training, Education Planning and Administration", "Yashwant Rao Chavan Maharashtra Open University", "YMCA University of Science & Technology", "Yogi Vemana University" };
            // phddetails.Universitys = new List<string>() { "Rajiv Gandhi University", "Assam University", "Tezpur University", "University of Hyderabad, Hyderabad", "Maulana Azad National Urdu University", "English   and   Foreign   Languages   University", "Jamia Millia Islamia", "University of Delhi", "JawaharLal Nehru University", "Indira Gandhi National Open University", "South Asian University", "The  Indira  Gandhi  National  Tribal  University", "Dr. Harisingh Gour Vishwavidyalaya", "Mahatma  Gandhi  Antarrashtriya  Hindi  Vishwavidyalaya", "Mizoram University", "North Eastern Hill University", "Manipur University", "Central Agricultural University", "Nagaland University", "Pondicherry  University", "Sikkim University", "Tripura University", "Aligarh Muslim University", "Babasaheb  Bhimrao  Ambedkar  University", "Banaras Hindu University", "University of Allahabad", "Rajiv  Gandhi  National  Aviation  University", "Rani  Lakshmi  Bai  Central  Agricultural  University", "Visva Bharati, Shantiniketan", "Hemwati Nandan Bahuguna Garhwal University", "Central University of Tamil Nadu", "Indian Maritime University", "Central  University  of  Rajasthan", "Central University of Punjab", "Central University of Orissa", "Central University of Kerala", "Central University of Karnataka", "Central University of Jharkhand", "Central University of Kashmir, Transit Campus", "Central University of Jammu, Bagla (Rahya-Suchani)", "Central University of Himachal Pradesh", "Central University of Haryana", "Guru  Ghasidas  Vishwavidyalaya", "Central University of Bihar", "Nalanda University", "Mahatma  Gandhi  Central  University", "Central University of Gujarat", "Academy of Maritime Education and Training", "Amrita Vishwa Vidyapeetham", "Avinashilingam Institute for Home Science & Higher Education for Women", "B.L.D.E.", "B.S. Abdur Rahman Institute of Science and Technology", "Banasthai Vidyapith", "Bharath Institute of Higher Education & Research", "Bharati Vidyapeeth", "Bhatkhande Music Institute", "Birla Institute of Technology", "Birla Institute of Technology & Science", "Central Institute of Buddhist Studies(CIBS)", "Central Institute of Fisheries Education", "Central Institute of Higher Tibetan Studies", "Chennai Mathematical Institute", "Chettinad Academy of Research and Education (CARE)", "Chinmaya Vishwavidyapeeth", "Christ", "D.Y Patil Educational Society", "Datta Meghe Institute of Medical Sciences", "Dayalbagh Educational Institute", "Deccan College Postgraduate & Research Institute", "Dr. D.Y. Patil Vidyapeeth", "Dr. M.G.R. Educational and Research Institute", "Forest Research Institute", "Gandhi Institute of Technology and Management (GITAM)", "Gandhiigram Rural Institute", "Gokhale Institute of Politics & Economics", "Graphic Era", "Gujarat Vidyapith", "Gurukul Kangri vidyapeeth", "Hindustan Institute of Technology and Science (HITS)", "Homi Bhabha National Institute, Regd. Office", "ICFAI Foundation for Higher Education", "IIS", "Indain Institute of Foreigen Trade", "Indian Agricultural Research Institute", "Indian Association for the Cultivation of Science (IACS)", "Indian Institute of Information Technology and Management", "Indian Institute of Science", "Indian Institute of Space Science and Technology", "Indian Law Institute", "Indian School of Mines", "Indian Veterinary Research Institute", "Indira Gandhi Institute of Development Research", "Institute of Advanced Studies in Education", "Institute of Chemical Technology", "Institute of liver and Biliary Sciences", "Instituteof Armamrnt Technology", "International Institute for Population Sciences", "International Institute of Information Technology", "Jain", "Jain Vishva Bharati Institute", "Jamia Hamdard", "Janardan Rai Nagar Rajasthan Vidyapeeth", "Jawahar lal Nehru Centre for Advanced Scientific Research", "Jaypee Institute of Information Technology", "JSS Academy of Higher Education & Research", "K.L.E. Academy of Higher Education and Research", "Kalasalingam Academy of Research and Education", "Kalinga Institute of Industrial Technology", "Karpagam Academy of Higher Education", "Karunya Institute of Technology and Sciences", "Kerala Kalamandalam", "Koneru Lakshmaiah Education Foundation", "Krishna Institute of Medical Sciences", "Lakshmibai National Institute of Physical Education", "Lingaya's Vidyapeeth", "LNM Istitute of Information Technology", "Maharishi Markandeshwar (Deemed to be University)", "Manav Rachna International Institute of Research and Studies", "Manipal Academy of Higher Education", "Meenakshi Academy of Higher Education and Research", "MGM Institute of Health Sciences", "Narsee Monjee Institute of Management Studies", "National Brain Research Centre", "National Dairy Research Institute", "National Institute of Food Technology, Entrepreneurship & Management (NIFTEM)", "National Institute of Mental Health & Neuro Sciences", "National Museum Institute of History of Arts, Conservation and Musicology", "National Rail and Transportation Institute", "National University of Educational Planning & Administration", "Nava Nalanda Mahavihara", "Nehru Gram Bharati", "NITTE", "Noorul Islam Centre for Higher Education", "North Eastern Regional Institute of Science & Technology", "Padmashree Dr.D.Y. Patil Vidyapeeeth", "Pandit Dwarka Prasad Mishra Indian Institute of Information Technology", "Periyar Manaimmai Institute of Science & Technology (PMIST)", "Ponnaiyan Ramajayam Institute of Science & technology (PMIST)", "Pravara Institute of Medical Sciences", "Punjab Engineering College", "Rajiv Gandhi National Institute of Youth Development", "Ramakrishna Mission Vivekananda Educational and Research Institute", "Rashtriya Sanskrit Sansthana", "Rashtriya Sanskrit Vidyapeeth", "S.R.M Institute of Science and Technology", "Sam Higginbottom Institute of Agriculture, Technology & Sciences", "Sant Longowal Institute of Engineering and Technology", "Santosh", "Sathyabama Institute of Science and Technology", "Saveetha Institute of Medical and Technical Sciences", "Shanmugha Arts Science Technology & Research Academy (SASTRA)", "Shobhit Institute of Engineering & Technology", "Shri Lal Bahadur Shastri Rashtriya Sanskrit Vidyapith", "Siksha 'O' Anusandhan", "Sri Balaji Vidyapeeth (Deemed to be University)", "Sri Chandrasekharendra Saraswathi Vishwa Mahavidyalaya", "Sri Devraj Urs Academy of Higher Education and Research", "Sri Ramachandra Medical College and Research Institute", "Sri Sathya Sai Institute of Higher Learning", "Sri Siddhartha Academy of Higher Education", "St. Peterâ€™s Institute of Higher Education and Research", "Sumandeep Vidyapeeth", "Swami Vivekananda Yoga Anusandhana Samsthana", "Symbiosis International", "Tata Institute of Fundamental Research", "Tata Institute of Social Sciences", "TERI School of Advanced studies", "Thapar Institute of Engineering & Technology", "Tilak Maharashtra Vidyapeeth", "Vel Tech Rangarajan Dr. Sagunthala R & D Institute of Science and Technology", "Vellore Institute of Technology", "VELS Institute of Science Technology & Advanced Studies (VISTAS)", "Vignan's Foundation for Science, Technology and Research", "Vinayaka Missionâ€™s Research Foundation", "Yenepoya", "A.P.J. Abdul Kalam Technological University", "Acharaya N.G.Ranga Agricultural University", "Acharaya Nagarjuna University", "Adikavi Nannaya University", "Akkamahadevi women's University (Formerly known as Karnataka State Women's University)", "Alagappa University", "Aliah University", "Allahabad State University", "Ambedkar University Delhi (AUD)", "Anand Agricultural University", "Andhra University", "Anna University", "Annamalai University", "Arybhatta Knowledge University", "Assam Agricultural University", "Assam Rajiv Gandhi University of Co-operative Management", "Assam Science & Technology University", "Assam Womens University", "Atal Bihari Vajpayee Hindi Vishwavidyalaya", "Awadesh Pratap Singh University", "Ayush and Health Sciences University of Chhattisgarh", "Baba Farid University of Health Sciences", "Baba Ghulam Shah Badshah University", "Babasaheb Bhimrao Ambedkar Bihar University", "Banda University of Agriculture & Technology", "Bangalore University", "Bankura University", "Barkatullaah University", "Bastar Vishwavidyalaya", "Bengaluru Central University", "Bengaluru North University", "Berhampur University", "Bhagat Phool Singh Mahila Vishwavidyalaya", "Bhakta Kavi Narsinh Mehta University", "Bharathiar University", "Bharathidasan University", "Bhupender Narayan Mandal University", "Bidhan Chandra Krishi Vishwavidyalaya", "Bihar Agricultural University", "Biju Patnaik University of Technology", "Bilaspur Vishwavidyalaya", "Binod Bihari Mahto Koylanchal University", "Birsa Agricultural University", "Bodoland University", "Bundelkhand University", "Burdwan University", "Calcutta University", "Calicut University", "CEPT University", "Ch. Bansi Lal University", "Chanakya National Law University", "Chandr Shekhar Azad University of Agriculture & Technology", "Chatrapati Sahuji Maharaj Kanpur University", "Chaudhary Devi Lal University", "Chaudhary Ranbir Singh University", "Chaudhary Sarwan Kumar Himachal Pradesh Krishi Vishvavidyalaya", "Chhattisgarh Kamdhenu Vishwavidyalaya", "Chhattisgarh Swami Vivekanad Technical Universty", "Childrens University", "Choudary Charan Singh Haryana Agricultural Univeersity", "Choudary Charan Singh University", "Cluster University of Jammu", "Cluster University of Srinagar", "Cochin Unviersity of Science & Technology", "Cooch Behar Panchanan Barma University", "Cotton University", "Damodaram Sanjivayya National Law University", "Davangere University", "Deen Bandhu Chhotu Ram University of Sciences & Technology", "Deen Dayal Upadhyay Gorakhpur University", "Delhi Pharmaceutical Sciences & Research University", "Delhi Technological University", "Devi Ahilya Vishwavidyalaya", "Dharmashastra National Law University", "Dharmsinh Desai University", "Diamond Harbour Womens University", "Dibrugarh University", "Doon University", "Dr Shyama Prasad Mukherjee University", "Dr. A.P.J. Abdul Kalam Technical University", "Dr. B. R. Ambedkar University of Social Sciences", "Dr. B.R. Ambedkar University", "Dr. B.R.Ambedkar Open University", "Dr. B.R.Ambedkar University", "Dr. Babasaheb Ambedkar Marathwada University", "Dr. Babasaheb Ambedkar Open University", "Dr. Babasaheb AmbedkarTechnological University", "Dr. Bhimrao Ambedkar Law University", "Dr. N.T.R. University of Health Sciences", "Dr. Punjabrao Deshmukh Krishi Vidyapeeth", "Dr. Ram Manohar Lohia Awadh University", "Dr. Ram Manohar Lohiya National Law University", "Dr. Shakuntala Misra National Rehabilitation University", "Dr. Shyama Prasad University", "Dr. Y.S.Parmar University of Horticulture & Forestry", "Dr. Y.S.R. Horticultural Univerity", "Dravidian University", "Durg Vishwavidyalaya", "Fakir Mohan University", "G.B.Pant University of Agriculture & Technology", "Gangadhar Meher University", "Gauhati University", "Gautam Buddha University", "Goa University", "Gondwana University", "Govind Guru Tribal University", "Gujarat Agricultural University", "Gujarat Ayurveda University", "Gujarat Forensic Sciences University", "Gujarat National Law University", "Gujarat Technological University", "Gujarat University", "Gujarat University of Transplantation Sciences", "Gulbarga University", "Guru Angad Dev Veterinary & Animal Sciences University", "Guru Gobind Singh Indraprastha Vishwavidyalaya", "Guru Jambeshwar University of Science and Technology", "Guru Nanak Dev University", "Guru Ravidas Ayurved University", "Harcourt Butler Technical University", "Haridev Joshi University of Journalism and Mass Communication", "Haryana Vishwakarma Skill University", "Hemchandracharya North Gujarat University", "Hemwati Nandan Bahuguna Medical Education University", "Hidayatullah National Law University", "Himachal Pradesh National Law University", "Himachal Pradesh Technical University", "Himachal Pradesh University", "Indian Institute of Teacher Education", "Indira Gandhi Delhi Technical University for Women", "Indira Gandhi Krishi Vishwavidyalaya", "Indira Gandhi University", "Indira Kala Sangeet Vishwavidyalaya", "Indraprastha Institute of Information Technology", "Institute of Infrastructure Technology Research and Management", "International Institute of Information Technology (IIIT)", "Islamic University of Sciences & Technology University", "Jadavpur University", "Jagadguru Ramanandacharya Sanskrit University", "Jai Naraim Vyas University", "Jai Prakash vishwavidyalaya(university)", "Jammu University", "Jananayak Chandrashekhar University", "Jawaharlal Nehru Architecture and Fine Arts University", "Jawaharlal Nehru Krishi Vishwavidyalaya", "Jawaharlal Nehru Technological University", "Jharkhand Raksha Shakti University", "Jiwaji University", "Junagarh Agricultural University", "Kakatiya University", "Kaloji Narayan Rao University of Health Sciences", "Kalyani University", "Kamdhenu University", "Kameshwar Singh.Darbhanga Sanskrit Vishwavidyalaya", "Kannada University", "Kannur University", "Karanataka State Law University", "Karanataka State Open University", "Karanataka University", "Karanataka Veterinary, Animal & Fisheries Science University", "Karnataka Folklore University", "Karnataka Sanskrit University", "Karnataka State Rural Development and Panchayat Raj University", "Kashmir University", "Kavi Kulguru Kalidas Sanskrit Vishwavidyalaya", "Kazi Nazrul University", "Kerala Agricultural Unviersity", "Kerala University", "Kerala University of Fisheries & Ocean Studies", "Kerala University of Health Sciences", "Kerala Veterinary & Animal Sciences University", "Khallikote University", "Khwaja Moinuddin Chishti Urdu, Arabi-Farsi University", "King Georges Medical University", "Kolhan University", "Konkan Krishi Vidyapeeth", "Krantiguru Shyamji Krishna Verma Kachchh University", "Krishna Kanta Handique State Open University", "Krishna University", "Krishnakumarsinhji Bhavnagar University", "KSGH Music and Performing Arts University", "Kumar Bhaskar Varma Sanskrit & Ancient Studies University", "Kumaun University", "Kurukshetra University", "Kushabhau Thakre Patrakarita Avam Jansanchar Vishwavidyalaya", "Kuvempu University", "Lala Lajpat Rai University of Veterinary & Animal Sciences", "Lalit Narayan Mithila University", "Lucknow University", "M.J.P. Rohilkhand University", "M.P.Bhoj (open) University", "Madan Mohan Malaviya University of Technology", "Madaras University", "Madhya Pradesh Pashu Chikitsa Vigyan Vishwavidyalaya", "Madurai Kamraj University", "Magadh University", "Mahamaya Technical University", "Maharahtra University of Health Sciences", "Maharaja Bir Bikram University", "Maharaja Chhatrasal Bundelkhand Vishwavidyalaya", "Maharaja Ganga Singh University", "Maharaja Ranjit Singh Punjab Technical University", "Maharaja Sayajirao University of Baroda", "Maharaja Surajmal Brij University", "Maharana Partap Horticultural University", "Maharana Pratap University of Agriculture & Technology", "Maharashtra Animal & Fishery Sciences University", "Maharashtra National Law University", "Maharashtra National Law University,", "Maharishi Dayanand Saraswati University", "Maharishi Dayanand University", "Maharshi Panini Sanskrit Evam Vedic Vishwavidyalaya", "Mahatam Gandhi Kashi Vidyapeeth", "Mahatma Gandhi Chitrakoot Gramodaya Vishwavidyalaya", "Mahatma Gandhi University", "Mahatma Gandhi Unversity", "Mahatma Phule Krishi Vidyapeeth", "Makhanlal Chaturvedi National University of Journalism & Communication", "Mangalore University", "Manipur Technical University", "Manipur University of Culture", "Manonmaniam Sundarnar University", "Marathwada Agricultural University", "Maulana Abul Kalam Azad University of Technology", "Maulana Mazharul Haque Arabic & Persian University", "Mohan Lal Shukhadia University", "Mother Teresa Womens University", "Mumbai University", "Munger University", "Mysore University", "Nalanda Open University", "Narendra Deo University of Agriculture & Technology", "National Academy of Legal Studies & Research University", "National Law Institute University", "National law School of India University", "National Law Universituy", "National Law University", "National Law University and Judicial Academy", "National University of Advanced Legal Studies (NUALS)", "National University of Study & Research in Law", "Navsari Agriculture University", "Netaji Shubhash Open University", "Nilamber-Pitamber University", "Nizams Institute of Medical Sciences", "North Benagal University", "North Maharashtra University", "North Orissa University", "Odisha State Open University", "Orissa University Of Agriculture & Technology", "Osmania University", "Palamuru University", "Pandit S N Shukla University", "Patliputra University", "Patna University", "Periyar University", "Potti Sreeramulu Teugu Universtity", "Presidency University", "Professor Jayashankar Telangana State Agricultural University", "Pt. Bhagwat Dayal Sharma University of Health Sciences", "Pt. Sundarlal Sharma (Open) University", "Pt.Ravishankar Shukla University", "Punjab Agriculture University", "Punjab Technical University", "Punjab University", "Punjabi University", "Purnea University", "Rabindra Bharati University", "Raiganj University", "Raj Rishi Bhartrihari Matsya University", "Raja Mansingh Tomar Music & Arts University", "Rajasthan Ayurveda University", "Rajasthan ILD Skills University (RISU)", "Rajasthan Technical University", "Rajasthan University", "Rajasthan University of Health Sciences", "Rajasthan University of Veterinary & Animal Sciences", "Rajendra Agricultural University", "Rajiv Gandhi Prodoyogiki Vishwavidyalaya", "Rajiv Gandhi University of Health Science", "Rajiv Gandhi University of Knowledge Technology", "Rajmata Vijayaraje Scindia Krishi Vishwa Vidyalaya", "Raksha Shakti University", "Rama Devi Womens University", "Ranchi University", "Rani Channamma University", "Rani Durgavati Vishwavidyalaya", "Ravenshaw University", "Rayalaseema University", "Sambalpur University", "Sampurnanand Sanskrit Vishwavidyalaya", "Sanchi University of Buddhist-Indic Studies", "Sant Gadge Baba Amravati University", "Sardar Krushinagar Dantiwada Agricultural University", "Sardar Patel University", "Sardar Patel University of Police, Security & Criminal Justice", "Sardar Vallabh Bhai Patel University of Agriculture & Technology", "Sarguja University", "Satavahana University", "Saurashtra University", "Savitribai Phule Pune University", "Shekhawati University", "Sher-e-Kashmir University of Agricultural Science & Technology", "Shivaji University", "shree guru gobind singh tricentenary university", "Shree Sankaracharaya University of Sanskrit", "Shree Somnath Sanskrit University", "Shri Govind Guru University", "Shri Jagannath Sanskrit Vishwavidyalaya", "Shri Mata Vaishno Devi University", "Siddharth University", "Sidho-Kanho-Birsha University", "Sido Kanhu University", "Smt. Nathibai Damodar Thackersey Womens University", "Solapur University", "Sri Dev Suman Uttarakhand Vishwavidyalaya", "Sri Konda Laxman Telangana State Horticultural University", "Sri krishnadevaraya University", "Sri P V Narsimha Rao Telangana Veterinary University", "Sri Padmavati Mahila Vishwavidyalayam", "Sri Venkateswara Institute of Medical Sciences", "Sri Venkateswara University", "Sri Venkateswara Vedic University", "Sri Venkateswara Veterinary University", "Srimanta Sankaradeva University of Health Sciences", "State University of Performing and Visual Arts", "Swami Keshwanand Rajasthan Agriculture University", "Swami Ramanand Teerth Marathwada University", "Swarnim Gujarat Sports University", "T.M. Bhagalpur University", "Tamil Nadu Fisheries University", "Tamil Nadu Music and Fine Arts University", "Tamil Nadu Open University", "Tamil Nadu Teacher Education University", "Tamil University", "Tamilnadu Agricultural University", "Tamilnadu Dr. Ambedkar Law University", "Tamilnadu Dr. M.G.R.Medical University", "Tamilnadu National Law School", "Tamilnadu Physical Educaton and Sports University", "Tamilnadu Veterinary & Animal Sciences University", "Telangana University", "The Bengal Engineering & Science University", "The Rajiv Gandhi National University of Law", "The Rashtrasant Tukadoji Maharaj Nagpur University", "The Sanskrit College and University", "The West Bengal National University of Juridical Science", "The West Bengal University of Health Sciences", "Thiruvalluvar University", "Thunchath Ezhuthachan Malayalam University", "Tumkur University", "U.P. Pandit Deen Dayal Upadhyaya Pashu Chikitsa Vigyan Vishwavidhyalaya Evam Go-Anusandhan Sansthan", "U.P. Rajarshi Tandon Open University", "U.P.King Georges University of Dental Sciences", "University of Agricultural Sciences", "University of Horticultural Sciences", "University of Kota", "Univesity of Gour Banga", "Utkal University", "Utkal University of Culture", "Uttar Banga Krishi Vishwavidyalaya", "Uttar Pradesh University of Medical Sciences", "Uttarakhand Aawasiya Viswavidyalaya", "Uttarakhand Ayurved University", "Uttarakhand Open University", "Uttarakhand Sanskrit University", "Uttarakhand Technical University", "Vardhman Mahaveer Open University", "Veer Bahadur Singh Purvanchal University", "Veer Chandra Singh Garhwali Uttarakhand University of Horticulture & Forestry", "Veer Kunwar Singh University", "Veer Narmad South Gujarat University", "Veer Surendra Sai Institute of Medical Science and Research", "Veer Surendra Sai University of Technology", "Vesveswaraiah Technological University", "Vidya Sagar University", "Vijayanagara Sri Krishnadevaraya University", "Vikram Simhapuri University", "Vikram University", "Vinoba Bhave University", "West Bengal State University", "West Bengal University of Animal and Fishery Sciences", "West Bengal University of Teachers, Training, Education Planning and Administration", "Yashwant Rao Chavan Maharashtra Open University", "YMCA University of Science & Technology", "Yogi Vemana University" };
            phddetails.Places = new List<string>() { "Arunachal Pradesh", "Assam", "Telangana", "Delhi", "Madhya Pradesh", "Maharashtra", "Mizoram", "Meghalaya", "Manipur", "Nagaland", "Pondicherry", "Sikkim", "Tripura", "Uttar Pradesh", "West Bengal", "Uttarakhand", "Tamil Nadu", "Rajasthan", "Punjab", "Orissa", "Kerala", "Karnataka", "Jharkhand", "Jammu & Kashmir", "Himachal", "Pradesh", "Haryana", "Chhattisgarh", "Bihar", "Gujarat", "Jammu and Kashmir", "Andhra Pradesh", "Chandigarh", "Puducherry", "Himachal Pradesh", "Goa" };
            List<SelectListItem> universitytypelist = new List<SelectListItem>();
            universitytypelist.Add(new SelectListItem { Text = "Central", Value = "1" });
            universitytypelist.Add(new SelectListItem { Text = "State", Value = "2" });
            universitytypelist.Add(new SelectListItem { Text = "Private", Value = "3" });
            universitytypelist.Add(new SelectListItem { Text = "Deemed to be University", Value = "4" });
            universitytypelist.Add(new SelectListItem { Text = "International University", Value = "5" });
            ViewBag.universitytype = universitytypelist;
            if (registredfaculty != null)
            {
                phddetails.RegistrationNumber = registredfaculty.RegistrationNumber.Trim();
                phddetails.FacultyId = registredfaculty.id;
                phddetails.FirstName = registredfaculty.FirstName != null ? registredfaculty.FirstName.Trim() : registredfaculty.FirstName;
                phddetails.MiddleName = registredfaculty.MiddleName != null ? registredfaculty.MiddleName.Trim() : registredfaculty.MiddleName;
                phddetails.LastName = registredfaculty.LastName != null ? registredfaculty.LastName.Trim() : registredfaculty.LastName;
            }
            var collegefaculty =
                db.jntuh_college_faculty_registered.Where(
                    r => r.RegistrationNumber == registredfaculty.RegistrationNumber.Trim())
                    .Select(s => s)
                    .FirstOrDefault();
            if (collegefaculty != null)
            {
                var college =
                    db.jntuh_college.Where(c => c.id == collegefaculty.collegeId).Select(s => s).FirstOrDefault();
                phddetails.CollegeCode = college.collegeCode.Trim();
                phddetails.CollegeName = college.collegeName.Trim();
            }
            var phdexsistdata =
                db.jntuh_faculty_phddetails.Where(p => p.Facultyid == registredfaculty.id)
                    .Select(s => s)
                    .FirstOrDefault();
            ViewBag.isPhdSubmit = false;
            if (phdexsistdata != null)
            {
                ViewBag.isPhdSubmit = phdexsistdata.IsSubmitted != true ? true : false;
                phddetails.PhdType = Convert.ToInt32(phdexsistdata.Phdtype);
                phddetails.PhdTypeid = phdtypeslist.Where(i => i.Value == phddetails.PhdType.ToString()).First().Text;
                phddetails.PhdAdmissionYear = phdexsistdata.AdmissionYear != null ? (int)phdexsistdata.AdmissionYear : 0;
                phddetails.PhdawardYear = Convert.ToInt32(phdexsistdata.Phdawardyear);
                phddetails.University = phdexsistdata.University;
                phddetails.PlaceofUniversity = phdexsistdata.Placeofuniversity;
                phddetails.PhdTitle = phdexsistdata.Phdtitle;
                phddetails.UniversityType = Convert.ToInt32(phdexsistdata.Universitytype);
                if (phdexsistdata.Universitytype != null && phdexsistdata.Universitytype > 0)
                {
                    phddetails.UniversityTypeTxt = universitytypelist.Where(i => i.Value == phdexsistdata.Universitytype.ToString()).First().Text;
                }
                phddetails.SupervisorName1 = phdexsistdata.Supervisorname1;
                phddetails.SupervisorName2 = phdexsistdata.Supervisorname2;
                phddetails.SupervisorName3 = phdexsistdata.Supervisorname3;
                phddetails.AdmissionLetterpath = phdexsistdata.Admissionletter;
                phddetails.PrephdLetterpath = phdexsistdata.Prephdletter;
                phddetails.GenuinenessLetterpath = phdexsistdata.Genuinenessletter;
                phddetails.CollegeAuthenticationLetterpath = phdexsistdata.Collegeauthaticationletter;
                phddetails.ThesiscoverPagepath = phdexsistdata.Thesiscoverpage;
                phddetails.OtherLetterpath = phdexsistdata.Otherletter;

                phddetails.InterNationalJrnls = phdexsistdata.IntNationalJrnls;
                phddetails.NationalJrnls = phdexsistdata.NationalJrnls;
                phddetails.InterNationalCnfrs = phdexsistdata.IntNationalCnfrns;
                phddetails.NationalCnfrs = phdexsistdata.NationalCnfrns;

                phddetails.InterNationalJrnlspath = phdexsistdata.IntNationalJrnlsDocLetter;
                phddetails.NationalJrnlspath = phdexsistdata.NationalJrnlsDocLetter;
                phddetails.InterNationalCnfrspath = phdexsistdata.IntNationalCnfrnsLetter;
                phddetails.NationalCnfrspath = phdexsistdata.NationalCnfrnsLetter;

                if (phdexsistdata.Vivadate != null)
                    phddetails.DateofVivaTxt = UAAAS.Models.Utilities.MMDDYY2DDMMYY(phdexsistdata.Vivadate.ToString()); ;
                if (phdexsistdata.Pressnotification != null)
                    phddetails.PressnotDateTxt = UAAAS.Models.Utilities.MMDDYY2DDMMYY(phdexsistdata.Pressnotification.ToString()); ;

                //New Fields
                phddetails.PhdnotificationIssued = phdexsistdata.Notificationissued;
                if (phdexsistdata.Notificationissued > 0)
                {
                    phddetails.PhdnotificationIssuedTxt = phdnotificationissuedlist.Where(i => i.Value == phdexsistdata.Notificationissued.ToString()).First().Text;
                }
                phddetails.RegistrationNumberOrHallticketNo = phdexsistdata.Hallticketnumber;
                phddetails.HowmanyreviewsRRMattended = phdexsistdata.Reviewsattended;
                phddetails.HowmanypapersPublished = phdexsistdata.Paperspublished;
                phddetails.Externalexamineratthetimeofdefense = phdexsistdata.Timeofdefense;
                //phddetails.Exactdateoffinalviva = phdexsistdata.Vivadate;
                phddetails.BOSChairpersonatthetimeofThesisSubmission = phdexsistdata.Boschairperson;
                //phddetails.PressnotificationofyourPhDDegree = phdexsistdata.Pressnotification;
                phddetails.HaveyouattendConvocation = phdexsistdata.Convocationattended != null ? (bool)phdexsistdata.Convocationattended : false;
                phddetails.HaveyouattendConvocationTxt = phdexsistdata.Convocationattended == true ? "Yes" : "No";
                phddetails.PhdofferingDepartment = phdexsistdata.Department;
                phddetails.PhdSpecialization = phdexsistdata.Specialization;
                phddetails.NoCformthecollegepath = phdexsistdata.Nocletter;
                phddetails.UniversityWebsite = phdexsistdata.Website;
                phddetails.UniversityAddress = phdexsistdata.Address;
                phddetails.HowmanypapersPublishedduringPhdWork = phdexsistdata.PaperspublishedDPW;
                phddetails.Phdodpath = phdexsistdata.Phdod;
                //phddetails.Phdod = phdexsistdata.Thesiscoverpage;
            }
            return View(phddetails);
        }

        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult SubmitPhd(string facultyId)
        {
            var newFaculty = new FacultyphdDetails();
            return PartialView("SubmitPhdParView", newFaculty);
        }

        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult SubmitPhdParView(FacultyphdDetails phddetails)
        {
            ViewBag.isSubmit = false;
            //if (phddetails.isSubmitted == true)
            if (phddetails.FacultyId > 0)
            {
                var userdata = Membership.GetUser(User.Identity.Name);
                if (userdata == null)
                {
                    return RedirectToAction("LogOn", "Account");
                }
                //int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);

                if (phddetails.FacultyId == 113698)
                {
                    phddetails.FacultyId = Convert.ToInt32(ConfigurationManager.AppSettings["testRegnumberfid"]);
                }

                var phdexistdata = db.jntuh_faculty_phddetails.FirstOrDefault(a => a.Facultyid == phddetails.FacultyId);
                if (phdexistdata != null)
                {
                    phdexistdata.IsSubmitted = phddetails.isSubmitted;
                    phdexistdata.IsSubmittedDate = DateTime.Now;
                    db.Entry(phdexistdata).State = EntityState.Modified;
                    db.SaveChanges();
                    ViewBag.isSubmit = true;
                    TempData["SUCCESS"] = "Successfully Submitted";
                }
            }
            else
            {
                TempData["ERROR"] = "";
            }
            return RedirectToAction("ViewFacultyphdDetails", new { fid = Models.Utilities.EncryptString(phddetails.FacultyId.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]) });
        }

        [HttpGet]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult EditFacultyExperience(string id, int? Eid)
        {
            MembershipUser userdata = Membership.GetUser(User.Identity.Name);
            if (userdata == null)
            {
                return RedirectToAction("LogOn", "Account");
            }
            int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            int fID = 0;
            string RegistrationNumber = string.Empty;
            if (id != null)
            {
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(id.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]));
                if (fID == 113698)
                {
                    fID = Convert.ToInt32(ConfigurationManager.AppSettings["testRegnumberfid"]);
                }
            }
            else if (userId != null)
            {
                RegistrationNumber = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(e => e.RegistrationNumber).FirstOrDefault();
            }
            else
            {
                return RedirectToAction("LogOn", "Account");
            }

            //   return RedirectToAction("FacultyExperience");
            List<SelectListItem> colleges = new List<SelectListItem>();
            var jntuh_college = db.jntuh_college.ToList();

            var PresentColleges = jntuh_college.Where(a => a.isActive == true).Select(a => new { CollegeId = a.id, collegeCode = a.collegeCode, CollegeName = a.collegeName + "(" + a.collegeCode + ")" }).ToList();
            ViewBag.PresentColleges = PresentColleges;

            var colleges_list = jntuh_college.Select(a => new { CollegeId = a.id, collegeCode = a.collegeCode, CollegeName = a.collegeName + "(" + a.collegeCode + ")" }).ToList();

            colleges = colleges_list.Select(s => new SelectListItem { Value = s.CollegeId.ToString(), Text = s.CollegeName }).ToList();
            colleges.Add(new SelectListItem { Value = "0", Text = "Others" });
            ViewBag.Colleges = colleges.Where(i => i.Value != "375").OrderBy(s => s.Value).ToList();

            var Designation = db.jntuh_designation.Where(e => e.isActive == true).Select(a => new { Id = a.id, designation = a.designation }).Take(4).ToList();
            ViewBag.Designation = Designation;

            var registered_faculty = new jntuh_registered_faculty();
            if (fID != 0)
            {
                registered_faculty = db.jntuh_registered_faculty.Where(a => a.id == fID).FirstOrDefault();
            }
            else
            {
                registered_faculty = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber == RegistrationNumber).FirstOrDefault();
            }

            //Black List and Verification Status Flags Checking.....
            var RegisteredFacultyId = db.jntuh_registered_faculty.Where(e => e.id == registered_faculty.id && (e.Blacklistfaculy == true || e.AbsentforVerification == true)).Select(e => e.id).FirstOrDefault();
            if (RegisteredFacultyId != 0)
            {
                return RedirectToAction("ViewFacultyDetails", new { fid = id });
            }

            if (Eid == null)
            {
                return RedirectToAction("FacultyExperience");
            }

            var experienceObject = db.jntuh_registered_faculty_experience.Where(a => a.facultyId == registered_faculty.id && a.Id == Eid).Select(e => e).FirstOrDefault();
            FacultyExperience Faculty = new FacultyExperience();
            Faculty.RegistrationNumber = registered_faculty.RegistrationNumber;
            Faculty.firstName = registered_faculty.FirstName;
            Faculty.lastName = registered_faculty.LastName;

            Faculty.EId = experienceObject.Id;
            Faculty.facultyId = experienceObject.facultyId;
            Faculty.Collegeid = experienceObject.collegeId == 375 ? 0 : experienceObject.collegeId;
            Faculty.OtherCollegeName = experienceObject.collegeId == 375 ? experienceObject.OtherCollege : null;
            Faculty.DesignationId = experienceObject.facultyDesignationId;
            Faculty.OtherDesignation = experienceObject.facultyDesignationId == 4 ? experienceObject.OtherDesignation : null;
            if (experienceObject.facultyDateOfAppointment != null)
                Faculty.facultyDateOfAppointment = UAAAS.Models.Utilities.MMDDYY2DDMMYY(experienceObject.facultyDateOfAppointment.ToString()); ;
            if (experienceObject.facultyDateOfResignation != null)
                Faculty.facultyDateOfResignation = UAAAS.Models.Utilities.MMDDYY2DDMMYY(experienceObject.facultyDateOfResignation.ToString()); ;
            Faculty.facultyJoiningDocument = experienceObject.facultyJoiningOrder;
            Faculty.facultyRelievingDocument = experienceObject.facultyRelievingLetter;
            Faculty.EditfacultyJoiningDocument = experienceObject.facultyJoiningOrder;
            Faculty.EditfacultyRelievingDocument = experienceObject.facultyRelievingLetter;
            Faculty.facultySalary = experienceObject.facultySalary;
            Faculty.facultySCMDocument = experienceObject.FacultySCMDocument;

            return PartialView("EditFacultyExperience", Faculty);
            // return View(Faculty);
        }

        [HttpPost]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult EditFacultyExperience(FacultyExperience Experience)
        {
            MembershipUser userdata = Membership.GetUser(User.Identity.Name);
            if (userdata == null)
            {
                return RedirectToAction("LogOn", "Account");
            }

            // return RedirectToAction("FacultyExperience");

            int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            string RegistrationNumber = string.Empty;
            try
            {
                if (Experience.Collegeid != null)
                {
                    var facultyexperiencedocumentspath = "~/Content/Upload/Faculty/ExperienceDocuments";

                    jntuh_registered_faculty_experience facultyexperience = db.jntuh_registered_faculty_experience.Where(a => a.Id == Experience.EId).Select(s => s).FirstOrDefault();
                    facultyexperience.Id = Experience.EId;
                    facultyexperience.facultyId = Experience.facultyId;
                    facultyexperience.collegeId = Experience.Collegeid == 0 ? 375 : Experience.Collegeid;
                    facultyexperience.OtherCollege = Experience.Collegeid == 0 ? Experience.OtherCollegeName : null;
                    facultyexperience.facultyDesignationId = Experience.DesignationId;
                    facultyexperience.OtherDesignation = Experience.DesignationId == 4 ? Experience.OtherDesignation : null;

                    if (Experience.facultyDateOfAppointment != null)
                        facultyexperience.facultyDateOfAppointment = UAAAS.Models.Utilities.DDMMYY2MMDDYY(Experience.facultyDateOfAppointment);

                    if (Experience.facultyDateOfResignation != null)
                        facultyexperience.facultyDateOfResignation = UAAAS.Models.Utilities.DDMMYY2MMDDYY(Experience.facultyDateOfResignation);

                    //Faculty Joining Order Document
                    if (Experience.EditJoiningOrder != null)
                    {
                        if (!Directory.Exists(Server.MapPath(facultyexperiencedocumentspath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(facultyexperiencedocumentspath));
                        }
                        var ext = Path.GetExtension(Experience.EditJoiningOrder.FileName);
                        if (ext.ToUpper().Equals(".PDF"))
                        {
                            string CheckLastName = string.Empty;
                            if (String.IsNullOrEmpty(Experience.lastName))
                            {
                                CheckLastName = Experience.middleName;
                            }
                            else
                            {
                                CheckLastName = Experience.lastName;
                            }
                            string filename = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") +
                                                 "-" + Experience.firstName.Substring(0, 1) + "-" + CheckLastName.Substring(0, 1) + "_JO";
                            Experience.EditJoiningOrder.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(facultyexperiencedocumentspath), filename, ext));
                            Experience.facultyJoiningDocument = string.Format("{0}{1}", filename, ext);
                        }
                    }
                    else
                    {
                        Experience.facultyJoiningDocument = Experience.facultyJoiningDocument;
                    }

                    //Faculty Reliving Order Document
                    if (Experience.EditRelievingOrder != null)
                    {
                        if (!Directory.Exists(Server.MapPath(facultyexperiencedocumentspath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(facultyexperiencedocumentspath));
                        }

                        var ext = Path.GetExtension(Experience.EditRelievingOrder.FileName);

                        if (ext.ToUpper().Equals(".PDF"))
                        {
                            string CheckLastName = string.Empty;
                            if (String.IsNullOrEmpty(Experience.lastName))
                            {
                                CheckLastName = Experience.middleName;
                            }
                            else
                            {
                                CheckLastName = Experience.lastName;
                            }
                            string filename = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") +
                                                "-" + Experience.firstName.Substring(0, 1) + "-" + CheckLastName.Substring(0, 1) + "_RO";
                            Experience.EditRelievingOrder.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(facultyexperiencedocumentspath), filename, ext));
                            Experience.facultyRelievingDocument = string.Format("{0}{1}", filename, ext);
                        }
                    }
                    else
                    {
                        Experience.facultyRelievingDocument = Experience.facultyRelievingDocument;
                    }

                    //Faculty SCM  Document
                    if (Experience.SCMDocument != null)
                    {
                        if (!Directory.Exists(Server.MapPath(facultyexperiencedocumentspath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(facultyexperiencedocumentspath));
                        }

                        var ext = Path.GetExtension(Experience.SCMDocument.FileName);
                        if (ext.ToUpper().Equals(".PDF"))
                        {
                            string CheckLastName = string.Empty;
                            if (String.IsNullOrEmpty(Experience.lastName))
                            {
                                CheckLastName = Experience.middleName;
                            }
                            else
                            {
                                CheckLastName = Experience.lastName;
                            }
                            string filename = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-"
                                + Experience.firstName.Substring(0, 1) + "-" + CheckLastName.Substring(0, 1) + "_SCM";
                            Experience.SCMDocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(facultyexperiencedocumentspath), filename, ext));
                            Experience.facultySCMDocument = string.Format("{0}{1}", filename, ext);
                        }
                    }
                    else
                    {
                        Experience.facultySCMDocument = Experience.facultySCMDocument;
                    }

                    facultyexperience.facultyJoiningOrder = Experience.facultyJoiningDocument;
                    facultyexperience.facultyRelievingLetter = Experience.facultyRelievingDocument;
                    facultyexperience.FacultySCMDocument = Experience.facultySCMDocument;
                    facultyexperience.facultySalary = Experience.facultySalary;
                    facultyexperience.updatedOn = DateTime.Now;
                    facultyexperience.updatedBy = userId;



                    if (facultyexperience.collegeId != null && facultyexperience.facultyJoiningOrder != null && facultyexperience.facultyRelievingLetter != null && facultyexperience.facultyDateOfAppointment != null && facultyexperience.facultyDateOfResignation != null)
                    {
                        db.Entry(facultyexperience).State = EntityState.Modified;
                        db.SaveChanges();
                        TempData["SUCCESS"] = "Experience Details Updated Successfully";
                    }
                    else
                    {
                        TempData["ERROR"] = "Experience Data is Not Updated. Please Update Again";
                    }
                }
                return RedirectToAction("IndexRegistration", "NewOnlineRegistration", new { id = UAAAS.Models.Utilities.EncryptString(Experience.facultyId.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]) });
            }
            catch (Exception ex)
            {
                TempData["ERROR"] = "Experience Details not Updated Successfully";
                if (userId != null)
                {
                    RegistrationNumber = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(e => e.RegistrationNumber).FirstOrDefault();
                }
                else
                {
                    return RedirectToAction("LogOn", "Account");
                }
                return RedirectToAction("FacultyExperience", "NewOnlineRegistration", new { id = UAAAS.Models.Utilities.EncryptString(Experience.facultyId.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]) });
            }
        }

        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult FacultyEducationDetails(string id)
        {
            MembershipUser userdata = Membership.GetUser(User.Identity.Name);

            if (userdata == null)
            {
                return RedirectToAction("LogOn", "Account");
            }
            int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            int fID = 0;
            string RegistrationNumber = string.Empty;
            if (id != null)
            {
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(id.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]));
            }
            else if (userId != null)
            {
                RegistrationNumber = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(e => e.RegistrationNumber).FirstOrDefault();
            }
            else
            {
                return RedirectToAction("LogOn", "Account");
            }


            //RegistrationNumber = db.jntuh_registered_faculty.Where(e => e.id == fID).Select(e => e.RegistrationNumber).FirstOrDefault();

            if (id != null)
            {
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(id, WebConfigurationManager.AppSettings["CryptoKey"]));
            }
            else if (userId != null)
            {
                fID = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber == RegistrationNumber).Select(a => a.id).FirstOrDefault();
            }
            else
            {
                TempData["SUCCESS"] = null;
                return RedirectToAction("Logon", "Account");
            }
            return RedirectToAction("ViewFacultyDetails", new { fid = id });
            //Black List and Verification Status Flags Checking.....
            var RegisteredFacultyId = db.jntuh_registered_faculty.Where(e => e.id == fID && (e.Blacklistfaculy == true || e.AbsentforVerification == true)).Select(e => e.id).FirstOrDefault();
            if (RegisteredFacultyId != 0)
            {
                return RedirectToAction("ViewFacultyDetails", new { fid = id });
            }

            FacultyRegistration Faculty = new FacultyRegistration();

            List<SelectListItem> years = new List<SelectListItem>();
            for (int i = 1940; i <= DateTime.Now.Year; i++)
            {
                years.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.years = years;

            List<SelectListItem> division = new List<SelectListItem>();
            for (int i = 1; i <= 5; i++)
            {
                division.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.division = division;

            if (fID != 0)
            {
                var RegisteredFaculty = db.jntuh_registered_faculty.Where(e => e.id == fID).Select(e => e).FirstOrDefault();
                if (RegisteredFaculty == null)
                {
                    TempData["Error"] = "Invalid Registration Number";
                    // return RedirectToAction("GetFacultyRegistrationDetails");
                }

                var RegisteredFacultyEducation_Log = db.jntuh_registered_faculty_education_log.Where(e => e.facultyId == RegisteredFaculty.id).Select(e => e).ToList();

                Faculty.RegistrationNumber = RegisteredFaculty.RegistrationNumber;
                Faculty.FirstName = RegisteredFaculty.FirstName;
                Faculty.MiddleName = RegisteredFaculty.MiddleName;
                Faculty.LastName = RegisteredFaculty.LastName;

                #region Faculty Education Data Getting

                if (RegisteredFacultyEducation_Log.Count != 0)
                {
                    foreach (var item in RegisteredFacultyEducation_Log)
                    {
                        if (item.educationId == 1)
                        {
                            Faculty.SSC_HallticketNo = item.hallticketnumber;
                            Faculty.SSC_educationId = 1;
                            Faculty.SSC_studiedEducation = item.courseStudied;
                            Faculty.SSC_specialization = item.specialization;
                            Faculty.SSC_passedYear = item.passedYear;
                            Faculty.SSC_percentage = item.marksPercentage;
                            Faculty.SSC_division = item.division == null ? 0 : item.division;
                            Faculty.SSC_university = item.boardOrUniversity;
                            Faculty.SSC_place = item.placeOfEducation;
                            Faculty.SSC_facultyCertificate = item.certificate;
                        }
                        else if (item.educationId == 3)
                        {
                            Faculty.UG_HallticketNo = item.hallticketnumber;
                            Faculty.UG_educationId = 3;
                            Faculty.UG_studiedEducation = item.courseStudied;
                            Faculty.UG_specialization = item.specialization;
                            Faculty.UG_passedYear = item.passedYear;
                            Faculty.UG_percentage = item.marksPercentage;
                            Faculty.UG_division = item.division == null ? 0 : item.division;
                            Faculty.UG_university = item.boardOrUniversity;
                            Faculty.UG_place = item.placeOfEducation;
                            Faculty.UG_facultyCertificate = item.certificate;
                        }
                        else if (item.educationId == 4)
                        {
                            Faculty.PG_HallticketNo = item.hallticketnumber;
                            Faculty.PG_educationId = 4;
                            Faculty.PG_studiedEducation = item.courseStudied;
                            Faculty.PG_specialization = item.specialization;
                            Faculty.PG_passedYear = item.passedYear;
                            Faculty.PG_percentage = item.marksPercentage;
                            Faculty.PG_division = item.division == null ? 0 : item.division;
                            Faculty.PG_university = item.boardOrUniversity;
                            Faculty.PG_place = item.placeOfEducation;
                            Faculty.PG_facultyCertificate = item.certificate;
                        }
                        else if (item.educationId == 5)
                        {
                            Faculty.MPhil_HallticketNo = item.hallticketnumber;
                            Faculty.MPhil_educationId = 5;
                            Faculty.MPhil_studiedEducation = item.courseStudied;
                            Faculty.MPhil_specialization = item.specialization;
                            Faculty.MPhil_passedYear = item.passedYear;
                            Faculty.MPhil_percentage = item.marksPercentage;
                            Faculty.MPhil_division = item.division == null ? 0 : item.division;
                            Faculty.MPhil_university = item.boardOrUniversity;
                            Faculty.MPhil_place = item.placeOfEducation;
                            Faculty.MPhil_facultyCertificate = item.certificate;
                        }
                        else if (item.educationId == 6)
                        {
                            Faculty.PhD_HallticketNo = item.hallticketnumber;
                            Faculty.PhD_educationId = 6;
                            Faculty.PhD_studiedEducation = item.courseStudied;
                            Faculty.PhD_specialization = item.specialization;
                            Faculty.PhD_passedYear = item.passedYear;
                            Faculty.PhD_percentage = item.marksPercentage;
                            Faculty.PhD_division = item.division == null ? 0 : item.division;
                            Faculty.PhD_university = item.boardOrUniversity;
                            Faculty.PhD_place = item.placeOfEducation;
                            Faculty.PhD_facultyCertificate = item.certificate;
                        }
                        else if (item.educationId == 8)
                        {

                            Faculty.Others_educationId = 8;
                            Faculty.faculty_AllCertificates = item.certificate;
                        }
                    }
                    Faculty.isView = true;
                }
                else
                {
                    Faculty.isView = false;
                }
                #endregion

                var specializations = db.jntuh_specialization.Where(s => s.isActive == true).Select(a => a).ToList();

                var ugspecializations = (from s in specializations
                                         join d in db.jntuh_department on s.departmentId equals d.id
                                         join de in db.jntuh_degree on d.degreeId equals de.id
                                         where (de.id == 4 || de.id == 5)
                                         select new
                                         {
                                             id = s.id,
                                             specializationname = s.specializationName
                                         }).ToList();

                Faculty.ug_specializations = new List<string>() { "Test" };
                foreach (var item1 in ugspecializations)
                {
                    Faculty.ug_specializations.Add(item1.specializationname);
                }

                var pgspecializations = (from s in specializations
                                         join d in db.jntuh_department on s.departmentId equals d.id
                                         join de in db.jntuh_degree on d.degreeId equals de.id
                                         where (de.id != 4 && de.id != 5)
                                         select new
                                         {
                                             id = s.id,
                                             specializationname = s.specializationName
                                         }).ToList();

                Faculty.pg_specializations = new List<string>() { "Test" };
                foreach (var item1 in pgspecializations)
                {
                    Faculty.pg_specializations.Add(item1.specializationname);
                }

                var Education_Log = db.jntuh_registered_faculty_education_log.Select(e => e).ToList();

                var RegisteredFacultyEducation_Courses = Education_Log.Select(e => e.courseStudied.Trim()).Distinct().ToList();
                var RegisteredFacultyEducation_universities = Education_Log.Select(e => e.boardOrUniversity.Trim()).Distinct().ToList();
                var RegisteredFacultyEducation_places = Education_Log.Select(e => e.placeOfEducation.Trim()).Distinct().ToList();
                var RegisteredFacultyEducation_UGspecialization = Education_Log.Where(a => a.educationId == 3).Select(e => e.specialization.Trim()).Distinct().ToList();
                var RegisteredFacultyEducation_PGspecialization = Education_Log.Where(a => a.educationId == 4).Select(e => e.specialization.Trim()).Distinct().ToList();

                foreach (var UG in RegisteredFacultyEducation_UGspecialization)
                {
                    Faculty.ug_specializations.Add(UG.Trim());
                }
                Faculty.ug_specializations.Remove("Test");
                foreach (var PG in RegisteredFacultyEducation_PGspecialization)
                {
                    Faculty.pg_specializations.Add(PG.Trim());
                }
                Faculty.pg_specializations.Remove("Test");
                Faculty.universitys = new List<string>() { "Rajiv Gandhi University", "Assam University", "Tezpur University", "University of Hyderabad, Hyderabad", "Maulana Azad National Urdu University", "English   and   Foreign   Languages   University", "Jamia Millia Islamia", "University of Delhi", "JawaharLal Nehru University", "Indira Gandhi National Open University", "South Asian University", "The  Indira  Gandhi  National  Tribal  University", "Dr. Harisingh Gour Vishwavidyalaya", "Mahatma  Gandhi  Antarrashtriya  Hindi  Vishwavidyalaya", "Mizoram University", "North Eastern Hill University", "Manipur University", "Central Agricultural University", "Nagaland University", "Pondicherry  University", "Sikkim University", "Tripura University", "Aligarh Muslim University", "Babasaheb  Bhimrao  Ambedkar  University", "Banaras Hindu University", "University of Allahabad", "Rajiv  Gandhi  National  Aviation  University", "Rani  Lakshmi  Bai  Central  Agricultural  University", "Visva Bharati, Shantiniketan", "Hemwati Nandan Bahuguna Garhwal University", "Central University of Tamil Nadu", "Indian Maritime University", "Central  University  of  Rajasthan", "Central University of Punjab", "Central University of Orissa", "Central University of Kerala", "Central University of Karnataka", "Central University of Jharkhand", "Central University of Kashmir, Transit Campus", "Central University of Jammu, Bagla (Rahya-Suchani)", "Central University of Himachal Pradesh", "Central University of Haryana", "Guru  Ghasidas  Vishwavidyalaya", "Central University of Bihar", "Nalanda University", "Mahatma  Gandhi  Central  University", "Central University of Gujarat", "Academy of Maritime Education and Training", "Amrita Vishwa Vidyapeetham", "Avinashilingam Institute for Home Science & Higher Education for Women", "B.L.D.E.", "B.S. Abdur Rahman Institute of Science and Technology", "Banasthai Vidyapith", "Bharath Institute of Higher Education & Research", "Bharati Vidyapeeth", "Bhatkhande Music Institute", "Birla Institute of Technology", "Birla Institute of Technology & Science", "Central Institute of Buddhist Studies(CIBS)", "Central Institute of Fisheries Education", "Central Institute of Higher Tibetan Studies", "Chennai Mathematical Institute", "Chettinad Academy of Research and Education (CARE)", "Chinmaya Vishwavidyapeeth", "Christ", "D.Y Patil Educational Society", "Datta Meghe Institute of Medical Sciences", "Dayalbagh Educational Institute", "Deccan College Postgraduate & Research Institute", "Dr. D.Y. Patil Vidyapeeth", "Dr. M.G.R. Educational and Research Institute", "Forest Research Institute", "Gandhi Institute of Technology and Management (GITAM)", "Gandhiigram Rural Institute", "Gokhale Institute of Politics & Economics", "Graphic Era", "Gujarat Vidyapith", "Gurukul Kangri vidyapeeth", "Hindustan Institute of Technology and Science (HITS)", "Homi Bhabha National Institute, Regd. Office", "ICFAI Foundation for Higher Education", "IIS", "Indain Institute of Foreigen Trade", "Indian Agricultural Research Institute", "Indian Association for the Cultivation of Science (IACS)", "Indian Institute of Information Technology and Management", "Indian Institute of Science", "Indian Institute of Space Science and Technology", "Indian Law Institute", "Indian School of Mines", "Indian Veterinary Research Institute", "Indira Gandhi Institute of Development Research", "Institute of Advanced Studies in Education", "Institute of Chemical Technology", "Institute of liver and Biliary Sciences", "Instituteof Armamrnt Technology", "International Institute for Population Sciences", "International Institute of Information Technology", "Jain", "Jain Vishva Bharati Institute", "Jamia Hamdard", "Janardan Rai Nagar Rajasthan Vidyapeeth", "Jawaharlal Nehru Centre for Advanced Scientific Research", "Jaypee Institute of Information Technology", "JSS Academy of Higher Education & Research", "K.L.E. Academy of Higher Education and Research", "Kalasalingam Academy of Research and Education", "Kalinga Institute of Industrial Technology", "Karpagam Academy of Higher Education", "Karunya Institute of Technology and Sciences", "Kerala Kalamandalam", "Koneru Lakshmaiah Education Foundation", "Krishna Institute of Medical Sciences", "Lakshmibai National Institute of Physical Education", "Lingaya's Vidyapeeth", "LNM Istitute of Information Technology", "Maharishi Markandeshwar (Deemed to be University)", "Manav Rachna International Institute of Research and Studies", "Manipal Academy of Higher Education", "Meenakshi Academy of Higher Education and Research", "MGM Institute of Health Sciences", "Narsee Monjee Institute of Management Studies", "National Brain Research Centre", "National Dairy Research Institute", "National Institute of Food Technology, Entrepreneurship & Management (NIFTEM)", "National Institute of Mental Health & Neuro Sciences", "National Museum Institute of History of Arts, Conservation and Musicology", "National Rail and Transportation Institute", "National University of Educational Planning & Administration", "Nava Nalanda Mahavihara", "Nehru Gram Bharati", "NITTE", "Noorul Islam Centre for Higher Education", "North Eastern Regional Institute of Science & Technology", "Padmashree Dr.D.Y. Patil Vidyapeeeth", "Pandit Dwarka Prasad Mishra Indian Institute of Information Technology", "Periyar Manaimmai Institute of Science & Technology (PMIST)", "Ponnaiyan Ramajayam Institute of Science & technology (PMIST)", "Pravara Institute of Medical Sciences", "Punjab Engineering College", "Rajiv Gandhi National Institute of Youth Development", "Ramakrishna Mission Vivekananda Educational and Research Institute", "Rashtriya Sanskrit Sansthana", "Rashtriya Sanskrit Vidyapeeth", "S.R.M Institute of Science and Technology", "Sam Higginbottom Institute of Agriculture, Technology & Sciences", "Sant Longowal Institute of Engineering and Technology", "Santosh", "Sathyabama Institute of Science and Technology", "Saveetha Institute of Medical and Technical Sciences", "Shanmugha Arts Science Technology & Research Academy (SASTRA)", "Shobhit Institute of Engineering & Technology", "Shri Lal Bahadur Shastri Rashtriya Sanskrit Vidyapith", "Siksha 'O' Anusandhan", "Sri Balaji Vidyapeeth (Deemed to be University)", "Sri Chandrasekharendra Saraswathi Vishwa Mahavidyalaya", "Sri Devraj Urs Academy of Higher Education and Research", "Sri Ramachandra Medical College and Research Institute", "Sri Sathya Sai Institute of Higher Learning", "Sri Siddhartha Academy of Higher Education", "St. Peterâ€™s Institute of Higher Education and Research", "Sumandeep Vidyapeeth", "Swami Vivekananda Yoga Anusandhana Samsthana", "Symbiosis International", "Tata Institute of Fundamental Research", "Tata Institute of Social Sciences", "TERI School of Advanced studies", "Thapar Institute of Engineering & Technology", "Tilak Maharashtra Vidyapeeth", "Vel Tech Rangarajan Dr. Sagunthala R & D Institute of Science and Technology", "Vellore Institute of Technology", "VELS Institute of Science Technology & Advanced Studies (VISTAS)", "Vignan's Foundation for Science, Technology and Research", "Vinayaka Missionâ€™s Research Foundation", "Yenepoya", "A.P.J. Abdul Kalam Technological University", "Acharaya N.G.Ranga Agricultural University", "Acharaya Nagarjuna University", "Adikavi Nannaya University", "Akkamahadevi women's University (Formerly known as Karnataka State Women's University)", "Alagappa University", "Aliah University", "Allahabad State University", "Ambedkar University Delhi (AUD)", "Anand Agricultural University", "Andhra University", "Anna University", "Annamalai University", "Arybhatta Knowledge University", "Assam Agricultural University", "Assam Rajiv Gandhi University of Co-operative Management", "Assam Science & Technology University", "Assam Womens University", "Atal Bihari Vajpayee Hindi Vishwavidyalaya", "Awadesh Pratap Singh University", "Ayush and Health Sciences University of Chhattisgarh", "Baba Farid University of Health Sciences", "Baba Ghulam Shah Badshah University", "Babasaheb Bhimrao Ambedkar Bihar University", "Banda University of Agriculture & Technology", "Bangalore University", "Bankura University", "Barkatullaah University", "Bastar Vishwavidyalaya", "Bengaluru Central University", "Bengaluru North University", "Berhampur University", "Bhagat Phool Singh Mahila Vishwavidyalaya", "Bhakta Kavi Narsinh Mehta University", "Bharathiar University", "Bharathidasan University", "Bhupender Narayan Mandal University", "Bidhan Chandra Krishi Vishwavidyalaya", "Bihar Agricultural University", "Biju Patnaik University of Technology", "Bilaspur Vishwavidyalaya", "Binod Bihari Mahto Koylanchal University", "Birsa Agricultural University", "Bodoland University", "Bundelkhand University", "Burdwan University", "Calcutta University", "Calicut University", "CEPT University", "Ch. Bansi Lal University", "Chanakya National Law University", "Chandr Shekhar Azad University of Agriculture & Technology", "Chatrapati Sahuji Maharaj Kanpur University", "Chaudhary Devi Lal University", "Chaudhary Ranbir Singh University", "Chaudhary Sarwan Kumar Himachal Pradesh Krishi Vishvavidyalaya", "Chhattisgarh Kamdhenu Vishwavidyalaya", "Chhattisgarh Swami Vivekanad Technical Universty", "Childrens University", "Choudary Charan Singh Haryana Agricultural Univeersity", "Choudary Charan Singh University", "Cluster University of Jammu", "Cluster University of Srinagar", "Cochin Unviersity of Science & Technology", "Cooch Behar Panchanan Barma University", "Cotton University", "Damodaram Sanjivayya National Law University", "Davangere University", "Deen Bandhu Chhotu Ram University of Sciences & Technology", "Deen Dayal Upadhyay Gorakhpur University", "Delhi Pharmaceutical Sciences & Research University", "Delhi Technological University", "Devi Ahilya Vishwavidyalaya", "Dharmashastra National Law University", "Dharmsinh Desai University", "Diamond Harbour Womens University", "Dibrugarh University", "Doon University", "Dr Shyama Prasad Mukherjee University", "Dr. A.P.J. Abdul Kalam Technical University", "Dr. B. R. Ambedkar University of Social Sciences", "Dr. B.R. Ambedkar University", "Dr. B.R.Ambedkar Open University", "Dr. B.R.Ambedkar University", "Dr. Babasaheb Ambedkar Marathwada University", "Dr. Babasaheb Ambedkar Open University", "Dr. Babasaheb AmbedkarTechnological University", "Dr. Bhimrao Ambedkar Law University", "Dr. N.T.R. University of Health Sciences", "Dr. Punjabrao Deshmukh Krishi Vidyapeeth", "Dr. Ram Manohar Lohia Awadh University", "Dr. Ram Manohar Lohiya National Law University", "Dr. Shakuntala Misra National Rehabilitation University", "Dr. Shyama Prasad University", "Dr. Y.S.Parmar University of Horticulture & Forestry", "Dr. Y.S.R. Horticultural Univerity", "Dravidian University", "Durg Vishwavidyalaya", "Fakir Mohan University", "G.B.Pant University of Agriculture & Technology", "Gangadhar Meher University", "Gauhati University", "Gautam Buddha University", "Goa University", "Gondwana University", "Govind Guru Tribal University", "Gujarat Agricultural University", "Gujarat Ayurveda University", "Gujarat Forensic Sciences University", "Gujarat National Law University", "Gujarat Technological University", "Gujarat University", "Gujarat University of Transplantation Sciences", "Gulbarga University", "Guru Angad Dev Veterinary & Animal Sciences University", "Guru Gobind Singh Indraprastha Vishwavidyalaya", "Guru Jambeshwar University of Science and Technology", "Guru Nanak Dev University", "Guru Ravidas Ayurved University", "Harcourt Butler Technical University", "Haridev Joshi University of Journalism and Mass Communication", "Haryana Vishwakarma Skill University", "Hemchandracharya North Gujarat University", "Hemwati Nandan Bahuguna Medical Education University", "Hidayatullah National Law University", "Himachal Pradesh National Law University", "Himachal Pradesh Technical University", "Himachal Pradesh University", "Indian Institute of Teacher Education", "Indira Gandhi Delhi Technical University for Women", "Indira Gandhi Krishi Vishwavidyalaya", "Indira Gandhi University", "Indira Kala Sangeet Vishwavidyalaya", "Indraprastha Institute of Information Technology", "Institute of Infrastructure Technology Research and Management", "International Institute of Information Technology (IIIT)", "Islamic University of Sciences & Technology University", "Jadavpur University", "Jagadguru Ramanandacharya Sanskrit University", "Jai Naraim Vyas University", "Jai Prakash vishwavidyalaya(university)", "Jammu University", "Jananayak Chandrashekhar University", "Jawaharlal Nehru Architecture and Fine Arts University", "Jawaharlal Nehru Krishi Vishwavidyalaya", "Jawaharlal Nehru Technological University Hyderabad", "Jharkhand Raksha Shakti University", "Jiwaji University", "Junagarh Agricultural University", "Kakatiya University", "Kaloji Narayan Rao University of Health Sciences", "Kalyani University", "Kamdhenu University", "Kameshwar Singh.Darbhanga Sanskrit Vishwavidyalaya", "Kannada University", "Kannur University", "Karanataka State Law University", "Karanataka State Open University", "Karanataka University", "Karanataka Veterinary, Animal & Fisheries Science University", "Karnataka Folklore University", "Karnataka Sanskrit University", "Karnataka State Rural Development and Panchayat Raj University", "Kashmir University", "Kavi Kulguru Kalidas Sanskrit Vishwavidyalaya", "Kazi Nazrul University", "Kerala Agricultural Unviersity", "Kerala University", "Kerala University of Fisheries & Ocean Studies", "Kerala University of Health Sciences", "Kerala Veterinary & Animal Sciences University", "Khallikote University", "Khwaja Moinuddin Chishti Urdu, Arabi-Farsi University", "King Georges Medical University", "Kolhan University", "Konkan Krishi Vidyapeeth", "Krantiguru Shyamji Krishna Verma Kachchh University", "Krishna Kanta Handique State Open University", "Krishna University", "Krishnakumarsinhji Bhavnagar University", "KSGH Music and Performing Arts University", "Kumar Bhaskar Varma Sanskrit & Ancient Studies University", "Kumaun University", "Kurukshetra University", "Kushabhau Thakre Patrakarita Avam Jansanchar Vishwavidyalaya", "Kuvempu University", "Lala Lajpat Rai University of Veterinary & Animal Sciences", "Lalit Narayan Mithila University", "Lucknow University", "M.J.P. Rohilkhand University", "M.P.Bhoj (open) University", "Madan Mohan Malaviya University of Technology", "Madaras University", "Madhya Pradesh Pashu Chikitsa Vigyan Vishwavidyalaya", "Madurai Kamraj University", "Magadh University", "Mahamaya Technical University", "Maharahtra University of Health Sciences", "Maharaja Bir Bikram University", "Maharaja Chhatrasal Bundelkhand Vishwavidyalaya", "Maharaja Ganga Singh University", "Maharaja Ranjit Singh Punjab Technical University", "Maharaja Sayajirao University of Baroda", "Maharaja Surajmal Brij University", "Maharana Partap Horticultural University", "Maharana Pratap University of Agriculture & Technology", "Maharashtra Animal & Fishery Sciences University", "Maharashtra National Law University", "Maharashtra National Law University,", "Maharishi Dayanand Saraswati University", "Maharishi Dayanand University", "Maharshi Panini Sanskrit Evam Vedic Vishwavidyalaya", "Mahatam Gandhi Kashi Vidyapeeth", "Mahatma Gandhi Chitrakoot Gramodaya Vishwavidyalaya", "Mahatma Gandhi University", "Mahatma Gandhi Unversity", "Mahatma Phule Krishi Vidyapeeth", "Makhanlal Chaturvedi National University of Journalism & Communication", "Mangalore University", "Manipur Technical University", "Manipur University of Culture", "Manonmaniam Sundarnar University", "Marathwada Agricultural University", "Maulana Abul Kalam Azad University of Technology", "Maulana Mazharul Haque Arabic & Persian University", "Mohan Lal Shukhadia University", "Mother Teresa Womens University", "Mumbai University", "Munger University", "Mysore University", "Nalanda Open University", "Narendra Deo University of Agriculture & Technology", "National Academy of Legal Studies & Research University", "National Law Institute University", "National law School of India University", "National Law Universituy", "National Law University", "National Law University and Judicial Academy", "National University of Advanced Legal Studies (NUALS)", "National University of Study & Research in Law", "Navsari Agriculture University", "Netaji Shubhash Open University", "Nilamber-Pitamber University", "Nizams Institute of Medical Sciences", "North Benagal University", "North Maharashtra University", "North Orissa University", "Odisha State Open University", "Orissa University Of Agriculture & Technology", "Osmania University", "Palamuru University", "Pandit S N Shukla University", "Patliputra University", "Patna University", "Periyar University", "Potti Sreeramulu Teugu Universtity", "Presidency University", "Professor Jayashankar Telangana State Agricultural University", "Pt. Bhagwat Dayal Sharma University of Health Sciences", "Pt. Sundarlal Sharma (Open) University", "Pt.Ravishankar Shukla University", "Punjab Agriculture University", "Punjab Technical University", "Punjab University", "Punjabi University", "Purnea University", "Rabindra Bharati University", "Raiganj University", "Raj Rishi Bhartrihari Matsya University", "Raja Mansingh Tomar Music & Arts University", "Rajasthan Ayurveda University", "Rajasthan ILD Skills University (RISU)", "Rajasthan Technical University", "Rajasthan University", "Rajasthan University of Health Sciences", "Rajasthan University of Veterinary & Animal Sciences", "Rajendra Agricultural University", "Rajiv Gandhi Prodoyogiki Vishwavidyalaya", "Rajiv Gandhi University of Health Science", "Rajiv Gandhi University of Knowledge Technology", "Rajmata Vijayaraje Scindia Krishi Vishwa Vidyalaya", "Raksha Shakti University", "Rama Devi Womens University", "Ranchi University", "Rani Channamma University", "Rani Durgavati Vishwavidyalaya", "Ravenshaw University", "Rayalaseema University", "Sambalpur University", "Sampurnanand Sanskrit Vishwavidyalaya", "Sanchi University of Buddhist-Indic Studies", "Sant Gadge Baba Amravati University", "Sardar Krushinagar Dantiwada Agricultural University", "Sardar Patel University", "Sardar Patel University of Police, Security & Criminal Justice", "Sardar Vallabh Bhai Patel University of Agriculture & Technology", "Sarguja University", "Satavahana University", "Saurashtra University", "Savitribai Phule Pune University", "Shekhawati University", "Sher-e-Kashmir University of Agricultural Science & Technology", "Shivaji University", "shree guru gobind singh tricentenary university", "Shree Sankaracharaya University of Sanskrit", "Shree Somnath Sanskrit University", "Shri Govind Guru University", "Shri Jagannath Sanskrit Vishwavidyalaya", "Shri Mata Vaishno Devi University", "Siddharth University", "Sidho-Kanho-Birsha University", "Sido Kanhu University", "Smt. Nathibai Damodar Thackersey Womens University", "Solapur University", "Sri Dev Suman Uttarakhand Vishwavidyalaya", "Sri Konda Laxman Telangana State Horticultural University", "Sri krishnadevaraya University", "Sri P V Narsimha Rao Telangana Veterinary University", "Sri Padmavati Mahila Vishwavidyalayam", "Sri Venkateswara Institute of Medical Sciences", "Sri Venkateswara University", "Sri Venkateswara Vedic University", "Sri Venkateswara Veterinary University", "Srimanta Sankaradeva University of Health Sciences", "State University of Performing and Visual Arts", "Swami Keshwanand Rajasthan Agriculture University", "Swami Ramanand Teerth Marathwada University", "Swarnim Gujarat Sports University", "T.M. Bhagalpur University", "Tamil Nadu Fisheries University", "Tamil Nadu Music and Fine Arts University", "Tamil Nadu Open University", "Tamil Nadu Teacher Education University", "Tamil University", "Tamilnadu Agricultural University", "Tamilnadu Dr. Ambedkar Law University", "Tamilnadu Dr. M.G.R.Medical University", "Tamilnadu National Law School", "Tamilnadu Physical Educaton and Sports University", "Tamilnadu Veterinary & Animal Sciences University", "Telangana University", "The Bengal Engineering & Science University", "The Rajiv Gandhi National University of Law", "The Rashtrasant Tukadoji Maharaj Nagpur University", "The Sanskrit College and University", "The West Bengal National University of Juridical Science", "The West Bengal University of Health Sciences", "Thiruvalluvar University", "Thunchath Ezhuthachan Malayalam University", "Tumkur University", "U.P. Pandit Deen Dayal Upadhyaya Pashu Chikitsa Vigyan Vishwavidhyalaya Evam Go-Anusandhan Sansthan", "U.P. Rajarshi Tandon Open University", "U.P.King Georges University of Dental Sciences", "University of Agricultural Sciences", "University of Horticultural Sciences", "University of Kota", "Univesity of Gour Banga", "Utkal University", "Utkal University of Culture", "Uttar Banga Krishi Vishwavidyalaya", "Uttar Pradesh University of Medical Sciences", "Uttarakhand Aawasiya Viswavidyalaya", "Uttarakhand Ayurved University", "Uttarakhand Open University", "Uttarakhand Sanskrit University", "Uttarakhand Technical University", "Vardhman Mahaveer Open University", "Veer Bahadur Singh Purvanchal University", "Veer Chandra Singh Garhwali Uttarakhand University of Horticulture & Forestry", "Veer Kunwar Singh University", "Veer Narmad South Gujarat University", "Veer Surendra Sai Institute of Medical Science and Research", "Veer Surendra Sai University of Technology", "Vesveswaraiah Technological University", "Vidya Sagar University", "Vijayanagara Sri Krishnadevaraya University", "Vikram Simhapuri University", "Vikram University", "Vinoba Bhave University", "West Bengal State University", "West Bengal University of Animal and Fishery Sciences", "West Bengal University of Teachers, Training, Education Planning and Administration", "Yashwant Rao Chavan Maharashtra Open University", "YMCA University of Science & Technology", "Yogi Vemana University" };
                Faculty.places = new List<string>() { "Arunachal Pradesh", "Assam", "Telangana", "Delhi", "Madhya Pradesh", "Maharashtra", "Mizoram", "Meghalaya", "Manipur", "Nagaland", "Pondicherry", "Sikkim", "Tripura", "Uttar Pradesh", "West Bengal", "Uttarakhand", "Tamil Nadu", "Rajasthan", "Punjab", "Orissa", "Kerala", "Karnataka", "Jharkhand", "Jammu & Kashmir", "Himachal", "Pradesh", "Haryana", "Chhattisgarh", "Bihar", "Gujarat", "Jammu and Kashmir", "Andhra Pradesh", "Chandigarh", "Puducherry", "Himachal Pradesh", "Goa" };
                Faculty.Courses = new List<string>() { "BE", "BTech", "ME", "MTech", "MBA", "MCA", "BCA", "PharmD", "BPharmacy", "MPharmacy", "BCom", "MCom", "BSC", "MSC", "M.A", "BA", "BZC", "MPhil", "PhD" };

                foreach (var course in RegisteredFacultyEducation_Courses)
                {
                    Faculty.Courses.Add(course.Trim());
                }

                foreach (var university in RegisteredFacultyEducation_universities)
                {
                    Faculty.universitys.Add(university.Trim());
                }

                foreach (var place in RegisteredFacultyEducation_places)
                {
                    Faculty.places.Add(place.Trim());
                }
                return View(Faculty);

            }
            else
            {
                TempData["Error"] = "Invalid Registration Number";
                return View();
            }
        }

        [HttpPost]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult FacultyEducationDetails(FacultyRegistration Faculty)
        {
            MembershipUser userdata = Membership.GetUser(User.Identity.Name);

            if (userdata == null)
            {
                return RedirectToAction("LogOn", "Account");
            }
            int UserId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);

            string AllcertificatesPath = "~/Content/Upload/Faculty/Certificates/CertificatesPDF";

            jntuh_registered_faculty RegFaculty = new jntuh_registered_faculty();

            if (Faculty.RegistrationNumber != null)
            {
                RegFaculty = db.jntuh_registered_faculty.FirstOrDefault(r => r.RegistrationNumber.Trim() == Faculty.RegistrationNumber.Trim());
                if (RegFaculty == null)
                {
                    TempData["Error"] = "Invalid RegistrationNumber";
                    // return RedirectToAction("Index");
                }

                int FacultyId = RegFaculty.id;

                #region Faculty Education Details Saving

                if (FacultyId != null)
                {
                    #region Education Certificates Saving

                    //All CertificatePDF Saving
                    if (Faculty.All_Certificates != null)
                    {
                        if (!Directory.Exists(Server.MapPath(AllcertificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(AllcertificatesPath));
                        }
                        var ext = Path.GetExtension(Faculty.All_Certificates.FileName);

                        if (ext.ToUpper().Equals(".PDF") || ext.ToUpper().Equals(".PDF"))
                        {
                            string CheckLastName = string.Empty;
                            if (String.IsNullOrEmpty(Faculty.LastName))
                            {
                                CheckLastName = Faculty.MiddleName;
                            }
                            else
                            {
                                CheckLastName = Faculty.LastName;
                            }
                            string fileName = Faculty.RegistrationNumber.Trim() + "-" +
                                              Faculty.FirstName.Substring(0, 1) + "-" +
                                              CheckLastName.Substring(0, 1) + "_All";
                            if (Faculty.faculty_AllCertificates != null)
                            {
                                Faculty.All_Certificates.SaveAs(string.Format("{0}/{1}", Server.MapPath(AllcertificatesPath),
                                Faculty.faculty_AllCertificates));
                            }
                            else
                            {
                                Faculty.All_Certificates.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(AllcertificatesPath),
                              fileName, ext));
                                Faculty.faculty_AllCertificates = string.Format("{0}{1}", fileName, ext);
                            }

                        }
                    }
                    else
                    {
                        Faculty.faculty_AllCertificates = Faculty.faculty_AllCertificates;
                    }

                    #endregion

                    List<jntuh_registered_faculty_education_log> education = db.jntuh_registered_faculty_education_log.Where(e => e.facultyId == FacultyId).Select(e => e).ToList();

                    for (int i = 1; i < 7; i++)
                    {

                        if (i == 1)
                        {
                            jntuh_registered_faculty_education_log SSC = education.Where(e => e.educationId == 1).Select(e => e).FirstOrDefault();

                            if (SSC != null && Faculty.SSC_HallticketNo != null && Faculty.SSC_studiedEducation != null && Faculty.SSC_specialization != null && Faculty.SSC_university != null && Faculty.SSC_place != null)
                            {
                                SSC.facultyId = FacultyId;
                                SSC.hallticketnumber = Faculty.SSC_HallticketNo.Trim().ToUpper();
                                SSC.educationId = 1;
                                SSC.courseStudied = string.IsNullOrEmpty(Faculty.SSC_studiedEducation) ? Faculty.SSC_studiedEducation : Faculty.SSC_studiedEducation.Trim().ToUpper();
                                SSC.specialization = string.IsNullOrEmpty(Faculty.SSC_specialization) ? Faculty.SSC_specialization : Faculty.SSC_specialization.Trim();
                                SSC.passedYear = Faculty.SSC_passedYear == null ? 0 : (int)Faculty.SSC_passedYear;
                                SSC.marksPercentage = Faculty.SSC_percentage == null ? 0 : (decimal)Faculty.SSC_percentage;
                                SSC.division = Faculty.SSC_division == null ? 0 : (int)Faculty.SSC_division;
                                SSC.boardOrUniversity = string.IsNullOrEmpty(Faculty.SSC_university) ? Faculty.SSC_university : Faculty.SSC_university.Trim();
                                SSC.placeOfEducation = string.IsNullOrEmpty(Faculty.SSC_place) ? Faculty.SSC_place : Faculty.SSC_place.Trim();
                                SSC.certificate = Faculty.SSC_facultyCertificate;
                                SSC.isActive = false;
                                SSC.updatedBy = UserId;
                                SSC.updatedOn = DateTime.Now;

                                db.Entry(SSC).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (Faculty.SSC_HallticketNo != null && Faculty.SSC_studiedEducation != null && Faculty.SSC_specialization != null && Faculty.SSC_university != null && Faculty.SSC_place != null)
                                {
                                    jntuh_registered_faculty_education_log SSCeducation = new jntuh_registered_faculty_education_log();

                                    SSCeducation.facultyId = FacultyId;
                                    SSCeducation.hallticketnumber = Faculty.SSC_HallticketNo.Trim().ToUpper();
                                    SSCeducation.educationId = 1;
                                    SSCeducation.courseStudied = string.IsNullOrEmpty(Faculty.SSC_studiedEducation) ? Faculty.SSC_studiedEducation : Faculty.SSC_studiedEducation.Trim().ToUpper();
                                    SSCeducation.specialization = string.IsNullOrEmpty(Faculty.SSC_specialization) ? Faculty.SSC_specialization : Faculty.SSC_specialization.Trim();
                                    SSCeducation.passedYear = Faculty.SSC_passedYear == null ? 0 : (int)Faculty.SSC_passedYear;
                                    SSCeducation.marksPercentage = Faculty.SSC_percentage == null ? 0 : (decimal)Faculty.SSC_percentage;
                                    SSCeducation.division = Faculty.SSC_division == null ? 0 : (int)Faculty.SSC_division;
                                    SSCeducation.boardOrUniversity = string.IsNullOrEmpty(Faculty.SSC_university) ? Faculty.SSC_university : Faculty.SSC_university.Trim().ToUpper();
                                    SSCeducation.placeOfEducation = string.IsNullOrEmpty(Faculty.SSC_place) ? Faculty.SSC_place : Faculty.SSC_place.Trim().ToUpper();
                                    SSCeducation.certificate = null;
                                    SSCeducation.isActive = true;
                                    SSCeducation.createdBy = UserId;
                                    SSCeducation.createdOn = DateTime.Now;
                                    SSCeducation.updatedBy = null;
                                    SSCeducation.updatedOn = null;

                                    db.jntuh_registered_faculty_education_log.Add(SSCeducation);
                                    db.SaveChanges();
                                }
                            }
                        }
                        else if (i == 2)
                        {
                            jntuh_registered_faculty_education_log UG = education.Where(e => e.educationId == 3).Select(e => e).FirstOrDefault();

                            //UG
                            if (UG != null && Faculty.UG_HallticketNo != null && Faculty.UG_studiedEducation != null && Faculty.UG_specialization != null && Faculty.UG_university != null && Faculty.UG_place != null)
                            {
                                UG.facultyId = FacultyId;
                                UG.hallticketnumber = Faculty.UG_HallticketNo.Trim().ToUpper();
                                UG.educationId = 3;
                                UG.courseStudied = string.IsNullOrEmpty(Faculty.UG_studiedEducation) ? Faculty.UG_studiedEducation : Faculty.UG_studiedEducation.Trim().ToUpper();
                                UG.specialization = string.IsNullOrEmpty(Faculty.UG_specialization) ? Faculty.UG_specialization : Faculty.UG_specialization.Trim();
                                UG.passedYear = Faculty.UG_passedYear == null ? 0 : (int)Faculty.UG_passedYear;
                                UG.marksPercentage = Faculty.UG_percentage == null ? 0 : (decimal)Faculty.UG_percentage;
                                UG.division = Faculty.UG_division == null ? 0 : (int)Faculty.UG_division;
                                UG.boardOrUniversity = string.IsNullOrEmpty(Faculty.UG_university) ? Faculty.UG_university : Faculty.UG_university.Trim();
                                UG.placeOfEducation = string.IsNullOrEmpty(Faculty.UG_place) ? Faculty.UG_place : Faculty.UG_place.Trim();
                                UG.certificate = Faculty.UG_facultyCertificate;
                                UG.isActive = false;
                                UG.updatedBy = UserId;
                                UG.updatedOn = DateTime.Now;

                                db.Entry(UG).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (Faculty.UG_HallticketNo != null && Faculty.UG_studiedEducation != null && Faculty.UG_specialization != null && Faculty.UG_university != null && Faculty.UG_place != null)
                                {
                                    jntuh_registered_faculty_education_log UGeducation = new jntuh_registered_faculty_education_log();
                                    UGeducation.facultyId = FacultyId;
                                    UGeducation.hallticketnumber = Faculty.UG_HallticketNo.Trim().ToUpper();
                                    UGeducation.educationId = 3;
                                    UGeducation.courseStudied = string.IsNullOrEmpty(Faculty.UG_studiedEducation) ? Faculty.UG_studiedEducation : Faculty.UG_studiedEducation.Trim().ToUpper();
                                    UGeducation.specialization = string.IsNullOrEmpty(Faculty.UG_specialization) ? Faculty.UG_specialization : Faculty.UG_specialization.Trim();
                                    UGeducation.passedYear = Faculty.UG_passedYear == null ? 0 : (int)Faculty.UG_passedYear;
                                    UGeducation.marksPercentage = Faculty.UG_percentage == null ? 0 : (decimal)Faculty.UG_percentage;
                                    UGeducation.division = Faculty.UG_division == null ? 0 : (int)Faculty.UG_division;
                                    UGeducation.boardOrUniversity = string.IsNullOrEmpty(Faculty.UG_university) ? Faculty.UG_university : Faculty.UG_university.Trim();
                                    UGeducation.placeOfEducation = string.IsNullOrEmpty(Faculty.UG_place) ? Faculty.UG_place : Faculty.UG_place.Trim();
                                    UGeducation.certificate = null;
                                    UGeducation.isActive = true;
                                    UGeducation.createdBy = UserId;
                                    UGeducation.createdOn = DateTime.Now;
                                    UGeducation.updatedBy = null;
                                    UGeducation.updatedOn = null;

                                    db.jntuh_registered_faculty_education_log.Add(UGeducation);
                                    db.SaveChanges();
                                }
                            }

                        }
                        else if (i == 3)
                        {
                            jntuh_registered_faculty_education_log PG = education.Where(e => e.educationId == 4).Select(e => e).FirstOrDefault();

                            //UG
                            if (PG != null && Faculty.PG_HallticketNo != null && Faculty.PG_studiedEducation != null && Faculty.PG_specialization != null && Faculty.PG_university != null && Faculty.PG_place != null)
                            {
                                PG.facultyId = FacultyId;
                                PG.hallticketnumber = Faculty.PG_HallticketNo.Trim().ToUpper();
                                PG.educationId = 4;
                                PG.courseStudied = string.IsNullOrEmpty(Faculty.PG_studiedEducation) ? Faculty.PG_studiedEducation : Faculty.PG_studiedEducation.Trim().ToUpper();
                                PG.specialization = string.IsNullOrEmpty(Faculty.PG_specialization) ? Faculty.PG_specialization : Faculty.PG_specialization.Trim();
                                PG.passedYear = Faculty.PG_passedYear == null ? 0 : (int)Faculty.PG_passedYear;
                                PG.marksPercentage = Faculty.PG_percentage == null ? 0 : (decimal)Faculty.PG_percentage;
                                PG.division = Faculty.PG_division == null ? 0 : (int)Faculty.PG_division;
                                PG.boardOrUniversity = string.IsNullOrEmpty(Faculty.PG_university) ? Faculty.PG_university : Faculty.PG_university.Trim();
                                PG.placeOfEducation = string.IsNullOrEmpty(Faculty.PG_place) ? Faculty.PG_place : Faculty.PG_place.Trim();
                                PG.certificate = Faculty.PG_facultyCertificate;
                                PG.isActive = false;
                                PG.updatedBy = UserId;
                                PG.updatedOn = DateTime.Now;

                                db.Entry(PG).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (Faculty.PG_HallticketNo != null && Faculty.PG_studiedEducation != null && Faculty.PG_specialization != null && Faculty.PG_university != null && Faculty.PG_place != null)
                                {
                                    jntuh_registered_faculty_education_log PGeducation = new jntuh_registered_faculty_education_log();

                                    PGeducation.facultyId = FacultyId;
                                    PGeducation.hallticketnumber = Faculty.PG_HallticketNo.Trim().ToUpper();
                                    PGeducation.educationId = 4;
                                    PGeducation.courseStudied = string.IsNullOrEmpty(Faculty.PG_studiedEducation) ? Faculty.PG_studiedEducation : Faculty.PG_studiedEducation.Trim().ToUpper();
                                    PGeducation.specialization = string.IsNullOrEmpty(Faculty.PG_specialization) ? Faculty.PG_specialization : Faculty.PG_specialization.Trim();
                                    PGeducation.passedYear = Faculty.PG_passedYear == null ? 0 : (int)Faculty.PG_passedYear;
                                    PGeducation.marksPercentage = Faculty.PG_percentage == null ? 0 : (decimal)Faculty.PG_percentage;
                                    PGeducation.division = Faculty.PG_division == null ? 0 : (int)Faculty.PG_division;
                                    PGeducation.boardOrUniversity = string.IsNullOrEmpty(Faculty.PG_university) ? Faculty.PG_university : Faculty.PG_university.Trim();
                                    PGeducation.placeOfEducation = string.IsNullOrEmpty(Faculty.PG_place) ? Faculty.PG_place : Faculty.PG_place.Trim();
                                    PGeducation.certificate = null;
                                    PGeducation.isActive = true;
                                    PGeducation.createdBy = UserId;
                                    PGeducation.createdOn = DateTime.Now;
                                    PGeducation.updatedBy = null;
                                    PGeducation.updatedOn = null;

                                    db.jntuh_registered_faculty_education_log.Add(PGeducation);
                                    db.SaveChanges();
                                }
                            }

                        }
                        else if (i == 4)
                        {
                            jntuh_registered_faculty_education_log MPhil = education.Where(e => e.educationId == 5).Select(e => e).FirstOrDefault();

                            //MPhil
                            if (MPhil != null && Faculty.MPhil_studiedEducation != null && Faculty.MPhil_specialization != null && Faculty.MPhil_university != null && Faculty.MPhil_place != null)
                            {

                                MPhil.facultyId = FacultyId;
                                MPhil.hallticketnumber = Faculty.MPhil_HallticketNo.Trim().ToUpper();
                                MPhil.educationId = 5;
                                MPhil.courseStudied = string.IsNullOrEmpty(Faculty.MPhil_studiedEducation) ? Faculty.MPhil_studiedEducation : Faculty.MPhil_studiedEducation.Trim().ToUpper();
                                MPhil.specialization = string.IsNullOrEmpty(Faculty.MPhil_specialization) ? Faculty.MPhil_specialization : Faculty.MPhil_specialization.Trim();
                                MPhil.passedYear = Faculty.MPhil_passedYear == null ? 0 : (int)Faculty.MPhil_passedYear;
                                MPhil.marksPercentage = Faculty.MPhil_percentage == null ? 0 : (decimal)Faculty.MPhil_percentage;
                                MPhil.division = Faculty.MPhil_division == null ? 0 : (int)Faculty.MPhil_division;
                                MPhil.boardOrUniversity = string.IsNullOrEmpty(Faculty.MPhil_university) ? Faculty.MPhil_university : Faculty.MPhil_university.Trim();
                                MPhil.placeOfEducation = string.IsNullOrEmpty(Faculty.MPhil_place) ? Faculty.MPhil_place : Faculty.MPhil_place.Trim();
                                MPhil.certificate = Faculty.MPhil_facultyCertificate;
                                MPhil.isActive = false;
                                MPhil.updatedBy = UserId;
                                MPhil.updatedOn = DateTime.Now;

                                db.Entry(MPhil).State = EntityState.Modified;
                                db.SaveChanges();

                            }
                            else
                            {
                                if (Faculty.MPhil_HallticketNo != null && Faculty.MPhil_studiedEducation != null && Faculty.MPhil_specialization != null && Faculty.MPhil_university != null && Faculty.MPhil_place != null)
                                {
                                    jntuh_registered_faculty_education_log MPhileducation = new jntuh_registered_faculty_education_log();
                                    MPhileducation.facultyId = FacultyId;
                                    MPhileducation.hallticketnumber = Faculty.MPhil_HallticketNo.Trim().ToUpper();
                                    MPhileducation.educationId = 5;
                                    MPhileducation.courseStudied = string.IsNullOrEmpty(Faculty.MPhil_studiedEducation) ? Faculty.MPhil_studiedEducation : Faculty.MPhil_studiedEducation.Trim().ToUpper();
                                    MPhileducation.specialization = string.IsNullOrEmpty(Faculty.MPhil_specialization) ? Faculty.MPhil_specialization : Faculty.MPhil_specialization.Trim();
                                    MPhileducation.passedYear = Faculty.MPhil_passedYear == null ? 0 : (int)Faculty.MPhil_passedYear;
                                    MPhileducation.marksPercentage = Faculty.MPhil_percentage == null ? 0 : (decimal)Faculty.MPhil_percentage;
                                    MPhileducation.division = Faculty.MPhil_division == null ? 0 : (int)Faculty.MPhil_division;
                                    MPhileducation.boardOrUniversity = string.IsNullOrEmpty(Faculty.MPhil_university) ? Faculty.MPhil_university : Faculty.MPhil_university.Trim();
                                    MPhileducation.placeOfEducation = string.IsNullOrEmpty(Faculty.MPhil_place) ? Faculty.MPhil_place : Faculty.MPhil_place.Trim();
                                    MPhileducation.certificate = null;
                                    MPhileducation.isActive = true;
                                    MPhileducation.createdBy = UserId;
                                    MPhileducation.createdOn = DateTime.Now;
                                    MPhileducation.updatedBy = null;
                                    MPhileducation.updatedOn = null;

                                    db.jntuh_registered_faculty_education_log.Add(MPhileducation);
                                    db.SaveChanges();
                                }
                            }

                        }
                        else if (i == 5)
                        {
                            jntuh_registered_faculty_education_log PhD = education.Where(e => e.educationId == 6).Select(e => e).FirstOrDefault();

                            //PhD
                            if (PhD != null && Faculty.PhD_studiedEducation != null && Faculty.PhD_specialization != null && Faculty.PhD_university != null && Faculty.PhD_place != null)
                            {
                                PhD.facultyId = FacultyId;
                                PhD.hallticketnumber = Faculty.PhD_HallticketNo.Trim().ToUpper();
                                PhD.educationId = 6;
                                PhD.courseStudied = string.IsNullOrEmpty(Faculty.PhD_studiedEducation) ? Faculty.PhD_studiedEducation : Faculty.PhD_studiedEducation.Trim().ToUpper();
                                PhD.specialization = string.IsNullOrEmpty(Faculty.PhD_specialization) ? Faculty.PhD_specialization : Faculty.PhD_specialization.Trim();
                                PhD.passedYear = Faculty.PhD_passedYear == null ? 0 : (int)Faculty.PhD_passedYear;
                                PhD.marksPercentage = Faculty.PhD_percentage == null ? 0 : (decimal)Faculty.PhD_percentage;
                                PhD.division = Faculty.PhD_division == null ? 0 : (int)Faculty.PhD_division;
                                PhD.boardOrUniversity = string.IsNullOrEmpty(Faculty.PhD_university) ? Faculty.PhD_university : Faculty.PhD_university.Trim();
                                PhD.placeOfEducation = string.IsNullOrEmpty(Faculty.PhD_place) ? Faculty.PhD_place : Faculty.PhD_place.Trim();
                                PhD.certificate = Faculty.PhD_facultyCertificate;
                                PhD.isActive = false;
                                PhD.updatedBy = UserId;
                                PhD.updatedOn = DateTime.Now;

                                db.Entry(PhD).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (Faculty.PhD_HallticketNo != null && Faculty.PhD_studiedEducation != null && Faculty.PhD_specialization != null && Faculty.PhD_university != null && Faculty.PhD_place != null)
                                {
                                    jntuh_registered_faculty_education_log PhDeducation = new jntuh_registered_faculty_education_log();
                                    PhDeducation.facultyId = FacultyId;
                                    PhDeducation.hallticketnumber = Faculty.PhD_HallticketNo.Trim().ToUpper();
                                    PhDeducation.educationId = 6;
                                    PhDeducation.courseStudied = string.IsNullOrEmpty(Faculty.PhD_studiedEducation) ? Faculty.PhD_studiedEducation : Faculty.PhD_studiedEducation.Trim().ToUpper();
                                    PhDeducation.specialization = string.IsNullOrEmpty(Faculty.PhD_specialization) ? Faculty.PhD_specialization : Faculty.PhD_specialization.Trim();
                                    PhDeducation.passedYear = Faculty.PhD_passedYear == null ? 0 : (int)Faculty.PhD_passedYear;
                                    PhDeducation.marksPercentage = Faculty.PhD_percentage == null ? 0 : (decimal)Faculty.PhD_percentage;
                                    PhDeducation.division = Faculty.PhD_division == null ? 0 : (int)Faculty.PhD_division;
                                    PhDeducation.boardOrUniversity = string.IsNullOrEmpty(Faculty.PhD_university) ? Faculty.PhD_university : Faculty.PhD_university.Trim();
                                    PhDeducation.placeOfEducation = string.IsNullOrEmpty(Faculty.PhD_place) ? Faculty.PhD_place : Faculty.PhD_place.Trim();
                                    PhDeducation.certificate = null;
                                    PhDeducation.isActive = true;
                                    PhDeducation.createdBy = UserId;
                                    PhDeducation.createdOn = DateTime.Now;
                                    PhDeducation.updatedBy = null;
                                    PhDeducation.updatedOn = null;

                                    db.jntuh_registered_faculty_education_log.Add(PhDeducation);
                                    db.SaveChanges();
                                }
                            }

                        }
                        else if (i == 6)
                        {
                            jntuh_registered_faculty_education_log Others = education.Where(e => e.educationId == 8).Select(e => e).FirstOrDefault();

                            //Others
                            if (Others != null)
                            {
                                Others.facultyId = FacultyId;
                                Others.educationId = 8;
                                Others.certificate = Faculty.faculty_AllCertificates;
                                Others.isActive = false;
                                Others.updatedBy = UserId;
                                Others.updatedOn = DateTime.Now;

                                if (Faculty.faculty_AllCertificates != null)
                                {
                                    db.Entry(Others).State = EntityState.Modified;
                                    db.SaveChanges();
                                }
                                else
                                {
                                    TempData["Error"] = "Certificate is missing.Please Upload Data Again";
                                }

                            }
                            else
                            {
                                if (Faculty.All_Certificates != null)
                                {
                                    jntuh_registered_faculty_education_log Otherseducation = new jntuh_registered_faculty_education_log();
                                    Otherseducation.facultyId = FacultyId;
                                    Otherseducation.hallticketnumber = "Others";
                                    Otherseducation.educationId = 8;
                                    Otherseducation.courseStudied = "Others";
                                    Otherseducation.specialization = "Others";
                                    Otherseducation.passedYear = 0;
                                    Otherseducation.marksPercentage = 0;
                                    Otherseducation.division = 0;
                                    Otherseducation.boardOrUniversity = "Others";
                                    Otherseducation.placeOfEducation = "Others";
                                    Otherseducation.certificate = Faculty.faculty_AllCertificates;
                                    Otherseducation.isActive = true;
                                    Otherseducation.createdBy = UserId;
                                    Otherseducation.createdOn = DateTime.Now;
                                    Otherseducation.updatedBy = null;
                                    Otherseducation.updatedOn = null;

                                    db.jntuh_registered_faculty_education_log.Add(Otherseducation);
                                    db.SaveChanges();
                                }
                            }

                        }
                    }

                }
                else
                {

                }

                #endregion

                TempData["Success"] = "Faculty Education Details are Saved Successfully";
                return RedirectToAction("FacultyEducationDetails");
            }
            else
            {
                TempData["Error"] = "Invallid RegistrationNumber";
                return RedirectToAction("FacultyEducationDetails");
            }
        }

        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult FacultySubjectsTaught(string id)
        {
            MembershipUser userdata = Membership.GetUser(User.Identity.Name);

            if (userdata == null)
            {
                return RedirectToAction("LogOn", "Account");
            }
            int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            int fID = 0;
            string RegistrationNumber = string.Empty;
            if (id != null)
            {
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(id.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]));
            }
            else if (userId != null)
            {
                RegistrationNumber = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(e => e.RegistrationNumber).FirstOrDefault();
            }
            else
            {
                return RedirectToAction("LogOn", "Account");
            }

            var registered_faculty = new jntuh_registered_faculty();
            if (fID != 0)
            {
                registered_faculty = db.jntuh_registered_faculty.Where(a => a.id == fID).FirstOrDefault();
            }
            else
            {
                registered_faculty = db.jntuh_registered_faculty.Where(a => a.RegistrationNumber == RegistrationNumber).FirstOrDefault();
            }

            //Black List and Verification Status Flags Checking.....
            var RegisteredFacultyId = db.jntuh_registered_faculty.Where(e => e.id == registered_faculty.id && (e.Blacklistfaculy == true || e.AbsentforVerification == true)).Select(e => e.id).FirstOrDefault();
            if (RegisteredFacultyId != 0)
            {
                return RedirectToAction("ViewFacultyDetails", new { fid = id });
            }

            FacultySubjectsTaught Faculty = new FacultySubjectsTaught();
            Faculty.facultyId = registered_faculty.id;
            Faculty.RegistrationNumber = registered_faculty.RegistrationNumber;
            Faculty.Name = registered_faculty.FirstName + " " + registered_faculty.MiddleName + " " + registered_faculty.LastName;
            Faculty.firstName = registered_faculty.FirstName;
            Faculty.lastName = registered_faculty.LastName;

            List<string> DefaultSubjects = new List<string>() { "3G NETWORKS", "4G TECHNOLOGIES", "AC INSTRUMENTATION AND CONTROL SYSTEMS", "ACCOUNTING AND FINANCIAL MANAGEMENT", "ACTIVE PHARMACEUTICAL INGREDIENT PROCESS DEVELOPMENT", "ACTUATORS AND SENSORS", "AD HOC AND SENSOR NETWORKS", "AD HOC WIRELESS NETWORKS", "ADAPTIVE AND LEARNING CONTROL", "ADAPTIVE CONTROL SYSTEMS", "ADAPTIVE CONTROL THEORY", "ADAPTIVE MANUFACTURING PROCESSES", "ADAPTIVE SIGNAL PROCESSING", "ADDITIVE MANUFACTURING", "ADDITIVE MANUFACTURING TECHNOLOGIES", "ADHOC AND SENSOR NETWORKS", "ADHOC AND WIRELESS SENSOR NETWORKS", "ADHOC WIRELESS NETWORKS", "ADHOC WIRELESS SENSOR NETWORKS ", "ADVANCE INSTRUMENTATION CONTROL SYSTEMS", "ADVANCE OPERATING SYSTEMS", "ADVANCED  DRUG DELIVERY SYSTEMS", "ADVANCED ALGORITHMS", "ADVANCED BIOMEDICAL SIGNAL PROCESSING", "ADVANCED BIOSTATISTICS AND RESEARCH METHODS", "ADVANCED CAD", "ADVANCED CAD (PROJECT BASED)", "ADVANCED CASTING AND WELDING TECHNOLOGIES", "ADVANCED CHEMICAL ENGINEERING THERMODYNAMICS", "ADVANCED CHEMICAL REACTION ENGINEERING", "ADVANCED CHEMISTRY OF NATURAL PRODUCTS", "ADVANCED CHEMISTRY OF NATURAL PRODUCTS PRACTICAL", "ADVANCED CLINICAL PHARMACY", "ADVANCED CNC TECHNOLOGY", "ADVANCED COMMUNICATION SYSTEMS", "ADVANCED COMMUNICATIONS AND NETWORKS", "ADVANCED COMPUTATIONAL AERODYNAMICS", "ADVANCED COMPUTER AIDED DESIGN", "ADVANCED COMPUTER ARCHITECTURE ", "ADVANCED COMPUTER GRAPHICS", "ADVANCED COMPUTER NETWORKS", "ADVANCED CONCRETE TECHNOLOGY", "ADVANCED CONTROL SYSTEMS", "ADVANCED DATA COMMUNICATIONS", "ADVANCED DATA MINING", "ADVANCED DATA STRUCTURES AND ALGORITHMS", "ADVANCED DATABASES", "ADVANCED DIGITAL SIGNAL PROCESSING", "ADVANCED DIGITAL SYSTEM DESIGN", "ADVANCED DRUG DELIVERY SYSTEMS", "ADVANCED ELECTROMAGNETIC THEORY", "ADVANCED EM FIELDS", "ADVANCED ENGINEERING DESIGN", "ADVANCED FEM", "ADVANCED FINITE ELEMENT ANALYSIS", "ADVANCED FINITE ELEMENT METHODS", "ADVANCED FLUID MECHANICS", "ADVANCED FOUNDATION ENGINEERING", "ADVANCED GEO SPATIAL TECHNOLOGY", "ADVANCED GIS", "ADVANCED HEAT AND MASS TRANSFER", "ADVANCED HEAT TRANSFER", "ADVANCED I.C. ENGINES", "ADVANCED IMAGE PROCESSING", "ADVANCED IMMUNOLOGY AND IMMUNOTECHNOLOGY", "ADVANCED INSTRUMENTAL ANALYSIS", "ADVANCED INSTRUMENTATION SYSTEMS", "ADVANCED JAVA AND WEB PROGRAMMING", "ADVANCED KINEMATICS AND DYNAMIC", "ADVANCED MACHINE DESIGN", "ADVANCED MANUFACTURING PROCESSES", "ADVANCED MATERIALS", "ADVANCED MATERIALS FOR THERMAL SYSTEMS", "ADVANCED MATHEMATICS IN AEROSPACE ENGINEERING", "ADVANCED MECHANICAL ENGINEERING DESIGN", "ADVANCED MECHANICS OF COMPOSITE MATERIALS", "ADVANCED MECHANICS OF MACHINERY", "ADVANCED MECHANICS OF SOLIDS", "ADVANCED MECHATRONICS", "ADVANCED MEDICAL CHEMISTRY III", "ADVANCED MEDICAL CHEMISTRY III PRACTICAL", "ADVANCED MEDICAL IMAGING", "ADVANCED MEDICAL IMAGING TECHNIQUES", "ADVANCED METAL FORMING", "ADVANCED MICROPROCESSORS", "ADVANCED NATURAL GAS ENGINEERING", "ADVANCED NETWORK PROGRAMMING", "ADVANCED OPERATING SYSTEMS", "ADVANCED OPTIMIZATION TECHNIQUES", "ADVANCED OPTIMIZATIONS TECHNIQUES AND APPLICATION", "ADVANCED PHARMACEUTICAL ANALYSIS ", "ADVANCED PHARMACEUTICAL ORGANIC CHEMISTRY  I", "ADVANCED PHARMACEUTICAL ORGANIC CHEMISTRY II", "ADVANCED PHARMACEUTICAL ORGANIC CHEMISTRY PRACTICAL", "ADVANCED PHARMACEUTICAL TECHNOLOGY", "ADVANCED PHARMACEUTICAL TECHNOLOGY I", "ADVANCED PHARMACEUTICAL TECHNOLOGY II", "ADVANCED PHARMACOGNOSY", "ADVANCED PHARMACOGNOSY I ", "ADVANCED PHARMACOGNOSY II", "ADVANCED PHARMACOLOGY  I", "ADVANCED PHARMACOLOGY II", "ADVANCED PHYSICAL PHARMACEUTICS", "ADVANCED POWER PLANT ENGINEERING", "ADVANCED POWER SYSTEM ANALYSIS ", "ADVANCED POWER SYSTEM PROTECTION ", "ADVANCED PROCESS CONTROL INSTRUMENTATION", "ADVANCED PROCESS CONTROL.", "ADVANCED R.C. DESIGN ", "ADVANCED REINFORCED CONCRETE DESIGN", "ADVANCED SCREENING METHODS AND TOXICOLOGY", "ADVANCED SOIL MECHANICS", "ADVANCED STEEL DESIGN", "ADVANCED STRUCTURAL ANALYSIS ", "ADVANCED STRUCTURAL DESIGN", "ADVANCED SURVEYING AND CARTOGRAPHY ", "ADVANCED TELECOMMUNICATION TECHNOLOGIES", "ADVANCED TESTING METHODS", "ADVANCED THERMODYNAMICS", "ADVANCED TOOL DESIGN", "ADVANCED TOPICS IN AIR TRAFFIC MANAGEMENT SYSTEMS", "ADVANCED TRANSPORT PHENOMENA", "ADVANCED WASTE WATER TREATMENT ", "ADVANCED WATER SUPPLY SYSTEMS ", "ADVANCES IN DRUG DELIVERY SYSTEMS", "ADVANCES IN PHARMACOTHERAPY", "ADVERTISING AND SALES MANAGEMENT", "AERO ELASTICITY", "AERO SPACE PROPULSION II", "AERODYNAMICS I", "AERODYNAMICS II", "AERODYNAMICS OF FLIGHT VEHICLES", "AEROELASTICITY OF LAUNCH VEHICLES", "AEROSPACE PROPULSION", "AEROSPACE PROPULSION I", "AEROSPACE SENSORS AND MEASUREMENT SYSTEMS", "AEROSPACE VEHICLE STRUCTURES I", "AEROSPACE VEHICLE STRUCTURES II", "AEROTHERMODYNAMICS OF HYPERSONIC FLIGHT", "AGRICULTURAL AND FARM STRUCTURES", "AGRICULTURAL EXTENSION TECHNIQUES AND BUSINESS MANAGEMENT", "AGRICULTURAL POLLUTION AND CONTROL", "AGRICULTURAL PROCESS ENGINEERING", "AGRO INDUSTRIES AND BIPRODUCT UTILIZATION", "AI TECHNIQUES", "AI TECHNIQUES IN ELECTRICAL ENGINEERING", "AI TECHNIQUES IN ELECTRICAL POWER ENGINEERING", "AIR BREATHING PROPULSION", "AIR CONDITIONING", "AIR CONDITIONING I", "AIR POLLUTION AND CONTROL", "AIR TRAFFIC CONTROL", "AIR TRANSPORTATION SYSTEMS", "AIRCONDITIONING II", "AIRCRAFT CONTROL AND SIMULATION", "AIRCRAFT ENGINEERING DRAWING WITH CAD", "AIRCRAFT MAINTENANCE ENGINEERING", "AIRCRAFT PERFORMANCE", "AIRCRAFT PRODUCTION TECHNOLOGY", "AIRCRAFT STRUCTURAL ANALYSIS", "AIRCRAFT SYSTEMS", "AIRFRAME STRUCTURAL DESIGN", "AIRLINE PLANNING, SCHEDULING AND OPERATIONS", "AIRLINES OPERATIONS AND SCHEDULING", "AIRPORT ENGINEERING", "AIRPORT OPERATIONS", "AIRPORT PLANNING AND OPERATIONS", "ALGORITHMICS", "ALGORITHMS FOR VLSI DESIGN AUTOMATION", "ALTERNATE FUELS", "ALTERNATE FUELS FOR I.C. ENGINES", "ALTERNATIVE FUELS FOR AUTOMOBILES", "ALTERNATIVE REFRIGERANTS", "ANALOG AND DIGITAL I.C. APPLICATIONS", "ANALOG COMMUNICATIONS", "ANALOG ELECTRONICS", "ANALYSIS AND DESIGN OF SHELLS AND FOLDED PLATES", "ANALYSIS AND DESIGN OF SIGNAL CONDITIONING CIRCUITS", "ANALYSIS AND SYNTHESIS OF MECHANISMS", "ANALYSIS OF COMPOSITE STRUCTURES", "ANALYSIS OF POWER CONVERTERS", "ANALYTICAL CHEMISTRY", "ANALYTICAL INSTRUMENTATION", "ANALYTICAL METHOD VALIDATION AND COPYRIGHTS AND TRADEMARKS", "ANALYTICAL METHOD VALIDATION COPY RIGHTS AND TRADE MARKS", "ANALYTICAL METHOD VALIDATION, COPY RIGHTS AND TRADE MARKS", "ANALYTICAL METHODS IN BIOTECHNOLOGY", "ANATOMY AND PHYSIOLOGY", "ANATOMY PHYSIOLOGY AND HEALTH EDUCATION", "ANATOMY PHYSIOLOGY AND PATHOPHYSIOLOGY", "ANATOMY, PHYSIOLOGY AND HEALTH EDUCATION I", "ANATOMY, PHYSIOLOGY AND HEALTH EDUCATION II", "ANDROID APPLICATION DEVELOPMENT", "ANIMAL BIOTECHNOLOGY", "ANIMAL CELL SCIENCE AND TECHNOLOGY", "ANNUAL REPORT ANALYSIS SEMINAR", "ANTENNAS AND WAVE PROPAGATION", "APPLICATIONS OF NETWORK SECURITY", "APPLIED BIOCHEMISTRY", "APPLIED BIOPHARMACEUTICS AND PHARMACOKINETICS", "APPLIED CRYPTOGRAPHY", "APPLIED ELECTRICAL ENGINEERING", "APPLIED INDUSTRIAL HYDRAULICS", "APPLIED INDUSTRIAL PNEUMATICS ", "APPLIED NUMERICAL METHODS", "APPLIED PHYSICS", "APPLIED RANDOM VIBRATIONS", "APPLIED STATISTICS", "APPLIED TRIOBOLOGY", "ARM ARCHITECTURES", "ARM PROCESSOR ARCHITECTURES ", "ARTIFICIAL INTELLIGENCE", "ARTIFICIAL NEURAL NETWORKS", "AUTO MOBILE AIR CONDITIONING", "AUTOMATA AND COMPILER DESIGN", "AUTOMATION AND ROBOTICS", "AUTOMATION IN MANUFACTURING", "AUTOMOBILE ENGINEERING", "AUTOMOTIVE AIR CONDITIONING", "AUTOMOTIVE CHASSIS AND SUSPENSION", "AUTOMOTIVE ELECTRICAL AND AUTOTRONICS", "AUTOMOTIVE ENGINES", "AUTOMOTIVE POLLUTION AND CONTROL", "AUTOTRONICS AND VEHICLE INTELLIGENCE", "AVIONICS", "AVIONICS AND INSTRUMENT SYSTEMS", "BANKING,INSURANCE AND RISK MANAGEMENT", "BASIC ELECTRICAL AND ELECTRONICS ENGINEERING", "BASIC ELECTRICAL ENGINEERING", "BASIC ELECTRONICS", "BASIC ENGINEERING MATHEMATICS", "BASIC POWER PLANT ENGINEERING", "BASICS OF STRUCTURAL ENGINEERING", "BIG DATA ANALYSTICS (ASSOCIATE ANALYTICS II)", "BIG DATA ANALYTICS", "BIO CHEMICAL ENGINEERING", "BIO ETHICS BIO SAFETY AND INTELLECTUAL PROPERTY RIGHTS", "BIO FLUIDS AND MECHANICS", "BIO INFORMATICS", "BIO MEDICAL EQUIPMENT I", "BIO MEDICAL INSTRUMENTATION", "BIO MEDICAL SIGNAL PROCESSING", "BIO MEMS AND NANOTECHNOLOGY ", "BIO METRICS", "BIO SENSORS", "BIO TRANSDUCERS AND APPLICATIONS", "BIOBUSINESS MANAGEMENT", "BIOCATALYSIS AND ENZYME MECHANISMS", "BIOCHEMICAL AND BIOPHYSICAL TECHNICS", "BIOCHEMICAL REACTION ENGINEERING", "BIOCHEMISTRY", "BIOCHEMISTRY AND METABOLIC REGULATION", "BIOELECTRICITY", "BIOFLUID MECHANICS", "BIOINFORMATICS", "BIOINFORMATICS AND APPLICATIONS ", "BIOLOGICAL CONTROL SYSTEMS", "BIOMATERIALS", "BIOMEDICAL APPLICATION OF NANOTECHNOLOGY", "BIOMEDICAL EQUIPMENT", "BIOMEDICAL EQUIPMENT II", "BIOMEDICAL INSTRUMENTATION", "BIOMEDICAL SIGNAL AND IMAGE PROCESSING", "BIOMEDICAL SIGNAL PROCESSING", "BIOMEMS AND NANOTECHNOLOGY", "BIOMETRIC SYSTEMS", "BIOMETRIC SYSTEMS AND BIOMETRIC IMAGE PROCESSING", "BIOMETRICS", "BIOPHARMACEUTICALS", "BIOPHARMACEUTICS AND PHARMACOKINETICS", "BIOPROCESS ENGINEERING", "BIOPROCESS OPTIMIZATION AND PLANT DESIGN", "BIOREACTOR ENGINEERING", "BIOSTATICS AND COMPUTER APPLICATION", "BIOSTATISTICS", "BIOSTATISTICS AND RESEARCH METHODOLOGY", "BIOSTATISTICS AND RESEARCH METHODS", "BIOTRANSDUCERS AND APPLICATIONS", "BREAKDOWN PHENOMENON IN INSULATION", "BRIDGE ENGINEERING ", "BROADBAND COMMUNICATIONS", "BUILDING MATERIAL CONSTRUCTION AND PLANNING", "BUILDING PLANNING AND CONSTRUCTION", "BUILDING SERVICES", "BULK SOLIDS HANDLING EQUIPMENT", "BUSINESS BEST PRACTICES AND SUCCESS STORIES OF EMERGING LEADERS SEMINAR", "BUSINESS BEST PRACTICES SEMINAR", "BUSINESS COMMUNICATION PRACTICAL", "BUSINESS COMMUNICATION SEMINAR", "BUSINESS ECONOMICS", "BUSINESS ECONOMICS AND FINANCIAL ANALYSIS", "BUSINESS ENVIRONMENT", "BUSINESS ETHICS AND CORPORATE GOVERNANCE", "BUSINESS INTELLIGENCE (SYSTEMS)", "BUSINESS INTELLIGENCE AND BIG DATA", "BUSINESS INTELLIGENCE(SYSTEM)", "BUSINESS LAW AND ETHICS", "BUSINESS LAWS AND BUSINESS ENVIRONMENT", "BUSINESS LAWS AND REGULATIONS", "BUSINESS PROCESS MANAGEMENT", "BUSINESS RESEARCH METHODOLOGY", "BUSINESS STATISTICS", "CAD CAM", "CAD FOR VLSI CIRCUITS", "CANCER BIOLOGY", "CARBON NANO TUBES AND THEIR APPLICATIONS", "CASE STUDIES IN REAL TIME APPLICATIONS", "CELL BIOLOGY", "CELLULAR AND MOBILE COMMUNICATIONS", "CERAMIC SCIENCE AND TECHNOLOGY", "CFD CSA SOLUTIONS USING ANSYSNASTRAN", "CHARACTERIZATION OF NANO MATERIALS", "CHEMICAL ENGINEERING FLUID MECHANICS", "CHEMICAL ENGINEERING MATHEMATICS", "CHEMICAL ENGINEERING PLANT DESIGN AND ECONOMICS", "CHEMICAL ENGINEERING THERMODYNAMICS I", "CHEMICAL ENGINEERING THERMODYNAMICS II", "CHEMICAL PROCESS CALCULATIONS", "CHEMICAL PROCESS EQUIPMENT DESIGN", "CHEMICAL PROCESS OPTIMIZATION", "CHEMICAL REACTION ENGINEERING I", "CHEMICAL REACTION ENGINEERING II", "CHEMISTRY", "CHEMISTRY OF NATURAL PRODUCTS", "CIVIL ENGINEERING MATERIALS AND RECENT ADVANCES", "CLIMATOLOGY", "CLINICAL INSTRUMENTATION", "CLINICAL PHARMACOKINETICS AND THERAPEUTIC DRUG MONITORING", "CLINICAL PHARMACOLOGY AND PHARMACOTHERAPEUTICS", "CLINICAL PHARMACY PRACTICE ", "CLINICAL RESEARCH", "CLINICAL RESEARCH AND PHARMACOVIGILANCE ", "CLINICAL SCIENCES", "CLINICAL SCIENCES I", "CLINICAL SCIENCES II", "CLINICAL TOXICOLOGY", "CLINICAL TRIALS AND REGULATORY AFFAIRS", "CLOUD COMPUTING ", "CLOUD COMPUTING AND DISTRIBUTED COMPUTING", "CLOUD COMPUTING AND SECURITY ", "CMOS ANALOG INTEGRATED CIRCUIT DESIGN ", "CMOS DIGITAL INTEGRATED CIRCUIT DESIGN ", "CMOS MIXED SIGNAL CIRCUIT DESIGN", "CMOS VLSI DESIGN ", "CNC TECHNOLOGY", "COAL BED METHANE ENGINEERING", "CODING THEORY AND TECHNIQUES", "COGNITIVE RADIO NETWORKS ", "COLD STORAGE TECHNOLOGYAND SYSTEMS", "COLLOIDAL INTERFACIAL ENGINEERING", "ELECTRICAL ENGINEERING", "ELECTRICAL ENGINEERING MATERIALS", "ELECTRICAL ESTIMATION AND COSTING", "ELECTRICAL INSTALLATION AND SAFETY", "ELECTRICAL MACHINES I", "ELECTRICAL MACHINES II", "ELECTRICAL MACHINES III", "ELECTRICAL MEASUREMENTS AND INSTRUMENTATION ", "ELECTRICAL SYSTEMS", "ELECTRICAL TECHNOLOGY", "ELECTRO METALLURGY AND CORROSION", "ELECTROCHEMICAL ENGINEERING", "ELECTROMAGNETIC FIELDS", "ELECTROMAGNETIC THEORY AND TRANSMISSION LINES", "ELECTRONIC CIRCUIT ANALYSIS", "ELECTRONIC CIRCUITS", "ELECTRONIC DEVICES AND CIRCUITS", "ELECTRONIC INSTRUMENTATION", "ELECTRONIC MEASUREMENTS AND ", "INSTRUMENTATION", "ELECTRONIC SYSTEM DESIGN", "ELECTROOPTIC SYSTEMS", "ELEMENTS OF EARTHQUAKE ENGINEERING", "ELEMENTS OF ELECTRICAL AND ELECTRONICS ENGINEERING", "ELEMENTS OF MECHANICAL ENGINEERING", "ELEMENTS OF PHOTOGRAMMETRY", "ELEMENTS OF SOLID STATE PHYSICS", "EMBEDDED AND REAL TIME SYSTEMS", "EMBEDDED C", "EMBEDDED COMPUTING", "EMBEDDED LINUX PROGRAMMING", "EMBEDDED NETWORKING", "EMBEDDED REAL TIME OPERATING SYSTEMS", "EMBEDDED SYSTEM DESIGN", "EMBEDDED SYSTEMS", "EMBEDDED SYSTEMS AND CONTROL", "EMBEDDED SYSTEMS DESIGN", "EMBEDDED SYSTEMS DEVELOPMENT", "EMBEDDED SYSTEMS FOR POWER ELECTRONIC APPLICATIONS", "EMI EMC", "ENERGY AUDITING CONSERVATION AND MANAGEMENT", "ENERGY CONSERVATION", "ENERGY CONVERSION AND MANAGEMENT", "ENERGY ENGINEERING", "ENERGY FROM WASTE", "ENERGY MANAGEMENT", "ENERGY OPTIMIZATION TECHNIQUES", "ENERGY SCENARIO", "ENERGY SCENARIOS", "ENERGY STORAGE SYSTEMS", "ENGINEERING ANALYSIS OF FLIGHT VEHICLES", "ENGINEERING CHEMISTRY", "ENGINEERING DESIGN", "ENGINEERING DRAWING", "ENGINEERING GEOLOGY", "ENGINEERING GRAPHICS", "ENGINEERING MECHANICS", "ENGINEERING METROLOGY", "ENGINEERING OF GROUND", "ENGINEERING OPTIMIZATION", "ENGINEERING PHYSICS", "ENGINEERING PHYSICS I", "ENGINEERING PHYSICS II", "ENGINEERING PROPERTIES OF BIOLOGICAL MATERIALS AND FOOD QUALITY", "ENGINEERING RESEARCH AND METHODOLOGY", "ENGINEERING RESEARCH METHODOLOGY", "ENGINEERING WORKSHOP", "ENGINEERING WORKSHOP OR IT WORKSHOP", "ENGLISH", "ENHANCED OIL RECOVERY TECHNIQUES", "ENTERPRISE RESOURCE PLANNING", "ENTERPRISE RESOURCE PLANNING(SYSTEM)", "ENTREPRENEURSHIP", "ENTREPRENEURSHIP AND SMALL BUSINESS ENTERPRISES", "ENTREPRENEURSHIP MANAGEMENT", "ENTREPRENUERSHIP", "ENVIRONMENT AND ECOLOGY", "ENVIRONMENT AND SAFETY ENGINEERING", "ENVIRONMENTAL BIOTECHNOLOGY", "ENVIRONMENTAL BIOTECHNOLOGY BIOBUSINESS MANAGEMENT", "ENVIRONMENTAL CHEMISTRY", "ENVIRONMENTAL CHEMISTRY AND MICROBIOLOGY", "ENVIRONMENTAL ENGINEERING", "ENVIRONMENTAL FRIENDLY REFRIGERANTS", "ENVIRONMENTAL GEOTECHNOLOGY", "ENVIRONMENTAL HEALTH AND SAFETY", "ENVIRONMENTAL HYDROLOGY", "ENVIRONMENTAL IMPACT ASSESSMENT ", "ENVIRONMENTAL IMPACT ASSESSMENT AND MANAGEMENT", "ENVIRONMENTAL IMPACT ASSESSMENT FOR TRANSPORTATION PROJECTS", "ENVIRONMENTAL NANO TECHNOLOGY", "ENVIRONMENTAL POLLUTION OF SOIL AND REMEDIATION", "ENVIRONMENTAL SANITATION", "ENVIRONMENTAL SCIENCE", "ENVIRONMENTAL SCIENCE AND TECHNOLOGY", "ENVIRONMENTAL STUDIES", "ENVIRONMENTAL SYSTEM ENGINEERING ", "ENZYME ENGINEERING", "ENZYME ENGINEERING AND TECHNOLOGY", "EQUIPMENT DESIGN FOR THERMAL SYSTEMS", "ESTIMATING AND COSTING", "ESTIMATION OF SIGNALS AND SYSTEMS.", "ETHICAL HACKING", "EXPERIMENTAL AERODYNAMICS", "EXPERIMENTAL STRESS ANALYSIS", "EXPERIMENTAL TECHNIQUES AND DATA ANALYSIS", "FABRICATION PROCESSES", "FAMILY BUSINESS MANAGEMENT", "FARM MACHINERY AND EQUIPMENT I", "FARM MACHINERY AND EQUIPMENTS II", "FATIGUE CREEP AND FRACTURE MECHANICS", "FAULT TOLERANT SYSTEMS", "FERRO ALLOY TECHNOLOGY", "FIBER OPTICS AND LASER INSTRUMENTATION", "FINANCIAL ACCOUNTING AND ANALYSIS", "FINANCIAL DERIVATIVES", "FINANCIAL INSTITUTIONS, MARKETS AND SERVICES", "FINANCIAL INSTITUTIONS, MARKETS AND SERVICES (FINANCE)", "FINANCIAL MANAGEMENT", "FINANCIALDERIVATIVES (FINANCE)", "FINITE ELEMENT ANALYSIS", "FINITE ELEMENT AND BOUNDARY ELEMENT METHODS", "FINITE ELEMENT METHOD", "FINITE ELEMENT METHODS FOR GEOTECHNICAL ENGINEERS", "FINITE ELEMENT TECHNIQUES", "FLEXIBILITY AC TRANSMISSION SYSTEMS (FACTS)", "FLEXIBLE AC TRANSMISSION SYSTEMS ", "FLEXIBLE AC TRANSMISSION SYSTEMS (FACTS)", "FLEXIBLE MANUFACTURING SYSTEMS", "FLIGHT DYNAMICS AND CONTROL", "FLIGHT MECHANICS I", "FLIGHT MECHANICSII", "FLIGHT NAVIGATION AND SURVEILLANCE SYSTEMS", "FLIGHT SCHEDULING AND OPERATIONS", "FLIGHT VEHICLE DESIGN", "FLIGHT VEHICLE STRUCTURES", "FLIGHT VEHICLES STRUCTURES", "FLUID MECHANICS", "FLUID MECHANICS AND HEAT TRANSFER", "FLUID MECHANICS AND HYDRAULIC MACHINERY", "FLUID MECHANICS AND HYDRAULIC MACHINES", "FLUID MECHANICS AND OPEN CHANNEL HYDRAULICS", "FLUID MECHANICS I", "FLUID MECHANICS II", "FLUID POWER AND CONTROL", "FLUIDIZATION ENGINEERING", "FOOD ANALYSIS ", "FOOD BIOTECHNOLOGY", "FOOD PROCESSING PLANT DESIGN AND LAYOUT", "FOOD PROCESSING TECHNOLOGY", "FOREIGN TRADE", "FORMAL LANGUAGES AND AUTOMATA THEORY", "FORMWORK AND SCAFFOLDING DESIGN", "FOUNDATION ENGINEERING", "FOUNDRY TECHNOLOGY", "FRACTURE MECHANICS", "FUELS ANDCOMBUSTION", "FUELS COMBUSTION AND ENVIRONMENT", "FUELS FURNACES AND REFRACTORIES", "FUELS, FURNACES AND REFRACTORIES", "FULL CUSTOM DESIGN", "FULL CUSTOM IC DESIGN", "FUNDAMENTALS OF AEROSPACE ENGINEERING", "FUNDAMENTALS OF BIOLOGY", "FUNDAMENTALS OF CYBER SECURITY", "FUNDAMENTALS OF ECOLOGY", "FUNDAMENTALS OF ELECTRICAL ENGINEERING", "FUNDAMENTALS OF ENGINEERING MATERIALS", "FUNDAMENTALS OF GEOLOGY", "FUNDAMENTALS OF GIS", "FUNDAMENTALS OF HVDC AND FACTS DEVICES", "FUNDAMENTALS OF MANAGEMENT", "FUNDAMENTALS OF MECHANICAL ", "ENGINEERING", "FUNDAMENTALS OF REMOTE SENSING AND GIS", "FUNDAMENTALS OF STRUCTURAL ANALYSIS", "FUZZY LOGIC AND NEURAL NETWORKS", "GAME THEORY ", "GAS DYNAMICS", "GAS INSULATED SYSTEMS (GIS)", "GEAR ENGINEERING", "GENDER SENSITIZATION", "GENERAL AND INDUSTRIAL MICROBIOLOGY", "GENERAL GEOLOGY", "GENERATION AND MEASUREMENT OF HIGH VOLTAGES", "GENETIC ALGORITHMS", "GENETIC ENGINEERING", "GEO  ENVIRONMENTAL ENGINEERING", "GEO AND TECH FACTORS OF COAL GASIFICATION CBM, SHALE GAB", "GEO ENVIRONMENTAL ENGINEERING", "GEOENVIRONMENTAL ENGINEERING.", "GEOGRAPHICAL INFORMATION SYSTEMS", "GEOMETRIC MODELING", "GEOSPATIAL TECHNIQUES FOR DISASTER MANAGEMENT", "GEOSPATIAL TECHNIQUES FOR RURAL DEVELOPMENT", "GEOSPATIAL TECHNIQUES FOR WATER AND ENVIRONMENTAL ENGG", "GEOSYNTHETICS AND SOIL REINFORCEMENT", "GEOTECHNICAL EARTHQUAKE ENGINEERING", "GEOTECHNICAL ENGINEERING", "GEOTECHNICS FOR INFRASTRUCTURE", "GIS", "GIS ANALYSIS AND APPLICATIONS", "GIS AND REMOTE SENSING", "GIS APPLICATIONS IN TRANSPORTATION ENGINEERING", "GIS APPLICATIONS IN WATER RESOURCES ENGINEERING", "GIS PROJECT PLANNING AND MANAGEMENT", "GLOBAL POSITIONING SYSTEM", "GNSS SURVEYING", "GPS AND APPLICATIONS", "GPS APPLICATIONS", "GRAPH THEORY ", "GREEN BUILDING CONCEPTS", "GREEN CHEMISTRY", "GREEN FUEL TECHNOLOGIES", "GRID AND CLOUD COMPUTING", "GROUND IMPROVEMENT TECHNIQUES", "GROUND VEHICLE AERODYNAMICS", "GROUND WATER CONTAMINATION AND REMEDIATION", "GROUND WATER HYDROLOGY", "GROUND WATER POLLUTION", "GROUNDWATER CONTAMINATION AND REMEDIATION", "HARDWARE DESCRIPTION LANGUAGE", "HARDWARE SOFTWARE CODESIGN", "HAZARDOUS WASTE MANAGEMENT", "HEALTH, SAFETY AND ENVIRONMENT IN PETROLEUM INDUSTRY", "HEAT AND MASS TRANSFER", "HEAT TRANSFER", "HEAT TRANSFER OPERATIONS", "HEAT TREATMENT ", "HEAT TREATMENT TECHNOLOGY", "HEATING SYSTEMS", "HELICOPTER AERODYNAMICS", "HELICOPTER ENGINEERING", "HERBAL AND COSMETICS ANALYSIS", "HERBAL COSMETIC TECHNOLOGY", "HERBAL DRUGS TECHNOLOGY", "HIGH ANGLE OF ATTACK AERODYNAMICS", "HIGH FREQUENCY MAGNETIC COMPONENTS", "HIGH SPEED AERODYNAMICS", "HIGH SPEED NETWORKS", "HIGH VOLTAGE ENGINEERING", "HIGH VOLTAGE TESTING TECHNOLOGY", "HIGHFREQUENCY MAGNETIC COMPONENTS", "HIGHWAY GEOMETRIC DESIGN ", "HIGHWAY INFRASTRUCTURE DESIGN", "HIGHWAY INFRASTRUCTURE ENGINEERING", "HIGHWAY PROJECT FORMULATION AND ECONOMICS", "HORIZONTAL WELL TECHNOLOGY", "HOSPITAL AND COMMUNITY PHARMACY", "HOSPITAL PHARMACY", "HOSPITAL SYSTEM MANAGEMENT", "HUMAN ANATOMY AND PHYSIOLOGY I", "HUMAN ANATOMY AND PHYSIOLOGY II", "HUMAN COMPUTER INTERACTION", "HUMAN ENGINEERING AND SAFETY", "HUMAN RESOURCE MANAGEMENT", "HUMAN RESOURCES DEVELOPMENT FOR CONSTRUCTION", "HUMAN VALUES AND PROFESSIONAL ETHICS", "HV TRANSFORMERS", "HVDC AND FACTS", "HVDC TRANSMISSION", "HYBRID ELECTRIC VEHICLES", "HYDRAULIC DEVICES AND CONTROL", "HYDRAULICS AND HYDRAULIC MACHINERY", "HYDRAULICS AND PNEUMATIC CONTROL SYSTEMS", "HYDROLOGY", "HYPERSONIC AERODYNAMICS", "HYPERSONIC AEROTHERMODYNAMICS", "IC APPLICATIONS", "IC ENGINES AND GAS TURBINES", "IMAGE AND VIDEO PROCESSING", "IMAGE AND VIDEO PROCESSING(M.TECH)", "IMAGE PROCESSING AND PATTERN RECOGNITION", "IMMUNOLOGY", "INCIDENT RESPONSE AND FORENSICS", "INDIAN SYSTEM OF MEDICINE", "INDIGENOUS SYSTEMS OF MEDICINE", "INDUSTRIAL AERODYNAMICS AND WIND ENERGY", "INDUSTRIAL AND ENVIRONMENTAL BIOTECHNOLOGY", "INDUSTRIAL AUTOMATION", "INDUSTRIAL BIOTECHNOLOGY", "INDUSTRIAL DATA COMMUNICATIONS", "INDUSTRIAL ELECTRICAL AND ELECTRONICS", "INDUSTRIAL ENGINEERING PRACTICES", "INDUSTRIAL INSTRUMENTATION", "INDUSTRIAL MANAGEMENT", "INDUSTRIAL PHARMACEUTICS", "INDUSTRIAL PHARMACOGNOSTICAL TECHNOLOGY ", "INDUSTRIAL PHARMACOGNOSY", "INDUSTRIAL PHARMACY", "INDUSTRIAL PHARMACY MANAGEMENT", "INDUSTRIAL POLLUTION AND CONTROL ENGINEERING", "INDUSTRIAL ROBOTICS", "INDUSTRIAL SAFETY", "INDUSTRIAL SAFETY AND HAZARD MANAGEMENT", "INDUSTRIAL TRAINING", "INDUSTRIAL WASTE WATER TREATMENT", "INDUSTRY ORIENTED MINI PROJECT", "INFORMATION RETRIEVAL SYSTEMS", "INFORMATION SECURITY", "INFORMATION SECURITY AND AUDIT", "INFORMATION SECURITY ASSESSMENTS AND AUDITS (SECURITY ANALYST2)", "INFORMATION SECURITY INCIDENT RESPONSE AND MANAGEMENT", "INFORMATION SECURITY MANAGEMENT", "INFORMATION SECURITY MANAGEMENT AND STANDARD", "INFORMATION STORAGE MANAGEMENT", "INFORMATION SYSTEMCONTROL ANDAUDIT(SYSTEM)", "INFORMATION SYSTEMS", "INFORMATION SYSTEMS AUDIT", "INFORMATION SYSTEMS CONTROL AND AUDIT", "INFORMATION THEORY AND CODING", "INFRASTRUCTURE VALUATION", "INORGANIC CHEMICAL TECHNOLOGY", "INSTRUMENTAL METHODS OF PHARMACEUTICAL ANALYSIS", "INSTRUMENTATION AND CONTROL", "INSTRUMENTATION AND CONTROL ", "INSTRUMENTATION AND CONTROL IN MANUFACTURING SYSTEMS", "INSTRUMENTATION AND CONTROL SYSTEM ENGINEERING", "INSTRUMENTATION AND CONTROL SYSTEMS", "INSTRUMENTATION AND PROCESS CONTROL", "INSTRUMENTATION AND SENSOR TECHNOLOGY", "INSTRUMENTATION PRACTICES IN INDUSTRIES", "INTEGRATED MARKETING COMMUNICATIONS (MARKETING)", "INTEGRATED WATER RESOURCES MANAGEMENT", "INTELLECTUAL PROPERTY RIGHTS", "INTELLECTUAL PROPERTY RIGHTS (M.TECH)", "INTELLECTUAL PROPERTY RIGHTS AND  DRUG REGULATORY AFFAIRS", "INTELLECTUAL PROPERTY RIGHTS AND DRUG REGULATORY AFFAIRS", "INTELLECTUAL PROPERTY RIGHTS AND REGULATORY AFFAIRS", "INTELLIGENT AND KNOWLEDGE BASED SYSTEMS", "INTELLIGENT CONTROL", "INTELLIGENT MANUFACTURING SYSTEMS", "INTELLIGENT TRANSPORTATION SYSTEMS", "INTERNATIONAL BUSINESS", "INTERNATIONAL FINANCIAL MANAGEMENT", "INTERNATIONAL FINANCIAL MANAGEMENT (FINANCE)", "INTERNATIONAL HUMAN RESOURCE MANAGEMENT", "INTERNATIONAL MARKETING", "INTERNATIONAL MARKETING(MARKETING)", "INTERNET GIS", "INTERNET OF THINGS", "INTERNET TECHNOLOGIES AND SERVICES", "INTERNETWORKING", "INTRODUCTION OF AEROSPACE ENGG", "INTRODUCTION TO AEROSPACE ENGINEERING", "INTRODUCTION TO ANALYTICS", "INTRODUCTION TO BIOMATERIALS", "INTRODUCTION TO MECHATRONICS", "INTRODUCTION TO MINING TECHNOLOGY", "INTRODUCTION TO NANO SCIENCE AND TECHNOLOGY", "INTRODUCTION TO NAVIGATIONAL AIDS ", "INTRODUCTION TO REMOTE SENSING", "INTRODUCTION TO SPACE TECHNOLOGY", "INTRUSION DETECTION AND PREVENTION SYSTEMS", "IRON MAKING ", "IRON PRODUCTION", "IRRIGATION AND DRAINAGE ENGINEERING", "IT SECURITY  THREATS AND VULNERABILITY", "IT SECURITY METRICS", "IT WORKSHOP", "JAVA AND WEB TECHNOLOGIES", "JAVA PROGRAMMING", "JET PROPULSION AND ROCKET ENGINEERING", "JET PROPULSION AND ROCKET ENGINEERING (PRE REQ: TURBO MACHINES)", "JET PROPULSION AND ROCKETRY", "JETS, MISSILES AND ROCKETS", "KINEMATICS OF MACHINERY", "LAND USE AND TRANSPORTATION MODELING", "LAND USE TRANSPORTATION MODELING", "LASERS ANDFIBER OPTIC INSTRUMENTATION", "LAUNCH VEHICLE AND MISSILE TECHNOLOGY", "LEADERSHIP AND CHANGE MANAGEMENT", "LEADERSHIP(HR)", "LEARNING AND DEVELOPMENT", "LIGHT METALS AND ALLOYS", "LINEAR AND DIGITAL IC APPLICATIONS", "LINEAR AND NON LINEAR SYSTEMS", "LINEAR IC APPLICATIONS", "LINUX PROGRAMMING", "LOGISTICS AND SUPPLY CHAIN MANAGEMENT", "LOW POWER VLSI DESIGN", "LOW SPEED AERODYNAMICS", "MACHINE DESIGN", "MACHINE DRAWING", "MACHINE DRAWING AND COMPUTER AIDED GRAPHICS", "MACHINE LEARNING", "MACHINE LEARNING WITH R", "MACHINE MODELING AND ANALYSIS", "MACHINE TOOL DESIGN", "MACHINE TOOLS", "MAINTENANCE AND RELIABILITY ENGINEERING", "MAINTENANCE AND SAFETY ENGINEERING", "MAINTENANCE ENGINEERING", "MAINTENANCE MANAGEMENT", "MAINTENANCE OF A C EQUIPMENT", "MAINTENANCE OF REFRIGERATION AND AIR CONDITIONING EQUIPMENT", "MAJOR PROJECT", "MANAGEMENT AND ORGANISATIONAL BEHAVIOUR", "MANAGEMENT FUNDAMENTALS", "MANAGEMENT INFORMATION SYSTEMS", "MANAGEMENT OF CHANGE(HR)", "MANAGEMENT OF INDUSTRIAL RELATIONS", "MANAGEMENT OF INDUSTRIAL RELATIONS (HR)", "MANAGEMENT OF QUALITY AND SAFETY IN CONSTRUCTION", "MANAGEMENT OF TECHNOLOGY", "MANAGEMENT SCIENCE", "MANAGEMENT THEORY AND PRACTICE", "MANAGERIAL ECONOMICS", "MANAGERIAL ECONOMICS AND FINANCIAL ANALYSIS", "MANUFACTURING PROCESS", "MANUFACTURING PROCESS AND MACHINE TOOLS ", "MANUFACTURING SYSTEMS: SIMULATION MODELING AND ANALYSIS", "MARKETING MANAGEMENT", "MASS TRANSFER OPERATIONS", "MASS TRANSFER OPERATIONS I", "MASS TRANSFER OPERATIONS II", "MATERIAL CHARACTERIZATION AND PAVEMENT ENGINEERING.", "MATERIAL CHARACTERIZATION TECHNIQUES", "MATERIAL HANDLING IN MINES", "MATERIAL HANDLING MANAGEMENT", "MATERIAL MANAGEMENT", "MATERIAL SCIENCE", "MATERIAL SCIENCE FOR CHEMICAL ENGINEERS", "MATERIAL TECHNOLOGY", "MATERIALS CHARACTERIZATION TECHNIQUES", "MATERIALS HANDLING EQUIPMENT DESIGN", "MATERIALS MANAGEMENT", "MATERIALS SCIENCE AND ENGINEERING", "MATERIALS TECHNOLOGY", "MATHEMATICAL FOUNDATION FOR CYBER SECURITY", "MATHEMATICAL FOUNDATIONS FOR COMPUTER SCIENCE", "MATHEMATICAL FOUNDATIONS OF COMPUTER SCIENCE", "MATHEMATICAL METHODS", "MATHEMATICAL MODELING", "MATHEMATICAL MODELING AND SIMULATION", "MATHEMATICS  I", "MATHEMATICS  III", "MATHEMATICS II", "MATHEMATICS IV", "MATHEMITICAL MODELING", "MECHANICAL BEHAVIOR OF ENGINEERING MATERIALS", "MECHANICAL BEHAVIOR OF MATERIALS ", "MECHANICAL BEHAVIOUR OF ENGG. MATERIALS", "MECHANICAL BEHAVIOUR OF MATERIALS", "MECHANICAL BEHAVIOUR OF NANO MATERIALS", "MECHANICAL MEASUREMENTS AND CONTROL SYSTEMS", "MECHANICAL MEASUREMENTS AND INSTRUMENTATION", "MECHANICAL METALLURGY", "MECHANICAL OPERATIONS", "MECHANICAL SYSTEMS DESIGN", "MECHANICAL TECHNOLOGY", "MECHANICAL VIBRATIONS", "MECHANICAL VIBRATIONS AND STRUCTURAL DYNAMICS", "MECHANICAL WORKING", "MECHANICAL WORKING OF METALS", "MECHANICS OF COMPOSITE MATERIALS", "MECHANICS OF COMPOSITE STRUCTURES", "MECHANICS OF FLUIDS", "MECHANICS OF FLUIDS AND HYDRAULIC MACHINES", "MECHANICS OF METAL FORMING", "MECHANICS OF SOLIDS", "MECHANICS OF SOLIDS AND MECHANICS OF FLUIDS", "MECHANISMS AND MECHANICAL DESIGN", "MECHATRONICS", "MECHATRONICS AND ITS APPLICATIONS", "MEDICAL IMAGE ACQUISITION TECHNIQUES", "MEDICAL IMAGE PROCESSING", "MEDICAL IMAGING TECHNIQUES ", "MEDICAL INFORMATICS", "MEDICAL INSTRUMENTATION", "MEDICAL SENSORS" };

            var Subjects = db.jntuh_registered_faculty_subjectstaught.Select(e => e.facultysubjectsTaught).ToList().Distinct();

            Faculty.Subjects = DefaultSubjects;

            foreach (string item1 in Subjects)
            {
                Faculty.Subjects.Add(item1);
            }

            List<string> TestingSubjects = new List<string>() { "MECHANICAL VIBRATIONS AND STRUCTURAL DYNAMICS", "MECHANICAL WORKING", "MECHANICAL WORKING OF METALS", "MECHANICS OF COMPOSITE MATERIALS", "MECHANICS OF COMPOSITE STRUCTURES", "MECHANICS OF FLUIDS", "MECHANICS OF FLUIDS AND HYDRAULIC MACHINES", "MECHANICS OF METAL FORMING", "MECHANICS OF SOLIDS", "MECHANICS OF SOLIDS AND MECHANICS OF FLUIDS", "MECHANISMS AND MECHANICAL DESIGN", "MECHATRONICS", "MECHATRONICS AND ITS APPLICATIONS", "MEDICAL IMAGE ACQUISITION TECHNIQUES", "MEDICAL IMAGE PROCESSING", "MEDICAL IMAGING TECHNIQUES ", "MEDICAL INFORMATICS", "MEDICAL INSTRUMENTATION", "MEDICAL SENSORS", "MEDICAL SIGNAL PROCESSING", "MEDICINAL CHEMISTRY I", "MEDICINAL CHEMISTRY II", "MEDICINAL PLANT BIOTECHNOLOGY", "MEMBRANE TECHNOLOGY", "MEMS", "MEMS AND APPLICATIONS", "MEMS AND MICRO SYSTEMS  DESIGN AND MANUFACTURE", "MEMS AND MICRO SYSTEMS : DESIGN AND MANUFACTURE ", "MEMS AND NEMS DESIGN AND APPLICATIONS", "MEMS APPLICATIONS", "MEMS DESIGN", "MEMS NEMS DESIGN AND APPLICATION", "METABOLIC ENGINEERING", "METAL CUTTING AND TOOL DESIGN", "METAL FORMING", "METAL JOINING TECHNOLOGY", "METALLURGICAL PROBLEMS", "METALLURGICAL THERMODYNAMICS", "METALLURGY AND MATERIAL SCIENCE", "METALLURGYAND MATERIALS ENGINEERING", "METROLOGY", "METROLOGY AND MACHINE TOOLS", "METROLOGY AND SURFACE ENGINEERING", "METROLOGY INSTRUMENTATION AND CONTROL SYSTEMS", "MICRO CONTROLLER AND APPLICATIONS", "MICRO CONTROLLERS", "MICRO CONTROLLERS FOR EMBEDDED SYSTEM DESIGN", "MICRO IRRIGATION ENGINEERING", "MICRO NANO FABRICATION", "MICROBIAL ENGINEERING", "MICROBIOLOGY", "MICROCONTROLLERS AND APPLICATIONS", "MICROCONTROLLERS FOR EMBEDDED SYSTEMS DESIGN", "MICROPROCESSORS AND COMPUTER ORGANIZATION", "MICROPROCESSORS AND INTERFACING DEVICES", "MICROPROCESSORS AND MICRO CONTROLLERS", "MICROWAVE ANTENNA THEORY AND DESIGN", "MICROWAVE COMPONENTS AND MEASUREMENTS", "MICROWAVE ENGINEERING", "MICROWAVE INTEGRATED CIRCUITS", "MICROWAVE NETWORKS", "MICROWAVE SOLID STATE DEVICES", "MIDDLEWARE TECHNOLOGIES", "MINE CONSTRUCTION ENGINEERING", "MINE ECONOMICS", "MINE ELECTRICAL ENGINEERING", "MINE ENVIRONMENTAL ENGINEERING I", "MINE ENVIRONMENTAL ENGINEERING II", "MINE GROUND CONTROL", "MINE HEALTH AND SAFETY ENGINEERING", "MINE LEGISLATION", "MINE MECHANISATION I", "MINE MECHANISATION II", "MINE SUBSIDENCE ENGINEERING", "MINE SURVEYING", "MINE SURVEYING I", "MINE SURVEYING II", "MINERAL PROCESSING", "MINING GEOLOGY", "MINING METHODS AND UNIT OPERATIONS", "MININGGEOLOGY", "MIS AND ERP", "MISSILE GUIDANCE", "MOBILE APPLICATION DEVELOPMENT", "MOBILE APPLICATION DEVELOPMENT USING J2ME AND ANDROID", "MOBILE APPLICATION SECURITY", "MOBILE COMMERCE", "MOBILE COMPUTING", "MOBILE COMPUTING TECHNOLOGIES", "MODELLING AND SIMULATION OF FLUID FLOWS", "MODERN BIO ANALYTICAL TECHNIQUES", "MODERN CONTROL THEORY", "MODERN CONTROL THEORY ", "MODERN PHARMACEUTICAL ANALYTICAL TECHNIQUES", "MODERN PHARMACEUTICAL TECHNOLOGY", "MODERN PHARMACEUTICS I ", "MODERN PHARMACEUTICS II", "MOLECULAR BIOLOGY AND GENETIC ENGINEERING", "MOLECULAR BIOLOGY AND GENETICS", "MOLECULAR BIOLOGY AND VIROLOGY", "MOLECULAR PATHOGENESIS", "MOLECULAR PHARMACOLOGY", "MOTION CONTROL DESIGN", "MSME MANAGEMENT", "MULTI MEDIA AND RICH INTERNET APPLICATIONS", "MULTI PHASE FLOW IN POROUS MEDIA", "MULTIMEDIA AND RICH INTERNET APPLICATIONS", "MULTIMEDIA AND SIGNAL CODING", "MULTIMEDIA DATABASES", "MULTIMEDIA TECHNOLOGIES", "NANO BASED DRUG DELIVERY SYSTEMS", "NANO BIOTECHNOLOGY AND NANO DEVICES", "NANO BIOTECHNOLOGY MATERIALS AND DEVICES", "NANO COMPOSITES", "NANO COMPOSITES DESIGN AND SYNTHESIS", "NANO ELECTRONICS", "NANO ELECTRONICS AND NANO PHOTONICS", "NANO MATERIAL CHARACTERIZATION TECHNIQUES", "NANO MATERIALS", "NANO SENSORS AND ACTUATORS", "NANO TECHNOLOGY", "NANOBIOTECHNOLOGY", "NANOCOMPOSITES   DESIGN AND SYNTHESIS", "NANOFLUIDS", "NANOTECHNOLOGIES FOR WATER AND ENVIRONMENT APPLICATIONS", "NANOTECHNOLOGY", "NANOTECHNOLOGY FOR ENERGY SYSTEMS", "NANOTOXICOLOGY", "NATURAL GAS HYDRATES", "NATURAL GAS PROCESSING", "NATURAL LANGUAGE PROCESSING", "NAVIGATION GUIDANCE AND CONTROL", "NCC NSO", "NETWORK ANALYSIS", "NETWORK AND WIRELESS SECURITY", "NETWORK MANAGEMENT AND PERFORMANCE EVALUATION", "NETWORK MANAGEMENT AND PERFORMANCE EVOLUTION", "NETWORK MANAGEMENT SYSTEMS", "NETWORK PROGRAMMING", "NETWORK SECURITY", "NETWORK SECURITY AND CRYPTOGRAPHY", "NETWORK SECURITY STANDARDS AND APPLICATIONS", "NETWORK SECURITY STANDARDS AND APPLICATIONS EVALUATION", "NETWORK THEORY", "NEURAL NETWORK AND FUZZY LOGIC", "NEURAL NETWORKS", "NEURAL NETWORKS AND FUZZY LOGIC", "NEURAL NETWORKS AND FUZZY SYSTEMS", "NEW CONSTRUCTION MATERIALS", "NON  LINEAR SYSTEMS", "NON CONVENTIONAL ENERGY SOURCES", "NON DESTRUCTIVE TESTING", "NON DESTRUCTIVE TESTING METHODS", "NON FERROUS EXTRACTIVE METALLURGY", "NON LINEAR VIBRATIONS", "NONCONVENTIONAL ENERGY SOURCES", "NONCONVENTIONAL POWER GENERATION", "NONLINEAR SYSTEMS", "NOVEL DRUG DELIVERY SYSTEMS AND REGULATORY AFFAIRS", "NSO", "NSS", "NUCLEAR METALLURGY", "NUMERICAL METHODS AND ADVANCED COMPUTING TECHNIQUES", "NUMERICAL METHODS FOR GEOTECHNICAL ENGINEERS", "NUMERICAL METHODS FOR PARTIAL DIFFERENTIAL EQUATIONS", "NUTRACEUTICALS", "OBJECT ORIENTED ANALYSIS AND DESIGN", "OBJECT ORIENTED ANALYSIS AND DESIGN (USING UML)", "OBJECT ORIENTED MODELING", "OBJECT ORIENTED PROGRAMMING ", "OBJECT ORIENTED PROGRAMMING THROUGH JAVA", "OBJECT ORIENTED PROGRAMMING USING C++", "OFFSHORE ENGINEERING", "OFFSHORE GEOTECHNICAL ENGINEERING.", "OFFSHORE GEOTECHNICS", "OPEN CAST DRILLING AND PRODUCTION EQUIPMENT", "OPEN STACK CLOUD COMPUTING", "OPERATING SYSTEMS", "OPERATIONS RESEARCH", "OPTICAL COMMUNICATION TECHNOLOGY", "OPTICAL COMMUNICATIONS", "OPTICAL COMMUNICATIONS AND NETWORKS", "OPTICAL COMMUNICATIONS TECHNOLOGY", "OPTICAL NETWORKS", "OPTIMAL CONTROL", "OPTIMAL CONTROL SYSTEMS", "OPTIMAL CONTROL THEORY", "OPTIMISATION TECHNIQUES", "OPTIMIZATION OF UPSTREAM PROCESSES", "OPTIMIZATION TECHNIQUES ", "OPTIMIZATION TECHNIQUES AND APPLICATIONS", "OPTIMIZATION TECHNIQUES IN CHEMICAL ENGINEERING", "OPTIMIZATION TECHNIQUES IN STRUCTURAL ENGINEERING", "OPTIMIZATION TECHNIQUES IN VLSI DESIGN", "OPTOELECTRONICS AND LASER INSTRUMENTATION", "ORBITAL MECHANICS", "ORGANIC CHEMICAL TECHNOLOGY", "ORGANIC CHEMISTRY", "ORGANIZATIONAL BEHAVIOUR", "ORGANIZATIONAL STRUCTURE AND PERSONAL MANAGEMENT", "PARALLEL ALGORITHMS", "PARALLEL AND DISTRIBUTED ALGORITHMS", "PARALLEL COMPUTER ARCHITECTURE", "PARTIAL DISCHARGE IN HIGH VOLTAGE EQUIPMENT", "PATHOPHYSIOLOGY", "PATHOPHYSIOLOGY AND APPLIED PHARMACOTHERAPEUTICS  I", "PATHOPHYSIOLOGY AND APPLIED PHARMACOTHERAPEUTICS  II", "PATTERN RECOGNITION", "PAVEMENT ANALYSIS AND DESIGN", "PAVEMENT CONSTRUCTION, MAINTENANCE AND MANAGEMENT", "PAVEMENT MATERIAL CHARACTERIZATION", "PAVENT MATERIAL CHARACTERIZATION", "PC BASED INSTRUMENTATION", "PERFORMANCE MANAGEMENT (HR)", "PERFORMANCE MANAGEMENT SYSTEMS", "PERFORMANCE MODELING AND ANALYSIS OF MANUFACTURING SYSTEMS", "PERSONAL EFFECTIVENESS SEMINAR", "PERVASIVE COMPUTING", "PETRO CHEMICAL ENGINEERING", "PETROLEUM AND PETROCHEMICAL TECHNOLOGY", "PETROLEUM ENGINEERING ECONOMICS, POLICIES AND LAWS", "PETROLEUM EXPLORATION METHODS", "PETROLEUM GEOLOGY", "PETROLEUM MANAGEMENT, MARKETING AND FINANCE", "PETROLEUM PRODUCTION ENGINEERING AND DESIGN", "PETROLEUM REFINERY ENGINEERING", "PETROLEUM RESERVOIR ENGINEERING", "PHARM.INORGANIC CHEMISTRY", "PHARMA REGULATORY AFFAIRS  I", "PHARMACEUTICAL  JURISPRUDENCE", "PHARMACEUTICAL ANALYSIS  II", "PHARMACEUTICAL ANALYSIS I", "PHARMACEUTICAL BIO CHEMISTERY", "PHARMACEUTICAL BIOCHEMISTRY", "PHARMACEUTICAL BIOTECHNOLOGY", "PHARMACEUTICAL ENGINEERING ", "PHARMACEUTICAL FORMULATION DEVELOPMENT ", "PHARMACEUTICAL FORMULATION TECHNOLOGY", "PHARMACEUTICAL INDUSTRY MANAGEMENT", "PHARMACEUTICAL INORGANIC CHEMISTRY", "PHARMACEUTICAL INORGANIC CHEMISTRY I", "PHARMACEUTICAL JURISPRUDENCE", "PHARMACEUTICAL MANAGEMENT", "PHARMACEUTICAL MANAGEMENT  I", "PHARMACEUTICAL MANAGEMENT  I (GENERAL AND PERSONNEL)", "PHARMACEUTICAL MANAGEMENT I (GENERAL AND PERSONNEL)", "PHARMACEUTICAL MANAGEMENT II", "PHARMACEUTICAL MANAGEMENT II (PRODUCTION MARKETING FINANCE AND PROJECT)", "PHARMACEUTICAL MARKET RESEARCH AND ANALYSIS", "PHARMACEUTICAL MICROBIOLOGY", "PHARMACEUTICAL ORGANIC CHEMISTRY I", "PHARMACEUTICAL ORGANIC CHEMISTRY II", "PHARMACEUTICAL ORGANIC CHEMISTRY III", "PHARMACEUTICAL PROCESS CHEMISTRY", "PHARMACEUTICAL PRODUCT DEVELOPMENT AND MANAGEMENT", "PHARMACEUTICAL PRODUCTION TECHNOLOGY", "PHARMACEUTICAL REGULATORY AFFAIRS I", "PHARMACEUTICAL TECHNOLOGY  I", "PHARMACEUTICAL TECHNOLOGY II", "PHARMACEUTICAL UNIT OPERATIONS I", "PHARMACEUTICAL UNIT OPERATIONS II", "PHARMACEUTICAL VALIDATION ", "PHARMACEUTICS I", "PHARMACOEPIDEMIOLOGY AND PHARMACOECONOMICS ", "PHARMACOEPIDEMIOLOGY, PHARMACOECONOMICS  AND PHARMACOVIGILANCE", "PHARMACOGNOSY I", "PHARMACOGNOSY II", "PHARMACOGNOSY III", "PHARMACOKINETICS AND DRUG METABOLISM", "PHARMACOLOGICAL AND TOXICOLOGICAL SCREENING METHODS", "PHARMACOLOGICAL SCREENING METHODS AND CLINICAL RESEARCH", "PHARMACOLOGY     III", "PHARMACOLOGY    I", "PHARMACOLOGY II", "PHARMACOLOGYI", "PHARMACOTHERAPEUTICS I ", "PHARMACOTHERAPEUTICS II", "PHARMACY ADMINISTRATION", "PHASED ARRAY SYSTEMS", "PHOTO VOLTAIC AND SOLAR THERMAL SYSTEMS", "PHYSICAL DESIGN AUTOMATION", "PHYSICAL EDUCATION", "PHYSICAL METALLURGY", "PHYSICAL MODELING IN GEOTECHNICAL ENGINEERING. ", "PHYSICAL PHARMACEUTICSI", "PHYSICAL PHARMACY I", "PHYSICAL PHARMACY II", "PHYSIOLOGY FOR ENGINEERS", "PHYTOCHEMISTRY", "PIPELINE ENGINEERING", "PLANNING OF SURFACE MINING PROJECT", "PLANNING OF UNDERGROUND COAL MINING PROJECT", "PLANNING OF UNDERGROUND METAL MINING PROJECT", "PLANT BIO TECHNOLOGY", "PLANT CELL BIOTECHNOLOGY", "PLANT DRUG ANALYSIS", "PLANT ENGINEERING AND MAINTENANCE", "PLANT LAYOUT AND MATERIAL HANDLING", "PLASTIC ANALYSIS AND DESIGN", "PLASTIC ANALYSIS AND DESIGN.", "PLC AND ITS APPLICATIONS", "POLYMER TECHNOLOGY", "POLYMERIC MATERIALS", "PORTS AND HARBOUR ENGINEERING", "POST HARVEST ENGINEERING FOR HORTICULTURE PRODUCE", "POWDER METALLURGY", "POWER DISTRIBUTION SYSTEMS", "POWER ELECTRONIC APPLICATIONS TO RENEWABLE ENERGY", "POWER ELECTRONIC CONTROL OF AC DRIVES", "POWER ELECTRONIC CONTROL OF DC DRIVES", "POWER ELECTRONIC CONTROL OF DRIVES", "POWER ELECTRONIC CONVERTERS", "POWER ELECTRONIC CONVERTERS I", "POWER ELECTRONIC CONVERTERSII", "POWER ELECTRONIC DEVICES AND CIRCUITS", "POWER ELECTRONIC DEVICES AND CONVERTERS", "POWER ELECTRONICS", "POWER ELECTRONICS AND DRIVES", "POWER GENERATION METHODS", "POWER PLANT ENGINEERING", "POWER PLANT ERECTION", "POWER PLANT ERECTION COMMISSIONING AND OPERATION", "POWER PLANT INSTRUMENTATION", "POWER PLANT MAINTENANCE", "POWER PLANT PERFORMANCE MONITORING AND TESTING", "POWER PLANT PROTECTION AND SWITCH GEAR", "POWER QUALITY", "POWER SYSTEM DYNAMICS", "POWER SYSTEM DYNAMICS AND CONTROL", "POWER SYSTEM OPERATION AND CONTROL", "POWER SYSTEM OPERATION AND DEREGULATION", "POWER SYSTEM RELIABILITY", "POWER SYSTEM TRANSIENTS", "POWER SYSTEMS I", "POWER SYSTEMS II", "POWER SYSTEMSII", "PRE  STRESSED CONCRETE", "PRE SUBMISSION OF PROJECT SEMINAR", "PRECISION ENGINEERING", "PREDICTIVE ANALYTICS (ASSOCIATE ANALYTICS 3)", "PRESSURE VESSEL DESIGN", "PRESTRESSED CONCRETE", "PRESTRESSED CONCRETE STRUCTURES", "PRINCIPLES AND PRACTICE OF QUALITY ASSURANCE", "PRINCIPLES AND PRACTICE OF QUALITY ASSURANCE  I", "PRINCIPLES AND PRACTICE OF QUALITY ASSURANCE II", "PRINCIPLES OF BRIDGE ENGINEERING", "PRINCIPLES OF CIVIL AND STRUCTURAL ENGINEERING", "PRINCIPLES OF COMMUNICATIONS", "PRINCIPLES OF COMPUTER COMMUNICATIONS AND NETWORKS", "PRINCIPLES OF DRUG DISCOVERY", "PRINCIPLES OF ELECTRICAL ENGINEERING", "PRINCIPLES OF ELECTRONIC ", "COMMUNICATIONS", "PRINCIPLES OF ELECTRONIC COMMUNICATIONS", "PRINCIPLES OF ENTREPRENEURSHIP", "PRINCIPLES OF EXTRACTIVE METALLURGY", "PRINCIPLES OF INFORMATION SECURITY", "PRINCIPLES OF MACHINE DESIGN", "PRINCIPLES OF PROGRAMMING LANGUAGES", "PRINCIPLES OF QUALITY USE OF MEDICINES", "PRINCIPLES OF RELIABILITY ENGINEERING", "PRINCIPLES OF SOIL SCIENCE AND AGRONOMY", "PRINCIPLES OF TOXICOLOGY", "PRINCIPLES OF TRIBOLOGY", "PRIVACY AND SECURITY IN CYBER SPACE", "PRIVACY AND SECURITY IN CYBER SPACE ", "PROBABILITY AND STATISTICS", "PROBABILITY THEORY AND STOCHASTIC PROCESSES", "PROCESS CONTROL INSTRUMENTATION", "PROCESS DYNAMICS AND CONTROL", "PROCESS ENGINEERING PRINCIPALS", "PROCESS ENGINEERING PRINCIPLES", "PROCESS ENGINEERING PRINCIPLES AND MOLECULAR BIOLOGY", "PROCESS HEAT TRANSFER", "PROCESS INSTRUMENTATION", "PROCESS MODELING AND SIMULATION", "PROCESS MODELLING AND SIMULATION", "PRODUCT DATA MANAGEMENT", "PRODUCT DESIGN AND ASSEMBLY AUTOMATION", "PRODUCT DESIGN AND DEVELOPMENT", "PRODUCTION AND OPERATIONS MANAGEMENT", "PRODUCTION PLANNING AND CONTROL", "PRODUCTION TECHNOLOGY", "PROFESSIONAL COMMUNICATION IN ENGLISH", "PROFESSIONAL ETHICS", "PROGRAMMABLE LOGIC CONTROLLERS AND APPLICATIONS ", "PROGRAMMABLE LOGIC CONTROLLERS AND THEIR APPLICATIONS", "PROGRAMMING FOR PROBLEM SOLVING", "PROJECT", "PROJECT EVALUATION (VIVA-VOCE)", "PROJECT MANAGEMENT", "PROJECT MANAGEMENT(M.TECH)", "PROJECT PLANNING AND FINANCIAL MANAGEMENT", "PROJECT WORK", "PROJECT WORK REVIEW I", "PROJECT WORK REVIEW II", "PROJECT WORK REVIEW III", "PROJECT WORK STAGEI", "PROJECT WORK STAGEII", "PROPAGATION MODELS FOR WIRELESS COMMUNICATIONS", "PROPERTIES AND STRENGTH OF MATERIALS", "PROPERTIES OF NANO MATERIALS", "PROPERTIES OF NANO STRUCTURED MATERIALS ", "PROPERTIES OF NANO STRUCTURES", "PROPERTIES OF NANO STRUCTURES AND MATERIALS", "PULSE AND DIGITAL CIRCUITS", "PULSE POWER ENGINEERING", "QOS IN PACKET NETWORKS", "QUALITY AND RELIABILITY ENGINEERING", "QUALITY AND RELIABILITY ENGINEERING IN ELECTRONIC SYSTEM", "QUALITY ASSURANCE", "QUALITY ASSURANCE IN RTS", "QUALITY CONTROL AND QUALITY ASSURANCE", "QUALITY CONTROL OF BULK DRUGS AND FORMULATIONS", "QUALITY ENGINEERING IN MANUFACTURING", "QUALITY ENGINEERING IN MANUFACTURING SYSTEMS", "QUALITY MANAGEMENT SYSTEMS ", "QUALITY USE OF MEDICINES", "QUANTITATIVE ANALYSIS FOR BUSINESS DECISIONS", "QUANTITATIVE METHODS IN CONSTRUCTION MANAGEMENT ", "QUANTUM MECHANICS ", "QUEUEING THEORY AND APPLICATIONS", "QUEUING THEORY AND APPLICATIONS ", "R PROGRAMMING", "RADAR IMAGING", "RADAR SIGNAL PROCESSING", "RADAR SIGNALS AND PROCESSING TECHNIQUES", "RADAR SYSTEMS", "RADAR SYSTEMS ENGINEERING", "RADIO NAVIGATIONAL AIDS", "RANDOM PROCESSES AND TIME SERIES ANALYSIS", "RAPID PROTOTYPING TECHNOLOGIES", "RAPID PROTOTYPING TECHNOLOGY ", "REACTIVE POWER COMPENSATION AND MANAGEMENT", "REACTOR DESIGN AND ANALYSIS", "REAL TIME AND EMBEDDED SYSTEMS", "REAL TIME EMBEDDED SYSTEMS", "REAL TIME OPERATING SYSTEMS", "REAL TIME SIGNAL PROCESSING", "REAL TIME SYSTEMS", "REAL TIME SYSTEMS AND DESIGN", "REALTIME OPERATING SYSTEMS", "REFRIGERATION", "REFRIGERATION AIR CONDITION EQUIPMENT AND CONTROL SYSTEMS", "REFRIGERATION AND A C EQUIPMENTS AND CONTROL", "REFRIGERATION AND AIR CONDITIONING", "REFRIGERATION EQUIPMENT AND CONTROL SYSTEMS", "REGULATION OF DRUGS, BIOLOGICAL AND MEDICINAL DEVICES", "REGULATORY SUBMISSIONS  DRUGS, BIOLOGICAL AND MEDICAL DEVICES", "REHABILITATION AND RETROFITTING OF STRUCTURES", "REHABILITATION ENGINEERING", "REINFORCED CONCRETE STRUCTURES DESIGN AND DRAWING", "RELIABILITY ENGINEERING", "RELIABILITY ENGINEERING AND MAINTENANCE MANAGEMENT", "REMEDIAL BIOLOGY", "REMEDIAL MATHEMATICS", "REMOTE SENSING ", "REMOTE SENSING AND GEOGRAPHICAL INFORMATION SYSTEMS", "REMOTE SENSING AND GIS", "REMOTE SENSING AND GIS FOR ENVIRONMENTAL ENGINEERING", "REMOTE SENSING AND GIS FOR URBAN PLANNING AND MANAGEMENT", "REMOTE SENSING AND GLOBAL POSITIONING SYSTEMS", "REMOTE SENSING AND GPS FOR TRANSPORTATION ENGINEERING", "REMOTE SENSING APPLICATIONS", "RENEWABLE ENERGY SOURCES", "RENEWABLE ENERGY SYSTEMS", "REPAIR AND REHABILITATION OF BUILDINGS", "RESEARCH METHDOLOGY", "RESEARCH METHODOLOGY AND STATISTICAL ANALYSIS", "RESERVOIR MODELING AND SIMULATION", "RESERVOIR STIMULATION", "RETAILING MANAGEMENT", "RETAILING MANAGEMENT(MARKETING)", "RETAINING STRUCTURES", "REVERSE ENGINEERING AND MALWARE ANALYSIS", "RF CIRCUIT DESIGN", "RF IC DESIGN", "ROAD SAFETY ENGINEERING", "ROBOTIC DESIGN AND CONTROL", "ROBOTICS", "ROBOTICS AND AUTOMATION", "ROBOTICS AND CONTROL", "ROBOTICS AND ITS APPLICATIONS", "ROBOTICS AND MACHINE VISION", "ROBOTICS DESIGN AND CONTROL", "ROBOTICS IN MEDICAL APPLICATIONS", "ROBUST CONTROL", "ROCK EXCAVATION ENGINEERING", "ROCK FRAGME NTATION ENGINEERING", "ROCK MECHANICS", "ROCK MECHANICS AND ENGINEERING", "ROCK SLOPE ENGINEERING", "ROCKET AND SPACECRAFT PROPULSION", "ROTORCRAFT AERODYNAMICS", "RPROGRAMMING", "RURAL MARKETING", "RURAL ROAD", "SALES AND DISTRIBUTION (MARKETING)", "SATELLITE COMMUNICATIONS", "SCADA AND DCS", "SCADA AND DISTRIBUTED CONTROL SYSTEMS", "SCIENCE AND TECHNOLOGY OF THINFILMS", "SCREENING METHODS  IN PHARMACOLOGY", "SCREENING METHODS AND CLINICAL RESEARCH", "SCRIPTING LANGUAGES", "SECURE OPERATING SYSTEM ", "SECURE SOFTWARE ENGINEERING", "SECURITY ANALYSIS AND PORTFOLIO MANAGEMENT", "SECURITY ANALYSIS AND PORTFOLIO MANAGEMENT (FINANCE)", "SECURITY THREATS", "SELECTION OF MATERIALS FOR ENGINEERING APPLICATIONS", "SEMANTIC WEB AND SOCIAL NETWORKS", "SEMI CONDUCTORS AND MAGNETIC MATERIALS", "SEMICONDUCTOR MEMORY DESIGN AND TESTING", "SEMINAR", "SEMINAR I", "SEMINAR II", "SEMINAR OR INDUSTRIAL VISIT", "SENSORS AND ACTUATORS", "SENSORS AND SIGNAL CONDITIONING", "SEPARATION METHODS", "SEPARATION PROCESSES", "SEPARATION TECHNIQUES", "SERVICES MARKETING", "SERVICES MARKETING(MARKETING)", "SIGNAL ANALYSIS AND CONDITION MONITORING", "SIGNAL CONDITIONING CIRCUITS", "SIGNALS AND STOCHASTIC PROCESS", "SIGNALS AND SYSTEMS", "SIMULATION MODELING AND ANALYSIS OF MANUFACTURING SYSTEMS", "SIMULATION MODELING OF MANUFACTURING SYSTEMS", "SMART ANTENNAS", "SMART GRID TECHNOLOGIES", "SMART MATERIALS AND STRUCTURES", "SOCIAL MEDIA INTELLIGENCE", "SOFT COMPUTING", "SOFT COMPUTING TECHNIQUES", "SOFTWARE ARCHITECTURE AND DESIGN PATTERNS", "SOFTWARE DEFINED NETWORKS", "SOFTWARE DEFINED RADIO", "SOFTWARE DEVELOPMENT METHODOLOGIES", "SOFTWARE ENGINEERING", "SOFTWARE ENGINEERING(M.TECH)", "SOFTWARE METRICS AND QUALITY ASSURANCE ", "SOFTWARE PROCESS AND PROJECT MANAGEMENT", "SOFTWARE PROJECT MANAGEMENT", "SOFTWARE QUALITY ASSURANCE AND TESTING", "SOFTWARE RADIO", "SOFTWARE REQUIREMENTS AND ESTIMATION", "SOFTWARE SECURITY ENGINEERING", "SOFTWARE TESTING AND QUALITY ASSURANCE", "SOFTWARE TESTING METHODOLOGIES", "SOFTWARE VULNERABILITY ANALYSIS", "SOIL AND WATER CONSERVATION ENGINEERING", "SOIL DYNAMICS AND FOUNDATION ENGINEERING", "SOIL DYNAMICS AND MACHINE FOUNDATIONS", "SOIL MECHANICS", "SOIL STRUCTURE INTERACTION", "SOLAR ENERGY TECHNOLOGY", "SOLID WASTE MANAGEMENT", "SPACE MECHANICS", "SPACE TRANSPORTATION SYSTEMS", "SPACECRAFT DYNAMICS AND CONTROL", "SPECIAL MACHINES", "SPECIAL MANUFACTURING PROCESSES", "SPECTRAL ANALYSIS", "SPEECH PROCESSING", "SPEECH SIGNAL PROCESSING", "SPREAD SPECTRUM COMMUNICATIONS", "STABILITY OF DRUGS AND DOSAGE FORMS", "STABILITY OF STRUCTURES", "START UP MANAGEMENT", "STATE AND PARAMETER ESTIMATION THEORY", "STATIC DRIVES", "STATISTICAL DATA ANALYSIS PRACTICAL", "STATISTICAL METHODS ", "STATISTICAL METHODS AND COMPUTER APPLICATIONS", "STATISTICAL QUALITY CONTROL", "STATISTICS FOR MANAGEMENT", "STEEL MAKING", "STEEL STRUCTURES DESIGN AND DRAWING", "STORAGE AREA NETWORKS", "STRATA CONTROL TECHNOLOGY", "STRATEGIC INVESTMENT AND FINANCING DECISIONS", "STRATEGIC INVESTMENT ANDFINANCING DECISIONS(FINANCE)", "STRATEGIC MANAGEMENT", "STRATEGIC MANAGEMENT ACCOUNTING", "STRATEGIC MANAGEMENT ACCOUNTING (FINANCE)", "STRATEGIC MANAGEMENT IN CONSTRUCTION", "STRENGTH OF MATERIALS I", "STRENGTH OF MATERIALS II", "STRENGTHENING MECHANISMS WITH NANOMATERIALS", "STRESS ANALYSIS AND VIBRATION", "STRUCTURAL ANALYSIS", "STRUCTURAL ANALYSIS I", "STRUCTURAL ANALYSIS II", "STRUCTURAL BIOLOGY", "STRUCTURAL DYNAMICS", "STRUCTURAL DYNAMICS OF SPACECRAFT", "STRUCTURAL HEALTH MONITORING", "STRUCTURE, BONDING AND QUANTUM MECHANICS", "STRUCTURED DIGITAL SYSTEM DESIGN", "SubjectName", "SUCCESS STORY OF AN ENTREPRENEURSHIPSEMINAR", "SUMMER INTERNSHIP", "SUMMER INTERNSHIP SEMINAR", "SUPER ALLOYS", "SUPPLY CHAIN MANAGEMENT", "SURFACE ENGINEERING", "SURFACE MINING TECHNOLOGY", "SURFACE PRODUCTION OPERATIONS", "SURGE PHENOMENA AND INSULATION COORDINATION", "SURVEYING", "SURVEYING AND OFFSHORE STRUCTURES", "SWITCH GEAR AND PROTECTION", "SWITCHED MODE POWER SUPPLIES (SMPS)", "SWITCHING THEORY AND LOGIC DESIGN", "SYNTHESIS OF NANO MATERIALS", "SYSTEM DYNAMICS AND CONTROL ", "SYSTEM MODELING AND SIMULATION", "SYSTEM ON CHIP ARCHITECTURE", "SYSTEMS ENGINEERING", "TACTICAL MISSILE DESIGN", "TALL BUILDINGS", "TCP IP AND ATM NETWORKS", "TCP IP INTERNETWORKING ", "TCP IP NETWORKS", "TCP IP PROTOCOL SUITE", "TCPORIP AND ATM NETWORKS", "TECHNOLOGY MANAGEMENT", "TECHNOLOGY OF PHARMACEUTICALS AND FINE CHEMICALS", "TELECOMMUNICATION SWITCHING SYSTEMS AND NETWORKS", "TELECOMMUNICATIONS SWITCHING SYSTEMS", "TELEMEDICINE", "TELEMETRY AND TELECONTROL", "TELEVISION ENGINEERING", "THEORETICAL SOIL MECHANICS", "THEORY AND ANALYSIS OF PLATES", "THEORY OF COMPUTATION", "THEORY OF ELASTICITY", "THEORY OF ELASTICITY AND PLASTICITY", "THEORY OF MACHINES", "THEORY OF METAL CUTTING", "THEORY OF METAL FORMING ", "THEORY OF PLATES", "THEORY OF PLATES AND SHELLS", "THEORY OF STRUCTURES", "THERMAL AND NUCLEAR POWER PLANTS", "THERMAL ENGINEERING", "THERMAL ENGINEERING I", "THERMAL ENGINEERING II", "THERMAL MEASUREMENTS AND PROCESS CONTROL", "THERMAL MEASUREMENTS AND PROCESS CONTROLS", "THERMAL SCIENCE", "THERMODYNAMICS", "THERMODYNAMICS AND KINETICS", "THERMODYNAMICS AND REFRIGERATION SYSTEMS", "THERMODYNAMICS FOR BIOTECHNOLOGISTS", "THERMODYNAMICS FOR PETROLEUM ENGINEERS", "THERMODYNAMICS OF MATERIALS", "TISSUE ENGINEERING AND STEM CELL TECHNOLOGY", "TOTAL QUALITY MANAGEMENT", "TRACTOR SYSTEMS AND CONTROL", "TRAFFIC ANALYSIS", "TRAFFIC ENGINEERING", "TRAFFIC ENGINEERING AND CONTROL", "TRAFFIC ENGINEERING AND MANAGEMANT", "TRAINING AND DEVELOPMENT (HR)", "TRANSDUCER TECHNOLOGY", "TRANSDUCERS AND INSTRUMENTATION", "TRANSDUCERS AND SMART INSTRUMENTS", "TRANSDUCERS ENGINEERING", "TRANSDUCTION OF PHYSICAL VARIABLES", "TRANSFORM TECHNIQUES", "TRANSPORT PHENOMENA", "TRANSPORT PHENOMENA IN BIOPROCESS", "TRANSPORTATION ENGINEERING", "TRANSPORTATION ENGINEERING I", "TRANSPORTATION ENGINEERING II", "TRANSPORTATION INFRASTRUCTURE DESIGN", "TRANSPORTATION PHENOMENA IN LIVING SYSTEMS", "TRANSPORTATION SYSTEM MANAGEMENT", "TUNNELING ENGINEERING", "TURBO MACHINES", "TURBO MACHINES AND PROPULSION SYSTEMS", "UNCONVENTIONAL MACHINING PROCESSES", "UNCONVENTIONAL REFRIGERATION AND AIRCONDITIONING SYSTEMS ", "UNDER WATER CONSTRUCTION", "UNDERGROUND COAL MINING TECHNOLOGY", "UNDERGROUND METAL MINING TECHNOLOGY", "UNDERGROUND MINING TECHNOLOGY ", "UNDERGROUND PRODUCTION EQUIPMENT", "UNMANNED AIRCRAFT SYSTEMS", "URBAN REGIONAL TRANSPORTATION ANALYSIS AND PLANNING METHODS", "URBAN TRANSPORTATION PLANNING", "URBAN TRANSPORTATION PLANNING AND MANAGEMENT ", "URBAN TRANSPORTATION POLICY PLANNING FOR SUSTAINABLE DEVELOPMENT", "UTILIZATION OF ELECTRICAL ENERGY", "VEHICLE BODY ENGINEERING AND SAFETY", "VEHICLE DYNAMICS", "VEHICLE TRANSPORT MANAGEMENT", "VENTILATION SYSTEMS", "VERILOG HARDWARE DESCRIPTION LANGUAGE", "VIBRATION ANALYSIS AND CONDITION MONITORING", "VIBRATION ANALYSIS OF MECHANICAL SYSTEMS ", "VIBRATIONAL ANALYSIS AND CONDITIONING MONITORING", "VIDEO PROCESSING", "VIRTUAL INSTRUMENTATION", "VISCOUS FLUID FLOW", "VLSI AND DSP ARCHITECTURES", "VLSI DESIGN", "VLSI DSP ARCHITECTURES ", "VLSI SIGNAL PROCESSING ", "VLSI TECHNOLOGY ", "VLSI TECHNOLOGY AND DESIGN", "VOICE OVER INTERNET PROTOCOL", "VOICE OVER IP", "VOLTAGE STABILITY", "WASTE MANAGEMENT SYSTEMS", "WASTE TREATMENT SYSTEMS", "WATER QUALITY MANAGEMENT", "WATER QUALITY MODELLING", "WATER RESOURCES ENGINEERING ", "WATER RESOURCES ENGINEERING I", "WATER RESOURCES ENGINEERING II", "WATER RESOURCES SYSTEMS ANALYSIS", "WATER RESOURCES SYSTEMS PLANNING AND MANAGEMENT", "WATER SUPPLY ENGINEERING ", "WATERSHED MANAGEMENT", "WEB DATA MINING", "WEB MINING", "WEB PROGRAMMING AND NETWORKING PROGRAMMING ", "WEB SECURITY", "WEB SERVICES", "WEB SERVICES AND SERVICE ORIENTED ARCHITECTURE", "WEB TECHNOLOGIES", "WEB TECHNOLOGIES AND SERVICES ", "WEB USABILITY", "WEB USABILITY(M.TECH)", "WELDING TECHNOLOGY", "WELL COMPLETIONS", "WELL LOGGING", "WELL LOGGING AND FORMATION EVALUATION ", "WIND ENGINEERING AND INDUSTRIAL AERODYNAMICS", "WIRELESS COMMUNICATION AND NETWORKS", "WIRELESS LANS AND PANS", "WIRELESS MIMO COMMUNICATIONS", "WIRELESS NETWORKS", "WIRELESS NETWORKS AND MOBILE COMPUTING", "WIRELESS SECURITY", "WIRELESS SENSOR NETWORKS", "WORK PROJECT", "WTO AND IPR0", "XRAY DIFFRACTION" };
            Faculty.TestingSubjects = TestingSubjects;


            List<FacultySubjectsTaught> Subjectlist = new List<FacultySubjectsTaught>();

            var SubjectsTaughtList = db.jntuh_registered_faculty_subjectstaught.Where(a => a.facultyId == registered_faculty.id).ToList();

            foreach (var item in SubjectsTaughtList)
            {
                FacultySubjectsTaught SubjectsTaught = new FacultySubjectsTaught();
                SubjectsTaught.Id = item.Id;
                SubjectsTaught.facultySubjectsTaught = item.facultysubjectsTaught;
                SubjectsTaught.NoOfTimesSubjectsTaught = item.NoOfTimesSubjectTaught;

                Subjectlist.Add(SubjectsTaught);
            }

            Faculty.SubjectTaughtList = Subjectlist;
            if (Roles.IsUserInRole("Admin"))
            {
                return View("FacultySubjectsTaughtViewForAdmin", Faculty);
            }
            return View(Faculty);
        }

        //Faculty Edit for Admin on 24-02-2020
        [HttpGet]
        [Authorize(Roles = "Admin")]
        public ActionResult FacultyAACEditDetails(string fid)
        {
            int fID = 0;
            if (!string.IsNullOrEmpty(User.Identity.Name))
            {
                int userID = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
                int facultyId = db.jntuh_registered_faculty.Where(f => f.UserId == userID).Select(f => f.id).FirstOrDefault();

                if (fid != null)
                {
                    fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(fid, WebConfigurationManager.AppSettings["CryptoKey"]));
                }
            }
            else
            {
                return RedirectToAction("Logon", "Account");
            }

            jntuh_college_links_assigned facultyedit = new jntuh_college_links_assigned();
            var todayDate = DateTime.Now;
            int actualYear = db.jntuh_academic_year.Where(a => a.isActive == true && a.isPresentAcademicYear == true).Select(a => a.actualYear).FirstOrDefault();
            int prAy =
                db.jntuh_academic_year.Where(a => a.actualYear == (actualYear + 1)).Select(s => s.id).FirstOrDefault();
            var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
            if (FacultyEditLinkId != 0)
            {
                facultyedit = db.jntuh_college_links_assigned.Where(l => l.linkId == FacultyEditLinkId && l.academicyearId == prAy && l.isActive == true && l.fromdate <= todayDate && l.todate >= todayDate).Select(s => s).FirstOrDefault();
                //if (facultyedit == null)
                //{
                //    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
                //}
            }

            // fID = 9155;
            //DateTime todayDate = DateTime.Now.Date;

            var jntuh_department = db.jntuh_department.AsNoTracking().ToList();
            var jntuh_degree = db.jntuh_degree.AsNoTracking().ToList();

            var jntuh_departments = (from a in jntuh_department
                                     join b in jntuh_degree on a.degreeId equals b.id
                                     select new
                                     {
                                         id = a.id,
                                         departmentName = a.departmentName
                                     }).ToList();

            List<DistinctDepartment> depts = new List<DistinctDepartment>();
            string existingDepts = string.Empty;
            int[] notRequiredIds = { 25, 26, 27, 33, 34, 36, 37, 38, 39, 53, 54, 55, 56 };
            foreach (var item in jntuh_department.Where(s => !notRequiredIds.Contains(s.id)).OrderBy(s => s.departmentName))
            {
                if (!existingDepts.Split(',').Contains(item.departmentName))
                {
                    depts.Add(new DistinctDepartment { id = item.id, departmentName = item.departmentName });
                    existingDepts = existingDepts + "," + item.departmentName;
                }
            }

            ViewBag.department = depts;
            ViewBag.designation = db.jntuh_designation.Where(c => c.isActive == true).ToList();
            ViewBag.Institutions = db.jntuh_college.Where(c => c.isActive == true && c.id != 375).Select(c => new { CollegeId = c.id, CollegeName = c.collegeCode + "-" + c.collegeName }).OrderBy(c => c.CollegeName).ToList();

            List<SelectListItem> ratifiedDuration = new List<SelectListItem>();
            for (int i = 1; i <= 10; i++)
            {
                ratifiedDuration.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.duration = ratifiedDuration;

            List<SelectListItem> prevExperience = new List<SelectListItem>();
            for (int i = 0; i <= 40; i++)
            {
                prevExperience.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.prevExperience = prevExperience;

            List<SelectListItem> years = new List<SelectListItem>();
            for (int i = 1940; i <= DateTime.Now.Year; i++)
            {
                years.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.years = years;

            List<SelectListItem> division = new List<SelectListItem>();
            for (int i = 1; i <= 5; i++)
            {
                division.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.division = division;

            var PGDeptIds = db.jntuh_degree.Join(db.jntuh_department, d => d.id, de => de.degreeId, (d, de) => new { d = d, de = de }).Where(e => e.d.id != 4 && e.d.id != 5).Select(e => e.de.id).ToArray();

            int[] OthersSpecialization = { 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166 };
            var pgSpecializations = db.jntuh_specialization.Where(e => e.isActive == true && !OthersSpecialization.Contains(e.id) && PGDeptIds.Contains(e.departmentId) || e.id == 154).Select(e => new { id = e.id, spec = e.specializationName }).OrderBy(e => e.spec).ToList();
            ViewBag.PGSpecializations = pgSpecializations;

            var jntuh_registered_faculty = db.jntuh_registered_faculty.Where(f => f.id == fID).ToList();

            //var FlagsCheck = IsClearFaculty(jntuh_registered_faculty.Select(a => a.RegistrationNumber).FirstOrDefault());

            //if (!FlagsCheck)
            //{
            //    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //}
            //if (facultyedit == null)
            //{
            //    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //}
            //else
            //{
            //    if (FlagsCheck)
            //    {

            //        var FacultyEducation = db.jntuh_registered_faculty_education.Where(e => e.facultyId == fID).ToList();
            //        if (FacultyEducation.Count == 0 || FacultyEducation.Count == 1 || FacultyEducation.Count == 2)
            //        {
            //        }
            //        else if (facultyedit != null)
            //        {
            //            //TempData["ShowEditButton"] = false;
            //        }
            //        else
            //        {
            //            return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //        }
            //    }
            //    else
            //        return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });

            //}


            string inactivereg = jntuh_registered_faculty.Where(i => i.id == fID && i.isActive != false).Select(s => s.RegistrationNumber).FirstOrDefault();
            //if (String.IsNullOrEmpty(inactivereg))
            //{
            //    TempData["ERROR"] = "Edit option not provided as this registration number was surrendered under multiple registrations";
            //    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //}

            AdminEditFacReg regFaculty = new AdminEditFacReg();
            string fregnoa = jntuh_registered_faculty.Where(i => i.id == fID && (i.type == "Adjunct" || i.Blacklistfaculy == true || i.AbsentforVerification == true)).Select(s => s.RegistrationNumber).FirstOrDefault();
            //if (!string.IsNullOrEmpty(fregnoa))
            //{
            //    TempData["ERROR"] = "You don't have permissions to Edit";
            //    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //}
            //else
            //{
            //    string fregno = jntuh_registered_faculty.Where(i => i.id == fID && i.isActive != false).Select(s => s.RegistrationNumber).FirstOrDefault();
            //    if (!string.IsNullOrEmpty(fregno))
            //    {
            //        string editregno = db.jntuh_college_faculty_registered_copy.Where(e => e.RegistrationNumber == fregno && e.collegeId == 375)
            //        .Select(s => s.RegistrationNumber)
            //        .FirstOrDefault();
            //        if (!string.IsNullOrEmpty(editregno))
            //        {
            //            TempData["ERROR"] = "The details of your profile with the submitted documents are in order and hence the edit option is not available to you.";
            //            return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //        }
            //    }
            //}

            // fID = 121577;
            var regno = jntuh_registered_faculty.Where(e => e.id == fID).Select(e => e.RegistrationNumber).FirstOrDefault();


            jntuh_registered_faculty faculty = db.jntuh_registered_faculty.Find(fID);
            regFaculty.id = fID;
            regFaculty.Type = faculty.type;
            regFaculty.NewPassword = "TEMP@PWD";
            regFaculty.ConfirmPassword = "TEMP@PWD";
            int facultyUserId = faculty.UserId;
            regFaculty.UserName = db.my_aspnet_users.Where(u => u.id == facultyUserId).Select(u => u.name).FirstOrDefault();
            regFaculty.RegistrationNumber = faculty.RegistrationNumber;
            regFaculty.UniqueID = faculty.UniqueID;
            regFaculty.FirstName = faculty.FirstName;
            regFaculty.MiddleName = faculty.MiddleName;
            regFaculty.LastName = faculty.LastName;
            regFaculty.GenderId = faculty.GenderId;
            regFaculty.FatherOrhusbandName = faculty.FatherOrHusbandName;
            regFaculty.MotherName = faculty.MotherName;
            //In DB Working Type Means Faculty Category Like: OC,SC,BC...
            regFaculty.facultyCategory = faculty.WorkingType;
            regFaculty.CollegeId =
               db.jntuh_college_faculty_registered.Where(r => r.RegistrationNumber == regFaculty.RegistrationNumber)
                   .Select(s => s.collegeId)
                   .FirstOrDefault();

            if (regFaculty.CollegeId == null)
            {
                regFaculty.CollegeId = db.jntuh_college_principal_registered.Where(f => f.RegistrationNumber == regFaculty.RegistrationNumber).Select(s => s.collegeId).FirstOrDefault();
            }

            if (faculty.DateOfBirth != null)
                regFaculty.facultyDateOfBirth = UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfBirth.ToString());

            //regFaculty.DesignationId = faculty.DesignationId;
            //if (faculty.DesignationId != null)
            //{
            //    regFaculty.designation = db.jntuh_designation.Find(faculty.DesignationId).designation;
            //}
            //regFaculty.DepartmentId = faculty.DepartmentId;
            //if (faculty.DepartmentId != null)
            //{
            //    regFaculty.department = db.jntuh_department.Find(faculty.DepartmentId).departmentName;
            //}
            if (regFaculty.CollegeId != 0)
            {
                regFaculty.CollegeName = db.jntuh_college.Find(regFaculty.CollegeId).collegeName;
            }

            regFaculty.CollegeId = faculty.collegeId;

            #region Faculty Profitional Information on 18-02-2020


            faculty.DepartmentId = db.jntuh_college_faculty_registered.Where(
                    f => f.RegistrationNumber == regFaculty.RegistrationNumber)
                    .Select(s => s.DepartmentId)
                    .FirstOrDefault();

            if (faculty.DepartmentId != null)
            {
                regFaculty.department = db.jntuh_department.Find(faculty.DepartmentId).departmentName;
            }
            regFaculty.DepartmentId = faculty.DepartmentId;
            regFaculty.OtherDepartment = faculty.OtherDepartment;

            List<jntuh_registered_faculty_experience> registered_faculty_experience =
              db.jntuh_registered_faculty_experience.Where(
                  r =>
                      r.facultyId == regFaculty.id && r.createdBycollegeId != null)
                  .Select(s => s)
                  .ToList();

            var facultyexperiance = registered_faculty_experience.Where(
                    r => r.facultyId == regFaculty.id && r.collegeId == regFaculty.CollegeId && r.facultyJoiningOrder != null)
                    .Select(s => s)
                    .ToList()
                    .LastOrDefault();
            if (facultyexperiance != null)
            {
                faculty.DesignationId = facultyexperiance.facultyDesignationId;
                if (faculty.DesignationId != null)
                {
                    regFaculty.designation = db.jntuh_designation.Find(faculty.DesignationId).designation;
                }
                regFaculty.DesignationId = faculty.DesignationId;
                regFaculty.OtherDesignation = facultyexperiance.OtherDesignation;
                regFaculty.facultyDateOfAppointment =
                        UAAAS.Models.Utilities.MMDDYY2DDMMYY(facultyexperiance.facultyDateOfAppointment.ToString());
                regFaculty.facultyAppointmentLetter = facultyexperiance.facultyJoiningOrder;
                regFaculty.GrossSalary = facultyexperiance.facultySalary;
                if (!string.IsNullOrEmpty(regFaculty.facultyDateOfAppointment))
                {
                    int fromyear = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[2]);
                    int frommonth = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[1]);
                    int fromdate = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[0]);

                    DateTime zeroTime = new DateTime(1, 1, 1);
                    DateTime olddate = new DateTime(fromyear, frommonth, fromdate);
                    DateTime curdate = DateTime.Now;

                    int pryears = 0;
                    int months = 0;
                    int days = 0;
                    var Difference = curdate - olddate;
                    if (Difference.Days > 0)
                    {
                        pryears = (zeroTime + Difference).Year - 1;
                        months = (zeroTime + Difference).Month - 1;
                        days = (zeroTime + Difference).Day;
                    }
                    regFaculty.showPresentCollegeExperiance = pryears + " Years " + months + " Months " + days + " Days";
                }

            }
            //For The Experiance
            var experiance =
                registered_faculty_experience.Where(
                    e =>
                        e.createdBycollegeId != null && e.facultyId == regFaculty.id &&
                        e.facultyDateOfResignation != null && e.facultyDateOfResignation != null).Select(s => s).ToList();
            int exyears = 0;
            int exmonths = 0;
            int exdays = 0;
            foreach (var Experiencefaculty in experiance)
            {
                int fromyear = 0;
                int frommonth = 0;
                int fromdate = 0;
                int year = 0;
                int month = 0;
                int date = 0;
                if (Experiencefaculty.facultyDateOfAppointment != null)
                {
                    fromyear = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[2]);
                    frommonth = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[0]);
                    fromdate = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[1]);
                }

                if (Experiencefaculty.facultyDateOfResignation != null)
                {
                    year = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[2]);
                    month = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[0]);
                    date = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[1]);
                }

                // Experiencefaculty.facultyDateOfResignation = UAAAS.Models.Utilities.MMDDYY2DDMMYY(Experiencefaculty.facultyDateOfResignation);

                if (Experiencefaculty.facultyDateOfResignation != null &&
                    Experiencefaculty.facultyDateOfAppointment != null)
                {
                    DateTime zeroTime = new DateTime(1, 1, 1);
                    DateTime olddate = new DateTime(fromyear, frommonth, fromdate);
                    DateTime curdate = new DateTime(year, month, date);

                    int expyears = 0;
                    int months = 0;
                    int days = 0;
                    var Difference = curdate - olddate;

                    if (Difference.Days > 0)
                    {
                        expyears = (zeroTime + Difference).Year - 1;
                        months = (zeroTime + Difference).Month - 1;
                        days = (zeroTime + Difference).Day;
                    }

                    exyears = exyears + expyears;
                    exmonths = exmonths + months;
                    exdays = exdays + days;
                }
            }
            while (exdays >= 30)
            {
                exdays = exdays - 30;
                exmonths++;
            }

            while (exmonths >= 12)
            {
                exmonths = exmonths - 12;
                exyears++;
            }
            regFaculty.showTotalExperience = exyears + " Years " + exmonths + " Months " + exdays + " Days";
            #endregion

            regFaculty.WorkingStatus = faculty.WorkingStatus;
            //regFaculty.OtherDepartment = faculty.OtherDepartment;
            //regFaculty.OtherDesignation = faculty.OtherDesignation;
            //if (faculty.DateOfAppointment != null)
            //    regFaculty.facultyDateOfAppointment = UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfAppointment.ToString());
            regFaculty.isFacultyRatifiedByJNTU = faculty.isFacultyRatifiedByJNTU;
            if (faculty.DateOfRatification != null)
                regFaculty.facultyDateOfRatification = UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfRatification.ToString());
            regFaculty.ProceedingsNo = faculty.ProceedingsNumber;
            regFaculty.SelectionCommitteeProcedings = faculty.ProceedingDocument;
            regFaculty.ProceedingsNo = faculty.ProceedingsNumber;
            // regFaculty.OrganizationName = faculty.OrganizationName;
            regFaculty.AICTEFacultyId = faculty.AICTEFacultyId;
            //regFaculty.GrossSalary = faculty.grosssalary;
            //regFaculty.TotalExperience = faculty.TotalExperience;
            //regFaculty.TotalExperiencePresentCollege = faculty.TotalExperiencePresentCollege;
            regFaculty.EditPANNumber = faculty.PANNumber;
            regFaculty.EditAadhaarNumber = faculty.AadhaarNumber;
            regFaculty.EditEmail = faculty.Email;
            regFaculty.EditMobile = faculty.Mobile;
            regFaculty.National = faculty.National;
            regFaculty.InterNational = faculty.InterNational;
            regFaculty.Citation = faculty.Citation;
            regFaculty.Awards = faculty.Awards;
            regFaculty.facultyPhoto = faculty.Photo;
            regFaculty.facultyPANCardDocument = faculty.PANDocument;
            regFaculty.facultyAadhaarCardDocument = faculty.AadhaarDocument;
            regFaculty.SelectionCommitteeProcedings = faculty.ProceedingDocument;
            regFaculty.WorkingType = faculty.WorkingType;
            regFaculty.ProceedingsNo = faculty.ProceedingsNumber;
            regFaculty.isActive = faculty.isActive;
            regFaculty.isApproved = faculty.isApproved;
            regFaculty.IncomeTaxFileview = faculty.IncometaxDocument;
            regFaculty.isView = true;
            regFaculty.PanStatus = faculty.PanStatus;
            regFaculty.createdOn = faculty.createdOn;
            regFaculty.createdBy = faculty.createdBy;
            #region Faculty Education Data Getting

            // var jntuh_education_category = db.jntuh_education_category.Where(e => e.isActive == true).ToList();
            var registeredFacultyEducation = db.jntuh_registered_faculty_education.Where(e => e.facultyId == fID).ToList();

            if (registeredFacultyEducation.Count != 0)
            {
                foreach (var item in registeredFacultyEducation)
                {
                    if (item.educationId == 1)
                    {
                        regFaculty.SSC_educationId = 1;
                        regFaculty.SSC_HallticketNo = item.hallticketnumber;
                        regFaculty.SSC_studiedEducation = item.courseStudied;
                        regFaculty.SSC_specialization = item.specialization;
                        regFaculty.SSC_passedYear = item.passedYear;
                        regFaculty.SSC_percentage = item.marksPercentage;
                        regFaculty.SSC_division = item.division == null ? 0 : item.division;
                        regFaculty.SSC_university = item.boardOrUniversity;
                        regFaculty.SSC_place = item.placeOfEducation;
                        regFaculty.SSC_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 3)
                    {
                        regFaculty.UG_educationId = 3;
                        regFaculty.UG_HallticketNo = item.hallticketnumber;
                        regFaculty.UG_studiedEducation = item.courseStudied;
                        regFaculty.UG_specialization = item.specialization;
                        regFaculty.UG_passedYear = item.passedYear;
                        regFaculty.UG_percentage = item.marksPercentage;
                        regFaculty.UG_division = item.division == null ? 0 : item.division;
                        regFaculty.UG_university = item.boardOrUniversity;
                        regFaculty.UG_place = item.placeOfEducation;
                        regFaculty.UG_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 4)
                    {
                        regFaculty.PG_educationId = 4;
                        regFaculty.PG_HallticketNo = item.hallticketnumber;
                        regFaculty.PG_studiedEducation = item.courseStudied;
                        regFaculty.PG_specialization = item.specialization;
                        regFaculty.PG_passedYear = item.passedYear;
                        regFaculty.PG_percentage = item.marksPercentage;
                        regFaculty.PG_division = item.division == null ? 0 : item.division;
                        regFaculty.PG_university = item.boardOrUniversity;
                        regFaculty.PG_place = item.placeOfEducation;
                        regFaculty.PG_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 5)
                    {
                        regFaculty.MPhil_educationId = 5;
                        regFaculty.MPhil_HallticketNo = item.hallticketnumber;
                        regFaculty.MPhil_studiedEducation = item.courseStudied;
                        regFaculty.MPhil_specialization = item.specialization;
                        regFaculty.MPhil_passedYear = item.passedYear;
                        regFaculty.MPhil_percentage = item.marksPercentage;
                        regFaculty.MPhil_division = item.division == null ? 0 : item.division;
                        regFaculty.MPhil_university = item.boardOrUniversity;
                        regFaculty.MPhil_place = item.placeOfEducation;
                        regFaculty.MPhil_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 6)
                    {
                        regFaculty.PhD_educationId = 6;
                        regFaculty.PhD_HallticketNo = item.hallticketnumber;
                        regFaculty.PhD_studiedEducation = item.courseStudied;
                        regFaculty.PhD_specialization = item.specialization;
                        regFaculty.PhD_passedYear = item.passedYear;
                        regFaculty.PhD_percentage = item.marksPercentage;
                        regFaculty.PhD_division = item.division == null ? 0 : item.division;
                        regFaculty.PhD_university = item.boardOrUniversity;
                        regFaculty.PhD_place = item.placeOfEducation;
                        regFaculty.PhD_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 9)
                    {
                        regFaculty.NET_educationId = 6;
                        regFaculty.NET_HallticketNo = item.hallticketnumber;
                        regFaculty.NET_studiedEducation = item.courseStudied;
                        regFaculty.NET_specialization = item.specialization;
                        regFaculty.NET_passedYear = item.passedYear;
                        //regFaculty.NET_percentage = item.marksPercentage;
                        //regFaculty.NET_division = item.division == null ? 0 : item.division;
                        regFaculty.NET_university = item.boardOrUniversity;
                        regFaculty.NET_place = item.placeOfEducation;
                        regFaculty.NET_facultyCertificate = item.certificate;
                    }
                    else if (item.educationId == 8)
                    {
                        regFaculty.Others_educationId = 8;
                        regFaculty.faculty_AllCertificates = item.certificate;
                    }
                }
            }

            #endregion

            regFaculty.jntuh_registered_faculty_edit_fields = db.jntuh_registered_faculty_edit_fields.Where(e => e.IsFieldEditable == true).ToList();

            jntuh_registered_faculty_edit_fields Edit_fileds = new jntuh_registered_faculty_edit_fields();

            #region Auto Populate Condition.
            var specializations = db.jntuh_specialization.Where(s => s.isActive == true).Select(a => a).ToList();

            var ugspecializations = (from s in specializations
                                     join d in db.jntuh_department on s.departmentId equals d.id
                                     join de in db.jntuh_degree on d.degreeId equals de.id
                                     where (de.id == 4 || de.id == 5)
                                     select new
                                     {
                                         id = s.id,
                                         specializationname = s.specializationName
                                     }).ToList();

            regFaculty.ug_specializations = new List<string>() { "Test" };
            foreach (var item1 in ugspecializations)
            {
                regFaculty.ug_specializations.Add(item1.specializationname);
            }

            var pgspecializations = (from s in specializations
                                     join d in db.jntuh_department on s.departmentId equals d.id
                                     join de in db.jntuh_degree on d.degreeId equals de.id
                                     where (de.id != 4 && de.id != 5)
                                     select new
                                     {
                                         id = s.id,
                                         specializationname = s.specializationName
                                     }).ToList();

            regFaculty.pg_specializations = new List<string>() { "Test" };
            foreach (var item1 in pgspecializations)
            {
                regFaculty.pg_specializations.Add(item1.specializationname);
            }

            var Education = db.jntuh_registered_faculty_education.Select(e => new { educationid = e.educationId, coursestudied = e.courseStudied, universites = e.boardOrUniversity, places = e.placeOfEducation, specialization = e.specialization }).ToList();

            var RegisteredFacultyEducation_Courses = Education.Select(e => e.coursestudied.Trim()).Distinct().ToList();
            var RegisteredFacultyEducation_universities = Education.Where(z => z.universites != null).Select(e => e.universites.Trim()).Distinct().ToList();
            var RegisteredFacultyEducation_places = Education.Where(z => z.places != null).Select(e => e.places).Distinct().ToList();
            var RegisteredFacultyEducation_UGspecialization = Education.Where(a => a.educationid == 3 && a.specialization != null).Select(e => e.specialization.Trim()).Distinct().ToList();
            var RegisteredFacultyEducation_PGspecialization = Education.Where(a => a.educationid == 4 && a.specialization != null).Select(e => e.specialization.Trim()).Distinct().ToList();

            foreach (var UG in RegisteredFacultyEducation_UGspecialization)
            {
                regFaculty.ug_specializations.Add(UG.Trim());
            }
            regFaculty.ug_specializations.Remove("Test");
            foreach (var PG in RegisteredFacultyEducation_PGspecialization)
            {
                regFaculty.pg_specializations.Add(PG.Trim());
            }
            regFaculty.pg_specializations.Remove("Test");
            regFaculty.universitys = new List<string>() { "Rajiv Gandhi University", "Assam University", "Tezpur University", "University of Hyderabad, Hyderabad", "Maulana Azad National Urdu University", "English   and   Foreign   Languages   University", "Jamia Millia Islamia", "University of Delhi", "JawaharLal Nehru University", "Indira Gandhi National Open University", "South Asian University", "The  Indira  Gandhi  National  Tribal  University", "Dr. Harisingh Gour Vishwavidyalaya", "Mahatma  Gandhi  Antarrashtriya  Hindi  Vishwavidyalaya", "Mizoram University", "North Eastern Hill University", "Manipur University", "Central Agricultural University", "Nagaland University", "Pondicherry  University", "Sikkim University", "Tripura University", "Aligarh Muslim University", "Babasaheb  Bhimrao  Ambedkar  University", "Banaras Hindu University", "University of Allahabad", "Rajiv  Gandhi  National  Aviation  University", "Rani  Lakshmi  Bai  Central  Agricultural  University", "Visva Bharati, Shantiniketan", "Hemwati Nandan Bahuguna Garhwal University", "Central University of Tamil Nadu", "Indian Maritime University", "Central  University  of  Rajasthan", "Central University of Punjab", "Central University of Orissa", "Central University of Kerala", "Central University of Karnataka", "Central University of Jharkhand", "Central University of Kashmir, Transit Campus", "Central University of Jammu, Bagla (Rahya-Suchani)", "Central University of Himachal Pradesh", "Central University of Haryana", "Guru  Ghasidas  Vishwavidyalaya", "Central University of Bihar", "Nalanda University", "Mahatma  Gandhi  Central  University", "Central University of Gujarat", "Academy of Maritime Education and Training", "Amrita Vishwa Vidyapeetham", "Avinashilingam Institute for Home Science & Higher Education for Women", "B.L.D.E.", "B.S. Abdur Rahman Institute of Science and Technology", "Banasthai Vidyapith", "Bharath Institute of Higher Education & Research", "Bharati Vidyapeeth", "Bhatkhande Music Institute", "Birla Institute of Technology", "Birla Institute of Technology & Science", "Central Institute of Buddhist Studies(CIBS)", "Central Institute of Fisheries Education", "Central Institute of Higher Tibetan Studies", "Chennai Mathematical Institute", "Chettinad Academy of Research and Education (CARE)", "Chinmaya Vishwavidyapeeth", "Christ", "D.Y Patil Educational Society", "Datta Meghe Institute of Medical Sciences", "Dayalbagh Educational Institute", "Deccan College Postgraduate & Research Institute", "Dr. D.Y. Patil Vidyapeeth", "Dr. M.G.R. Educational and Research Institute", "Forest Research Institute", "Gandhi Institute of Technology and Management (GITAM)", "Gandhiigram Rural Institute", "Gokhale Institute of Politics & Economics", "Graphic Era", "Gujarat Vidyapith", "Gurukul Kangri vidyapeeth", "Hindustan Institute of Technology and Science (HITS)", "Homi Bhabha National Institute, Regd. Office", "ICFAI Foundation for Higher Education", "IIS", "Indain Institute of Foreigen Trade", "Indian Agricultural Research Institute", "Indian Association for the Cultivation of Science (IACS)", "Indian Institute of Information Technology and Management", "Indian Institute of Science", "Indian Institute of Space Science and Technology", "Indian Law Institute", "Indian School of Mines", "Indian Veterinary Research Institute", "Indira Gandhi Institute of Development Research", "Institute of Advanced Studies in Education", "Institute of Chemical Technology", "Institute of liver and Biliary Sciences", "Instituteof Armamrnt Technology", "International Institute for Population Sciences", "International Institute of Information Technology", "Jain", "Jain Vishva Bharati Institute", "Jamia Hamdard", "Janardan Rai Nagar Rajasthan Vidyapeeth", "Jawahar lal Nehru Centre for Advanced Scientific Research", "Jaypee Institute of Information Technology", "JSS Academy of Higher Education & Research", "K.L.E. Academy of Higher Education and Research", "Kalasalingam Academy of Research and Education", "Kalinga Institute of Industrial Technology", "Karpagam Academy of Higher Education", "Karunya Institute of Technology and Sciences", "Kerala Kalamandalam", "Koneru Lakshmaiah Education Foundation", "Krishna Institute of Medical Sciences", "Lakshmibai National Institute of Physical Education", "Lingaya's Vidyapeeth", "LNM Istitute of Information Technology", "Maharishi Markandeshwar (Deemed to be University)", "Manav Rachna International Institute of Research and Studies", "Manipal Academy of Higher Education", "Meenakshi Academy of Higher Education and Research", "MGM Institute of Health Sciences", "Narsee Monjee Institute of Management Studies", "National Brain Research Centre", "National Dairy Research Institute", "National Institute of Food Technology, Entrepreneurship & Management (NIFTEM)", "National Institute of Mental Health & Neuro Sciences", "National Museum Institute of History of Arts, Conservation and Musicology", "National Rail and Transportation Institute", "National University of Educational Planning & Administration", "Nava Nalanda Mahavihara", "Nehru Gram Bharati", "NITTE", "Noorul Islam Centre for Higher Education", "North Eastern Regional Institute of Science & Technology", "Padmashree Dr.D.Y. Patil Vidyapeeeth", "Pandit Dwarka Prasad Mishra Indian Institute of Information Technology", "Periyar Manaimmai Institute of Science & Technology (PMIST)", "Ponnaiyan Ramajayam Institute of Science & technology (PMIST)", "Pravara Institute of Medical Sciences", "Punjab Engineering College", "Rajiv Gandhi National Institute of Youth Development", "Ramakrishna Mission Vivekananda Educational and Research Institute", "Rashtriya Sanskrit Sansthana", "Rashtriya Sanskrit Vidyapeeth", "S.R.M Institute of Science and Technology", "Sam Higginbottom Institute of Agriculture, Technology & Sciences", "Sant Longowal Institute of Engineering and Technology", "Santosh", "Sathyabama Institute of Science and Technology", "Saveetha Institute of Medical and Technical Sciences", "Shanmugha Arts Science Technology & Research Academy (SASTRA)", "Shobhit Institute of Engineering & Technology", "Shri Lal Bahadur Shastri Rashtriya Sanskrit Vidyapith", "Siksha 'O' Anusandhan", "Sri Balaji Vidyapeeth (Deemed to be University)", "Sri Chandrasekharendra Saraswathi Vishwa Mahavidyalaya", "Sri Devraj Urs Academy of Higher Education and Research", "Sri Ramachandra Medical College and Research Institute", "Sri Sathya Sai Institute of Higher Learning", "Sri Siddhartha Academy of Higher Education", "St. Peterâ€™s Institute of Higher Education and Research", "Sumandeep Vidyapeeth", "Swami Vivekananda Yoga Anusandhana Samsthana", "Symbiosis International", "Tata Institute of Fundamental Research", "Tata Institute of Social Sciences", "TERI School of Advanced studies", "Thapar Institute of Engineering & Technology", "Tilak Maharashtra Vidyapeeth", "Vel Tech Rangarajan Dr. Sagunthala R & D Institute of Science and Technology", "Vellore Institute of Technology", "VELS Institute of Science Technology & Advanced Studies (VISTAS)", "Vignan's Foundation for Science, Technology and Research", "Vinayaka Missionâ€™s Research Foundation", "Yenepoya", "A.P.J. Abdul Kalam Technological University", "Acharaya N.G.Ranga Agricultural University", "Acharaya Nagarjuna University", "Adikavi Nannaya University", "Akkamahadevi women's University (Formerly known as Karnataka State Women's University)", "Alagappa University", "Aliah University", "Allahabad State University", "Ambedkar University Delhi (AUD)", "Anand Agricultural University", "Andhra University", "Anna University", "Annamalai University", "Arybhatta Knowledge University", "Assam Agricultural University", "Assam Rajiv Gandhi University of Co-operative Management", "Assam Science & Technology University", "Assam Womens University", "Atal Bihari Vajpayee Hindi Vishwavidyalaya", "Awadesh Pratap Singh University", "Ayush and Health Sciences University of Chhattisgarh", "Baba Farid University of Health Sciences", "Baba Ghulam Shah Badshah University", "Babasaheb Bhimrao Ambedkar Bihar University", "Banda University of Agriculture & Technology", "Bangalore University", "Bankura University", "Barkatullaah University", "Bastar Vishwavidyalaya", "Bengaluru Central University", "Bengaluru North University", "Berhampur University", "Bhagat Phool Singh Mahila Vishwavidyalaya", "Bhakta Kavi Narsinh Mehta University", "Bharathiar University", "Bharathidasan University", "Bhupender Narayan Mandal University", "Bidhan Chandra Krishi Vishwavidyalaya", "Bihar Agricultural University", "Biju Patnaik University of Technology", "Bilaspur Vishwavidyalaya", "Binod Bihari Mahto Koylanchal University", "Birsa Agricultural University", "Bodoland University", "Bundelkhand University", "Burdwan University", "Calcutta University", "Calicut University", "CEPT University", "Ch. Bansi Lal University", "Chanakya National Law University", "Chandr Shekhar Azad University of Agriculture & Technology", "Chatrapati Sahuji Maharaj Kanpur University", "Chaudhary Devi Lal University", "Chaudhary Ranbir Singh University", "Chaudhary Sarwan Kumar Himachal Pradesh Krishi Vishvavidyalaya", "Chhattisgarh Kamdhenu Vishwavidyalaya", "Chhattisgarh Swami Vivekanad Technical Universty", "Childrens University", "Choudary Charan Singh Haryana Agricultural Univeersity", "Choudary Charan Singh University", "Cluster University of Jammu", "Cluster University of Srinagar", "Cochin Unviersity of Science & Technology", "Cooch Behar Panchanan Barma University", "Cotton University", "Damodaram Sanjivayya National Law University", "Davangere University", "Deen Bandhu Chhotu Ram University of Sciences & Technology", "Deen Dayal Upadhyay Gorakhpur University", "Delhi Pharmaceutical Sciences & Research University", "Delhi Technological University", "Devi Ahilya Vishwavidyalaya", "Dharmashastra National Law University", "Dharmsinh Desai University", "Diamond Harbour Womens University", "Dibrugarh University", "Doon University", "Dr Shyama Prasad Mukherjee University", "Dr. A.P.J. Abdul Kalam Technical University", "Dr. B. R. Ambedkar University of Social Sciences", "Dr. B.R. Ambedkar University", "Dr. B.R.Ambedkar Open University", "Dr. B.R.Ambedkar University", "Dr. Babasaheb Ambedkar Marathwada University", "Dr. Babasaheb Ambedkar Open University", "Dr. Babasaheb AmbedkarTechnological University", "Dr. Bhimrao Ambedkar Law University", "Dr. N.T.R. University of Health Sciences", "Dr. Punjabrao Deshmukh Krishi Vidyapeeth", "Dr. Ram Manohar Lohia Awadh University", "Dr. Ram Manohar Lohiya National Law University", "Dr. Shakuntala Misra National Rehabilitation University", "Dr. Shyama Prasad University", "Dr. Y.S.Parmar University of Horticulture & Forestry", "Dr. Y.S.R. Horticultural Univerity", "Dravidian University", "Durg Vishwavidyalaya", "Fakir Mohan University", "G.B.Pant University of Agriculture & Technology", "Gangadhar Meher University", "Gauhati University", "Gautam Buddha University", "Goa University", "Gondwana University", "Govind Guru Tribal University", "Gujarat Agricultural University", "Gujarat Ayurveda University", "Gujarat Forensic Sciences University", "Gujarat National Law University", "Gujarat Technological University", "Gujarat University", "Gujarat University of Transplantation Sciences", "Gulbarga University", "Guru Angad Dev Veterinary & Animal Sciences University", "Guru Gobind Singh Indraprastha Vishwavidyalaya", "Guru Jambeshwar University of Science and Technology", "Guru Nanak Dev University", "Guru Ravidas Ayurved University", "Harcourt Butler Technical University", "Haridev Joshi University of Journalism and Mass Communication", "Haryana Vishwakarma Skill University", "Hemchandracharya North Gujarat University", "Hemwati Nandan Bahuguna Medical Education University", "Hidayatullah National Law University", "Himachal Pradesh National Law University", "Himachal Pradesh Technical University", "Himachal Pradesh University", "Indian Institute of Teacher Education", "Indira Gandhi Delhi Technical University for Women", "Indira Gandhi Krishi Vishwavidyalaya", "Indira Gandhi University", "Indira Kala Sangeet Vishwavidyalaya", "Indraprastha Institute of Information Technology", "Institute of Infrastructure Technology Research and Management", "International Institute of Information Technology (IIIT)", "Islamic University of Sciences & Technology University", "Jadavpur University", "Jagadguru Ramanandacharya Sanskrit University", "Jai Naraim Vyas University", "Jai Prakash vishwavidyalaya(university)", "Jammu University", "Jananayak Chandrashekhar University", "Jawaharlal Nehru Architecture and Fine Arts University", "Jawaharlal Nehru Krishi Vishwavidyalaya", "Jawaharlal Nehru Technological University", "Jharkhand Raksha Shakti University", "Jiwaji University", "Junagarh Agricultural University", "Kakatiya University", "Kaloji Narayan Rao University of Health Sciences", "Kalyani University", "Kamdhenu University", "Kameshwar Singh.Darbhanga Sanskrit Vishwavidyalaya", "Kannada University", "Kannur University", "Karanataka State Law University", "Karanataka State Open University", "Karanataka University", "Karanataka Veterinary, Animal & Fisheries Science University", "Karnataka Folklore University", "Karnataka Sanskrit University", "Karnataka State Rural Development and Panchayat Raj University", "Kashmir University", "Kavi Kulguru Kalidas Sanskrit Vishwavidyalaya", "Kazi Nazrul University", "Kerala Agricultural Unviersity", "Kerala University", "Kerala University of Fisheries & Ocean Studies", "Kerala University of Health Sciences", "Kerala Veterinary & Animal Sciences University", "Khallikote University", "Khwaja Moinuddin Chishti Urdu, Arabi-Farsi University", "King Georges Medical University", "Kolhan University", "Konkan Krishi Vidyapeeth", "Krantiguru Shyamji Krishna Verma Kachchh University", "Krishna Kanta Handique State Open University", "Krishna University", "Krishnakumarsinhji Bhavnagar University", "KSGH Music and Performing Arts University", "Kumar Bhaskar Varma Sanskrit & Ancient Studies University", "Kumaun University", "Kurukshetra University", "Kushabhau Thakre Patrakarita Avam Jansanchar Vishwavidyalaya", "Kuvempu University", "Lala Lajpat Rai University of Veterinary & Animal Sciences", "Lalit Narayan Mithila University", "Lucknow University", "M.J.P. Rohilkhand University", "M.P.Bhoj (open) University", "Madan Mohan Malaviya University of Technology", "Madaras University", "Madhya Pradesh Pashu Chikitsa Vigyan Vishwavidyalaya", "Madurai Kamraj University", "Magadh University", "Mahamaya Technical University", "Maharahtra University of Health Sciences", "Maharaja Bir Bikram University", "Maharaja Chhatrasal Bundelkhand Vishwavidyalaya", "Maharaja Ganga Singh University", "Maharaja Ranjit Singh Punjab Technical University", "Maharaja Sayajirao University of Baroda", "Maharaja Surajmal Brij University", "Maharana Partap Horticultural University", "Maharana Pratap University of Agriculture & Technology", "Maharashtra Animal & Fishery Sciences University", "Maharashtra National Law University", "Maharashtra National Law University,", "Maharishi Dayanand Saraswati University", "Maharishi Dayanand University", "Maharshi Panini Sanskrit Evam Vedic Vishwavidyalaya", "Mahatam Gandhi Kashi Vidyapeeth", "Mahatma Gandhi Chitrakoot Gramodaya Vishwavidyalaya", "Mahatma Gandhi University", "Mahatma Gandhi Unversity", "Mahatma Phule Krishi Vidyapeeth", "Makhanlal Chaturvedi National University of Journalism & Communication", "Mangalore University", "Manipur Technical University", "Manipur University of Culture", "Manonmaniam Sundarnar University", "Marathwada Agricultural University", "Maulana Abul Kalam Azad University of Technology", "Maulana Mazharul Haque Arabic & Persian University", "Mohan Lal Shukhadia University", "Mother Teresa Womens University", "Mumbai University", "Munger University", "Mysore University", "Nalanda Open University", "Narendra Deo University of Agriculture & Technology", "National Academy of Legal Studies & Research University", "National Law Institute University", "National law School of India University", "National Law Universituy", "National Law University", "National Law University and Judicial Academy", "National University of Advanced Legal Studies (NUALS)", "National University of Study & Research in Law", "Navsari Agriculture University", "Netaji Shubhash Open University", "Nilamber-Pitamber University", "Nizams Institute of Medical Sciences", "North Benagal University", "North Maharashtra University", "North Orissa University", "Odisha State Open University", "Orissa University Of Agriculture & Technology", "Osmania University", "Palamuru University", "Pandit S N Shukla University", "Patliputra University", "Patna University", "Periyar University", "Potti Sreeramulu Teugu Universtity", "Presidency University", "Professor Jayashankar Telangana State Agricultural University", "Pt. Bhagwat Dayal Sharma University of Health Sciences", "Pt. Sundarlal Sharma (Open) University", "Pt.Ravishankar Shukla University", "Punjab Agriculture University", "Punjab Technical University", "Punjab University", "Punjabi University", "Purnea University", "Rabindra Bharati University", "Raiganj University", "Raj Rishi Bhartrihari Matsya University", "Raja Mansingh Tomar Music & Arts University", "Rajasthan Ayurveda University", "Rajasthan ILD Skills University (RISU)", "Rajasthan Technical University", "Rajasthan University", "Rajasthan University of Health Sciences", "Rajasthan University of Veterinary & Animal Sciences", "Rajendra Agricultural University", "Rajiv Gandhi Prodoyogiki Vishwavidyalaya", "Rajiv Gandhi University of Health Science", "Rajiv Gandhi University of Knowledge Technology", "Rajmata Vijayaraje Scindia Krishi Vishwa Vidyalaya", "Raksha Shakti University", "Rama Devi Womens University", "Ranchi University", "Rani Channamma University", "Rani Durgavati Vishwavidyalaya", "Ravenshaw University", "Rayalaseema University", "Sambalpur University", "Sampurnanand Sanskrit Vishwavidyalaya", "Sanchi University of Buddhist-Indic Studies", "Sant Gadge Baba Amravati University", "Sardar Krushinagar Dantiwada Agricultural University", "Sardar Patel University", "Sardar Patel University of Police, Security & Criminal Justice", "Sardar Vallabh Bhai Patel University of Agriculture & Technology", "Sarguja University", "Satavahana University", "Saurashtra University", "Savitribai Phule Pune University", "Shekhawati University", "Sher-e-Kashmir University of Agricultural Science & Technology", "Shivaji University", "shree guru gobind singh tricentenary university", "Shree Sankaracharaya University of Sanskrit", "Shree Somnath Sanskrit University", "Shri Govind Guru University", "Shri Jagannath Sanskrit Vishwavidyalaya", "Shri Mata Vaishno Devi University", "Siddharth University", "Sidho-Kanho-Birsha University", "Sido Kanhu University", "Smt. Nathibai Damodar Thackersey Womens University", "Solapur University", "Sri Dev Suman Uttarakhand Vishwavidyalaya", "Sri Konda Laxman Telangana State Horticultural University", "Sri krishnadevaraya University", "Sri P V Narsimha Rao Telangana Veterinary University", "Sri Padmavati Mahila Vishwavidyalayam", "Sri Venkateswara Institute of Medical Sciences", "Sri Venkateswara University", "Sri Venkateswara Vedic University", "Sri Venkateswara Veterinary University", "Srimanta Sankaradeva University of Health Sciences", "State University of Performing and Visual Arts", "Swami Keshwanand Rajasthan Agriculture University", "Swami Ramanand Teerth Marathwada University", "Swarnim Gujarat Sports University", "T.M. Bhagalpur University", "Tamil Nadu Fisheries University", "Tamil Nadu Music and Fine Arts University", "Tamil Nadu Open University", "Tamil Nadu Teacher Education University", "Tamil University", "Tamilnadu Agricultural University", "Tamilnadu Dr. Ambedkar Law University", "Tamilnadu Dr. M.G.R.Medical University", "Tamilnadu National Law School", "Tamilnadu Physical Educaton and Sports University", "Tamilnadu Veterinary & Animal Sciences University", "Telangana University", "The Bengal Engineering & Science University", "The Rajiv Gandhi National University of Law", "The Rashtrasant Tukadoji Maharaj Nagpur University", "The Sanskrit College and University", "The West Bengal National University of Juridical Science", "The West Bengal University of Health Sciences", "Thiruvalluvar University", "Thunchath Ezhuthachan Malayalam University", "Tumkur University", "U.P. Pandit Deen Dayal Upadhyaya Pashu Chikitsa Vigyan Vishwavidhyalaya Evam Go-Anusandhan Sansthan", "U.P. Rajarshi Tandon Open University", "U.P.King Georges University of Dental Sciences", "University of Agricultural Sciences", "University of Horticultural Sciences", "University of Kota", "Univesity of Gour Banga", "Utkal University", "Utkal University of Culture", "Uttar Banga Krishi Vishwavidyalaya", "Uttar Pradesh University of Medical Sciences", "Uttarakhand Aawasiya Viswavidyalaya", "Uttarakhand Ayurved University", "Uttarakhand Open University", "Uttarakhand Sanskrit University", "Uttarakhand Technical University", "Vardhman Mahaveer Open University", "Veer Bahadur Singh Purvanchal University", "Veer Chandra Singh Garhwali Uttarakhand University of Horticulture & Forestry", "Veer Kunwar Singh University", "Veer Narmad South Gujarat University", "Veer Surendra Sai Institute of Medical Science and Research", "Veer Surendra Sai University of Technology", "Vesveswaraiah Technological University", "Vidya Sagar University", "Vijayanagara Sri Krishnadevaraya University", "Vikram Simhapuri University", "Vikram University", "Vinoba Bhave University", "West Bengal State University", "West Bengal University of Animal and Fishery Sciences", "West Bengal University of Teachers, Training, Education Planning and Administration", "Yashwant Rao Chavan Maharashtra Open University", "YMCA University of Science & Technology", "Yogi Vemana University" };
            regFaculty.places = new List<string>() { "Arunachal Pradesh", "Assam", "Telangana", "Delhi", "Madhya Pradesh", "Maharashtra", "Mizoram", "Meghalaya", "Manipur", "Nagaland", "Pondicherry", "Sikkim", "Tripura", "Uttar Pradesh", "West Bengal", "Uttarakhand", "Tamil Nadu", "Rajasthan", "Punjab", "Orissa", "Kerala", "Karnataka", "Jharkhand", "Jammu & Kashmir", "Himachal", "Pradesh", "Haryana", "Chhattisgarh", "Bihar", "Gujarat", "Jammu and Kashmir", "Andhra Pradesh", "Chandigarh", "Puducherry", "Himachal Pradesh", "Goa" };
            regFaculty.Courses = new List<string>() { "BE", "BTech", "ME", "MTech", "MBA", "MCA", "BCA", "PharmD", "BPharmacy", "MPharmacy", "BCom", "MCom", "BSC", "MSC", "M.A", "BA", "BZC", "MPhil", "PhD" };

            foreach (var course in RegisteredFacultyEducation_Courses)
            {
                //var changeCourse = course.First().Substring(0,1).ToUpper() + course.Substring(1, course.Length).ToLower();
                regFaculty.Courses.Add(course.Trim());
            }

            foreach (var university in RegisteredFacultyEducation_universities)
            {
                regFaculty.universitys.Add(university.Trim());
            }

            foreach (var place in RegisteredFacultyEducation_places)
            {
                regFaculty.places.Add(place.Trim());
            }
            #endregion

            return View(regFaculty);
        }

        [HttpPost]
        [Authorize(Roles = "Admin")]
        public ActionResult FacultyAACEditDetails(AdminEditFacReg faculty, string fid)
        {
            TempData["SUCCESS"] = null;
            TempData["ERROR"] = null;
            int UserId = 0;
            int fID = 0;
            if (fid != null)
            {
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(fid, WebConfigurationManager.AppSettings["CryptoKey"]));
            }
            //var todayDate = DateTime.Now;
            //var isclear = IsClearFaculty(faculty.RegistrationNumber.Trim());

            //if (!isclear)
            //{
            //    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //}
            //if (isclear)
            //{
            //    var FacultyEditLinkId = db.jntuh_link_screens.Where(a => a.isActive == true && a.linkCode == "FEO").Select(a => a.id).FirstOrDefault();
            //    int actualYear = db.jntuh_academic_year.Where(a => a.isActive == true && a.isPresentAcademicYear == true).Select(a => a.actualYear).FirstOrDefault();
            //    int prAy =
            //        db.jntuh_academic_year.Where(a => a.actualYear == (actualYear + 1)).Select(s => s.id).FirstOrDefault();
            //    if (FacultyEditLinkId != 0)
            //    {
            //        jntuh_college_links_assigned facultyedit = db.jntuh_college_links_assigned.Where(l => l.linkId == FacultyEditLinkId && l.academicyearId == prAy && l.isActive == true && l.fromdate <= todayDate && l.todate >= todayDate).Select(s => s).FirstOrDefault();
            //        if (facultyedit != null)
            //        {
            //            //TempData["ShowEditButton"] = true;
            //        }
            //        else
            //            return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //    }
            //}
            //else
            //{
            //    return RedirectToAction("ViewFacultyDetails", "NewOnlineRegistration", new { fid = fid });
            //}


            #region Dropdown Lists
            List<DistinctDepartment> depts = new List<DistinctDepartment>();
            string existingDepts = string.Empty;

            int[] notRequiredIds = { 25, 26, 27, 33, 34, 36, 37, 38, 39, 53, 54, 55, 56 };
            var jntuh_departments = db.jntuh_department.Select(D => D).ToList();

            var jntuh_department = db.jntuh_department.AsNoTracking().ToList();
            foreach (var item in jntuh_department.Where(s => !notRequiredIds.Contains(s.id)).OrderBy(s => s.departmentName))
            {
                if (!existingDepts.Contains(item.departmentName))
                {
                    depts.Add(new DistinctDepartment { id = item.id, departmentName = item.departmentName });
                    existingDepts = existingDepts + "," + item.departmentName;
                }
            }

            ViewBag.department = depts;
            ViewBag.designation = db.jntuh_designation.Where(c => c.isActive == true).ToList();
            ViewBag.Institutions = db.jntuh_college.Where(c => c.isActive == true && c.id != 375).Select(c => new { CollegeId = c.id, CollegeName = c.collegeCode + "-" + c.collegeName }).OrderBy(c => c.CollegeName).ToList();

            List<SelectListItem> ratifiedDuration = new List<SelectListItem>();
            for (int i = 1; i <= 10; i++)
            {
                ratifiedDuration.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.duration = ratifiedDuration;

            List<SelectListItem> prevExperience = new List<SelectListItem>();
            for (int i = 0; i <= 40; i++)
            {
                prevExperience.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.prevExperience = prevExperience;

            List<SelectListItem> years = new List<SelectListItem>();
            for (int i = 1940; i <= DateTime.Now.Year; i++)
            {
                years.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.years = years;

            List<SelectListItem> division = new List<SelectListItem>();
            for (int i = 1; i <= 5; i++)
            {
                division.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }

            ViewBag.division = division;


            var PGDeptIds = db.jntuh_degree.Join(db.jntuh_department, d => d.id, de => de.degreeId, (d, de) => new { d = d, de = de }).Where(e => e.d.id != 4 && e.d.id != 5).Select(e => e.de.id).ToArray();

            int[] OthersSpecialization = { 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166 };
            var pgSpecializations = db.jntuh_specialization.Where(e => e.isActive == true && !OthersSpecialization.Contains(e.id) && PGDeptIds.Contains(e.departmentId) || e.id == 154).Select(e => new { id = e.id, spec = e.specializationName }).OrderBy(e => e.spec).ToList();
            ViewBag.PGSpecializations = pgSpecializations;
            #endregion

            ViewBag.FacultyID = fID;
            faculty.id = fID;
            string photoPath = "~/Content/Upload/Faculty/PHOTOS";
            string panCardsPath = "~/Content/Upload/Faculty/PANCARDS";
            string aadhaarCardsPath = "~/Content/Upload/Faculty/AADHAARCARDS";
            string proceedingsPath = "~/Content/Upload/Faculty/PROCEEDINGS";
            string certificatesPath = "~/Content/Upload/Faculty/CERTIFICATES";
            string IncomeTaxcertificatesPath = "~/Content/Upload/Faculty/INCOMETAX";
            string PhdUndertakingcertificatesPath = "~/Content/Upload/Faculty/PHDUndertaking";
            string AllcertificatesPath = "~/Content/Upload/Faculty/CERTIFICATES/CertificatesPDF";

            try
            {
                if (ModelState.IsValid == true)
                {
                    if (faculty.facultyDateOfBirth != null)
                        faculty.facultyDateOfBirth = UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.facultyDateOfBirth);
                    if (faculty.facultyDateOfAppointment != null)
                        faculty.facultyDateOfAppointment =
                            UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.facultyDateOfAppointment);

                    jntuh_registered_faculty jntuh_registered_faculty = db.jntuh_registered_faculty.Where(a => a.id == fID).Select(e => e).FirstOrDefault();

                    UserId = jntuh_registered_faculty.UserId;

                    jntuh_registered_faculty.id = fID;
                    jntuh_registered_faculty.FirstName = faculty.FirstName;
                    jntuh_registered_faculty.MiddleName = faculty.MiddleName;
                    jntuh_registered_faculty.LastName = faculty.LastName;
                    jntuh_registered_faculty.GenderId = faculty.GenderId == null ? 0 : (int)faculty.GenderId;
                    jntuh_registered_faculty.FatherOrHusbandName = faculty.FatherOrhusbandName;
                    jntuh_registered_faculty.MotherName = faculty.MotherName;
                    //jntuh_registered_faculty.DateOfBirth = Convert.ToDateTime(faculty.facultyDateOfBirth);
                    //jntuh_registered_faculty.DesignationId = faculty.DesignationId;
                    //jntuh_registered_faculty.OtherDesignation = faculty.OtherDesignation;
                    //jntuh_registered_faculty.DepartmentId = faculty.DepartmentId;
                    //jntuh_registered_faculty.OtherDepartment = faculty.OtherDepartment;
                    //jntuh_registered_faculty.grosssalary = faculty.GrossSalary;
                    //jntuh_registered_faculty.DateOfAppointment = faculty.DateOfAppointment == null ? Convert.ToDateTime(faculty.facultyDateOfAppointment) : Convert.ToDateTime(faculty.DateOfAppointment);
                    //jntuh_registered_faculty.ProceedingsNumber = faculty.ProceedingsNo;
                    jntuh_registered_faculty.AICTEFacultyId = faculty.AICTEFacultyId;
                    //jntuh_registered_faculty.TotalExperience = faculty.TotalExperience;
                    //jntuh_registered_faculty.TotalExperiencePresentCollege = faculty.TotalExperiencePresentCollege;
                    jntuh_registered_faculty.PANNumber = faculty.EditPANNumber;

                    if (faculty.PanStatus != "E")
                    {
                        jntuh_registered_faculty.PanStatus =
                            db.jntuh_pan_status.Where(p => p.PANNumber == faculty.EditPANNumber && p.PANStatus == "E")
                                .Select(s => s.PANStatus)
                                .FirstOrDefault();
                    }
                    if (jntuh_registered_faculty.PanStatus != "E")
                    {
                        jntuh_registered_faculty.PanStatus =
                            db.jntuh_pan_status.Where(p => p.PANNumber == faculty.EditPANNumber && p.PANStatus == "E")
                                .Select(s => s.PANStatus)
                                .FirstOrDefault();
                        if (jntuh_registered_faculty.PanStatus == null)
                        {
                            jntuh_registered_faculty.PanStatus = faculty.PanStatus;
                        }
                    }

                    jntuh_registered_faculty.AadhaarNumber = faculty.EditAadhaarNumber;
                    jntuh_registered_faculty.Mobile = faculty.EditMobile;
                    jntuh_registered_faculty.Email = faculty.EditEmail;
                    jntuh_registered_faculty.WorkingType = String.IsNullOrEmpty(faculty.facultyCategory) ? faculty.facultyCategory : faculty.facultyCategory.Trim();
                    jntuh_registered_faculty.National = faculty.National;
                    jntuh_registered_faculty.Citation = faculty.Citation;
                    jntuh_registered_faculty.Awards = faculty.Awards;
                    jntuh_registered_faculty.InterNational = faculty.InterNational;
                    jntuh_registered_faculty.updatedOn = DateTime.Now; ;
                    jntuh_registered_faculty.updatedBy = UserId;
                    jntuh_registered_faculty.InStatus = faculty.InStatus;

                    #region Faculty All Certificates Saving Code

                    //SCM Document Saving
                    if (faculty.SelectionCommitteeProceedingsDocument != null)
                    {
                        if (!Directory.Exists(Server.MapPath(proceedingsPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(proceedingsPath));
                        }
                        var ext = Path.GetExtension(faculty.SelectionCommitteeProceedingsDocument.FileName);

                        if (ext.ToUpper().Equals(".PDF") || ext.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" + faculty.LastName.Substring(0, 1);
                            faculty.SelectionCommitteeProceedingsDocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(proceedingsPath), fileName, ext));
                            faculty.SelectionCommitteeProcedings = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.SelectionCommitteeProcedings = faculty.SelectionCommitteeProcedings;
                    }

                    //Photo Document Saving
                    if (faculty.Photo != null)
                    {
                        if (!Directory.Exists(Server.MapPath(photoPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(photoPath));
                        }
                        var ext = Path.GetExtension(faculty.Photo.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" + faculty.LastName.Substring(0, 1);
                            faculty.Photo.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(photoPath), fileName, ext));
                            faculty.facultyPhoto = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.facultyPhoto = faculty.facultyPhoto;
                    }

                    //Aadhaar Card Document Saving
                    if (faculty.AadhaarCardDocument != null)
                    {
                        if (!Directory.Exists(Server.MapPath(aadhaarCardsPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(aadhaarCardsPath));
                        }
                        var ext = Path.GetExtension(faculty.AadhaarCardDocument.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" + faculty.LastName.Substring(0, 1);
                            faculty.AadhaarCardDocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(aadhaarCardsPath), fileName, ext));
                            faculty.facultyAadhaarCardDocument = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.facultyAadhaarCardDocument = faculty.facultyAadhaarCardDocument;
                    }

                    //PAN Card Document Saving
                    if (faculty.PANCardDocument != null)
                    {
                        if (!Directory.Exists(Server.MapPath(panCardsPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(panCardsPath));
                        }
                        var ext = Path.GetExtension(faculty.PANCardDocument.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" + faculty.LastName.Substring(0, 1);
                            faculty.PANCardDocument.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(panCardsPath), fileName, ext));
                            faculty.facultyPANCardDocument = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.facultyPANCardDocument = faculty.facultyPANCardDocument;
                    }

                    //IncomeTaxFile/Form16 Document Saving
                    if (faculty.IncomeTaxFileUpload != null)
                    {
                        if (!Directory.Exists(Server.MapPath(IncomeTaxcertificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(IncomeTaxcertificatesPath));
                        }

                        var ext = Path.GetExtension(faculty.IncomeTaxFileUpload.FileName);

                        if (ext.ToUpper().Equals(".PDF") || ext.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" + faculty.FirstName.Substring(0, 1) + "-" + faculty.LastName.Substring(0, 1);
                            faculty.IncomeTaxFileUpload.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(IncomeTaxcertificatesPath), fileName, ext));
                            faculty.IncomeTaxFileview = string.Format("{0}{1}", fileName, ext);

                        }
                    }
                    else
                    {
                        faculty.IncomeTaxFileview = faculty.IncomeTaxFileview;
                    }



                    //jntuh_registered_faculty.ProceedingDocument = faculty.SelectionCommitteeProcedings;
                    jntuh_registered_faculty.Photo = faculty.facultyPhoto;
                    jntuh_registered_faculty.AadhaarDocument = faculty.facultyAadhaarCardDocument;
                    jntuh_registered_faculty.PANDocument = faculty.facultyPANCardDocument;
                    //jntuh_registered_faculty.IncometaxDocument = faculty.IncomeTaxFileview;
                    // jntuh_registered_faculty.OrganizationName = faculty.faculty_AllCertificates;
                    #endregion

                    db.Entry(jntuh_registered_faculty).State = EntityState.Modified;
                    db.SaveChanges();

                    //throw new Exception(null);

                    #region Faculty Education Details Saving

                    List<jntuh_registered_faculty_education> education = db.jntuh_registered_faculty_education.Where(e => e.facultyId == faculty.id).Select(e => e).ToList();

                    #region Education Certificates Saving

                    //SSC Certificate Saving
                    if (faculty.SSC_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.SSC_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.SSC_studiedEducation;
                            faculty.SSC_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.SSC_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.SSC_facultyCertificate = faculty.SSC_facultyCertificate;
                    }

                    //UG Certificate Saving
                    if (faculty.UG_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.UG_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.UG_studiedEducation;
                            faculty.UG_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.UG_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.UG_facultyCertificate = faculty.UG_facultyCertificate;
                    }

                    //PG Certificate Saving
                    if (faculty.PG_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.PG_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.PG_studiedEducation;
                            faculty.PG_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.PG_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.PG_facultyCertificate = faculty.PG_facultyCertificate;
                    }

                    //M.Phil Certificate Saving
                    if (faculty.MPhil_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.MPhil_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.MPhil_studiedEducation;
                            faculty.MPhil_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.MPhil_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.MPhil_facultyCertificate = faculty.MPhil_facultyCertificate;
                    }

                    //NET/SELT Certificate Saving
                    if (faculty.NET_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.NET_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.NET_studiedEducation;
                            faculty.NET_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.NET_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.NET_facultyCertificate = faculty.NET_facultyCertificate;
                    }

                    //Ph.D Certificate Saving
                    if (faculty.PhD_certificate != null)
                    {
                        if (!Directory.Exists(Server.MapPath(certificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(certificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.PhD_certificate.FileName);

                        if (ext.ToUpper().Equals(".JPEG") || ext.ToUpper().Equals(".JPG"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_" + faculty.PhD_studiedEducation;
                            faculty.PhD_certificate.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(certificatesPath),
                                fileName, ext));
                            faculty.PhD_facultyCertificate = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.PhD_facultyCertificate = faculty.PhD_facultyCertificate;
                    }

                    //All CertificatePDF Saving
                    if (faculty.All_Certificates != null)
                    {
                        if (!Directory.Exists(Server.MapPath(AllcertificatesPath)))
                        {
                            Directory.CreateDirectory(Server.MapPath(AllcertificatesPath));
                        }
                        var ext = Path.GetExtension(faculty.All_Certificates.FileName);

                        if (ext.ToUpper().Equals(".PDF") || ext.ToUpper().Equals(".PDF"))
                        {
                            string fileName = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") + "-" +
                                              faculty.FirstName.Substring(0, 1) + "-" +
                                              faculty.LastName.Substring(0, 1) + "_All";
                            faculty.All_Certificates.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(AllcertificatesPath),
                                fileName, ext));
                            faculty.faculty_AllCertificates = string.Format("{0}{1}", fileName, ext);
                        }
                    }
                    else
                    {
                        faculty.faculty_AllCertificates = faculty.faculty_AllCertificates;
                    }

                    #endregion

                    for (int i = 1; i <= 7; i++)
                    {
                        //SSC
                        if (i == 1)
                        {
                            jntuh_registered_faculty_education SSC = education.Where(e => e.educationId == 1).Select(e => e).FirstOrDefault();

                            if (SSC != null)
                            {

                                SSC.facultyId = fID;
                                SSC.educationId = 1;
                                SSC.hallticketnumber = string.IsNullOrEmpty(faculty.SSC_HallticketNo) ? SSC.hallticketnumber : faculty.SSC_HallticketNo.Trim();
                                //SSC.hallticketnumber = string.IsNullOrEmpty(faculty.SSC_HallticketNo) ? 0 : faculty.SSC_HallticketNo.Trim();
                                SSC.courseStudied = string.IsNullOrEmpty(faculty.SSC_studiedEducation) ? SSC.courseStudied : faculty.SSC_studiedEducation.Trim();
                                SSC.specialization = string.IsNullOrEmpty(faculty.SSC_specialization) ? SSC.specialization : faculty.SSC_specialization.Trim();
                                SSC.passedYear = faculty.SSC_passedYear == null ? SSC.passedYear : (int)faculty.SSC_passedYear;
                                SSC.marksPercentage = faculty.SSC_percentage == null ? SSC.marksPercentage : (decimal)faculty.SSC_percentage;
                                SSC.division = faculty.SSC_division == null ? SSC.division : (int)faculty.SSC_division;
                                SSC.boardOrUniversity = string.IsNullOrEmpty(faculty.SSC_university) ? SSC.boardOrUniversity : faculty.SSC_university.Trim();
                                SSC.placeOfEducation = string.IsNullOrEmpty(faculty.SSC_place) ? SSC.placeOfEducation : faculty.SSC_place.Trim();
                                SSC.certificate = faculty.SSC_facultyCertificate;
                                SSC.isActive = false;
                                SSC.updatedBy = UserId;
                                SSC.updatedOn = DateTime.Now;
                                db.Entry(SSC).State = EntityState.Modified;
                                db.SaveChanges();


                            }
                            else
                            {
                                if (faculty.SSC_certificate != null)
                                {
                                    jntuh_registered_faculty_education SSCEducation = new jntuh_registered_faculty_education();
                                    SSCEducation.facultyId = fID;
                                    SSCEducation.educationId = 1;
                                    SSCEducation.hallticketnumber = string.IsNullOrEmpty(faculty.SSC_HallticketNo) ? faculty.SSC_HallticketNo : faculty.SSC_HallticketNo.Trim();
                                    SSCEducation.courseStudied = string.IsNullOrEmpty(faculty.SSC_studiedEducation) ? faculty.SSC_studiedEducation : faculty.SSC_studiedEducation.Trim();
                                    SSCEducation.specialization = string.IsNullOrEmpty(faculty.SSC_specialization) ? faculty.SSC_specialization : faculty.SSC_specialization.Trim();
                                    SSCEducation.passedYear = faculty.SSC_passedYear == null ? 0 : (int)faculty.SSC_passedYear;
                                    SSCEducation.marksPercentage = faculty.SSC_percentage == null ? 0 : (decimal)faculty.SSC_percentage;
                                    SSCEducation.division = faculty.SSC_division == null ? 0 : (int)faculty.SSC_division;
                                    SSCEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.SSC_university) ? faculty.SSC_university : faculty.SSC_university.Trim();
                                    SSCEducation.placeOfEducation = string.IsNullOrEmpty(faculty.SSC_place) ? faculty.SSC_place : faculty.SSC_place.Trim();
                                    SSCEducation.certificate = faculty.SSC_facultyCertificate;
                                    SSCEducation.isActive = false;
                                    SSCEducation.createdBy = UserId;
                                    SSCEducation.createdOn = DateTime.Now;
                                    SSCEducation.updatedBy = null;
                                    SSCEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(SSCEducation);
                                    db.SaveChanges();
                                }
                            }
                        }
                        else if (i == 2)
                        {
                            jntuh_registered_faculty_education UG = education.Where(e => e.educationId == 3).Select(e => e).FirstOrDefault();

                            //UG
                            if (UG != null)
                            {
                                UG.facultyId = fID;
                                UG.educationId = 3;
                                UG.hallticketnumber = string.IsNullOrEmpty(faculty.UG_HallticketNo) ? UG.hallticketnumber : faculty.UG_HallticketNo.Trim();
                                UG.courseStudied = string.IsNullOrEmpty(faculty.UG_studiedEducation) ? UG.courseStudied : faculty.UG_studiedEducation.Trim();
                                UG.specialization = string.IsNullOrEmpty(faculty.UG_specialization) ? UG.specialization : faculty.UG_specialization.Trim();
                                UG.passedYear = faculty.UG_passedYear == null ? UG.passedYear : (int)faculty.UG_passedYear;
                                UG.marksPercentage = faculty.UG_percentage == null ? UG.marksPercentage : (decimal)faculty.UG_percentage;
                                UG.division = faculty.UG_division == null ? UG.division : (int)faculty.UG_division;
                                UG.boardOrUniversity = string.IsNullOrEmpty(faculty.UG_university) ? UG.boardOrUniversity : faculty.UG_university.Trim();
                                UG.placeOfEducation = string.IsNullOrEmpty(faculty.UG_place) ? UG.placeOfEducation : faculty.UG_place.Trim();
                                UG.certificate = faculty.UG_facultyCertificate;
                                UG.isActive = false;
                                UG.updatedBy = UserId;
                                UG.updatedOn = DateTime.Now;
                                db.Entry(UG).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.UG_certificate != null)
                                {
                                    jntuh_registered_faculty_education UGEducation = new jntuh_registered_faculty_education();

                                    UGEducation.facultyId = fID;
                                    UGEducation.educationId = 3;
                                    UGEducation.hallticketnumber = string.IsNullOrEmpty(faculty.UG_HallticketNo) ? faculty.UG_HallticketNo : faculty.UG_HallticketNo.Trim();
                                    UGEducation.courseStudied = string.IsNullOrEmpty(faculty.UG_studiedEducation) ? faculty.UG_studiedEducation : faculty.UG_studiedEducation.Trim(); ;
                                    UGEducation.specialization = string.IsNullOrEmpty(faculty.UG_specialization) ? faculty.UG_specialization : faculty.UG_specialization.Trim();
                                    UGEducation.passedYear = faculty.UG_passedYear == null ? 0 : (int)faculty.UG_passedYear;
                                    UGEducation.marksPercentage = faculty.UG_percentage == null ? 0 : (decimal)faculty.UG_percentage;
                                    UGEducation.division = faculty.UG_division == null ? 0 : (int)faculty.UG_division;
                                    UGEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.UG_university) ? faculty.UG_university : faculty.UG_university.Trim();
                                    UGEducation.placeOfEducation = string.IsNullOrEmpty(faculty.UG_place) ? faculty.UG_place : faculty.UG_place.Trim();
                                    UGEducation.certificate = faculty.UG_facultyCertificate;
                                    UGEducation.isActive = false;
                                    UGEducation.createdBy = UserId;
                                    UGEducation.createdOn = DateTime.Now;
                                    UGEducation.updatedBy = null;
                                    UGEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(UGEducation);
                                    db.SaveChanges();
                                }
                            }

                        }
                        else if (i == 3)
                        {
                            jntuh_registered_faculty_education PG = education.Where(e => e.educationId == 4).Select(e => e).FirstOrDefault();

                            //PG
                            if (PG != null)
                            {
                                PG.facultyId = fID;
                                PG.educationId = 4;
                                PG.hallticketnumber = string.IsNullOrEmpty(faculty.PG_HallticketNo) ? PG.hallticketnumber : faculty.PG_HallticketNo.Trim();
                                PG.courseStudied = string.IsNullOrEmpty(faculty.PG_studiedEducation) ? PG.courseStudied : faculty.PG_studiedEducation.Trim();
                                PG.specialization = string.IsNullOrEmpty(faculty.PG_specialization) ? PG.specialization : faculty.PG_specialization.Trim();
                                PG.passedYear = faculty.PG_passedYear == null ? PG.passedYear : (int)faculty.PG_passedYear;
                                PG.marksPercentage = faculty.PG_percentage == null ? PG.marksPercentage : (decimal)faculty.PG_percentage;
                                PG.division = faculty.PG_division == null ? PG.division : (int)faculty.PG_division;
                                PG.boardOrUniversity = string.IsNullOrEmpty(faculty.PG_university) ? PG.boardOrUniversity : faculty.PG_university.Trim();
                                PG.placeOfEducation = string.IsNullOrEmpty(faculty.PG_place) ? PG.placeOfEducation : faculty.PG_place.Trim();
                                PG.certificate = faculty.PG_facultyCertificate;
                                PG.isActive = false;
                                PG.updatedBy = UserId;
                                PG.updatedOn = DateTime.Now;
                                db.Entry(PG).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.PG_certificate != null)
                                {
                                    jntuh_registered_faculty_education PGEducation = new jntuh_registered_faculty_education();
                                    PGEducation.facultyId = fID;
                                    PGEducation.educationId = 4;
                                    PGEducation.hallticketnumber = string.IsNullOrEmpty(faculty.PG_HallticketNo) ? faculty.PG_HallticketNo : faculty.PG_HallticketNo.Trim();
                                    PGEducation.courseStudied = string.IsNullOrEmpty(faculty.PG_studiedEducation) ? faculty.PG_studiedEducation : faculty.PG_studiedEducation.Trim();
                                    PGEducation.specialization = string.IsNullOrEmpty(faculty.PG_specialization) ? faculty.PG_specialization : faculty.PG_specialization.Trim();
                                    PGEducation.passedYear = faculty.PG_passedYear == null ? 0 : (int)faculty.PG_passedYear;
                                    PGEducation.marksPercentage = faculty.PG_percentage == null ? 0 : (decimal)faculty.PG_percentage;
                                    PGEducation.division = faculty.PG_division == null ? 0 : (int)faculty.PG_division;
                                    PGEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.PG_university) ? faculty.PG_university : faculty.PG_university.Trim();
                                    PGEducation.placeOfEducation = string.IsNullOrEmpty(faculty.PG_place) ? faculty.PG_place : faculty.PG_place.Trim();
                                    PGEducation.certificate = faculty.PG_facultyCertificate;
                                    PGEducation.isActive = false;
                                    PGEducation.createdBy = UserId;
                                    PGEducation.createdOn = DateTime.Now;
                                    PGEducation.updatedBy = null;
                                    PGEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(PGEducation);
                                    db.SaveChanges();
                                }
                            }
                        }
                        else if (i == 4)
                        {
                            jntuh_registered_faculty_education MPhil = education.Where(e => e.educationId == 5).Select(e => e).FirstOrDefault();

                            //MPhil
                            if (MPhil != null)
                            {
                                MPhil.facultyId = fID;
                                MPhil.educationId = 5;
                                MPhil.hallticketnumber = string.IsNullOrEmpty(faculty.MPhil_HallticketNo) ? MPhil.hallticketnumber : faculty.MPhil_HallticketNo.Trim();
                                MPhil.courseStudied = string.IsNullOrEmpty(faculty.MPhil_studiedEducation) ? MPhil.courseStudied : faculty.MPhil_studiedEducation.Trim();
                                MPhil.specialization = string.IsNullOrEmpty(faculty.MPhil_specialization) ? MPhil.specialization : faculty.MPhil_specialization.Trim();
                                MPhil.passedYear = faculty.MPhil_passedYear == null ? MPhil.passedYear : (int)faculty.MPhil_passedYear;
                                MPhil.marksPercentage = faculty.MPhil_percentage == null ? MPhil.marksPercentage : (decimal)faculty.MPhil_percentage;
                                MPhil.division = faculty.MPhil_division == null ? MPhil.division : (int)faculty.MPhil_division;
                                MPhil.boardOrUniversity = string.IsNullOrEmpty(faculty.MPhil_university) ? MPhil.boardOrUniversity : faculty.MPhil_university.Trim();
                                MPhil.placeOfEducation = string.IsNullOrEmpty(faculty.MPhil_place) ? MPhil.placeOfEducation : faculty.MPhil_place.Trim();
                                MPhil.certificate = faculty.MPhil_facultyCertificate;
                                MPhil.isActive = false;
                                MPhil.updatedBy = UserId;
                                MPhil.updatedOn = DateTime.Now;
                                db.Entry(MPhil).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.MPhil_certificate != null)
                                {
                                    jntuh_registered_faculty_education MPhilEducation = new jntuh_registered_faculty_education();
                                    MPhilEducation.facultyId = fID;
                                    MPhilEducation.educationId = 5;
                                    MPhilEducation.hallticketnumber = string.IsNullOrEmpty(faculty.MPhil_HallticketNo) ? faculty.MPhil_HallticketNo : faculty.MPhil_HallticketNo.Trim();
                                    MPhilEducation.courseStudied = string.IsNullOrEmpty(faculty.MPhil_studiedEducation) ? faculty.MPhil_studiedEducation : faculty.MPhil_studiedEducation.Trim();
                                    MPhilEducation.specialization = string.IsNullOrEmpty(faculty.MPhil_specialization) ? faculty.MPhil_specialization : faculty.MPhil_specialization.Trim();
                                    MPhilEducation.passedYear = faculty.MPhil_passedYear == null ? 0 : (int)faculty.MPhil_passedYear;
                                    MPhilEducation.marksPercentage = faculty.MPhil_percentage == null ? 0 : (decimal)faculty.MPhil_percentage;
                                    MPhilEducation.division = faculty.MPhil_division == null ? 0 : (int)faculty.MPhil_division;
                                    MPhilEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.MPhil_university) ? faculty.MPhil_university : faculty.MPhil_university.Trim();
                                    MPhilEducation.placeOfEducation = string.IsNullOrEmpty(faculty.MPhil_place) ? faculty.MPhil_place : faculty.MPhil_place.Trim();
                                    MPhilEducation.certificate = faculty.MPhil_facultyCertificate;
                                    MPhilEducation.isActive = false;
                                    MPhilEducation.createdBy = UserId;
                                    MPhilEducation.createdOn = DateTime.Now;
                                    MPhilEducation.updatedBy = null;
                                    MPhilEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(MPhilEducation);
                                    db.SaveChanges();
                                }
                            }

                        }
                        else if (i == 5)
                        {
                            jntuh_registered_faculty_education PhD = education.Where(e => e.educationId == 6).Select(e => e).FirstOrDefault();

                            //PhD
                            if (PhD != null)
                            {
                                PhD.facultyId = fID;
                                PhD.educationId = 6;
                                PhD.hallticketnumber = string.IsNullOrEmpty(faculty.PhD_HallticketNo) ? PhD.hallticketnumber : faculty.PhD_HallticketNo.Trim();
                                PhD.courseStudied = string.IsNullOrEmpty(faculty.PhD_studiedEducation) ? PhD.courseStudied : faculty.PhD_studiedEducation.Trim();
                                PhD.specialization = string.IsNullOrEmpty(faculty.PhD_specialization) ? PhD.specialization : faculty.PhD_specialization.Trim();
                                PhD.passedYear = faculty.PhD_passedYear == null ? PhD.passedYear : (int)faculty.PhD_passedYear;
                                PhD.marksPercentage = faculty.PhD_percentage == null ? PhD.marksPercentage : (decimal)faculty.PhD_percentage;
                                PhD.division = faculty.PhD_division == null ? PhD.division : (int)faculty.PhD_division;
                                PhD.boardOrUniversity = string.IsNullOrEmpty(faculty.PhD_university) ? PhD.boardOrUniversity : faculty.PhD_university.Trim();
                                PhD.placeOfEducation = string.IsNullOrEmpty(faculty.PhD_place) ? PhD.placeOfEducation : faculty.PhD_place.Trim();
                                PhD.certificate = faculty.PhD_facultyCertificate;
                                PhD.isActive = false;
                                PhD.updatedBy = UserId;
                                PhD.updatedOn = DateTime.Now;
                                db.Entry(PhD).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.PhD_certificate != null)
                                {
                                    jntuh_registered_faculty_education PhDEducation = new jntuh_registered_faculty_education();
                                    PhDEducation.facultyId = fID;
                                    PhDEducation.educationId = 6;
                                    PhDEducation.hallticketnumber = string.IsNullOrEmpty(faculty.PhD_HallticketNo) ? faculty.PhD_HallticketNo : faculty.PhD_HallticketNo.Trim();
                                    PhDEducation.courseStudied = string.IsNullOrEmpty(faculty.PhD_studiedEducation) ? faculty.PhD_studiedEducation : faculty.PhD_studiedEducation.Trim();
                                    PhDEducation.specialization = string.IsNullOrEmpty(faculty.PhD_specialization) ? faculty.PhD_specialization : faculty.PhD_specialization.Trim();
                                    PhDEducation.passedYear = faculty.PhD_passedYear == null ? 0 : (int)faculty.PhD_passedYear;
                                    PhDEducation.marksPercentage = faculty.PhD_percentage == null ? 0 : (decimal)faculty.PhD_percentage;
                                    PhDEducation.division = faculty.PhD_division == null ? 0 : (int)faculty.PhD_division;
                                    PhDEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.PhD_university) ? faculty.PhD_university : faculty.PhD_university.Trim();
                                    PhDEducation.placeOfEducation = string.IsNullOrEmpty(faculty.PhD_place) ? faculty.PhD_place : faculty.PhD_place.Trim();
                                    PhDEducation.certificate = faculty.PhD_facultyCertificate;
                                    PhDEducation.isActive = false;
                                    PhDEducation.createdBy = UserId;
                                    PhDEducation.createdOn = DateTime.Now;
                                    PhDEducation.updatedBy = null;
                                    PhDEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(PhDEducation);
                                    db.SaveChanges();
                                }
                            }
                        }
                        else if (i == 7)
                        {
                            jntuh_registered_faculty_education net = education.Where(e => e.educationId == 9).Select(e => e).FirstOrDefault();

                            //PhD
                            if (net != null)
                            {
                                net.facultyId = fID;
                                net.educationId = 9;
                                net.hallticketnumber = string.IsNullOrEmpty(faculty.NET_HallticketNo) ? net.hallticketnumber : faculty.NET_HallticketNo.Trim();
                                net.courseStudied = string.IsNullOrEmpty(faculty.NET_studiedEducation) ? net.courseStudied : faculty.NET_studiedEducation.Trim();
                                net.specialization = string.IsNullOrEmpty(faculty.NET_specialization) ? net.specialization : faculty.NET_specialization.Trim();
                                net.passedYear = faculty.NET_passedYear == null ? net.passedYear : (int)faculty.NET_passedYear;
                                net.marksPercentage = faculty.NET_percentage == null ? net.marksPercentage : (decimal)faculty.NET_percentage;
                                net.division = faculty.NET_division == null ? net.division : (int)faculty.NET_division;
                                net.boardOrUniversity = string.IsNullOrEmpty(faculty.NET_university) ? net.boardOrUniversity : faculty.NET_university.Trim();
                                net.placeOfEducation = string.IsNullOrEmpty(faculty.NET_place) ? net.placeOfEducation : faculty.NET_place.Trim();
                                net.certificate = faculty.NET_facultyCertificate;
                                net.isActive = false;
                                net.updatedBy = UserId;
                                net.updatedOn = DateTime.Now;
                                db.Entry(net).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.NET_certificate != null)
                                {
                                    jntuh_registered_faculty_education NETEducation = new jntuh_registered_faculty_education();
                                    NETEducation.facultyId = fID;
                                    NETEducation.educationId = 9;
                                    NETEducation.hallticketnumber = string.IsNullOrEmpty(faculty.NET_HallticketNo) ? faculty.NET_HallticketNo : faculty.NET_HallticketNo.Trim();
                                    NETEducation.courseStudied = string.IsNullOrEmpty(faculty.NET_studiedEducation) ? faculty.NET_studiedEducation : faculty.NET_studiedEducation.Trim();
                                    NETEducation.specialization = string.IsNullOrEmpty(faculty.NET_specialization) ? faculty.NET_specialization : faculty.NET_specialization.Trim();
                                    NETEducation.passedYear = faculty.NET_passedYear == null ? 0 : (int)faculty.NET_passedYear;
                                    NETEducation.marksPercentage = faculty.NET_percentage == null ? 0 : (decimal)faculty.NET_percentage;
                                    NETEducation.division = faculty.NET_division == null ? 0 : (int)faculty.NET_division;
                                    NETEducation.boardOrUniversity = string.IsNullOrEmpty(faculty.NET_university) ? faculty.NET_university : faculty.NET_university.Trim();
                                    NETEducation.placeOfEducation = string.IsNullOrEmpty(faculty.NET_place) ? faculty.NET_place : faculty.NET_place.Trim();
                                    NETEducation.certificate = faculty.NET_facultyCertificate;
                                    NETEducation.isActive = false;
                                    NETEducation.createdBy = UserId;
                                    NETEducation.createdOn = DateTime.Now;
                                    NETEducation.updatedBy = null;
                                    NETEducation.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(NETEducation);
                                    db.SaveChanges();
                                }
                            }
                        }
                        else if (i == 6)
                        {
                            jntuh_registered_faculty_education Others = education.Where(e => e.educationId == 8).Select(e => e).FirstOrDefault();

                            //PhD
                            if (Others != null)
                            {
                                Others.facultyId = fID;
                                Others.educationId = 8;
                                //Others.courseStudied = faculty.PhD_studiedEducation;
                                //Others.specialization = faculty.PhD_specialization;
                                //Others.passedYear = faculty.PhD_passedYear == null ? 0 : (int)faculty.PhD_passedYear;
                                //Others.marksPercentage = faculty.PhD_percentage == null ? 0 : (decimal)faculty.PhD_percentage;
                                //Others.division = faculty.PhD_division == null ? 0 : (int)faculty.PhD_division;
                                //Others.boardOrUniversity = faculty.PhD_university;
                                //Others.placeOfEducation = faculty.PhD_place;
                                Others.certificate = faculty.faculty_AllCertificates;
                                Others.isActive = false;
                                Others.updatedBy = UserId;
                                Others.updatedOn = DateTime.Now;
                                db.Entry(Others).State = EntityState.Modified;
                                db.SaveChanges();
                            }
                            else
                            {
                                if (faculty.All_Certificates != null)
                                {
                                    jntuh_registered_faculty_education otherCertificate = new jntuh_registered_faculty_education();
                                    otherCertificate.facultyId = fID;
                                    otherCertificate.educationId = 8;
                                    otherCertificate.hallticketnumber = "Others";
                                    otherCertificate.courseStudied = "Others";
                                    otherCertificate.specialization = "Others";
                                    otherCertificate.passedYear = 0;
                                    otherCertificate.marksPercentage = 0;
                                    otherCertificate.division = 0;
                                    otherCertificate.boardOrUniversity = "Others";
                                    otherCertificate.placeOfEducation = "Others";
                                    otherCertificate.certificate = faculty.faculty_AllCertificates;
                                    otherCertificate.isActive = false;
                                    otherCertificate.createdBy = UserId;
                                    otherCertificate.createdOn = DateTime.Now;
                                    otherCertificate.updatedBy = null;
                                    otherCertificate.updatedOn = null;
                                    db.jntuh_registered_faculty_education.Add(otherCertificate);
                                    db.SaveChanges();
                                }
                            }
                        }
                    }

                    #endregion

                    TempData["FacSuccess"] = "Faculty information updated successfully ";
                    TempData["ViewEditButton"] = null;
                    if (fID > 0)
                    {
                        fid = UAAAS.Models.Utilities.EncryptString(fID.ToString(),
                            WebConfigurationManager.AppSettings["CryptoKey"]);
                    }
                    TempData["FacSuccess"] = "Faculty Details Successfully Modified ..";
                    return RedirectToAction("FacultyView", "Account", new { REGNO = faculty.RegistrationNumber });
                    //return RedirectToAction("FindRegistrationNumber","Account");
                    //return RedirectToAction("ViewFacultyDetails", new { fid = fid });
                }
                else
                {
                    var ModelErrorss = ModelState;
                    foreach (var item in ModelErrorss)
                    {
                        var key = item.Key;
                        var error = item.Value.Errors.Select(e => e.ErrorMessage).FirstOrDefault();
                        if (error == null || error == "")
                        {

                        }
                        else
                        {
                            TempData["ERROR"] = key + "-" + error;
                            break;
                        }

                    }
                    //TempData["FacError"] = "All edit fields are mandatory";
                    TempData["ViewEditButton"] = null;
                    if (fID > 0)
                    {
                        fid = UAAAS.Models.Utilities.EncryptString(fID.ToString(),
                            WebConfigurationManager.AppSettings["CryptoKey"]);
                    }

                    TempData["FacError"] = "Faculty Details Failed to modify ..";
                    //return RedirectToAction("FindRegistrationNumber", "Account");
                    return RedirectToAction("FacultyView", "Account", new { REGNO = faculty.RegistrationNumber });

                    //return RedirectToAction("ViewFacultyDetails", new { fid = fid });
                }

            }
            catch (Exception ex)
            {

                TempData["FacError"] = "Technical issue: Upload/edit required data again";
                TempData["FacSuccess"] = null;
                TempData["ViewEditButton"] = "Show";
                if (fID > 0)
                {
                    fid = UAAAS.Models.Utilities.EncryptString(fID.ToString(),
                        WebConfigurationManager.AppSettings["CryptoKey"]);
                }
                return RedirectToAction("FacultyView", "Account", new { REGNO = faculty.RegistrationNumber });
                //return RedirectToAction("FindRegistrationNumber", "Account");
                //return RedirectToAction("ViewFacultyDetails", new { fid = fid });
            }
        }

        [HttpPost]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult FacultySubjectsTaught(FacultySubjectsTaught subjectsTaught)
        {
            MembershipUser userdata = Membership.GetUser(User.Identity.Name);

            if (userdata == null)
            {
                return RedirectToAction("LogOn", "Account");
            }
            int userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);

            if (subjectsTaught.facultySubjectsTaught != null && subjectsTaught.NoOfTimesSubjectsTaught != null)
            {

                var ExistsId = db.jntuh_registered_faculty_subjectstaught.Where(s => s.facultyId == subjectsTaught.facultyId && s.facultysubjectsTaught == subjectsTaught.facultySubjectsTaught).Select(a => a.Id).FirstOrDefault();

                if (ExistsId != 0)
                {
                    TempData["ERROR"] = "This Subject is already added";
                    return RedirectToAction("FacultySubjectsTaught");
                }

                jntuh_registered_faculty_subjectstaught subject = new jntuh_registered_faculty_subjectstaught();
                subject.facultyId = subjectsTaught.facultyId;
                subject.facultysubjectsTaught = subjectsTaught.facultySubjectsTaught.Trim().ToUpper();
                subject.NoOfTimesSubjectTaught = subjectsTaught.NoOfTimesSubjectsTaught;
                subject.remarks = subjectsTaught.Remarks;
                subject.IsAcitve = true;
                subject.CreatedOn = DateTime.Now;
                subject.CreatedBy = userId;
                subject.UpdatedOn = null;
                subject.UpdatedBy = null;

                db.jntuh_registered_faculty_subjectstaught.Add(subject);
                db.SaveChanges();

                TempData["SUCCESS"] = "Faculty Subjects Details Saved Successfully";
            }
            else
            {
                TempData["ERROR"] = "Data is Not Found..";
            }
            return RedirectToAction("FacultySubjectsTaught");
        }

        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult EditFacultySubjectsTaught(int? id)
        {
            //  return RedirectToAction("FacultySubjectsTaught");
            if (id != null)
            {
                var jntuh_registered_faculty_subjects = db.jntuh_registered_faculty_subjectstaught.Where(a => a.Id == id).Select(e => e).FirstOrDefault();

                FacultySubjectsTaught Subjects = new FacultySubjectsTaught();
                Subjects.Id = jntuh_registered_faculty_subjects.Id;
                Subjects.facultyId = jntuh_registered_faculty_subjects.facultyId;
                Subjects.RegistrationNumber = db.jntuh_registered_faculty.Where(a => a.id == Subjects.facultyId).Select(s => s.RegistrationNumber).FirstOrDefault();
                Subjects.facultySubjectsTaught = jntuh_registered_faculty_subjects.facultysubjectsTaught;
                Subjects.NoOfTimesSubjectsTaught = jntuh_registered_faculty_subjects.NoOfTimesSubjectTaught;
                return PartialView("EditFacultySubjectsTaught", Subjects);
            }
            else
            {
                return RedirectToAction("FacultySubjectsTaught");
            }
        }

        [HttpPost]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult EditFacultySubjectsTaught(FacultySubjectsTaught subjectsTaught)
        {
            //  return RedirectToAction("FacultySubjectsTaught");
            int UserId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            if (subjectsTaught.facultySubjectsTaught != null && subjectsTaught.NoOfTimesSubjectsTaught != null)
            {
                jntuh_registered_faculty_subjectstaught subject = db.jntuh_registered_faculty_subjectstaught.Where(a => a.Id == subjectsTaught.Id).Select(s => s).FirstOrDefault();

                subject.Id = subjectsTaught.Id;
                subject.facultyId = subjectsTaught.facultyId;
                // subject.RegistrationNumber = db.jntuh_registered_faculty.Where(a => a.id == Subjects.facultyId).Select(s => s.RegistrationNumber).FirstOrDefault();
                subject.facultysubjectsTaught = subjectsTaught.facultySubjectsTaught.Trim().ToUpper();
                subject.NoOfTimesSubjectTaught = subjectsTaught.NoOfTimesSubjectsTaught;
                subject.UpdatedBy = UserId;
                subject.UpdatedOn = DateTime.Now;
                db.Entry(subject).State = EntityState.Modified;
                db.SaveChanges();
                TempData["SUCCESS"] = "Faculty Subjects details are Updated Successfully";
                return RedirectToAction("FacultySubjectsTaught", new { id = UAAAS.Models.Utilities.EncryptString(subject.facultyId.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]) });
            }
            else
            {
                TempData["ERROR"] = "Data is Not Found..";
                return RedirectToAction("FacultySubjectsTaught");
            }
        }

        public ActionResult DeleteFacultySubjectsTaught(int? id)
        {


            MembershipUser userdata = Membership.GetUser(User.Identity.Name);

            if (userdata == null)
            {
                return RedirectToAction("LogOn", "Account");
            }
            int userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            if (id != null)
            {
                var jntuh_registered_faculty_subjectstaught = db.jntuh_registered_faculty_subjectstaught.Where(s => s.Id == id).Select(a => a).FirstOrDefault();
                if (jntuh_registered_faculty_subjectstaught != null)
                {
                    db.jntuh_registered_faculty_subjectstaught.Remove(jntuh_registered_faculty_subjectstaught);
                    db.SaveChanges();
                    TempData["Success"] = "Faculty Subjects Taught Details are Deleted Successfully.";
                }

            }
            return RedirectToAction("FacultySubjectsTaught");
        }

        #region PHD Faculty Registration Page PDF Download venkatesh

        public ActionResult PhdFacultyDetails(string strphdfacultyId, string reg)
        {
            if (!string.IsNullOrEmpty(strphdfacultyId))
            {
                int fid =
                    Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(strphdfacultyId,
                        WebConfigurationManager.AppSettings["CryptoKey"]));
                // fid = 125662;
                string pdfPath = string.Empty;
                if (fid != 0 && reg != null)
                {
                    pdfPath = SavePhdFacultyDataPdf(fid, reg);
                    pdfPath = pdfPath.Replace("/", "\\");
                }
                return File(pdfPath, "application/pdf", reg + ".pdf");
            }
            else
            {
                return RedirectToAction("LogOn", "Account");
            }
        }

        public string SavePhdFacultyDataPdf(int fid, string reg)
        {
            string fullPath = string.Empty;
            //Set page size as A4
            Document pdfDoc = new Document(PageSize.A4, 50, 50, 40, 40);
            string path = Server.MapPath("~/Content/PDFReports/temp/FacultyPrint");
            if (!Directory.Exists(Server.MapPath("~/Content/PDFReports/temp/FacultyPrint")))
            {
                Directory.CreateDirectory(Server.MapPath("~/Content/PDFReports/temp/FacultyPrint"));
            }
            const int DelayOnRetry = 3000;
            try
            {
                //if (preview == 0)
                //{
                //fullPath = path + "/" + "" + ".pdf"; //
                //PdfWriter pdfWriter = PdfWriter.GetInstance(pdfDoc, new FileStream(fullPath, FileMode.Create));
                //ITextEvents iTextEvents = new ITextEvents();
                //iTextEvents.CollegeCode = "";
                //iTextEvents.CollegeName = "";
                //iTextEvents.formType = "Faculty Information";
                //  pdfWriter.PageEvent = "";
                //}


                fullPath = path + "/" + "" + ".pdf";
                //   fullPath = path + "/" + "Faculty_Data_Print_" + "" + DateTime.Now.ToString("yyyMMddHHmmss") + ".pdf"; //
                PdfWriter pdfWriter = PdfWriter.GetInstance(pdfDoc, new FileStream(fullPath, FileMode.Create));
                ITextEvents iTextEvents = new ITextEvents();
                //   var objtest = iTextEvents.OnEndPage;
                //TextLayout iTextLayout=new TextLayout();
                //pdfWriter.PageNumber = "1";
                iTextEvents.formType = "Faculty Information";
                //  pdfWriter.PageEvent = "";



            }
            catch (IOException e)
            {
                Thread.Sleep(DelayOnRetry);
            }

            //Open PDF Document to write data
            pdfDoc.Open();

            //Assign Html content in a string to write in PDF
            string contents = string.Empty;

            StreamReader sr;

            //Read file from server path
            sr = System.IO.File.OpenText(Server.MapPath("~/Content/FacultyData.html"));
            //store content in the variable
            contents = sr.ReadToEnd();
            sr.Close();
            contents = GetPhdFacultyData(fid, contents);
            //  contents = affiliationType(collegeId, contents);

            //Read string contents using stream reader and convert html to parsed conent
            var parsedHtmlElements = HTMLWorker.ParseToList(new StringReader(contents), null);
            //Get each array values from parsed elements and add to the PDF document
            bool pageRotated = false;
            int count = 0;
            foreach (var htmlElement in parsedHtmlElements)
            {
                count++;
                if (count == 100)
                {
                }
                if (htmlElement.Equals("<textarea>"))
                {
                    pdfDoc.NewPage();
                }

                if (htmlElement.Chunks.Count >= 3)
                {
                    if (htmlElement.Chunks.Count == 4)
                    {
                        pdfDoc.SetPageSize(iTextSharp.text.PageSize.A4.Rotate());
                        pdfDoc.SetMargins(60, 50, 50, 50);
                        pageRotated = true;
                    }
                    else
                    {
                        if (pageRotated == true)
                        {
                            pdfDoc.SetPageSize(iTextSharp.text.PageSize.A4);
                            pdfDoc.SetMargins(60, 50, 50, 50);
                            pageRotated = false;
                        }
                    }
                    pdfDoc.NewPage();
                }
                else
                {
                    pdfDoc.Add(htmlElement as IElement);
                }
            }

            //Close your PDF
            pdfDoc.Close();
            if (pdfDoc.IsOpen())
            {
                pdfDoc.Close();
            }

            string returnPath = string.Empty;
            returnPath = fullPath;
            return returnPath;
        }

        public string GetPhdFacultyData(int fid, string contents)
        {
            var facultydata = (from r in db.jntuh_registered_faculty
                               join f in db.jntuh_college_faculty_registered on r.RegistrationNumber equals f.RegistrationNumber into Regdata
                               from reg in Regdata.DefaultIfEmpty()
                               join ca in db.jntuh_college on reg.collegeId equals ca.id into rcdata
                               from rc in rcdata.DefaultIfEmpty()
                               join dep in db.jntuh_department on reg.DepartmentId equals dep.id into rcdepdata
                               from rcd in rcdepdata.DefaultIfEmpty()
                               join des in db.jntuh_designation on reg.FacultySpecializationId equals des.id into rcdepdesData
                               from rcdd in rcdepdesData.DefaultIfEmpty()
                               where r.id == fid
                               select new FacultyRegistration()
                               {
                                   id = r.id,
                                   CollegeId = reg.collegeId == null ? 0 : reg.collegeId,
                                   CollegeName = rc.collegeName == null ? "NotWorking" : rc.collegeName,
                                   Eid = r.UserId,
                                   Type = r.type,
                                   RegistrationNumber = r.RegistrationNumber,
                                   FirstName = r.FirstName,
                                   LastName = r.LastName,
                                   MiddleName = r.MiddleName,
                                   GenderId = r.GenderId,
                                   FatherOrhusbandName = r.FatherOrHusbandName,
                                   MotherName = r.MotherName,
                                   DateOfBirth = r.DateOfBirth,
                                   WorkingStatus = r.WorkingStatus,
                                   facultyCategory = r.WorkingType,
                                   DesignationId = r.DesignationId,
                                   designation = rcdd.designation,
                                   OtherDesignation = r.OtherDesignation,
                                   DepartmentId = r.DepartmentId,
                                   department = rcd.departmentName,
                                   OtherDepartment = r.OtherDesignation,
                                   GrossSalary = r.grosssalary,
                                   DateOfAppointment = r.DateOfAppointment,
                                   isFacultyRatifiedByJNTU = r.isFacultyRatifiedByJNTU,
                                   ProceedingsNo = r.ProceedingsNumber,
                                   SelectionCommitteeProcedings = r.ProceedingDocument,
                                   AICTEFacultyId = r.AICTEFacultyId,
                                   TotalExperience = r.TotalExperience,
                                   TotalExperiencePresentCollege = r.TotalExperiencePresentCollege,
                                   PANNumber = r.PANNumber,
                                   AadhaarNumber = r.AadhaarNumber != null ? r.AadhaarNumber.Substring(0, 8) + "XXXX" : "-",
                                   Mobile = r.Mobile,
                                   Email = r.Email,
                                   National = r.National,
                                   InterNational = r.InterNational,
                                   Awards = r.Awards,
                                   Citation = r.Citation,
                                   facultyPhoto = r.Photo,
                                   facultyPANCardDocument = r.PANDocument,
                                   facultyAadhaarCardDocument = r.AadhaarDocument,
                                   isActive = r.isActive,
                                   isApproved = r.isApproved,
                                   BlacklistFaculty = r.Blacklistfaculy,
                                   VerificationStatus = r.AbsentforVerification
                               }).ToList();
            FacultyRegistration regFaculty = new FacultyRegistration();
            if (fid != 0)
            {
                regFaculty.GenderId = null;
                regFaculty.isFacultyRatifiedByJNTU = null;
                jntuh_registered_faculty faculty = db.jntuh_registered_faculty.Find(fid);
                if (faculty != null)
                {
                    regFaculty.id = fid;
                    regFaculty.Type = faculty.type;
                    regFaculty.RegistrationNumber = faculty.RegistrationNumber;
                    regFaculty.UserName = db.my_aspnet_users.Where(u => u.id == faculty.UserId).Select(u => u.name).FirstOrDefault();
                    regFaculty.Email = faculty.Email;
                    regFaculty.UniqueID = faculty.UniqueID;
                    regFaculty.FirstName = faculty.FirstName;
                    regFaculty.MiddleName = faculty.MiddleName;
                    regFaculty.LastName = faculty.LastName;
                    regFaculty.FatherOrhusbandName = faculty.FatherOrHusbandName;
                    regFaculty.MotherName = faculty.MotherName;
                    regFaculty.GenderId = faculty.GenderId;
                    //In DB Working Type Means Faculty Category Like: OC,SC,BC...
                    regFaculty.facultyCategory = faculty.WorkingType;
                    regFaculty.CollegeId =
                        db.jntuh_college_faculty_registered.Where(
                            f => f.RegistrationNumber == regFaculty.RegistrationNumber)
                            .Select(s => s.collegeId)
                            .FirstOrDefault();

                    if (regFaculty.CollegeId == 0 || regFaculty.CollegeId == null)
                    {
                        regFaculty.CollegeId =
                                  db.jntuh_college_principal_registered.Where(
                                      f => f.RegistrationNumber == regFaculty.RegistrationNumber)
                                      .Select(s => s.collegeId)
                                      .FirstOrDefault();
                    }
                    if (faculty.DateOfBirth != null)
                    {
                        regFaculty.facultyDateOfBirth =
                            UAAAS.Models.Utilities.MMDDYY2DDMMYY(faculty.DateOfBirth.ToString());
                    }
                    regFaculty.Mobile = faculty.Mobile;
                    regFaculty.facultyPhoto = faculty.Photo;
                    regFaculty.PANNumber = faculty.PANNumber;
                    regFaculty.facultyPANCardDocument = faculty.PANDocument;
                    regFaculty.AadhaarNumber = faculty.AadhaarNumber;
                    regFaculty.facultyAadhaarCardDocument = faculty.AadhaarDocument;
                    regFaculty.IncomeTaxFileview = faculty.IncometaxDocument;
                    regFaculty.WorkingStatus = faculty.WorkingStatus;
                    regFaculty.TotalExperience = faculty.TotalExperience;
                    regFaculty.TotalExperiencePresentCollege = faculty.TotalExperiencePresentCollege;
                    if (regFaculty.CollegeId != 0)
                    {
                        regFaculty.CollegeName = db.jntuh_college.Where(a => a.id == regFaculty.CollegeId).Select(z => z.collegeName + " (" + z.collegeCode + ")").FirstOrDefault();
                    }
                    faculty.DepartmentId = db.jntuh_college_faculty_registered.Where(
                            f => f.RegistrationNumber == regFaculty.RegistrationNumber)
                            .Select(s => s.DepartmentId)
                            .FirstOrDefault();
                    if (faculty.DepartmentId != null)
                    {
                        regFaculty.department = db.jntuh_department.Find(faculty.DepartmentId).departmentName;
                    }
                    regFaculty.DepartmentId = faculty.DepartmentId;
                    regFaculty.OtherDepartment = faculty.OtherDepartment;
                    List<jntuh_registered_faculty_experience> registered_faculty_experience =
                      db.jntuh_registered_faculty_experience.Where(
                          r =>
                              r.facultyId == regFaculty.id && r.createdBycollegeId != null)
                          .Select(s => s)
                          .ToList();
                    var facultyexperiance = registered_faculty_experience.Where(
                            r => r.facultyId == regFaculty.id && r.collegeId == regFaculty.CollegeId && r.facultyJoiningOrder != null)
                            .Select(s => s)
                            .ToList()
                            .LastOrDefault();
                    if (facultyexperiance != null)
                    {
                        faculty.DesignationId = facultyexperiance.facultyDesignationId;
                        if (faculty.DesignationId != null)
                        {
                            regFaculty.designation = db.jntuh_designation.Find(faculty.DesignationId).designation;
                        }
                        regFaculty.DesignationId = faculty.DesignationId;
                        regFaculty.OtherDesignation = facultyexperiance.OtherDesignation;
                        regFaculty.facultyDateOfAppointment =
                                UAAAS.Models.Utilities.MMDDYY2DDMMYY(facultyexperiance.facultyDateOfAppointment.ToString());
                        regFaculty.facultyAppointmentLetter = facultyexperiance.facultyJoiningOrder;
                        regFaculty.GrossSalary = facultyexperiance.facultySalary;
                        if (!string.IsNullOrEmpty(regFaculty.facultyDateOfAppointment))
                        {
                            int fromyear = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[2]);
                            int frommonth = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[1]);
                            int fromdate = Convert.ToInt32(regFaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[0]);

                            DateTime zeroTime = new DateTime(1, 1, 1);
                            DateTime olddate = new DateTime(fromyear, frommonth, fromdate);
                            DateTime curdate = DateTime.Now;

                            var Difference = curdate - olddate;

                            if (Difference.Days > 0)
                            {
                                int years = (zeroTime + Difference).Year - 1;
                                int months = (zeroTime + Difference).Month - 1;
                                int days = (zeroTime + Difference).Day;

                                regFaculty.showPresentCollegeExperiance = years + " Years " + months + " Months " + days + " Days";
                            }
                        }

                    }
                    //For The Experiance
                    var experiance =
                        registered_faculty_experience.Where(
                            e =>
                                e.createdBycollegeId != null && e.facultyId == regFaculty.id &&
                                e.facultyDateOfResignation != null && e.facultyDateOfResignation != null).Select(s => s).ToList();
                    int exyears = 0;
                    int exmonths = 0;
                    int exdays = 0;
                    foreach (var Experiencefaculty in experiance)
                    {
                        if (Experiencefaculty.facultyDateOfAppointment != null && Experiencefaculty.facultyDateOfResignation != null)
                        {
                            int fromyear = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[2]);
                            int frommonth = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[0]);
                            int fromdate = Convert.ToInt32(Experiencefaculty.facultyDateOfAppointment.ToString().Split(' ')[0].Split('/')[1]);
                            int year = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[2]);
                            int month = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[0]);
                            int date = Convert.ToInt32(Experiencefaculty.facultyDateOfResignation.ToString().Split(' ')[0].Split('/')[1]);
                            DateTime zeroTime = new DateTime(1, 1, 1);
                            DateTime olddate = new DateTime(fromyear, frommonth, fromdate);
                            DateTime curdate = new DateTime(year, month, date);
                            var Difference = curdate - olddate;
                            if (Difference.Days > 0)
                            {
                                int years = (zeroTime + Difference).Year - 1;
                                int months = (zeroTime + Difference).Month - 1;
                                int days = (zeroTime + Difference).Day;

                                exyears = exyears + years;
                                exmonths = exmonths + months;
                                exdays = exdays + days;
                            }
                        }
                    }
                    while (exdays >= 30)
                    {
                        exdays = exdays - 30;
                        exmonths++;
                    }

                    while (exmonths >= 12)
                    {
                        exmonths = exmonths - 12;
                        exyears++;
                    }
                    regFaculty.showTotalExperience = exyears + " Years " + exmonths + " Months " + exdays + " Days";
                }
            }
            var facultyeducationdata = (from educatgy in db.jntuh_education_category
                                        join edu in db.jntuh_registered_faculty_education on educatgy.id equals edu.educationId
                                        where
                                            edu.facultyId == fid &&
                                            (educatgy.id == 1 || educatgy.id == 3 || educatgy.id == 4 || educatgy.id == 5 || educatgy.id == 6 || educatgy.id == 9)
                                        select new
                                        {
                                            id = edu.id,
                                            educationId = educatgy.id,
                                            facultyId = edu.facultyId,
                                            studiedEducation = edu.courseStudied,
                                            educationName = educatgy.educationCategoryName,
                                            specialization = edu.specialization,
                                            passedYear = edu.passedYear,
                                            marksPercentage = edu.marksPercentage,
                                            division = edu.division,
                                            boardOrUniversity = edu.boardOrUniversity,
                                            placeOfEducation = edu.placeOfEducation,
                                            certificte = edu.certificate,

                                        }).ToList();
            string contentdata = string.Empty;
            FacultyphdDetails phddetails = new FacultyphdDetails();
            List<SelectListItem> phdtypeslist = new List<SelectListItem>();
            phdtypeslist.Add(new SelectListItem { Text = "Full Time/ Regular", Value = "1" });
            phdtypeslist.Add(new SelectListItem { Text = "Part Time/ External", Value = "2" });
            ViewBag.phdtype = phdtypeslist;
            var phdexsistdata =
               db.jntuh_faculty_phddetails.Where(p => p.Facultyid == regFaculty.id)
                   .Select(s => s)
                   .FirstOrDefault();
            if (phdexsistdata != null)
            {
                phddetails.PhdType = Convert.ToInt32(phdexsistdata.Phdtype);
                phddetails.PhdnotificationIssued = phdexsistdata.Notificationissued;
                List<SelectListItem> phdnotificationissuedlist = new List<SelectListItem>();
                phdnotificationissuedlist.Add(new SelectListItem { Text = "Online", Value = "1" });
                phdnotificationissuedlist.Add(new SelectListItem { Text = "Offline", Value = "2" });
                ViewBag.phdnotificationissuedlist = phdnotificationissuedlist;
                if (phdexsistdata.Notificationissued > 0)
                {
                    phddetails.PhdnotificationIssuedTxt = phdnotificationissuedlist.Where(i => i.Value == phdexsistdata.Notificationissued.ToString()).First().Text;
                }
                phddetails.PhdTypeid = phdtypeslist.Where(i => i.Value == phddetails.PhdType.ToString()).First().Text;
                phddetails.PhdawardYear = Convert.ToInt32(phdexsistdata.Phdawardyear);
                phddetails.PhdAdmissionYear = Convert.ToInt32(phdexsistdata.AdmissionYear);
                phddetails.University = phdexsistdata.University;
                phddetails.PlaceofUniversity = phdexsistdata.Placeofuniversity;
                phddetails.PhdTitle = phdexsistdata.Phdtitle;
                phddetails.UniversityType = Convert.ToInt32(phdexsistdata.Universitytype);
                phddetails.SupervisorName1 = phdexsistdata.Supervisorname1;
                phddetails.SupervisorName2 = phdexsistdata.Supervisorname2;
                phddetails.SupervisorName3 = phdexsistdata.Supervisorname3;
                phddetails.AdmissionLetterpath = phdexsistdata.Admissionletter;
                phddetails.PrephdLetterpath = phdexsistdata.Prephdletter;
                phddetails.GenuinenessLetterpath = phdexsistdata.Genuinenessletter;
                phddetails.CollegeAuthenticationLetterpath = phdexsistdata.Collegeauthaticationletter;
                phddetails.ThesiscoverPagepath = phdexsistdata.Thesiscoverpage;
                phddetails.OtherLetterpath = phdexsistdata.Otherletter;
                //New Fields
                phddetails.PhdnotificationIssued = phdexsistdata.Notificationissued;
                phddetails.RegistrationNumberOrHallticketNo = phdexsistdata.Hallticketnumber;
                phddetails.HowmanyreviewsRRMattended = phdexsistdata.Reviewsattended;
                phddetails.HowmanypapersPublished = phdexsistdata.Paperspublished;
                phddetails.Externalexamineratthetimeofdefense = phdexsistdata.Timeofdefense;
                List<SelectListItem> universitytypelist = new List<SelectListItem>();
                universitytypelist.Add(new SelectListItem { Text = "Central", Value = "1" });
                universitytypelist.Add(new SelectListItem { Text = "State", Value = "2" });
                universitytypelist.Add(new SelectListItem { Text = "Private", Value = "3" });
                universitytypelist.Add(new SelectListItem { Text = "Deemed to be University", Value = "4" });
                universitytypelist.Add(new SelectListItem { Text = "International University", Value = "5" });
                ViewBag.universitytype = universitytypelist;
                if (phdexsistdata.Universitytype != null && phdexsistdata.Universitytype > 0)
                {
                    phddetails.UniversityTypeTxt = universitytypelist.Where(i => i.Value == phdexsistdata.Universitytype.ToString()).First().Text;
                }
                phddetails.PressnotDateTxt = UAAAS.Models.Utilities.MMDDYY2DDMMYY(phdexsistdata.Vivadate.ToString());
                phddetails.BOSChairpersonatthetimeofThesisSubmission = phdexsistdata.Boschairperson;
                phddetails.DateofVivaTxt = UAAAS.Models.Utilities.MMDDYY2DDMMYY(phdexsistdata.Pressnotification.ToString());
                phddetails.HaveyouattendConvocation = phdexsistdata.Convocationattended != null ? (bool)phdexsistdata.Convocationattended : false;
                phddetails.PhdofferingDepartment = phdexsistdata.Department;
                phddetails.PhdSpecialization = phdexsistdata.Specialization;
                phddetails.NoCformthecollegepath = phdexsistdata.Nocletter;
                phddetails.UniversityWebsite = phdexsistdata.Website;
                phddetails.UniversityAddress = phdexsistdata.Address;
                phddetails.HowmanypapersPublishedduringPhdWork = phdexsistdata.PaperspublishedDPW;
                phddetails.Phdodpath = phdexsistdata.Phdod;
                phddetails.InterNationalJrnls = phdexsistdata.IntNationalJrnls;
                phddetails.NationalJrnls = phdexsistdata.NationalJrnls;
                phddetails.InterNationalCnfrs = phdexsistdata.IntNationalCnfrns;
                phddetails.NationalCnfrs = phdexsistdata.NationalCnfrns;
                phddetails.InterNationalJrnlspath = phdexsistdata.IntNationalJrnlsDocLetter;
                phddetails.NationalJrnlspath = phdexsistdata.NationalJrnlsDocLetter;
                phddetails.InterNationalCnfrspath = phdexsistdata.IntNationalCnfrnsLetter;
                phddetails.NationalCnfrspath = phdexsistdata.NationalCnfrnsLetter;
                phddetails.HaveyouattendConvocationTxt = phdexsistdata.Convocationattended == true ? "Yes" : "No";
            }
            string AdmissionLetterpath1 = string.IsNullOrEmpty(phddetails.AdmissionLetterpath) ? "No" : "Yes";
            string NoCformthecollegepathdocpath1 = string.IsNullOrEmpty(phddetails.NoCformthecollegepath) ? "No" : "Yes";
            string PrephdLetterpath1 = string.IsNullOrEmpty(phddetails.PrephdLetterpath) ? "No" : "Yes";
            string Phdodpath1 = string.IsNullOrEmpty(phddetails.Phdodpath) ? "No" : "Yes";
            string GenuinenessLetterpath = string.IsNullOrEmpty(phddetails.GenuinenessLetterpath) ? "No" : "Yes";
            string CollegeAuthenticationLetterpath = string.IsNullOrEmpty(phddetails.CollegeAuthenticationLetterpath) ? "No" : "Yes";
            string ThesiscoverPagepath = string.IsNullOrEmpty(phddetails.ThesiscoverPagepath) ? "No" : "Yes";
            string OtherLetterpath = string.IsNullOrEmpty(phddetails.OtherLetterpath) ? "No" : "Yes";
            var Gender = "";
            var presentworking = "";
            if (facultydata[0].GenderId == 1)
            {
                Gender = "Male";
            }
            else
            {
                Gender = "FeMale";
            }

            if (facultydata[0].WorkingStatus == true)
            {
                presentworking = "Yes";
            }
            else
            {
                presentworking = "No";
            }

            string facultyphoto = "";

            string url = PhdGet_BarCode(fid);

            if (!string.IsNullOrEmpty(facultydata[0].facultyPhoto))
            {
                facultyphoto = "/Content/Upload/Faculty/PHOTOS/" + facultydata[0].facultyPhoto;
            }
            string imgpath = @"~" + facultyphoto.Replace("%20", " ");
            imgpath = System.Web.HttpContext.Current.Server.MapPath(imgpath);
            string facultyPAndoc = "";
            if (!string.IsNullOrEmpty(facultydata[0].facultyPANCardDocument))
            {
                facultyPAndoc = "/Content/Upload/Faculty/PANCARDS/" + facultydata[0].facultyPANCardDocument;
            }
            string pandocpath = @"~" + facultyPAndoc.Replace("%20", " ");
            pandocpath = System.Web.HttpContext.Current.Server.MapPath(pandocpath);
            string facultyAadhaaardoc = "";
            if (!string.IsNullOrEmpty(facultydata[0].facultyAadhaarCardDocument))
            {
                facultyAadhaaardoc = "/Content/Upload/Faculty/AADHAARCARDS/" + facultydata[0].facultyAadhaarCardDocument;
            }
            string aadhaardocpath = @"~" + facultyAadhaaardoc.Replace("%20", " ");
            aadhaardocpath = System.Web.HttpContext.Current.Server.MapPath(aadhaardocpath);
            string facultySCMdoc = "";
            if (!string.IsNullOrEmpty(facultydata[0].SelectionCommitteeProcedings))
            {
                facultySCMdoc = "/Content/Upload/Faculty/PROCEEDINGS/" + facultydata[0].SelectionCommitteeProcedings;
            }
            string scmdocpath = @"~" + facultySCMdoc.Replace("%20", " ");
            scmdocpath = System.Web.HttpContext.Current.Server.MapPath(scmdocpath);
            string Middlename = "--";
            if (!string.IsNullOrEmpty(facultydata[0].MiddleName))
            {
                Middlename = facultydata[0].MiddleName;
            }
            contentdata += "<div>";
            contentdata += "<p style='color:darkblue;font-family:inherit;text-align:center;font-size:13px;font-family:Times New Roman'>Jawaharlal Nehru Technological University Hyderabad</p>";
            contentdata += "</div>";
            contentdata += "<div><p style='color:darkblue;font-family:inherit;text-align:center;font-size:13px;font-family:Times New Roman'>Directorate of Affiliations & Academic Audit </p></div>";
            contentdata += "<div><p style='color:darkblue;font-family:inherit;text-align:center;font-size:13px;font-family:Times New Roman'>Kukatpally, Hyderabad – 500 085, Telangana, India</p></div>";
            contentdata += "<br/>";
            if (facultydata[0].BlacklistFaculty == true)
                contentdata += "<p style='text-align:left;font-size:10px;'>You are Blacklisted due to possessing of ingenuine UG/PG/Ph.D. Certificates.</p><br/>";
            if (facultydata[0].VerificationStatus == true)
                contentdata += "<p style='text-align:left;font-size:10px;'>Your Candidature is made inactive due to your absence for physical verification.</p><br/>";
            contentdata += "<p style='text-align:left;font-size:10px;'><b><u>Faculty Registration Information :</b></u></p>";
            contentdata += "<br/><table border='0'cellspacing='0' cellpadding='4'  width='100%' class='auto' style='font-size:10px;border-collapse:collapse'>"; //cellspacing='0' cellpadding='5'
            contentdata += "<tr><td style='text-align:left' width='16%'>Registration ID&nbsp;&nbsp;:</td><td  style='text-align:left'  width='47%'>" +
            facultydata[0].RegistrationNumber + "</td>";
            if (imgpath != null)
            {
                string FacultyParsing = string.Empty;
                string strFacultyPhoto = string.Empty;
                var ServerPath = "http://jntuhaac.in/Content/Upload/Faculty/Photos/" + facultydata[0].facultyPhoto;

                #region With-Out Html Parsing
                try
                {
                    if (!string.IsNullOrEmpty(imgpath))
                    {
                        FacultyParsing += "<p align='center'><img src='" + HtmlEncoder.Encode(imgpath.Trim()) + "' align='center'  width='80' height='80' /></p>";
                        var ParseEliments = HTMLWorker.ParseToList(new StringReader(FacultyParsing), null);

                        if (imgpath.Contains("."))
                        {
                            strFacultyPhoto = "<img style='text-align:left'  alt=''src='" + HtmlEncoder.Encode(imgpath.Trim()) + "' height='80'  width='80' />";
                            contentdata += "<td rowspan=2  width='18%'><p align='center'>" + strFacultyPhoto + "</p></td>";
                        }
                        else
                        {
                            contentdata += "<td rowspan=2  width='18%'><p align='center'>&nbsp;</p></td>";
                        }
                    }
                    else
                    {
                        contentdata += "<td rowspan=2  width='18%'><p align='center'>&nbsp;</p></td>";
                    }
                }
                catch (Exception ex)
                {
                    contentdata += "<td rowspan=2  width='18%'><p align='center'>&nbsp;</p></td>";

                }
                #endregion
            }
            else
            {
                contentdata += "<td style='text-align:left'  rowspan=2  width='18%'>----</td>";
            }

            if (url != null)
            {
                contentdata += "<td rowspan=2  width='18%'><img style='text-align:left'  src='" + url +
                       "' height='80' Width='80'/></td>";
            }
            else
            {
                contentdata += "<td style='text-align:left'   rowspan=2 width='18%'>----</td>";
            }
            contentdata += "</tr>";
            contentdata += "<tr>";
            contentdata += "<td style='text-align:left' width='16%'>FirstName&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<br/>MiddleName&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<br/>LastName&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</td><td style='text-align:left' width='47%'>" + facultydata[0].FirstName + "<br/>"
                + facultydata[0].MiddleName + "<br/>" + facultydata[0].LastName + "</td>";
            contentdata += "</tr>";
            contentdata += "</table>";
            contentdata += "<p style='text-align:left;font-size:10px;'><b><u>Faculty Basic Information :</b></u></p>";
            contentdata += "<br/><table border='1'cellspacing='0' cellpadding='4'   width='100%' class='auto' style='font-size:10px;border-collapse:collapse'>"; //cellspacing='0' cellpadding='5'
            contentdata += "<tr><td style='text-align:left'>Father's/Husband's Name  </td><td style='text-align:left'>" +
                     facultydata[0].FatherOrhusbandName + "</td>";
            contentdata += "<td style='text-align:left'>Mother Name  </td><td style='text-align:left'>" + facultydata[0].MotherName +
                           "</td></tr>";
            contentdata += "<tr><td style='text-align:left'>Gender  </td><td style='text-align:left'>" + Gender + "</td>";
            contentdata += "<td style='text-align:left'>Date of Birth   </td><td style='text-align:left'>" +
                           UAAAS.Models.Utilities.MMDDYY2DDMMYY(facultydata[0].DateOfBirth.ToString())
                           + "</td></tr>";
            contentdata += "<tr><td style='text-align:left'>Mobile No  </td><td style='text-align:left'>" +
                          facultydata[0].Mobile + "</td><td style='text-align:left'  width='13%'>Email </td><td  style='text-align:left'  width='45%'>" +
                facultydata[0].Email + "</td></tr>";

            contentdata += "<tr><td style='text-align:left'>PAN Number </td><td style='text-align:left'>"
                + facultydata[0].PANNumber + "</td><td style='text-align:left'>Aadhaar Number  </td><td style='text-align:left'>"
                + facultydata[0].AadhaarNumber +
                         "</td></tr>";
            contentdata += "<tr>";
            if (pandocpath != null)
            {
                contentdata += "<td style='text-align:left'>PAN  Document  </td><td style='text-align:left'>Yes</td>";
            }
            else
            {
                contentdata += "<td style='text-align:left'>PAN  Document  </td><td style='text-align:left'>No</td>";
            }

            if (aadhaardocpath != null)
            {
                contentdata += "<td style='text-align:left'>Aadhaaar Document </td><td style='text-align:left'>Yes</td>";
            }
            else
            {
                contentdata += "<td style='text-align:left'>Aadhaaar Document </td><td style='text-align:left'>No</td>";
            }

            contentdata += "<tr><td style='text-align:left'>Category </td><td style='text-align:left'>" +
                    facultydata[0].facultyCategory +
                    "</td><td></td><td></td></tr>";
            if (facultydata[0].CollegeName != null || facultydata[0].CollegeName != "")
            {
                contentdata += "<tr style='text-align:left' colspan=1 ><td>Name Of The College Presently Working In</td><td style='text-align:left' colspan=3 >" + regFaculty.CollegeName + "</td></tr>";

            }
            else
            {
                contentdata += "<div style='text-align:center'>No CollegeDetails Are Found</div>";
            }
            contentdata += "</tr></table>";
            contentdata += "<p style='text-align:left;font-size:10px;'><b><u>Faculty Ph.D. Details :</b></u></p>";
            contentdata += "<br/><table border='1'cellspacing='0' cellpadding='4'  width='100%' class='auto' style='font-size:10px;border-collapse:collapse'>"; //cellspacing='0' cellpadding='5'

            contentdata += "<tr><td style='text-align:left' colspan=2>Ph.D. Specialization</td><td style='text-align:left' colspan=2>" + phddetails.PhdSpecialization +
                           "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=2>Department Offering Ph.D.</td><td style='text-align:left' colspan=2>" + phddetails.PhdofferingDepartment +
                           "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=2>University/Institute Type from which Ph.D. Degree is awarded</td><td style='text-align:left' colspan=2>" + phddetails.UniversityTypeTxt +
             "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=2>Course Type</td><td style='text-align:left' colspan=2>" + phddetails.PhdTypeid +
                         "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=2>Ph.D. Notification Issued</td><td style='text-align:left' colspan=2>" + phddetails.PhdnotificationIssuedTxt +
               "</td></tr>";
            contentdata += "<tr><td style='text-align:left' colspan=2>Ph.D. Registration Number/ Hall Ticket Number</td><td style='text-align:left' colspan=2>" + phddetails.RegistrationNumberOrHallticketNo +
                  "</td></tr>";
            contentdata += "<tr><td style='text-align:left' colspan=2>Admission Letter,ID Card</td><td style='text-align:left' colspan=2>" + AdmissionLetterpath1 +
                  "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=2>Year of Admission</td><td style='text-align:left' colspan=2>" + phddetails.PhdAdmissionYear +
                   "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=2>Exact Date of Final viva</td><td style='text-align:left' colspan=2>" + phddetails.PressnotDateTxt +
                "</td></tr>";
            contentdata += "<tr><td style='text-align:left' colspan=2>Date of Ph.D. Notification of the University</td><td style='text-align:left' colspan=2>" + phddetails.DateofVivaTxt +
                 "</td></tr>";
            contentdata += "<tr><td style='text-align:left' colspan=2>Year of Award of Degree</td><td style='text-align:left' colspan=2>" + phddetails.PhdawardYear +
                   "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=2>Supervisor Name1</td><td style='text-align:left' colspan=2>" + phddetails.SupervisorName1 +
              "</td></tr>";
            contentdata += "<tr><td style='text-align:left' colspan=2>Supervisor Name2</td><td style='text-align:left' colspan=2>" + phddetails.SupervisorName2 +
              "</td></tr>";
            contentdata += "<tr><td style='text-align:left' colspan=2>Supervisor Name3</td><td style='text-align:left' colspan=2>" + phddetails.SupervisorName3 +
              "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=1>Thesis Title</td><td style='text-align:left' colspan=3>" + phddetails.PhdTitle +
                      "</td></tr>";

            contentdata += "<tr> <td style='text-align:left' colspan=1>Name of the University Address</td><td style='text-align:left' colspan=3>" +
             phddetails.University + "," + "" + "<br/>" + phddetails.UniversityAddress + "," + "" + "<br/>" + phddetails.UniversityWebsite + "," + "" + "<br/>" + phddetails.PlaceofUniversity +
            "</td></tr>";
            contentdata += "<tr><td style='text-align:left' colspan=3>How Many Review meetings Attended</td><td style='text-align:left' colspan=3>" + phddetails.HowmanyreviewsRRMattended +
                        "</td></tr>";

            var InterNationalJrnlspath = String.IsNullOrEmpty(phddetails.InterNationalJrnlspath) ? "No" : "Yes";

            contentdata += "<tr>   <td style='text-align:left' colspan=2> Number of International Publications</td><td style='text-align:left'>" +
                               phddetails.InterNationalJrnls + "</td><td style='text-align:left'>" +
                               InterNationalJrnlspath + "</td></tr>";

            var NationalJrnlspath = String.IsNullOrEmpty(phddetails.NationalJrnlspath) ? "No" : "Yes";

            contentdata += "<tr>  <td style='text-align:left' colspan=2>Number of National Publications</td><td style='text-align:left'>" + phddetails.NationalJrnls +
                              "</td><td style='text-align:left'>" + NationalJrnlspath +
                              "</td></tr>";

            var InterNationalCnfrspath = String.IsNullOrEmpty(phddetails.InterNationalCnfrspath) ? "No" : "Yes";

            contentdata += "<tr><td style='text-align:left' colspan=2>Number of papers presented at International Conferences</td><td style='text-align:left'>" +
                           phddetails.InterNationalCnfrs + "</td><td style='text-align:left'>" +
                          InterNationalCnfrspath + "</td></tr>";

            var NationalCnfrspath = String.IsNullOrEmpty(phddetails.NationalCnfrspath) ? "No" : "Yes";

            contentdata += "<tr><td style='text-align:left' colspan=2>Number of papers presented at National Conferences</td><td style='text-align:left'>" + phddetails.NationalCnfrs +
                          "</td><td style='text-align:left'>" + NationalCnfrspath +
                          "</td></tr>";
            contentdata += "<tr><td style='text-align:left' colspan=3>How many Papers Published During PhD Work</td><td style='text-align:left' colspan=3>" + phddetails.HowmanypapersPublishedduringPhdWork +
              "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=3>Name of the External Examiner during thesis defence</td><td style='text-align:left' colspan=3>" + phddetails.Externalexamineratthetimeofdefense +
                           "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=3>Name of the BOS Chairperson at the time of Thesis Submission</td><td style='text-align:left' colspan=3>" + phddetails.BOSChairpersonatthetimeofThesisSubmission +
           "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=3>Whether attended Convocation in person</td><td style='text-align:left' colspan=3>" + phddetails.HaveyouattendConvocationTxt +
                       "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=3>NOC from the college to pursue Ph.D.</td><td style='text-align:left' colspan=3>" + NoCformthecollegepathdocpath1 +
                    "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=3>Pre-Ph.D exam/equivalent result proof</td><td style='text-align:left' colspan=3>" + PrephdLetterpath1 +
                  "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=3>Original Degree Certificate</td><td style='text-align:left' colspan=3>" + Phdodpath1 +
                    "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=3>Genuineness Letter (obtain through proper channel)</td><td style='text-align:left' colspan=3>" + GenuinenessLetterpath +
                    "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=3>College Certified Letter(Duly Signed by Principal)</td><td style='text-align:left' colspan=3>" + CollegeAuthenticationLetterpath +
                    "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=3>Thesis Cover Pages(including Examiner Signed Certificates)</td><td style='text-align:left' colspan=3>" + ThesiscoverPagepath +
                      "</td></tr>";

            contentdata += "<tr><td style='text-align:left' colspan=3>Other Supporting Documents(Optional)</td><td style='text-align:left' colspan=3>" + OtherLetterpath +
                    "</td></tr>";
            contentdata += "</table>";
            contents = contents.Replace("##COLLEGE_RANDOMCODE##", contentdata);
            return contents;
        }

        public string PhdGet_BarCode(int fid)
        {
            string BarCodeDetails = string.Empty;

            string strimagebarcodedetails = string.Empty;
            var Facultyinformation = db.jntuh_registered_faculty.Where(r => r.id == fid).Select(e => e).FirstOrDefault();
            string facultyDateOfBirth = string.Empty;
            string facultyAadhaarNumber = "-";
            if (!String.IsNullOrEmpty(Facultyinformation.AadhaarNumber))
                facultyAadhaarNumber = Facultyinformation.AadhaarNumber.Substring(0, 8) + "XXXX";

            if (Facultyinformation.DateOfBirth != null)
            {
                facultyDateOfBirth =
                    UAAAS.Models.Utilities.MMDDYY2DDMMYY(Facultyinformation.DateOfBirth.ToString());
            }

            string CC = db.jntuh_college.Where(c => c.id == Facultyinformation.collegeId).Select(c => c.collegeCode.ToUpper()).FirstOrDefault();
            BarCodeDetails = "CC :" + CC + ", RegNo :" + Facultyinformation.RegistrationNumber + ", Name :" + (Facultyinformation.FirstName + " " + Facultyinformation.MiddleName + " " + Facultyinformation.LastName) + ", DOB :" + facultyDateOfBirth + ", Mobile :" + Facultyinformation.Mobile + ", EmailId :" + Facultyinformation.Email + ", AadhaarNumber :" + facultyAadhaarNumber;
            string CollegeInformation = string.Empty;
            Gma.QrCodeNet.Encoding.QrEncoder qrEncoder = new Gma.QrCodeNet.Encoding.QrEncoder(Gma.QrCodeNet.Encoding.ErrorCorrectionLevel.H);
            Gma.QrCodeNet.Encoding.QrCode qrCode = new Gma.QrCodeNet.Encoding.QrCode();
            qrEncoder.TryEncode(BarCodeDetails, out qrCode);
            Gma.QrCodeNet.Encoding.Windows.Render.GraphicsRenderer renderer = new Gma.QrCodeNet.Encoding.Windows.Render.GraphicsRenderer(new Gma.QrCodeNet.Encoding.Windows.Render.FixedModuleSize(4, Gma.QrCodeNet.Encoding.Windows.Render.QuietZoneModules.Four), System.Drawing.Brushes.Black, System.Drawing.Brushes.White);

            Stream memoryStream = new MemoryStream();
            renderer.WriteToStream(qrCode.Matrix, ImageFormat.Png, memoryStream);
            // very important to reset memory stream to a starting position, otherwise you would get 0 bytes returned
            memoryStream.Position = 0;

            var resultStream = new FileStreamResult(memoryStream, "image/png");
            resultStream.FileDownloadName = String.Format("{0}.png", CC + "_" + Facultyinformation.RegistrationNumber + "_QRCode");

            System.Drawing.Image v = System.Drawing.Image.FromStream(memoryStream);
            if (!Directory.Exists(Server.MapPath("~/Content/BarcodeImage")))
            {
                Directory.CreateDirectory(Server.MapPath("~/Content/BarcodeImage"));
            }
            var ext = resultStream.ContentType;
            var Filename = resultStream.FileDownloadName;

            System.Drawing.Image img = v;
            img.Save(string.Format("{0}/{1}", Server.MapPath("~/Content/BarcodeImage"), Filename));

            string Filepath = Server.MapPath("~/Content/BarcodeImage/" + Filename);
            return Filepath;
        }

        #endregion

        #region FacultyDeclaration

        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult FacultyDeclaration(string fid)
        {
            MembershipUser userdata = Membership.GetUser(User.Identity.Name);

            if (userdata == null)
            {
                return RedirectToAction("LogOn", "Account");
            }
            int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            int fID = 0;
            if (fid != null)
            {
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(fid.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]));
            }
            else
            {
                return RedirectToAction("LogOn", "Account");
            }

            var registered_faculty = new jntuh_registered_faculty();
            if (fID != 0)
            {
                registered_faculty = db.jntuh_registered_faculty.Where(a => a.id == fID).FirstOrDefault();
                var FacultyDeclaration = db.jntuh_college_facultydeclaration.Where(f => f.FacultyId == fID).FirstOrDefault();
                if (FacultyDeclaration != null)
                {
                    return RedirectToAction("FacultyDeclarationview", "NewOnlineRegistration", new { id = UAAAS.Models.Utilities.EncryptString(FacultyDeclaration.FacultyId.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]) });
                }
            }
            else
            {
                return RedirectToAction("LogOn", "Account");
            }
            var CollegeDeta = new jntuh_college();
            //var Colleges=new jntuh_college();
            var Collegedetails = new jntuh_college_faculty_registered();
            Collegedetails = db.jntuh_college_faculty_registered.Where(cf => cf.RegistrationNumber == registered_faculty.RegistrationNumber).Select(cf => cf).FirstOrDefault();

            List<SelectListItem> colleges = new List<SelectListItem>();
            var jntuh_college = db.jntuh_college.ToList();

            var PresentColleges = jntuh_college.Where(a => a.isActive == true).Select(a => new { CollegeId = a.id, collegeCode = a.collegeCode, CollegeName = a.collegeName + "(" + a.collegeCode + ")" }).ToList();
            ViewBag.PresentColleges = PresentColleges;

            var colleges_list = jntuh_college.Select(a => new { CollegeId = a.id, collegeCode = a.collegeCode, CollegeName = a.collegeName + "(" + a.collegeCode + ")" }).ToList();

            colleges = colleges_list.Select(s => new SelectListItem { Value = s.CollegeId.ToString(), Text = s.CollegeName }).ToList();
            colleges.Add(new SelectListItem { Value = "0", Text = "Others" });
            ViewBag.Colleges = colleges.Where(i => i.Value != "375").OrderBy(s => s.Value).ToList();
            if (Collegedetails.collegeId != null)
                CollegeDeta = db.jntuh_college.Where(c => c.id == Collegedetails.collegeId).FirstOrDefault();

            FacultyDeclaration Declaration = new FacultyDeclaration();
            Declaration.FacultyId = registered_faculty.id;
            Declaration.RegistrationNumber = registered_faculty.RegistrationNumber;
            Declaration.Name = registered_faculty.FirstName + " " + registered_faculty.LastName;
            Declaration.Pannumber = registered_faculty.PANNumber;
            int Presentfromyear = 0;
            int Presentfrommonth = 0;
            int Presentfromdate = 0;

            string[] strFacultyJoiningDate = registered_faculty.DateOfAppointment.ToString().Split('/');
            string[] strYear = strFacultyJoiningDate[2].Split(' ');
            Presentfromyear = Convert.ToInt32(strYear[0]);
            Presentfrommonth = Convert.ToInt32(strFacultyJoiningDate[0]);
            Presentfromdate = Convert.ToInt32(strFacultyJoiningDate[1]);
            DateTime Appointmentdate = new DateTime(Presentfromyear, Presentfrommonth, Presentfromdate);
            Declaration.FacultyDOJ = Appointmentdate.ToString("dd/MM/yyyy");
            if (CollegeDeta != null)
            {
                //Declaration.collegecode=CollegeDeta.collegeCode;
                Declaration.collegeName = CollegeDeta.collegeName + " (" + CollegeDeta.collegeCode + ")";
                Declaration.Collegeid = CollegeDeta.id;
            }

            if (registered_faculty.DesignationId != null)
                Declaration.Designation = db.jntuh_designation.Where(d => d.id == registered_faculty.DesignationId).Select(d => d.designation).FirstOrDefault();

            if (Collegedetails.DepartmentId != null)
                Declaration.Department = db.jntuh_department.Where(d => d.id == Collegedetails.DepartmentId).Select(d => d.departmentName).FirstOrDefault();
            return View(Declaration);
        }

        public ActionResult FacultyDeclarationview(string id)
        {
            MembershipUser userdata = Membership.GetUser(User.Identity.Name);

            if (userdata == null)
            {
                return RedirectToAction("LogOn", "Account");
            }
            int? userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
            int fID = 0;
            if (id != null)
            {
                fID = Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(id.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]));
            }
            else
            {
                return RedirectToAction("LogOn", "Account");
            }
            var jntuh_academivYear = db.jntuh_academic_year.ToList();
            int actualYear = jntuh_academivYear.Where(s => s.isActive == true && s.isPresentAcademicYear == true).Select(a => a.id).FirstOrDefault();
            int PresentYear = jntuh_academivYear.Where(s => s.id == (actualYear + 1)).Select(s => s.id).FirstOrDefault();
            var CollegesList = db.jntuh_college.Where(c => c.isActive == true).ToList();
            var facultydeclaretion = new jntuh_college_facultydeclaration();
            var registered_faculty = new jntuh_registered_faculty();
            var Designations = db.jntuh_designation.ToList();
            if (fID != 0)
            {
                facultydeclaretion = db.jntuh_college_facultydeclaration.Where(a => a.FacultyId == fID && a.AccademicYear == (short)PresentYear).FirstOrDefault();
                registered_faculty = db.jntuh_registered_faculty.Where(rf => rf.id == fID).Select(rf => rf).FirstOrDefault();
            }
            else
            {
                return RedirectToAction("LogOn", "Account");
            }

            FacultyDeclaration ViewDeclarationDetails = new FacultyDeclaration();
            ViewDeclarationDetails.RegistrationNumber = registered_faculty.RegistrationNumber;
            ViewDeclarationDetails.Name = registered_faculty.FirstName + " " + registered_faculty.LastName;
            ViewDeclarationDetails.Pannumber = registered_faculty.PANNumber;
            ViewDeclarationDetails.UploadedDeclaration = facultydeclaretion.declaration;
            ViewDeclarationDetails.Facultytype = facultydeclaretion.FacultyType;
            ViewDeclarationDetails.FacultyId = fID;
            ViewDeclarationDetails.Reason = facultydeclaretion.Reason;
            int Presentfromyear = 0;
            int Presentfrommonth = 0;
            int Presentfromdate = 0;

            if (!string.IsNullOrEmpty(facultydeclaretion.Dateofjoining.ToString()))
            {
                string[] strFacultyJoiningDate = facultydeclaretion.Dateofjoining.ToString().Split('/');
                string[] strYear = strFacultyJoiningDate[2].Split(' ');
                Presentfromyear = Convert.ToInt32(strYear[0]);
                Presentfrommonth = Convert.ToInt32(strFacultyJoiningDate[0]);
                Presentfromdate = Convert.ToInt32(strFacultyJoiningDate[1]);
                DateTime Appointmentdate = new DateTime(Presentfromyear, Presentfrommonth, Presentfromdate);
                ViewDeclarationDetails.FacultyDOJ = Appointmentdate.ToString("dd/MM/yyyy");
            }

            ViewDeclarationDetails.Designation = facultydeclaretion.designation;
            ViewDeclarationDetails.Department = facultydeclaretion.department;
            // ViewDeclarationDetails.FacultyDOJ = facultydeclaretion.Dateofjoining.ToString();
            if (facultydeclaretion.CollegeId != null)
                ViewDeclarationDetails.collegeName = CollegesList.Where(c => c.id == facultydeclaretion.CollegeId).Select(c => c.collegeName).FirstOrDefault() + "(" + CollegesList.Where(c => c.id == facultydeclaretion.CollegeId).Select(c => c.collegeCode).FirstOrDefault() + ")";

            if (!string.IsNullOrEmpty(facultydeclaretion.DateofReleving.ToString()))
            {
                string[] strFacultyReleving = facultydeclaretion.DateofReleving.ToString().Split('/');
                string[] strRelevingYear = strFacultyReleving[2].Split(' ');
                Presentfromyear = Convert.ToInt32(strRelevingYear[0]);
                Presentfrommonth = Convert.ToInt32(strFacultyReleving[0]);
                Presentfromdate = Convert.ToInt32(strFacultyReleving[1]);
                DateTime FacultyRelevingdate = new DateTime(Presentfromyear, Presentfrommonth, Presentfromdate);
                ViewDeclarationDetails.FacultyReleving = FacultyRelevingdate.ToString("dd/MM/yyyy");
            }
            if (!string.IsNullOrEmpty(facultydeclaretion.Newcollegerelevingdate.ToString()))
            {
                string[] strNewcollegerelevingdate = facultydeclaretion.Newcollegerelevingdate.ToString().Split('/');
                string[] strNewRelevingYear = strNewcollegerelevingdate[2].Split(' ');
                Presentfromyear = Convert.ToInt32(strNewRelevingYear[0]);
                Presentfrommonth = Convert.ToInt32(strNewcollegerelevingdate[0]);
                Presentfromdate = Convert.ToInt32(strNewcollegerelevingdate[1]);
                DateTime Newcollegereleving = new DateTime(Presentfromyear, Presentfrommonth, Presentfromdate);
                ViewDeclarationDetails.FacultyNewReleving = Newcollegereleving.ToString("dd/MM/yyyy");
            }
            if (!string.IsNullOrEmpty(facultydeclaretion.NewCollegeJoiningDate.ToString()))
            {
                string[] strFacultyNewleyDOJ = facultydeclaretion.NewCollegeJoiningDate.ToString().Split('/');
                string[] strNewJoiningYear = strFacultyNewleyDOJ[2].Split(' ');
                Presentfromyear = Convert.ToInt32(strNewJoiningYear[0]);
                Presentfrommonth = Convert.ToInt32(strFacultyNewleyDOJ[0]);
                Presentfromdate = Convert.ToInt32(strFacultyNewleyDOJ[1]);
                DateTime FacultyNewleyDOJdate = new DateTime(Presentfromyear, Presentfrommonth, Presentfromdate);
                ViewDeclarationDetails.FacultyNewleyDOJ = FacultyNewleyDOJdate.ToString("dd/MM/yyyy");
            }
            if (facultydeclaretion.NewCollegeId != null)
                ViewDeclarationDetails.NewcollegeName = CollegesList.Where(c => c.id == facultydeclaretion.NewCollegeId).Select(c => c.collegeName).FirstOrDefault() + "(" + CollegesList.Where(c => c.id == facultydeclaretion.CollegeId).Select(c => c.collegeCode).FirstOrDefault() + ")";
            return View(ViewDeclarationDetails);
        }

        [HttpPost]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult UploadFacultydeclaration(FacultyDeclaration Declaration)
        {
            MembershipUser userdata = Membership.GetUser(User.Identity.Name);

            if (userdata == null)
            {
                return RedirectToAction("LogOn", "Account");
            }
            //else
            //{
            //    return RedirectToAction("FacultyDeclarationview", "NewOnlineRegistration");
            //}

            try
            {
                int userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
                jntuh_college_facultydeclaration Facultydeclaration = new jntuh_college_facultydeclaration();
                Facultydeclaration = db.jntuh_college_facultydeclaration.Where(f => f.FacultyId == Declaration.FacultyId).FirstOrDefault();
                var ext = Path.GetExtension(Declaration.Declarationfile.FileName);
                var facultyexperiencedocumentspath = "~/Content/Upload/Faculty/FacultyDeclarations";
                if (ext.ToUpper().Equals(".PDF"))
                {
                    string CheckLastName = string.Empty;
                    if (String.IsNullOrEmpty(Declaration.Name))
                    {
                        CheckLastName = Declaration.Name;
                    }
                    else
                    {
                        CheckLastName = Declaration.Name;
                    }
                    string filename = DateTime.Now.ToString("yyyyMMdd-HHmmssffffff") +
                                          "-" + CheckLastName.Substring(0, 1) + "-" + Declaration.RegistrationNumber.Substring(0, 2);
                    Declaration.Declarationfile.SaveAs(string.Format("{0}/{1}{2}", Server.MapPath(facultyexperiencedocumentspath), filename, ext));
                    Declaration.UploadedDeclaration = string.Format("{0}{1}", filename, ext);
                }
                Facultydeclaration.declaration = Declaration.UploadedDeclaration;
                Facultydeclaration.updatedon = DateTime.Now;
                Facultydeclaration.updatedby = userId;
                db.Entry(Facultydeclaration).State = EntityState.Modified;
                db.SaveChanges();
                return RedirectToAction("FacultyDeclarationview", "NewOnlineRegistration", new { id = UAAAS.Models.Utilities.EncryptString(Declaration.FacultyId.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]) });
            }
            catch (Exception ex)
            {

                throw ex;
            }
        }

        [HttpPost]
        [Authorize(Roles = "Admin,Faculty")]
        public ActionResult FacultyDeclaration(FacultyDeclaration Declaration)
        {
            MembershipUser userdata = Membership.GetUser(User.Identity.Name);

            if (userdata == null)
            {
                return RedirectToAction("LogOn", "Account");
            }
            try
            {
                int userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);
                jntuh_college_facultydeclaration Facultydeclaration = new jntuh_college_facultydeclaration();
                Facultydeclaration.CollegeId = Declaration.OldCollegeid;
                Facultydeclaration.NewCollegeId = Declaration.PresentWorkingCollegeid;
                //CultureInfo provider = CultureInfo.InvariantCulture;
                int Presentfromyear = 0;
                int Presentfrommonth = 0;
                int Presentfromdate = 0;
                if (!string.IsNullOrEmpty(Declaration.FacultyDOJ))
                {
                    Presentfromyear = Convert.ToInt32(Declaration.FacultyDOJ.Split('/')[2]);
                    Presentfrommonth = Convert.ToInt32(Declaration.FacultyDOJ.Split('/')[1]);
                    Presentfromdate = Convert.ToInt32(Declaration.FacultyDOJ.Split('/')[0]);
                    DateTime Appointmentdate = new DateTime(Presentfromyear, Presentfrommonth, Presentfromdate);
                    Facultydeclaration.Dateofjoining = Appointmentdate;
                    if (Declaration.FacultyStatus == "Working")
                    {
                        Presentfromyear = Convert.ToInt32(DateTime.Now.Year);
                        Presentfrommonth = Convert.ToInt32(DateTime.Now.Month);
                        Presentfromdate = Convert.ToInt32(DateTime.Now.Day);
                        DateTime RelevingDate = new DateTime(Presentfromyear, Presentfrommonth, Presentfromdate);
                        Facultydeclaration.DateofReleving = RelevingDate;
                    }

                }

                if (Declaration.FacultyStatus == "Working")
                {
                    Facultydeclaration.FacultyType = (short)1;
                    Facultydeclaration.DateofReleving = DateTime.Now;
                }

                else if (Declaration.FacultyStatus == "Notworking")
                {
                    Facultydeclaration.FacultyType = (short)2;
                    Facultydeclaration.Newcollegerelevingdate = DateTime.Now;
                }

                else
                    Facultydeclaration.FacultyType = (short)3;
                if (!string.IsNullOrEmpty(Declaration.FacultyReleving))
                {
                    Presentfromyear = Convert.ToInt32(Declaration.FacultyReleving.Split('/')[2]);
                    Presentfrommonth = Convert.ToInt32(Declaration.FacultyReleving.Split('/')[1]);
                    Presentfromdate = Convert.ToInt32(Declaration.FacultyReleving.Split('/')[0]);
                    DateTime Relevingdate = new DateTime(Presentfromyear, Presentfrommonth, Presentfromdate);
                    //Facultydeclaration.Dateofreleving = DateTime.ParseExact(Declaration.FacultyReleving, "yyyy/mm/dd", provider);
                    Facultydeclaration.DateofReleving = Relevingdate;

                }

                if (!string.IsNullOrEmpty(Declaration.FacultyNewleyDOJ))
                {
                    Presentfromyear = Convert.ToInt32(Declaration.FacultyNewleyDOJ.Split('/')[2]);
                    Presentfrommonth = Convert.ToInt32(Declaration.FacultyNewleyDOJ.Split('/')[1]);
                    Presentfromdate = Convert.ToInt32(Declaration.FacultyNewleyDOJ.Split('/')[0]);
                    DateTime NewlwyAppointmentdate = new DateTime(Presentfromyear, Presentfrommonth, Presentfromdate);
                    Facultydeclaration.NewCollegeJoiningDate = NewlwyAppointmentdate;
                    //if (Declaration.FacultyStatus == "Notworking")
                    //{
                    //    Presentfromyear = Convert.ToInt32(DateTime.Now.Year);
                    //    Presentfrommonth = Convert.ToInt32(DateTime.Now.Month);
                    //    Presentfromdate = Convert.ToInt32(DateTime.Now.Day);
                    //    DateTime Newcollegefrelevingdate = new DateTime(Presentfromyear, Presentfrommonth, Presentfromdate);
                    //    Facultydeclaration.Newcollegerelevingdate = Newcollegefrelevingdate;
                    //}
                }

                if (Declaration.FacultyStatus == "NotworkingAnyWhere" && !string.IsNullOrEmpty(Declaration.FacultyReleving1))
                {
                    Presentfromyear = Convert.ToInt32(Declaration.FacultyReleving1.Split('/')[2]);
                    Presentfrommonth = Convert.ToInt32(Declaration.FacultyReleving1.Split('/')[1]);
                    Presentfromdate = Convert.ToInt32(Declaration.FacultyReleving1.Split('/')[0]);
                    DateTime Relevingdate1 = new DateTime(Presentfromyear, Presentfrommonth, Presentfromdate);
                    Facultydeclaration.DateofReleving = Relevingdate1;
                }
                var jntuh_academivYear = db.jntuh_academic_year.ToList();
                int actualYear = jntuh_academivYear.Where(s => s.isActive == true && s.isPresentAcademicYear == true).Select(a => a.id).FirstOrDefault();
                int PresentYear = jntuh_academivYear.Where(s => s.id == (actualYear + 1)).Select(s => s.id).FirstOrDefault();

                Facultydeclaration.AccademicYear = (short)PresentYear;
                Facultydeclaration.FacultyId = Declaration.FacultyId;
                //Facultydeclaration. = Relevingdate;
                Facultydeclaration.createdon = DateTime.Now;
                Facultydeclaration.Reason = Declaration.Reason;
                string fid = UAAAS.Models.Utilities.EncryptString(Declaration.FacultyId.ToString(),
                        WebConfigurationManager.AppSettings["CryptoKey"]);
                Facultydeclaration.department = Declaration.Department;
                Facultydeclaration.designation = Declaration.Designation;
                Facultydeclaration.CollegeId = Declaration.Collegeid;
                Facultydeclaration.NewCollegeId = Declaration.PresentWorkingCollegeid;
                Facultydeclaration.Createdby = userId;
                db.jntuh_college_facultydeclaration.Add(Facultydeclaration);
                db.SaveChanges();
                TempData["SUCCESS"] = "Faculty declaration Saved Successfully";
                return RedirectToAction("FacultyDeclarationview", "NewOnlineRegistration", new { id = fid });

                string contents = string.Empty;

                StreamReader sr;
                //Read file from server path
                sr = System.IO.File.OpenText(Server.MapPath("~/Content/NOCFile.html"));

                //store content in the variable
                contents = sr.ReadToEnd();
                sr.Close();

                //contents = contents.Replace("##SOCIETY_ADDRESS##", CollegeSocietyAddress);
                return null;
            }
            catch (Exception ex)
            {

                throw ex;

            }

        }

        public ActionResult FacultydeclarationData(string strfacultyId, string reg)
        {
            if (!string.IsNullOrEmpty(strfacultyId))
            {
                int fid =
                    Convert.ToInt32(UAAAS.Models.Utilities.DecryptString(strfacultyId,
                        WebConfigurationManager.AppSettings["CryptoKey"]));
                // fid = 125662;
                string pdfPath = string.Empty;
                if (fid != 0 && reg != null)
                {
                    pdfPath = SaveFacultydeclarationDataPdf(fid, reg);
                    pdfPath = pdfPath.Replace("/", "\\");
                }
                return File(pdfPath, "application/pdf", reg + "-" + strfacultyId + ".pdf");
            }
            else
            {
                return RedirectToAction("LogOn", "Account");
            }
        }
        //int preview, 
        public string SaveFacultydeclarationDataPdf(int fid, string reg)
        {
            string fullPath = string.Empty;
            //Set page size as A4
            Document pdfDoc = new Document(PageSize.A4, 50, 50, 40, 40);
            string path = Server.MapPath("~/Content/PDFReports/temp/FacultyDeclaration");
            if (!Directory.Exists(Server.MapPath("~/Content/PDFReports/temp/FacultyDeclaration")))
            {
                Directory.CreateDirectory(Server.MapPath("~/Content/PDFReports/temp/FacultyDeclaration"));
            }
            const int DelayOnRetry = 3000;
            try
            {
                //if (preview == 0)
                //{
                fullPath = path + "/" + "FacultyDeclaration" + reg + DateTime.Now.ToString("yyyMMddHHmmss") + ".pdf"; //
                PdfWriter pdfWriter = PdfWriter.GetInstance(pdfDoc, new FileStream(fullPath, FileMode.Create));
                ITextEvents iTextEvents = new ITextEvents();
                iTextEvents.CollegeCode = reg;
                iTextEvents.CollegeName = reg;
                iTextEvents.formType = "Faculty Declaration";
                pdfWriter.PageEvent = iTextEvents;
                //}
            }
            catch (IOException e)
            {
                Thread.Sleep(DelayOnRetry);
            }

            //Open PDF Document to write data
            pdfDoc.Open();

            //Assign Html content in a string to write in PDF
            string contents = string.Empty;

            StreamReader sr;

            //Read file from server path
            sr = System.IO.File.OpenText(Server.MapPath("~/Content/FacultyDeclaration.html"));
            //store content in the variable
            contents = sr.ReadToEnd();
            sr.Close();
            contents = GetFacultyDeclarationData(fid, contents);
            //  contents = affiliationType(collegeId, contents);

            //Read string contents using stream reader and convert html to parsed conent
            var parsedHtmlElements = HTMLWorker.ParseToList(new StringReader(contents), null);
            //Get each array values from parsed elements and add to the PDF document
            bool pageRotated = false;
            int count = 0;
            foreach (var htmlElement in parsedHtmlElements)
            {
                count++;
                if (count == 100)
                {
                }
                if (htmlElement.Equals("<textarea>"))
                {
                    pdfDoc.NewPage();
                }

                if (htmlElement.Chunks.Count >= 3)
                {
                    if (htmlElement.Chunks.Count == 4)
                    {
                        pdfDoc.SetPageSize(iTextSharp.text.PageSize.A4.Rotate());
                        pdfDoc.SetMargins(60, 50, 50, 50);
                        pageRotated = true;
                    }
                    else
                    {
                        if (pageRotated == true)
                        {
                            pdfDoc.SetPageSize(iTextSharp.text.PageSize.A4);
                            pdfDoc.SetMargins(60, 50, 50, 50);
                            pageRotated = false;
                        }
                    }
                    pdfDoc.NewPage();
                }
                else
                {
                    pdfDoc.Add(htmlElement as IElement);
                }
            }

            //Close your PDF
            pdfDoc.Close();
            if (pdfDoc.IsOpen())
            {
                pdfDoc.Close();
            }

            string returnPath = string.Empty;
            returnPath = fullPath;
            return returnPath;
        }

        public string GetFacultyDeclarationData(int fid, string contents)
        {


            FacultyRegistration regFaculty = new FacultyRegistration();
            var facultydata = new jntuh_college_facultydeclaration();
            var regfacultydata = new jntuh_registered_faculty();
            var Colleges = new List<jntuh_college>();
            if (fid != 0)
            {
                facultydata = db.jntuh_college_facultydeclaration.Where(f => f.FacultyId == fid).FirstOrDefault();
                regfacultydata = db.jntuh_registered_faculty.Where(rf => rf.id == fid).FirstOrDefault();
                Colleges = db.jntuh_college.Where(c => c.isActive == true).ToList();
            }

            string contentdata = string.Empty;

            //contentdata += "<div>";
            //contentdata += "<p style='color:darkblue;font-family:inherit;text-align:center;font-size:13px;font-family:Times New Roman'>Jawaharlal Nehru Technological University Hyderabad</p>";
            //contentdata += "</div>";
            //contentdata += "<div><p style='color:darkblue;font-family:inherit;text-align:center;font-size:13px;font-family:Times New Roman'>Directorate of Affiliations & Academic Audit </p></div>";
            //contentdata += "<div><p style='color:darkblue;font-family:inherit;text-align:center;font-size:13px;font-family:Times New Roman'>Kukatpally, Hyderabad – 500 085, Telangana, India</p></div>";
            //contentdata += "<br/>";
            contentdata += "<div><p style='color:black;font-family:inherit;text-align:center;font-size:13px;font-family:Times New Roman'><u>DELCARATION BY THE FACULTY MEMBER</u></p></div>";
            contentdata += "<br/>";
            if (facultydata.FacultyType == 1)
            {
                contentdata += "<br/><table border='0'cellspacing='0' cellpadding='4'  width='100%' class='auto' style='font-size:10px;border-collapse:collapse'>";
                contentdata += "<tr><td  style='text-align:justify;line-height: 25px;'> " + "<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; I </span>  <u>" + regfacultydata.FirstName + " " + regfacultydata.LastName + "</u> with JNTUH Faculty Portal Registration Id.: <u>" + regfacultydata.RegistrationNumber + "</u> and bearing the <u>" + regfacultydata.PANNumber + "</u> hereby declare that, I am appointed as <u>" + facultydata.designation + "</u> in the department of <u>" + facultydata.department + "</u> and am still working in <u>" + Colleges.Where(c => c.id == facultydata.CollegeId).Select(c => c.collegeName).FirstOrDefault() + "</u> with College Code: <u>" + Colleges.Where(c => c.id == facultydata.CollegeId).Select(c => c.collegeCode).FirstOrDefault() + "</u> affiliated to JNTUH, Hyderabad only and not with any other Universities/Colleges/Organizations, from <u>" + facultydata.Dateofjoining.ToString().Split(' ')[0] + "</u> to" + "  <u>Till Date (i.e., " + facultydata.DateofReleving.ToString().Split(' ')[0] + "</u>). </td>";
                contentdata += "</tr>";
                contentdata += "</table>";
            }
            else if (facultydata.FacultyType == 2)
            {
                contentdata += "<br/><table border='0'cellspacing='0' cellpadding='4'  width='100%' class='auto' style='font-size:10px;border-collapse:collapse'>";
                string strNewcollegefrelevingdate = facultydata.Newcollegerelevingdate.ToString().Split(' ')[0];
                string strNewCollegeJoiningDate = facultydata.NewCollegeJoiningDate.ToString().Split(' ')[0];
                string strDateofjoining = facultydata.Dateofjoining.ToString().Split(' ')[0];
                string strDateofReleving = facultydata.DateofReleving.ToString().Split(' ')[0];
                contentdata += "<tr><td  style='text-align:justify;line-height: 25px;'>" + "<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; I </span>  <u>" + regfacultydata.FirstName + " " + regfacultydata.LastName + "</u> with JNTUH Faculty Portal Registration Id.: <u>" + regfacultydata.RegistrationNumber + "</u> and bearing the <u>" + regfacultydata.PANNumber + "</u> hereby declare that, I am appointed as <u>" + facultydata.designation + "</u> in the department of <u>" + facultydata.department + "</u> and worked in <u>" + Colleges.Where(c => c.id == facultydata.CollegeId).Select(c => c.collegeName).FirstOrDefault() + "</u> with College Code: <u>" + Colleges.Where(c => c.id == facultydata.CollegeId).Select(c => c.collegeCode).FirstOrDefault() + "</u> affiliated to JNTUH, Hyderabad only and not with any other Universities/Colleges/Organizations, from <u>" + facultydata.Dateofjoining.ToString().Split(' ')[0] + "</u> to<u>" + facultydata.DateofReleving.ToString().Split(' ')[0] + "</u> Presently, I am working in <u>" + Colleges.Where(c => c.id == facultydata.NewCollegeId).Select(c => c.collegeName).FirstOrDefault() + "</u> with College Code: <u>" + Colleges.Where(c => c.id == facultydata.NewCollegeId).Select(c => c.collegeCode).FirstOrDefault() + "</u> affiliated to JNTUH, Hyderabad, from <u>" + strNewCollegeJoiningDate.ToString().Split('/')[1] + "/" + strNewCollegeJoiningDate.Split('/')[0] + "/" + strNewCollegeJoiningDate.Split('/')[2] + "</u> to " + "  <u>Till Date (i.e., " + strNewcollegefrelevingdate.Split('/')[1] + "/" + strNewcollegefrelevingdate.Split('/')[0] + "/" + strNewcollegefrelevingdate.Split('/')[2] + "</u>). </td>";
                contentdata += "</tr>";
                contentdata += "</table>";
            }
            else if (facultydata.FacultyType == 3)
            {
                contentdata += "<br/><table border='0'cellspacing='0' cellpadding='4'  width='100%' class='auto' style='font-size:10px;border-collapse:collapse'>";
                contentdata += "<tr><td  style='text-align:justify;line-height: 25px;'>" + "<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; I </span>  <u>" + regfacultydata.FirstName + " " + regfacultydata.LastName + "</u> with JNTUH Faculty Portal Registration Id.: <u>" + regfacultydata.RegistrationNumber + "</u> and bearing the <u>" + regfacultydata.PANNumber + "</u> hereby declare that, I am appointed as <u>" + facultydata.designation + "</u> in the department of <u>" + facultydata.department + "</u> and worked in <u>" + Colleges.Where(c => c.id == facultydata.CollegeId).Select(c => c.collegeName).FirstOrDefault() + "</u> with College Code: <u>" + Colleges.Where(c => c.id == facultydata.CollegeId).Select(c => c.collegeCode).FirstOrDefault() + "</u> affiliated to JNTUH, Hyderabad only and not with any other Universities/Colleges/Organizations, from <u>" + facultydata.Dateofjoining.ToString().Split(' ')[0] + "</u> to <u>" + facultydata.DateofReleving.ToString().Split(' ')[0] + "</u> Presently, I am NOT WORKING in any organization / Institute as I left the College owing to the reason <u>" + facultydata.Reason + "</u></td>";
                contentdata += "</tr>";
                contentdata += "</table>";
            }



            contentdata += "<br/>";

            contentdata += "<table border='0'cellspacing='0' cellpadding='4'  width='100%' class='auto' style='font-size:10px;border-collapse:collapse'>";
            contentdata += "<tr><td style='text-align:justify;line-height: 25px;'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Further, I hereby declare that the information furnished by me are true and correct to the best of my knowledge. If any of the information is found to be false / incomplete / misleading and / or that have failed to disclose all the information and / or suppressed any information and / or misrepresent the information, I am liable to be prosecuted by the University.</td></tr>";
            contentdata += "</table>";

            contentdata += "<br/><table border='0'cellspacing='0' cellpadding='4'  width='100%' class='auto' style='font-size:10px;border-collapse:collapse'>";
            contentdata += "<tr><td style='text-align:left'><b>Name:</b></td><td style='text-align:left'><b>Signature:</b></td></tr>";
            contentdata += "</table>";

            contentdata += "<br/>";
            contentdata += "<table border='0'cellspacing='0' cellpadding='4'  width='100%' class='auto' style='font-size:10px;border-collapse:collapse'>";
            contentdata += "<tr><td style='text-align:left'><b>Place:</b></td><td style='text-align:left'><b>Date:</b></td></tr>";
            contentdata += "</table>";


            contents = contents.Replace("##Faculty_Declaration##", contentdata);
            return contents;
        }

        public ActionResult CheckdeclarationExperienceDates(int facultyId, string facultyDateOfAppointment, string facultyDateOfResignation, string Type)
        {
            MembershipUser userdata = Membership.GetUser(User.Identity.Name);

            if (userdata == null)
            {
                return RedirectToAction("FacultyExperience", "NewOnlineRegistration");
            }

            var status = false;
            var message = string.Empty;
            var userId = Convert.ToInt32(Membership.GetUser(User.Identity.Name).ProviderUserKey);

            var facultyid = db.jntuh_registered_faculty.Where(e => e.UserId == userId).Select(a => a.id).FirstOrDefault();
            if (facultyid == 113698)
            {
                facultyid = Convert.ToInt32(ConfigurationManager.AppSettings["FacultyId"]);
                userId = Convert.ToInt32(ConfigurationManager.AppSettings["FacultyUserId"]);
            }
            if (facultyDateOfAppointment != null && facultyDateOfResignation != null && Type == "1")
            {
                int Appointmentyear = Convert.ToInt32(facultyDateOfAppointment.Split('/')[2]);
                int Appointmentmonth = Convert.ToInt32(facultyDateOfAppointment.Split('/')[1]);
                int Appointmentdate = Convert.ToInt32(facultyDateOfAppointment.Split('/')[0]);

                DateTime DOA = new DateTime(Appointmentyear, Appointmentmonth, Appointmentdate);

                int Resignationyear = Convert.ToInt32(facultyDateOfResignation.Split('/')[2]);
                int Resignationmonth = Convert.ToInt32(facultyDateOfResignation.Split('/')[1]);
                int Resignationdate = Convert.ToInt32(facultyDateOfResignation.Split('/')[0]);

                DateTime DOR = new DateTime(Resignationyear, Resignationmonth, Resignationdate);

                if (DOA > DOR)
                {
                    status = true;
                    message = "End Date is not less than Start Date";
                    return Json(new { status = status, message = message }, JsonRequestBehavior.AllowGet);
                }

                return Json(new { status = false, message = message }, JsonRequestBehavior.AllowGet);
            }
            else if (facultyDateOfAppointment != null && facultyDateOfResignation != null && Type == "2")
            {
                int Appointmentyear = Convert.ToInt32(facultyDateOfAppointment.Split('/')[2]);
                int Appointmentmonth = Convert.ToInt32(facultyDateOfAppointment.Split('/')[1]);
                int Appointmentdate = Convert.ToInt32(facultyDateOfAppointment.Split('/')[0]);

                DateTime DOA = new DateTime(Appointmentyear, Appointmentmonth, Appointmentdate);

                int Resignationyear = Convert.ToInt32(facultyDateOfResignation.Split('/')[2]);
                int Resignationmonth = Convert.ToInt32(facultyDateOfResignation.Split('/')[1]);
                int Resignationdate = Convert.ToInt32(facultyDateOfResignation.Split('/')[0]);

                DateTime DOR = new DateTime(Resignationyear, Resignationmonth, Resignationdate);

                if (DOA > DOR)
                {
                    status = true;
                    message = "End Date is not less than Start Date";
                    return Json(new { status = status, message = message }, JsonRequestBehavior.AllowGet);
                }

                return Json(new { status = false, message = message }, JsonRequestBehavior.AllowGet);
            }
            return Json(new { status = true, message = "Please Select Date" }, JsonRequestBehavior.AllowGet);
        }

        #endregion
    }

    public class FacultyExperience
    {
        #region Present Institute
        [Required(ErrorMessage = "*")]
        public int? PresentCollegeid { get; set; }
        public int Id { get; set; }
        public string PresentCollegeCode { get; set; }
        public string PresentCollegeName { get; set; }

        [Required(ErrorMessage = "*")]
        public int? PresentDesignationId { get; set; }
        public string PresentDesignation { get; set; }
        public string PresentOtherDesignation { get; set; }

        [Required(ErrorMessage = "*")]
        [Display(Name = "Date of Appointment")]
        public string PresentfacultyDateOfAppointment { get; set; }

        [Required(ErrorMessage = "*")]
        public HttpPostedFileBase PresentJoiningOrder { get; set; }
        public string PresentfacultyJoiningDocument { get; set; }

        public string PresentCollegeTotalExperience { get; set; }
        public bool isActive { get; set; }
        public bool isSubmitted { get; set; }

        #endregion

        public int EId { get; set; }
        //College_Faculty CollegeId
        public int? FacultyCollegeid { get; set; }

        [Required(ErrorMessage = "*")]
        public int? Collegeid { get; set; }
        public string CollegeCode { get; set; }
        public string CollegeName { get; set; }
        public string OtherCollegeName { get; set; }
        [Required(ErrorMessage = "*")]
        public int facultyId { get; set; }
        public string RegistrationNumber { get; set; }
        public string Name { get; set; }
        public string firstName { get; set; }
        public string middleName { get; set; }
        public string lastName { get; set; }
        [Required(ErrorMessage = "*")]
        public int? DesignationId { get; set; }
        public string Designation { get; set; }
        public string OtherDesignation { get; set; }

        [Required(ErrorMessage = "*")]
        [Display(Name = "Date of Appointment")]
        public string facultyDateOfAppointment { get; set; }

        [Required(ErrorMessage = "*")]
        [Display(Name = "Date of Resignation")]
        public string facultyDateOfResignation { get; set; }

        public string TotalExperience { get; set; }

        [Required(ErrorMessage = "*")]
        public HttpPostedFileBase JoiningOrder { get; set; }
        public string facultyJoiningDocument { get; set; }
        [Required(ErrorMessage = "*")]
        public HttpPostedFileBase RelievingOrder { get; set; }
        public string facultyRelievingDocument { get; set; }

        public HttpPostedFileBase EditJoiningOrder { get; set; }
        public string EditfacultyJoiningDocument { get; set; }

        public HttpPostedFileBase EditRelievingOrder { get; set; }
        public string EditfacultyRelievingDocument { get; set; }

        public HttpPostedFileBase SCMDocument { get; set; }
        public string facultySCMDocument { get; set; }
        public string facultySalary { get; set; }
        public List<FacultyExperience> experiencelist { get; set; }
    }

    public class FacultySubjectsTaught
    {
        public int Id { get; set; }
        public int facultyId { get; set; }
        public string RegistrationNumber { get; set; }
        public string Name { get; set; }
        public string firstName { get; set; }
        public string middleName { get; set; }
        public string lastName { get; set; }
        [Required(ErrorMessage = "*")]
        public string facultySubjectsTaught { get; set; }
        [Required(ErrorMessage = "*")]
        public int? NoOfTimesSubjectsTaught { get; set; }
        public string ActionType { get; set; }
        public string Remarks { get; set; }
        public List<string> Subjects { get; set; }
        public List<string> TestingSubjects { get; set; }
        public List<FacultySubjectsTaught> SubjectTaughtList { get; set; }
    }

    public class FacultyDeclaration
    {
        public int FacultyId { get; set; }
        public int Facultytype { get; set; }
        public string RegistrationNumber { get; set; }
        public string Name { get; set; }
        public string Pannumber { get; set; }
        [Required(ErrorMessage = "*")]
        [Display(Name = "Select Present College Name")]
        public string CurrentlycollegeName { get; set; }
        public string collegeName { get; set; }
        public int? Collegeid { get; set; }
        [Required(ErrorMessage = "*")]
        [Display(Name = "Select Old College Name")]
        public string OldcollegeName { get; set; }
        public string NewcollegeName { get; set; }
        public int? OldCollegeid { get; set; }
        public int? PresentWorkingCollegeid { get; set; }
        public string FacultyDOJ { get; set; }
        public string FacultyReleving { get; set; }
        public string FacultyReleving1 { get; set; }
        public string FacultyNewleyDOJ { get; set; }
        public string FacultyNewReleving { get; set; }
        [Required(ErrorMessage = "*")]
        [Display(Name = "Select Faculty Type")]
        public string FacultyStatus { get; set; }
        public string Reason { get; set; }
        public string Designation { get; set; }
        public string Department { get; set; }
        [Required(ErrorMessage = "*")]
        public HttpPostedFileBase Declarationfile { get; set; }
        public string UploadedDeclaration { get; set; }
    }

    public class FacultyClass
    {
        public int FacultyId { get; set; }
        public string RegistrationNumber { get; set; }
        public string Name { get; set; }
        public string collegeName { get; set; }
        public int? Collegeid { get; set; }
        public string Experienceid { get; set; }
        public string subjectsid { get; set; }
        public string Educationid { get; set; }
        public string Experiencedate { get; set; }
        public string subjectsdate { get; set; }
        public string Educationdate { get; set; }
        public string BlackListFlag { get; set; }
        public string VerifivationFlag { get; set; }
        public string LastUpdatedOn { get; set; }
        public string PhdUploadid { get; set; }
        public string PhdUploaddate { get; set; }
    }

    public class FacultyMonthlyAttendance
    {
        public int? CollegeId { get; set; }
        public string Month { get; set; }
        public int? WorkingDays { get; set; }
        public int? HolidaysDays { get; set; }
        public int? PresentDays { get; set; }
        public decimal Percentage { get; set; }
    }

    public class PhDUpload
    {
        public int facultyId { get; set; }
        [Required(ErrorMessage = "*")]
        public string PhD_hallticketno { get; set; }
        public int PhD_educationId { get; set; }
        public string PhD_educationName { get; set; }
        [Required(ErrorMessage = "*")]
        public string PhD_studiedEducation { get; set; }
        [Required(ErrorMessage = "*")]
        public string PhD_specialization { get; set; }
        [Required(ErrorMessage = "*")]
        public Nullable<int> PhD_passedYear { get; set; }
        [Required(ErrorMessage = "*")]
        public Nullable<decimal> PhD_percentage { get; set; }
        [Required(ErrorMessage = "*")]
        public Nullable<int> PhD_division { get; set; }
        [Required(ErrorMessage = "*")]
        public string PhD_university { get; set; }
        [Required(ErrorMessage = "*")]
        public string PhD_place { get; set; }
        [Required(ErrorMessage = "*")]
        public HttpPostedFileBase PhD_certificate { get; set; }
        public string PhD_facultyCertificate { get; set; }

        public List<string> total_specializations { get; set; }
        // public List<string> pg_specializations { get; set; }

        public List<string> universitys { get; set; }
        public List<string> places { get; set; }
        public List<string> Courses { get; set; }

    }

    //public class faculty_edit_fieldnames
    //{
    //    public int facultyId { get; set; }
    //    public List<EditFields> EditCheckboxs { get; set; }
    //}
    //public class EditFields
    //{
    //    public int Id { get; set; }
    //    public int FieldId { get; set; }
    //    public string Field { get; set; }
    //    public string FieldDesc { get; set; }
    //    public bool? isEditable { get; set; }
    //    public bool isSelect { get; set; }
    //    public string requestReason { get; set; }
    //    public short? isApproved { get; set; }
    //    public string createddate { get; set; }
    //}

}
