@model IList<UAAAS.Models.AdminLand>
@{
    ViewBag.Title = "AdministrativeAreaDataEntry";
}

<h2>Administrative Area Data Entry</h2>
<script>
    $(document).ready(function () {
        $('#collegeId').change(function () {
            // alert();
            var collegeId = $(this).val();
            //alert(collegeId)

            if ($('#collegeId').val() != '') {
                window.location = '/DataEntry/AdministrativeAreaDataEntry?collegeid=' + collegeId;
            }
            else {
                window.location = '/DataEntry/AdministrativeAreaDataEntry';
            }
        });
    });


    //function validate() {
    //    var availableRoomsResult = true;
    //    var availableAreaResult = true;
    
    //    $('.InstructionalLand > tbody  > tr').each(function () {
    //        var availableRooms = $(this).find('#aRooms').val();
    //        var availableArea = $(this).find('#aArea').val();

    //        if (availableArea != '') {
    //            if (availableArea != "0") {
    //                if (availableRooms == '' || availableRooms == "0") {
    //                    alert("Please Enter Available Rooms");
    //                    $(this).find("#aRooms").css({
    //                        "background": "#FC6A6C"
    //                    });
    //                    availableRoomsResult = false;
    //                }
    //                else {
    //                    $(this).find("#aRooms").css({
    //                        "background": "#FFFFFF"
    //                    });
    //                }
    //            }
    //        }
    //        if (availableRooms != '') {
    //            if (availableRooms != "0") {
    //                if (availableArea == '' || availableArea == "0") {
    //                    alert("Please Enter Available Area");
    //                    $(this).find("#aArea").css({
    //                        "background": "#FC6A6C"
    //                    });
    //                    availableAreaResult = false;
    //                }
    //                else {
    //                    $(this).find("#aArea").css({
    //                        "background": "#FFFFFF"
    //                    });
    //                }
    //            }
    //        }
    //    });
    //    return availableRoomsResult && availableAreaResult;
    //}

    function validate() {
            var cfRoomsResult = true;
            var cfAreaResult = true;
        $('.InstructionalLand > tbody  > tr').each(function () {
            var cfRooms = $(this).find('#cfRooms').val();
            var cfArea = $(this).find('#cfArea').val();

            if (cfArea != '') {
                if (cfArea != "0") {
                    if (cfRooms == '' || cfRooms == "0") {
                        alert("Please Enter Available Rooms");
                        $(this).find("#cfRooms").css({
                            "background": "#FC6A6C"
                        });
                        cfRoomsResult = false;
                    }
                    else {
                        $(this).find("#cfRooms").css({
                            "background": "#FFFFFF"
                        });
                    }
                }
            }
            if (cfRooms != '') {
                if (cfRooms != "0") {
                    if (cfArea == '' || cfArea == "0") {
                        alert("Please Enter Available Area");
                        $(this).find("#cfArea").css({
                            "background": "#FC6A6C"
                        });
                        cfAreaResult = false;
                    }
                    else {
                        $(this).find("#cfArea").css({
                            "background": "#FFFFFF"
                        });
                    }
                }
            }
        });
        return cfRoomsResult && cfAreaResult;
    }

</script>


<table class="four_columns">
    <tr>
        <td class="col1">
            <span>College</span>
        </td>
        <td class="col2" colspan="4">
            @Html.DropDownList("collegeId",
                              new SelectList(ViewBag.Colleges as System.Collections.IEnumerable, "collegeId", "collegeName"),
                              "--Select--", new { id = "collegeId" })
        </td>
    </tr>

</table>
<br />
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    if (ViewBag.NotUpload == true)
    {
        <span class="notUpload">You can not upload data Please contact Affiliations & Academic Audit if you want to upload</span>
    }
    else
    {
        if (TempData["Error"] != null)
        {
            <div class="error">
                <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
            </div>
        }
        if (TempData["Success"] != null)
        {
            <div class="success">
                <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
            </div>
        }

        if (@Model.Count > 0)
        {
            <table class="downloads_table InstructionalLand" style="width: 100%;">
                <tr style="font-weight: bold;">
                    <th style="text-align: left; width: 20%;">Type</th>
                    @*<th style="text-align: center; width: 10%;">Program</th>*@
                    <th style="text-align: center; width: 10%;">Available Rooms</th>
                    <th style="text-align: center; width: 10%;">CF Rooms</th>
                    <th style="text-align: center; width: 10%;">Available Area</th>
                    <th style="text-align: center; width: 10%;">CF Area</th>
                </tr>

                @for (int i = 0; i < ViewBag.Count; i++)
                {
                    <tr>
                        <td style="text-align: left;" class="col1">
                            @Html.LabelFor(m => m[i].requirementType, Model[i].requirementType == null ? string.Empty : Model[i].requirementType.ToString())
                            @Html.HiddenFor(m => m[i].id)
                            @Html.HiddenFor(m => m[i].collegeId)
                            @Html.HiddenFor(m => m[i].availableRooms)
                            @Html.HiddenFor(m => m[i].availableArea)
                            @*@{var formated = String.Format("{0:0}", Model[i].availableRooms);}*@
                        </td>
                        @*<td style="text-align: center;">@Html.LabelFor(m => m[i].programId, Model[i].jntuh_program_type == null ? string.Empty : Model[i].jntuh_program_type.programType.ToString())</td>*@
                        <td style="text-align: center;">@Html.DisplayFor(m => m[i].availableRooms, new { id = "aRooms", @class = "allownumericwithdecimal", @style = "width: 60px; text-align: center;", Value = Model[i].availableRooms.ToString().Replace(".00", "") })</td>
                        <td style="text-align: center;">@Html.TextBoxFor(m => m[i].cfRooms, new { id = "cfRooms", @class = "allownumericwithdecimal", @style = "width: 60px; text-align: center;", Value = Model[i].cfRooms.ToString().Replace(".00", "") })</td>
                        <td style="text-align: center;">@Html.DisplayFor(m => m[i].availableArea, new { id = "aArea", @class = "allownumericwithdecimal", @style = "width: 60px; text-align: center;", Value = Model[i].availableArea.ToString().Replace(".00", "") })</td>
                        <td style="text-align: center;">@Html.TextBoxFor(m => m[i].cfArea, new { id = "cfArea", @class = "allownumericwithdecimal", @style = "width: 60px; text-align: center;", Value = Model[i].cfArea.ToString().Replace(".00", "") })</td>
                    </tr>
                }
            </table>
            <p class="right_buttons">
                <input type="submit" value="Save" onclick="return validate();" />
            </p>
        }

    }
}