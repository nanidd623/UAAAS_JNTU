@model IEnumerable<UAAAS.Models.FacultyRegistration>
@{
    ViewBag.Title = "Faculty Verification";
    var index = 1;
}
<script type="text/javascript">
    var asInitVals = new Array();
    $(document).ready(function () {
        var mainUrl = window.location;
        var url;

        /* Initialize table and make first column non-sortable*/
        var oTable = $('#example').dataTable({
            "bJQueryUI": true,
            "iDisplayLength": 500,
            "bStateSave": false,
            "sDom": '<"top"lfip>rt<"bottom"ip<"clear">',
            //"sPaginationType": "full_numbers",
            "oLanguage": {
                "sSearch": "Search all columns:",
                "oPaginate": {
                    "sFirst": "",
                    "sLast": "",
                    "sNext": "",
                    "sPrevious": ""
                }
            },
            "fnInitComplete": function () {
                var oSettings = $('#example').dataTable().fnSettings();
                for (var i = 0 ; i < oSettings.aoPreSearchCols.length ; i++) {
                    if (oSettings.aoPreSearchCols[i].sSearch.length > 0) {
                        $("tfoot input")[i].value = oSettings.aoPreSearchCols[i].sSearch;
                        $("tfoot input")[i].className = "";
                    }
                }
            },
            "aoColumns": [{ "bSortable": true, "bSearchable": true }, null, null, null, null, null, null, null, null, null,null],
            //"aoColumns": [{ type: "select", values: ['Gecko', 'Trident', 'KHTML', 'Misc', 'Presto', 'Webkit', 'Tasman'] },{ type: "text" },null,{ type: "number" },{ type: "select" }]
        });
        /*
         * Support functions to provide a little bit of 'user friendlyness' to the textboxes in
         * the footer
         */
        $("tfoot input").each(function (i) {
            asInitVals[i] = this.value;
        });
        $("tfoot input").focus(function () {
            if (this.className == "search_init") {
                this.className = "";
                this.value = "";
            }
        });
        $("tfoot input").blur(function (i) {
            if (this.value == "") {
                this.className = "search_init";
                this.value = asInitVals[$("tfoot input").index(this)];
            }
        });

        $("tfoot input").keyup(function () {
            /* Filter on the column (the index) of this element */
            oTable.fnFilter(this.value, $("tfoot input").index(this));
        });

        $('#collegeId').change(function () {
           // alert();
            var collegeId = $(this).val();
            //alert(collegeId)

            if ($('#collegeId').val() != '') {
                window.location = '/FacultyVerification/Index?collegeid=' + collegeId;
            }
            else {
                window.location = '/FacultyVerification/Index';
            }
        });

        $.ajaxSetup({ cache: false });
        var $myDialog = $("#dialog-edit").dialog({
            title: 'Add/Edit Department',
            autoOpen: false,
            resizable: false,
            height: 200,
            width: 640,
            show: { effect: 'drop', direction: "up" },
            modal: true,
            draggable: true,
            closeOnEscape: true,
            open: function (event, ui) {
                $(this).load(url);
            },
            close: function (event, ui) {
                $(this).dialog("close");
            }
        });

        $(".viewDialog").live("click", function (e) {
            var url = $(this).attr('href');
            $("#dialog-view").dialog({
                title: 'Deactivate Faculty',
                autoOpen: false,
                resizable: false,
                height: 500,
                width: 500,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: true,
                open: function (event, ui) {
                    $(this).load(url);

                },
                buttons: {
                    "Close": function () {
                        $(this).dialog("close");

                    }
                },
                close: function (event, ui) {
                    $(this).dialog('close');
                }
            });

            $("#dialog-view").dialog('open');
            return false;
        });

        $("#openDialog").live("click", function (e) {
            e.preventDefault();
            $("#dialog-edit").dialog({
                title: 'Add Faculty'
            });
            url = $("#openDialog").attr('href');
            $myDialog.dialog('open');
            return false;
        });

        $('#example').find('tr').click(function () {
            url = $(this).find(".editDialog").attr('href');
        });

        $(".editDialog").live("click", function (e) {
            e.preventDefault();
            $("#dialog-edit").dialog({
                title: 'Edit Department'
            });

            $myDialog.dialog('open');
            return false;
        });

        $("#btncancel").live("click", function (e) {
            $("#dialog-edit").dialog("close");
        });

        $($myDialog).bind("dialogclose", function () {
            window.location = mainUrl;
        });
    });
</script>


<table class="four_columns">
    <tr>
        <td class="col1">
            <span>College</span>
        </td>
        <td class="col2" colspan="4">
            @Html.DropDownList("collegeId",
                              new SelectList(ViewBag.Colleges as System.Collections.IEnumerable, "collegeId", "collegeName"),
                              "--Select--", new { id = "collegeId" })
        </td>
    </tr>

</table>

<br />
@using (Html.BeginForm())
{
    if (TempData["Error"] != null)
    {
        <div class="error">
            <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
        </div>
    }
    if (TempData["Success"] != null)
    {
        <div class="success">
            <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
        </div>
    }

    @*if (Request.Params["collegeid"] != null)
    {
        <p class="create_link_right">
            @Html.ActionLink("Add Teaching Faculty", "AddEditCollegeFaculty", "FacultyVerification", new { collegeId = Request.Params["collegeid"], activate = 1 }, new { @id = "openDialog", @class = "create_button" })
        </p>
    }*@

    <table id="example" class="display">
        <thead>
            <tr>
                <th style="width: 50px; text-align: center;">
                    S.No
                </th>
                <th style="width: 140px; text-align: center;">
                    Registration ID
                </th>
                <th style="width: 100px; text-align: center;">
                    Type
                </th>
                <th style="text-align: left;">
                    Full Name
                </th>
                <th style="width: 120px; text-align: center;">
                    Department
                </th>
                <th style="width: 120px; text-align: center;">
                    PG Specialization
                </th>
                <th style="width: 120px; text-align: center;">
                    Degree
                </th>
                <th style="width: 120px; text-align: center;">
                    PAN Number
                </th>
                <th style="width: 150px; text-align: center;">
                    Aadhaar Number
                </th>
                <th style="width: 80px; text-align: center;">
                    Photo
                </th>
                <th style="width: 80px; text-align: center;">
                    Verification
                </th>
                <th class="ui-state-default" style="width: 50px;">View</th>
                @*<th class="ui-state-default" style="width: 50px;">Edit</th>
                <th class="ui-state-default" style="width: 80px;">De-activate</th>
                @if (User.IsInRole("Admin"))
                {
                    <th class="ui-state-default" style="width: 80px;">Re-activate</th>
                }*@
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.OrderByDescending(f => f.createdOn).ToList())
            {
                string color = string.Empty;
                if (item.createdOn > Convert.ToDateTime("06/26/2015 12:00"))
                {
                    color = "lightgreen";
                }

                <tr>
                    <td style="text-align: center; vertical-align: middle; background-color:@color; border-bottom: 1px solid #fff;">
                        @(index++)
                    </td>
                    <td style="text-align: center; text-transform: uppercase; vertical-align: middle;">
                        @Html.DisplayFor(modelItem => item.RegistrationNumber)
                    </td>
                    <td style="text-align: center; text-transform: uppercase; vertical-align: middle;">
                        @if (item.Type.ToUpper() == "EXISTFACULTY")
                        { <span style="color: green;">Existing</span>}
                        @*else if (item.Type.ToUpper() == "ADJUNCT")
                        {
                             <span style="color: orange;">Adjunct</span>                                        
                        }*@
                        else
                        { <span style="color: red;">New</span>}
                    </td>
                    <td style="vertical-align: middle; text-transform: uppercase; text-align: left;">
                        @Html.DisplayFor(modelItem => item.FirstName)
                        @Html.DisplayFor(modelItem => item.MiddleName)
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td style="text-align: left; vertical-align: middle;">
                        @Html.DisplayFor(modelItem => item.department)
                    </td>
                    <td style="text-align: left; vertical-align: middle;">
                        <span>
                            @if (item.jntuh_registered_faculty_education.Count() != 0)
                            {
                                @item.jntuh_registered_faculty_education.Where(e => e.jntuh_education_category.educationCategoryName == "PG").Select(e => new { name = e.courseStudied + "-" + e.specialization }).Select(e => e.name).FirstOrDefault()
                            }
                        </span>
                    </td>
                    <td style="text-align: left; vertical-align: middle;">
                        <span>
                            @if (item.jntuh_registered_faculty_education.Count() != 0)
                            {
                                @item.jntuh_registered_faculty_education.LastOrDefault().courseStudied
                            }
                        </span>
                    </td>

                    @if (item.SamePANNumberCount > 1)
                    {
                        <td style="text-align: center; vertical-align: middle; color: red;">
                            @Html.DisplayFor(modelItem => item.PANNumber)
                        </td>
                    }
                    else
                    {
                        <td style="text-align: center; vertical-align: middle;">
                            @Html.DisplayFor(modelItem => item.PANNumber)
                        </td>
                    }
                    @if (item.SameAadhaarNumberCount > 1)
                    {
                        <td style="text-align: center; vertical-align: middle; color: red;">
                            @Html.DisplayFor(modelItem => item.AadhaarNumber)
                        </td>
                    }
                    else
                    {
                        <td style="text-align: center; vertical-align: middle;">
                            @Html.DisplayFor(modelItem => item.AadhaarNumber)
                        </td>
                    }
                    <td style="text-align: center; vertical-align: middle;">
                        @if (@item.facultyPhoto != null)
                        {
                            <img src="../Content/Upload/Faculty/Photos/@item.facultyPhoto.Replace("~", "")" style="height: 50px;" />
                        }
                        else
                        {
                            <img src="../Content/Images/no-photo.gif" style="height: 50px;" />
                        }
                    </td>
                    <td style="text-align: center; vertical-align: middle; font-weight: normal; font-style: italic;">
                        @if (@item.isVerified == true)
                        {
                            <span style="color: green;">YES</span>
                        }
                        else
                        {
                            <span style="color: red;">NO</span>
                        }
                    </td>
                    <td style="text-align: center; vertical-align: middle;">
                        @Html.ActionLink("View", "FacultyVerification", "FacultyVerification", new { fid = UAAAS.Models.Utilities.EncryptString(item.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]), collegeid = Request.Params["collegeid"] }, new { @class = "view_button", target = "_blank" })
                    </td>
                    @*<td style="text-align: center; vertical-align: middle;">
                        @Html.ActionLink("Edit", "EditDepartment", "FacultyVerification", new { fid = UAAAS.Models.Utilities.EncryptString(item.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]), collegeid = Request.Params["collegeid"] }, new { @class = "editDialog edit_button" })
                    </td>

                    @if (item.isApproved == false || item.isApproved == true)
                    {
                        <td style="text-align: center; vertical-align: middle;" title="@item.DeactivationReason">
                           
                        </td>
                    }
                    else
                    {
                        <td style="text-align: center; vertical-align: middle;">
                            @Html.ActionLink("De-activate", "DeactivateFaculty", "FacultyVerification", new { fid = UAAAS.Models.Utilities.EncryptString(item.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]), collegeid = Request.Params["collegeid"] }, new { @class = "viewDialog delete_button" })
                        </td>
                    }

                    @if (User.IsInRole("Admin"))
                    {
                        <td style="text-align: center; vertical-align: middle;">
                            @if (item.isApproved == false)
                            {
                                @Html.ActionLink("Re-activate", "ReactivateFaculty", "FacultyVerification", new { fid = UAAAS.Models.Utilities.EncryptString(item.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]), collegeid = Request.Params["collegeid"] }, new { @class = "deactivate_button", title = @item.DeactivationReason })
                            }
                        </td>
                    }*@
                </tr>
            }
        </tbody>
        <tfoot>
        <th>
            <input type="text" id="i-0" style="width: 80%; text-align: left; display: none;" class="search_init">
        </th>
        <th>
            <input type="text" id="i-1" style="width: 90%; text-align: center;" class="search_init">
        </th>
        <th>
            <input type="text" id="i-2" style="width: 90%; text-align: center;" class="search_init">
        </th>
        <th>
            <input type="text" id="i-3" style="width: 90%; text-align: left;" class="search_init">
        </th>
        <th class=" ui-state-default">
            <input type="text" id="i-4" style="width: 90%; text-align: center" class="search_init">
        </th>
        <th class=" ui-state-default">
            <input type="text" id="i-5" style="width: 90%; text-align: center;" class="search_init">
        </th>
        <th class=" ui-state-default">
            <input type="text" id="i-6" style="width: 90%; text-align: center;" class="search_init">
        </th>
        <th class=" ui-state-default">
            <input type="text" id="i-7" style="width: 90%; text-align: left;" class="search_init">
        </th>
        <th class=" ui-state-default">
            <input type="text" id="i-8" style="width: 90%; text-align: left;" class="search_init">
        </th>
        <th class=" ui-state-default">
            <input type="text" id="i-9" style="width: 90%; text-align: left;" class="search_init">
        </th>
        <th class=" ui-state-default">
            <input type="text" id="i-10" style="width: 90%; text-align: left; display: none;" class="search_init">
        </th>
       <th class=" ui-state-default">
            <input type="text" id="i-11" style="width: 90%; text-align: left; display: none;" class="search_init">
        </th>
        @*<th class=" ui-state-default">
        <input type="text" id="i-111" style="width: 90%; text-align: left; display: none;" class="search_init">
    </th>
    @if (User.IsInRole("Admin"))
    {
        <th class=" ui-state-default">
            <input type="text" id="i-12" style="width: 90%; text-align: left; display: none;" class="search_init">
        </th>
    }*@
        </tfoot>
    </table>
    <div id="dialog-confirm" style="display: none">
        <p>
            <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
            Are you sure to delete ?
        </p>
    </div>
    <div id="dialog-edit" style="display: none">
    </div>
    <div id="dialog-view" style="display: none">
    </div>
}



