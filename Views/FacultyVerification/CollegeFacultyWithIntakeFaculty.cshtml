@model IList<UAAAS.Controllers.FacultyVerificationController.CollegeFacultyWithIntakeReport>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>

@using UAAAS.Models;
@{
    //Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    uaaasDBContext db = new uaaasDBContext();
    var jntuh_degree = db.jntuh_degree.ToList();
    ViewBag.Title = "SUBMISSION OF ONLINE APPEAL";
    int sno = 1;
    int num = 1;
    int intakenum = 1;
    int Labscount = 0;
    int collegeid = 0;
    string Reveficationscreenshot = string.Empty;
    string SCMApprovalLetter = string.Empty;
    string Form16ApprovalLetter = string.Empty;
}
<script type="text/javascript">
    $(document).ready(function () {

        var mainUrl = window.location;
        var url;
        $('#college').change(function () {
            var collegeId = $(this).val();
            //alert(collegeId);

            if ($('#college').val() != '') {
                window.location = '/FacultyVerification/CollegeFacultyWithIntake?collegeId=' + collegeId;
            }
            else {
                window.location = '/FacultyVerification/CollegeFacultyWithIntake';
            }
        });

        //For collegeintake scripts

        $('.subtUpload').click(function () {

            var filename = $('.fileUploadcheck').val();
            var path = $('.viewFileData').attr("href");
            if ((filename == '' || filename == undefined)) {
                alert('Please select file');
                return false;
            }

        });


        var $myIntakeDialog = $("#dialog-appeal-edit").dialog({
            title: 'Add/Edit Existing Intake',
            autoOpen: false,
            resizable: false,
            height: 610,
            width: 800,
            show: { effect: 'drop', direction: "up" },
            modal: true,
            draggable: true,
            closeOnEscape: true,
            open: function (event, ui) {
                $(this).load(url);
            },
            close: function (event, ui) {
                $(this).dialog("close");
            }
        });


        $('.full_table').find('tr').click(function () {
            url = $(this).find(".editintakeDialog").attr('href');
        });

        $(".editintakeDialog").live("click", function (e) {
            e.preventDefault();
            $("#dialog-appeal-edit").dialog({
                title: 'Edit Existing Intake'
            });

            $myIntakeDialog.dialog('open');
            return false;
        });

        $(".confirmIntakeDialog").live("click", function (e) {

            var url = $(this).attr('href');
            $("#dialog-confirm").dialog({
                title: 'Delete Existing Intake',
                autoOpen: false,
                resizable: false,
                height: 170,
                width: 350,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: true,
                buttons: {
                    "Yes": function () {
                        $(this).dialog("close");
                        window.location = url;

                    },
                    "No": function () {
                        $(this).dialog("close");

                    }
                }
            });
            $("#dialog-confirm").dialog('open');
            return false;
        });


        $("#btncancel").live("click", function (e) {
            $("#dialog-appeal-edit").dialog("close");
        });

        $($myIntakeDialog).bind("dialogclose", function () {
            window.location = mainUrl;
        });

        //$("#tabla").find('tfoot').append($('<td><b>Total</b></td><td>a</td><td>b</td>'));

        //For appeal SCM DOCS

        function GetAppealSCMApprovalLetterfileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject"); var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#SCMApprovalLetter")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            }
            catch (e) {

                //alert("Error is : " + e);
            }
        }


        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            }
            else {
                return strName[0];
            }
        }

        $(function () {
            $(".AppealSCMApprovalLetterfile").change(function () {

                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {

                        case 'pdf':
                        case 'PDF':

                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    //$(".AppealSCMApprovalLetterfiles > span").text("You can upload only  PDF files");
                    alert("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                }
                else {
                    var size = GetAppealSCMApprovalLetterfileSize(file);
                    size = size / 1048576;
                    if (size > 1) {
                        $(".AppealSCMApprovalLetterfiles > span").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    }
                    else {

                        $(".AppealSCMApprovalLetterfiles > span").text("");
                    }
                }

            });
        });


        //For appeal SCM DOCS

        function GetAppealForm16ApprovalLetterfileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject"); var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#Form16ApprovalLetter")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            }
            catch (e) {

                //alert("Error is : " + e);
            }
        }


        $(function () {
            $(".AppealForm16ApprovalLetterfile").change(function () {

                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {

                        case 'pdf':
                        case 'PDF':

                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    //$(".AppealForm16ApprovalLetterfiles > span").text("You can upload only  PDF files");
                    alert("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                }
                else {
                    var size = GetAppealForm16ApprovalLetterfileSize(file);
                    size = size / 1048576;
                    if (size > 1) {
                        $(".AppealForm16ApprovalLetterfiles > span").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    }
                    else {

                        $(".AppealForm16ApprovalLetterfiles > span").text("");
                    }
                }

            });
        });


    });

    var mainUrl = window.location;

    $('.webGrid').find('tr').click(function () {
        //url = $(this).find(".editDialog").attr("typei");
        url = "/FacultyVerification/FacultyRegistrationNumber";
        alert(url);
    });

    $(".editDialog").live("click", function (e) {
        e.preventDefault();
        var collegeId = $('input[type=checkbox]:checked').attr('collegeId');
        var deficencycount = $('input[type=checkbox]:checked').attr('deficencycount');
        var degree = $('input[type=checkbox]:checked').attr('degree');
        var departmentid = $('input[type=checkbox]:checked').attr('departmentid');
        var specializationid = $('input[type=checkbox]:checked').attr('specializationid');
        var url = "/FacultyVerification/FacultyRegistrationNumber?collegeId=" + collegeId + "&deficencycount=" + deficencycount + "&degree=" + degree + "&departmentid=" + departmentid + "&specializationid=" + specializationid;
        //var url = "/FacultyVerification/FacultyRegistrationNumber";specializationid
        $("#dialog-edit").dialog({
            title: 'Add New Faculty Appointed',
            resizable: false,
            height: 410,
            width: 850,
            show: { effect: 'drop', direction: "up" },
            modal: true,
            draggable: true,
            closeOnEscape: true,
            open: function (event, ui) {
                debugger;
                $(this).load(url);
            },
            close: function (event, ui) {
                $(this).dialog("close");
            }
        });
        $myDialog.dialog('open');
        return false;
    });

    $(".editdefDialog").live("click", function (e) {
        e.preventDefault();
        debugger;

        //var collegeId = $(this).attr('href').split('?')[1].split('&')[0].split('=')[1];
        //var deficencycount = $(this).attr('href').split('?')[1].split('&')[1].split('=')[1];
        //var degree = $(this).attr('href').split('?')[1].split('&')[2].split('=')[1];
        //var departmentid = $(this).attr('href').split('?')[1].split('&')[3].split('=')[1].substring(0, 1);
        var collegeId = $('input[type=checkbox]:checked').attr('collegeId');
        var deficencycount = $('input[type=checkbox]:checked').attr('deficencycount');
        var degree = $('input[type=checkbox]:checked').attr('degree');
        var departmentid = $('input[type=checkbox]:checked').attr('departmentid');
        var specializationid = $('input[type=checkbox]:checked').attr('specializationid');
        var url = "/FacultyVerification/AppealReverification?collegeId=" + collegeId + "&deficencycount=" + deficencycount + "&degree=" + degree + "&departmentid=" + departmentid + "&specializationid=" + specializationid;
        $("#dialog-edit").dialog({
            title: 'Appeal for Reverification ',
            resizable: false,
            height: 150,
            width: 850,
            show: { effect: 'drop', direction: "up" },
            modal: true,
            draggable: true,
            closeOnEscape: true,
            open: function (event, ui) {
                $(this).load(url);
            },
            close: function (event, ui) {
                $(this).dialog("close");
            }
        });
        $myDialog.dialog('open');
        return false;
    });



    $(".editreverificationDialog").live("click", function (e) {
        e.preventDefault();
        debugger;

        var CollegeId = $('input[type=checkbox]:checked').attr('collegeId');
        var deficencycount = $('input[type=checkbox]:checked').attr('deficencycount');
        var degree = $('input[type=checkbox]:checked').attr('degree');
        var departmentid = $('input[type=checkbox]:checked').attr('departmentid');
        var specializationid = $('input[type=checkbox]:checked').attr('specializationid');
        var url = "/FacultyVerification/AppealReverificationFaculty?collegeId=" + CollegeId + "&deficencycount=" + deficencycount + "&degree=" + degree + "&departmentid=" + departmentid + "&specializationid=" + specializationid;
        window.open(url);
        //$("#dialog-edit").dialog({
        //    title: 'Appeal for Reverification ',
        //    resizable: false,
        //    height: 150,
        //    width: 850,
        //    show: { effect: 'drop', direction: "up" },
        //    modal: true,
        //    draggable: true,
        //    closeOnEscape: true,
        //    open: function (event, ui) {
        //        $(this).load(url);
        //    },
        //    close: function (event, ui) {
        //        $(this).dialog("close");
        //    }
        //});
        //$myDialog.dialog('open');
        //return false;
    });


    $(".editlabDialog").live("click", function (e) {
        debugger;
        e.preventDefault();
        var url;

        var eqipid1 = $('input[type=radio]:checked').attr("eqpid");
        var id = $('input[type=radio]:checked').attr("id");
        var eqpno = $('input[type=radio]:checked').attr("eqpno");
        url = "/FacultyVerification/AddEditRecord?eqpid=" + eqipid1 + "&id=" + id + "&eqpno=" + eqpno;
        $("#dialog-edit").dialog({
            title: 'Add Lab Details',
            resizable: false,
            height: 750,
            width: 750,
            show: { effect: 'drop', direction: "up" },
            modal: true,
            draggable: true,
            closeOnEscape: true,
            open: function (event, ui) {

                $(this).load(url);
            },
            close: function (event, ui) {
                window.location.reload();
            }
        });
        $myDialog.dialog('open');
        return false;
    });
    $(".editAppcmpDialog").live("click", function (e) {
        debugger;
        e.preventDefault();
        var url;

        var eqipid1 = $('input[type=radio]:checked').attr("eqpid");
        var id = $('input[type=radio]:checked').attr("id");
        var eqpno = $('input[type=radio]:checked').attr("eqpno");
        url = "/FacultyVerification/AddEditRecordReverification?eqpid=" + eqipid1 + "&id=" + id + "&eqpno=" + eqpno;
        $("#Appealcpldialog-edit").dialog({
            title: 'Add Lab Details',
            resizable: false,
            height: 750,
            width: 750,
            show: { effect: 'drop', direction: "up" },
            modal: true,
            draggable: true,
            closeOnEscape: true,
            open: function (event, ui) {

                $(this).load(url);
            },
            close: function (event, ui) {
                window.location.reload();
            }
        });
        $myDialog.dialog('open');
        return false;
    });


    $(".editprinpalcomplicanceDialog").live("click", function (e) {
        e.preventDefault();
        var collegeId = $('input[type=checkbox]:checked').attr('collegeId');
        var deficencycount = $('input[type=checkbox]:checked').attr('deficencycount');
        var degree = $('input[type=checkbox]:checked').attr('degree');
        var departmentid = $('input[type=checkbox]:checked').attr('departmentid');
        var specializationid = $('input[type=checkbox]:checked').attr('specializationid');
        var url = "/FacultyVerification/PrincipalFacultyRegistrationNumber?collegeId=" + collegeId + "&deficencycount=" + deficencycount + "&degree=" + degree + "&departmentid=" + departmentid + "&specializationid=" + specializationid;
        //var url = "/FacultyVerification/FacultyRegistrationNumber";specializationid
        $("#dialog-edit").dialog({
            title: 'Principal Appeal For Complicance',
            resizable: false,
            height: 410,
            width: 850,
            show: { effect: 'drop', direction: "up" },
            modal: true,
            draggable: true,
            closeOnEscape: true,
            open: function (event, ui) {
                debugger;
                $(this).load(url);
            },
            close: function (event, ui) {
                $(this).dialog("close");
            }
        });
        $myDialog.dialog('open');
        return false;
    });

    $(".editprincipalverificationDialog").live("click", function (e) {
        e.preventDefault();
        debugger;

        //var collegeId = $(this).attr('href').split('?')[1].split('&')[0].split('=')[1];
        //var deficencycount = $(this).attr('href').split('?')[1].split('&')[1].split('=')[1];
        //var degree = $(this).attr('href').split('?')[1].split('&')[2].split('=')[1];
        //var departmentid = $(this).attr('href').split('?')[1].split('&')[3].split('=')[1].substring(0, 1);
        var collegeId = $('input[type=checkbox]:checked').attr('collegeId');
        var deficencycount = $('input[type=checkbox]:checked').attr('deficencycount');
        var degree = $('input[type=checkbox]:checked').attr('degree');
        var departmentid = $('input[type=checkbox]:checked').attr('departmentid');
        var specializationid = $('input[type=checkbox]:checked').attr('specializationid');
        var registrationnumber = '@ViewBag.PrincipalRegno';
        var url = "/FacultyVerification/PrincipalAppealReverification?collegeId=" + collegeId + "&deficencycount=" + deficencycount + "&degree=" + degree + "&departmentid=" + departmentid + "&registrationnumber=" + registrationnumber;
        $("#dialog-edit").dialog({
            title: 'Principal Appeal for Reverification ',
            resizable: false,
            height: 200,
            width: 850,
            show: { effect: 'drop', direction: "up" },
            modal: true,
            draggable: true,
            closeOnEscape: true,
            open: function (event, ui) {
                $(this).load(url);
            },
            close: function (event, ui) {
                $(this).dialog("close");
            }
        });
        $myDialog.dialog('open');
        return false;
    });

    var $myDialog = $("#dialog-edit").dialog({
        title: 'Add/Edit Lab',
        autoOpen: false,
        resizable: false,
        height: 700,
        width: 720,
        show: { effect: 'drop', direction: "up" },
        modal: true,
        draggable: true,
        closeOnEscape: true,
        open: function (event, ui) {
            debugger;
            $(this).load(url);
        },
        close: function (event, ui) {
            $(this).dialog("close");

        }
    });

    $($myDialog).bind("dialogclose", function () {
        window.location = mainUrl;
    });



</script>
<h2 style="text-align: center"><b>SUBMISSION OF ONLINE APPEAL (Faculty - step 2/5)</b></h2><br />

@if (TempData["Error"] != null)
{
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
}

@if (TempData["Success"] != null)
{
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
}
<p style="text-align:right">
    @Html.ActionLink("View Added Faculty", "CollegeFacultyAddedDetails", "FacultyVerification", new { @class = "create_button", @target = "_blank" })
</p>

@using (Html.BeginForm("", "", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    @*//For PharmacyfacultyView*@
    <h2>Deficiency Report</h2>
    <table style="width: 100%; border: 1px; border-color: red" class="faculty_table">
        <tr>

            <th class="col2" style="text-align: left; vertical-align: top;" rowspan="2">Department</th>
            <th class="col2" style="text-align: left; vertical-align: top;" rowspan="2">Degree</th>
            <th class="col2" style="text-align: left; vertical-align: top;" rowspan="2">Specialization</th>
            @*<th class="col1" style="text-align: center; vertical-align: top; " rowspan="2">ShiftId</th>*@
            @*<th class="col1" style="text-align: center; vertical-align: top;" >Intake</th>*@
            <th class="col2" style="text-align: center; vertical-align: top;" rowspan="2">Total Intake</th>
            <th class="col2" style="text-align: center; vertical-align: top;" rowspan="2">Pharmacy Faculty Specialization</th>
            <th class="col2" style="text-align: center; vertical-align: top;" rowspan="2"></th>
            <th class="col2" style="text-align: center; vertical-align: top;" rowspan="2">Required Faculty SubGroup</th>
            <th class="col2" style="text-align: center; vertical-align: top;" rowspan="2">SubGroup</th>
            <th class="col2" style="text-align: center; vertical-align: top;" rowspan="2">Pharmacy Deficiency</th>
            @*<th class="col2" style="text-align: center; vertical-align: top;" rowspan="2">Minimum Faculty Requirement Program Wise</th>*@
            @*<th class="col1" style="text-align: center; vertical-align: top; color: red" rowspan="2">Total Faculty Requirement</th>*@
            @*<th class="col2" style="text-align: center; vertical-align: top;" rowspan="2">Total Faculty Specialization Wise</th>*@

            @*<th class="col1" style="text-align: center; vertical-align: top;" rowspan="2">Adjusted Faculty</th>*@
        </tr>
        <tr>
            @*<th class="col1" style="text-align: right; vertical-align: top;">V Year</th>
                <th class="col1" style="text-align: right; vertical-align: top;">IV Year</th>
                <th class="col1" style="text-align: right; vertical-align: top;">III Year</th>
                <th class="col1" style="text-align: right; vertical-align: top;">II Year</th>
                <th class="col1" style="text-align: right; vertical-align: top;">I Year</th>*@

            @*<th class="col1" style="text-align: center; vertical-align: top;">No. Of Faculty with UG</th>
                <th class="col1" style="text-align: center; vertical-align: top;">No. Of Faculty with PG</th>
                <th class="col1" style="text-align: center; vertical-align: top;">No. Of Faculty with Ph.D</th>
                <th class="col1" style="text-align: center; vertical-align: top;">Total Faculty</th>
                <th class="col1" style="text-align: center; vertical-align: top;">No. of faculty without PAN and Aadhaar</th>

                <th class="col1" style="text-align: center; vertical-align: top; color: red">Whether minimum requirement met</th>
                <th class="col1" style="text-align: left; vertical-align: top; color: red; min-width: 80px !important;">Deficiency</th>
                <th class="col1" style="text-align: center; vertical-align: top; color: red;">Shortage</th>*@
        </tr>
        <tbody>
            @foreach (var collegeId in Model.Select(c => c.collegeId).Distinct().ToList())
            {
                var count = Model.Where(m => m.collegeId == collegeId).Select(m => m).Count();
                var list = Model.FirstOrDefault().FacultyWithIntakeReports.Where(c => c.collegeId == collegeId && c.shiftId == 1).ToList();
                var distDeptcount = 1;
                var distSpeccount = 1;
                var distsubgroupcount = 1;
                var pharmddistsubgroupcount = 1;
                var pharmadpbdistsubgroupcount = 1;
                var deptloop = 1;
                var specloop = 1;
                var subgrouploop = 1;
                decimal departmentWiseRequiredFaculty = 0;

                string[] departments = new string[] { "English", "Mathematics", "Physics", "Chemistry", "Others" };
                int totalBtechFirstYearIntake = list.Where(d => d.Degree == "B.Tech").Select(d => d.approvedIntake1).Sum();
                var firstYearRequired = Math.Ceiling((double)totalBtechFirstYearIntake / 120);
                int remainingFaculty = 0;
                int remainingPHDFaculty = 0;
                var remainingphramdFaculty = 0;
                for (int i = 0; i < list.Count(); i++)
                {

                    @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].id)
                    @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].collegeId)
                    @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].specializationId)
                    @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].shiftId)

                    distDeptcount = list.Where(d => d.Department == list[i].Department).Distinct().Count();

                    distSpeccount = list.Where(d => d.Specialization == list[i].Specialization).Distinct().Count();

                    distsubgroupcount = list.Where(d => d.BPharmacySubGroup1Count == list[i].BPharmacySubGroup1Count && d.PharmacySubGroup1 == list[i].PharmacySubGroup1).Distinct().Count();

                    pharmddistsubgroupcount = list.Where(d => d.Specialization == list[i].Specialization && d.PharmacySubGroup1 == list[i].PharmacySubGroup1).Distinct().Count();

                    pharmadpbdistsubgroupcount = list.Where(d => d.Specialization == "Pharm.D PB").Distinct().Count();

                    int indexnow = list.IndexOf(list[i]);

                    if (indexnow > 0 && list[indexnow].Department != list[indexnow - 1].Department)
                    {
                        deptloop = 1;
                    }
                    if (indexnow > 0 && list[indexnow].Specialization != list[indexnow - 1].Specialization)
                    {
                        specloop = 1;
                    }

                    if (indexnow > 0 && list[indexnow].PharmacySubGroup1 != list[indexnow - 1].PharmacySubGroup1 && list[i].Specialization == "B.Pharmacy")
                    {
                        subgrouploop = 1;
                    }
                    if (indexnow > 0 && list[indexnow].PharmacySubGroup1 != list[indexnow - 1].PharmacySubGroup1 && list[i].Specialization == "Pharm.D PB")
                    {
                        subgrouploop = 1;
                    }
                    else if (list[i].Specialization == "Pharm.D")
                    {
                        subgrouploop = 1;
                    }
                    departmentWiseRequiredFaculty = list.Where(d => d.Department == list[i].Department).Select(d => d.requiredFaculty).Sum();

                    string minimumRequirementMet = string.Empty;
                    int facultyShortage = 0;
                    int adjustedFaculty = 0;
                    int adjustedPHDFaculty = 0;

                    int tFaculty = (int)Math.Ceiling(Convert.ToDecimal(list[i].totalFaculty));
                    int rFaculty = (int)Math.Ceiling(list[i].requiredFaculty);

                    if (departments.Contains(list[i].Department))
                    {
                        rFaculty = (int)firstYearRequired;
                        departmentWiseRequiredFaculty = (int)firstYearRequired;
                    }

                    var degreeType = jntuh_degree.Where(d => d.degree == list[i].Degree).Select(d => d.jntuh_degree_type.degreeType).FirstOrDefault();


                    if (list[i].Degree == "Pharm.D")//&& @ViewBag.BpharmcyCondition == "No"
                    {
                        tFaculty = list[i].totalcollegefaculty;
                        rFaculty = (int)Math.Ceiling(@ViewBag.BpharmacyrequiredFaculty);

                        var pharmadreqfaculty = (int)Math.Ceiling(list[i].pharmadrequiredfaculty);
                        if (deptloop == 1)
                        {
                            if (tFaculty >= rFaculty && ((tFaculty - rFaculty) >= pharmadreqfaculty))
                            {
                                minimumRequirementMet = "YES";
                                adjustedFaculty = tFaculty - rFaculty;

                                if (adjustedFaculty > pharmadreqfaculty)
                                {
                                    remainingphramdFaculty = adjustedFaculty - pharmadreqfaculty;
                                    adjustedFaculty = pharmadreqfaculty;
                                }
                            }
                            else
                            {
                                remainingphramdFaculty = tFaculty - rFaculty;
                            }
                        }
                    }

                    if (list[i].Degree == "Pharm.D PB")//&& @ViewBag.BpharmcyCondition == "No" && @ViewBag.PharmaDCondition == "No"
                    {
                        tFaculty = list[i].totalcollegefaculty;
                        rFaculty = (int)Math.Ceiling(@ViewBag.BpharmacyrequiredFaculty);

                        var pharmadpbreqfaculty = (int)Math.Ceiling(list[i].pharmadPBrequiredfaculty);
                        if (deptloop == 1)
                        {
                            if (tFaculty >= rFaculty && ((tFaculty - rFaculty) >= pharmadpbreqfaculty))
                            {
                                minimumRequirementMet = "YES";
                                adjustedFaculty = tFaculty - rFaculty;

                                if (remainingphramdFaculty > pharmadpbreqfaculty)
                                {
                                    adjustedFaculty = pharmadpbreqfaculty;
                                    remainingphramdFaculty = remainingphramdFaculty - pharmadpbreqfaculty;
                                }
                                else
                                {
                                    adjustedFaculty = remainingphramdFaculty;
                                }
                            }
                        }
                    }



                    if (list[i].Degree == "B.Pharmacy" && indexnow > 0 && list[indexnow].PharmacySubGroup1 != list[indexnow - 1].PharmacySubGroup1 && list[i].PharmacySubGroup1 != "SubGroup6")
                    {
                        tFaculty = (int)Math.Ceiling(Convert.ToDecimal(list[i].BPharmacySubGroup1Count));
                        rFaculty = list[i].BPharmacySubGroupRequired;
                        if (deptloop == 1)
                        {
                            if (rFaculty <= tFaculty)
                            {
                                minimumRequirementMet = "YES";
                                remainingFaculty = tFaculty - rFaculty;
                                adjustedFaculty = rFaculty;
                            }
                            else
                            {
                                minimumRequirementMet = "NO";
                                adjustedFaculty = tFaculty;
                                facultyShortage = rFaculty - tFaculty;
                            }

                            remainingPHDFaculty = list[i].phdFaculty;

                            if (remainingPHDFaculty > 0 && degreeType.Equals("PG"))
                            {
                                adjustedPHDFaculty = 1;
                                remainingPHDFaculty = remainingPHDFaculty - 1;
                            }
                        }
                        else
                        {
                            if (rFaculty <= remainingFaculty && tFaculty >= rFaculty)
                            {
                                minimumRequirementMet = "YES";
                                remainingFaculty = remainingFaculty + (tFaculty - rFaculty);
                                adjustedFaculty = rFaculty;
                            }
                            else if (tFaculty >= rFaculty)
                            {
                                minimumRequirementMet = "NO";
                                adjustedFaculty = rFaculty;
                                facultyShortage = rFaculty - remainingFaculty;
                                //remainingFaculty = 0;
                            }
                            else if (tFaculty < rFaculty)
                            {
                                minimumRequirementMet = "NO";
                                adjustedFaculty = tFaculty;
                                remainingFaculty = remainingFaculty - tFaculty;
                            }
                            if (remainingPHDFaculty > 0 && degreeType.Equals("PG"))
                            {
                                adjustedPHDFaculty = 1;
                                remainingPHDFaculty = remainingPHDFaculty - 1;
                            }
                        }

                    }

                    else if (list[i].Degree == "B.Pharmacy" && indexnow == 0 && list[i].PharmacySubGroup1 != "SubGroup6")
                    {
                        tFaculty = (int)Math.Ceiling(Convert.ToDecimal(list[i].BPharmacySubGroup1Count));
                        rFaculty = list[i].BPharmacySubGroupRequired;
                        if (deptloop == 1)
                        {
                            if (rFaculty <= tFaculty)
                            {
                                minimumRequirementMet = "YES";
                                remainingFaculty = tFaculty - rFaculty;
                                adjustedFaculty = rFaculty;
                            }
                            else
                            {
                                minimumRequirementMet = "NO";
                                adjustedFaculty = tFaculty;
                                facultyShortage = rFaculty - tFaculty;
                            }

                            remainingPHDFaculty = list[i].phdFaculty;

                            if (remainingPHDFaculty > 0 && degreeType.Equals("PG"))
                            {
                                adjustedPHDFaculty = 1;
                                remainingPHDFaculty = remainingPHDFaculty - 1;
                            }
                        }
                        else
                        {
                            if (rFaculty <= remainingFaculty && tFaculty >= rFaculty)
                            {
                                minimumRequirementMet = "YES";
                                remainingFaculty = remainingFaculty - rFaculty;
                                adjustedFaculty = rFaculty;
                            }
                            else if (tFaculty >= rFaculty)
                            {
                                minimumRequirementMet = "NO";
                                adjustedFaculty = remainingFaculty;
                                facultyShortage = rFaculty - remainingFaculty;
                                remainingFaculty = 0;
                            }
                            else if (tFaculty < rFaculty)
                            {
                                minimumRequirementMet = "NO";
                                adjustedFaculty = tFaculty;
                                //remainingFaculty = remainingFaculty - tFaculty;
                            }




                            if (remainingPHDFaculty > 0 && degreeType.Equals("PG"))
                            {
                                adjustedPHDFaculty = 1;
                                remainingPHDFaculty = remainingPHDFaculty - 1;
                            }
                        }

                    }


                    else if (list[i].Degree == "M.Pharmacy" && list[i].PharmacyspecializationWiseFaculty >= 1)
                    {
                        //tFaculty = (int)Math.Ceiling(Convert.ToDecimal(list[i].specializationWiseFaculty));
                        if (remainingphramdFaculty > 0)
                        {
                            tFaculty = remainingphramdFaculty;
                        }
                        else
                        {
                            tFaculty = remainingFaculty;
                        }
                        rFaculty = (int)Math.Ceiling(list[i].requiredFaculty);


                        if (rFaculty <= tFaculty && remainingphramdFaculty > 0)
                        {
                            //minimumRequirementMet = "YES";
                            remainingphramdFaculty = remainingphramdFaculty - rFaculty;
                            adjustedFaculty = rFaculty;
                        }
                        else if (rFaculty <= tFaculty && remainingphramdFaculty == 0 && remainingFaculty > 0)
                        {
                            // minimumRequirementMet = "NO";
                            remainingFaculty = remainingFaculty - rFaculty;
                            adjustedFaculty = rFaculty;
                        }

                        else if (tFaculty <= rFaculty && remainingphramdFaculty > 0)
                        {
                            remainingphramdFaculty = remainingphramdFaculty - rFaculty;
                            adjustedFaculty = tFaculty;
                        }
                        else if (tFaculty <= rFaculty && remainingphramdFaculty == 0 && remainingFaculty > 0)
                        {
                            remainingFaculty = remainingFaculty - rFaculty;
                            adjustedFaculty = tFaculty;
                        }
                        if (remainingPHDFaculty > 0 && degreeType.Equals("PG"))
                        {
                            adjustedPHDFaculty = 1;
                            remainingPHDFaculty = remainingPHDFaculty - 1;
                        }
                    }




                    if (@list[i].Degree == "M.Pharmacy" && list[i].PharmacyspecializationWiseFaculty >= 1)//&& @adjustedFaculty == rFaculty
                    {
                        if (@ViewBag.BpharmcyCondition == "No" && @ViewBag.PharmaDCondition == "No" && @ViewBag.PharmaDPBCondition == "No")
                        {
                            list[i].BPharmacySubGroupMet = "No";
                        }
                        else if (@ViewBag.BpharmcyCondition == "No" && @ViewBag.PharmaDCondition == "No" && @ViewBag.PharmDPBrequiredFaculty == 0)
                        {
                            list[i].BPharmacySubGroupMet = "No";
                        }
                        else
                        {
                         //list[i].BPharmacySubGroupMet = "Yes";
                            if (@list[i].specializationId == 116)
                            {
                                int UGRfFaculty = list[1].approvedIntake1 >= 100 ? 6 : 5;
                                int PAQAAvilableFaculty = list.Where(F => F.specializationId == @list[i].specializationId).Select(F => F.AvailableFaculty).FirstOrDefault();
                                int PharmaChemistryAvilableFaculty = list.Where(F => F.specializationId == 117).Select(F => F.AvailableFaculty).FirstOrDefault();
                                int QAAvilableFaculty = list.Where(F => F.specializationId == 122).Select(F => F.AvailableFaculty).FirstOrDefault();
                                int PGRfFaculty = (int)Math.Ceiling(list.Where(F => F.specializationId == @list[i].specializationId).Select(F => F.requiredFaculty).FirstOrDefault());
                                int TotalFaculty = (PharmaChemistryAvilableFaculty + QAAvilableFaculty) - UGRfFaculty;
                                if (TotalFaculty >= 0)
                                {
                                    if (PAQAAvilableFaculty >= PGRfFaculty)
                                    {
                                        //remainingFaculty = remainingFaculty - rFaculty;
                                        //adjustedFaculty = rFaculty;
                                        //remainingmpharmacyfaculty = remainingmpharmacyfaculty - rFaculty;
                                        list[i].BPharmacySubGroupMet = "No";
                                    }
                                    else
                                    {
                                        //remainingFaculty = remainingFaculty;
                                        //adjustedFaculty = 0;
                                        //remainingmpharmacyfaculty = remainingmpharmacyfaculty;
                                        list[i].BPharmacySubGroupMet = "Yes";
                                    }
                                }
                                else if (TotalFaculty < 0)
                                {
                                    if ((PAQAAvilableFaculty - TotalFaculty) >= PGRfFaculty)
                                    {
                                        //remainingFaculty = remainingFaculty - rFaculty;
                                        //adjustedFaculty = rFaculty;
                                        //remainingmpharmacyfaculty = remainingmpharmacyfaculty - rFaculty;
                                        list[i].BPharmacySubGroupMet = "No";
                                    }
                                    else
                                    {
                                        //remainingFaculty = remainingFaculty;
                                        //adjustedFaculty = 0;
                                        //remainingmpharmacyfaculty = remainingmpharmacyfaculty;
                                        list[i].BPharmacySubGroupMet = "Yes";
                                    }
                                }
                            }
                            else
                            {
                                int UGRfFaculty = 0;
                                //int specializationId = @list[i].specializationId;
                                if (@list[i].specializationId == 120)
                                {
                                    UGRfFaculty = list[0].approvedIntake1 >= 100 ? 6 : 4;
                                }
                                else if (@list[i].specializationId == 116 || @list[i].specializationId == 117 || @list[i].specializationId == 124)
                                {
                                    UGRfFaculty = list[0].approvedIntake1 >= 100 ? 6 : 5;
                                }
                                else if (@list[i].specializationId == 122)
                                {
                                    UGRfFaculty = list[0].approvedIntake1 >= 100 ? 5 : 4;
                                }
                                else if (@list[i].specializationId == 121)
                                {
                                    UGRfFaculty = list[0].approvedIntake1 = 3;
                                }

                                int AvilableFaculty = list.Where(F => F.specializationId == list[i].specializationId).Select(F => F.AvailableFaculty).FirstOrDefault();
                                int PGRfFaculty = (int)Math.Ceiling(list.Where(F => F.specializationId == @list[i].specializationId).Select(F => F.requiredFaculty).FirstOrDefault());
                                int TotalFaculty = list.Where(F => F.specializationId == 122).Select(F => F.totalFaculty).FirstOrDefault();
                                // int TotalFaculty1= Math.Round(PGRfFaculty, 2);
                                if (AvilableFaculty >= (UGRfFaculty + PGRfFaculty))
                                {
                                    //remainingFaculty = remainingFaculty - rFaculty;
                                    //adjustedFaculty = rFaculty;
                                    //remainingmpharmacyfaculty = remainingmpharmacyfaculty - rFaculty;
                                    list[i].BPharmacySubGroupMet = "No";
                                }
                                else
                                {
                                    //remainingFaculty = remainingFaculty;
                                    //adjustedFaculty = 0;
                                    //remainingmpharmacyfaculty = remainingmpharmacyfaculty;
                                    list[i].BPharmacySubGroupMet = "Yes";
                                }

                            }

                        }
                        //list[i].BPharmacySubGroupMet = "No";
                    }
                    else if (@list[i].Degree == "M.Pharmacy" && list[i].totalIntake == 0)
                    {
                        list[i].BPharmacySubGroupMet = "No";
                    }
                    else if (@list[i].Degree == "M.Pharmacy" && list[i].PharmacyspecializationWiseFaculty < 1)
                    {
                        list[i].BPharmacySubGroupMet = "Yes";
                    }
                    else if (@list[i].Degree == "M.Pharmacy")
                    {
                        list[i].BPharmacySubGroupMet = "Yes";
                    }

                    if (list.IndexOf(list[i]) == 0)
                    {
                        <tr>
                            <td class="col1" style="text-align: left; vertical-align: top;" rowspan="@distDeptcount">@list[i].Department</td>
                            <td class="col1" style="text-align: left; vertical-align: top;">@list[i].Degree</td>
                            <td class="col1" style="text-align: left; vertical-align: top;" rowspan="@distSpeccount">@list[i].Specialization</td>
                            @*<td class="col2" style="text-align: center; vertical-align: top; ">@list[i].shiftId</td>*@
                            @*@if (list[i].PharmacyGroup1 != "Group1")
                                {
                                    <td class="col2" style="text-align: right; vertical-align: top;">@list[i].approvedIntake5</td>
                                    <td class="col2" style="text-align: right; vertical-align: top;">@list[i].approvedIntake4</td>
                                    <td class="col2" style="text-align: right; vertical-align: top;">@list[i].approvedIntake3</td>
                                    <td class="col2" style="text-align: right; vertical-align: top;">@list[i].approvedIntake2</td>
                                    <td class="col2" style="text-align: right; vertical-align: top;">@list[i].approvedIntake1</td>
                                }
                                else
                                {
                                    <td class="col2" style="text-align: right; vertical-align: top;"></td>
                                    <td class="col2" style="text-align: right; vertical-align: top;"></td>
                                    <td class="col2" style="text-align: right; vertical-align: top;"></td>
                                    <td class="col2" style="text-align: right; vertical-align: top;"></td>
                                    <td class="col2" style="text-align: right; vertical-align: top;"></td>
                                }*@
                            @if (departments.Contains(list[i].Department))
                            {
                                if (list[i].PharmacyGroup1 != "Group1")
                                {
                                    <td class="col1" style="text-align: right; vertical-align: top;">@totalBtechFirstYearIntake</td>
                                }
                                else
                                {
                                    <td class="col1" style="text-align: right; vertical-align: top;"></td>
                                }

                                if (list[i].Specialization == "B.Pharmacy")
                                {
                                    <td class="col1" style="text-align: right; vertical-align: top;">@list[i].PharmacySpec1</td>
                                    <td class="col1" style="text-align: right; vertical-align: top;">@list[i].PharmacyspecializationWiseFaculty</td>
                                    <td class="col1" style="text-align: right; vertical-align: top; font-weight: bold;" rowspan="@distsubgroupcount">@list[i].BPharmacySubGroupRequired</td>
                                    <td class="col1" style="text-align: right; vertical-align: top; color: red; font-weight: bold; " rowspan="@distsubgroupcount">@list[i].BPharmacySubGroup1Count</td>
                                }
                                else
                                {
                                    <td class="col1" style="text-align: right; vertical-align: top;"></td>
                                    <td class="col1" style="text-align: right; vertical-align: top;"></td>
                                    <td class="col1" style="text-align: right; vertical-align: top;"></td>
                                }
                                <td class="col1" style="text-align: right; vertical-align: middle; color: red; font-weight: bold;" rowspan="@distSpeccount">@list[i].BPharmacySubGroupMet</td>
                                <td class="col1" style="text-align: right; vertical-align: top;">@Math.Ceiling(firstYearRequired)</td>
                            }
                            else
                            {
                                if (list[i].PharmacyGroup1 != "Group1")
                                {
                                    <td class="col1" style="text-align: right; vertical-align: top;">@list[i].totalIntake</td>
                                }
                                else
                                {
                                    <td class="col1" style="text-align: right; vertical-align: top;"></td>
                                }

                                if (list[i].Specialization == "B.Pharmacy")
                                {
                                    @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].PharmacySpec1)
                                    @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].PharmacyspecializationWiseFaculty)
                                    @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].BPharmacySubGroup1Count)
                                    <td class="col1" style="text-align: left; vertical-align: top;">@list[i].PharmacySpec1</td>
                                    <td class="col1" style="text-align: right; vertical-align: top;">@list[i].PharmacyspecializationWiseFaculty</td>
                                    if (subgrouploop == 1)
                                    {
                                        <td class="col1" style="text-align: right; vertical-align: top; font-weight: bold;" rowspan="@distsubgroupcount">@list[i].BPharmacySubGroupRequired</td>
                                        <td class="col1" style="text-align: right; vertical-align: top; color: red; font-weight: bold; " rowspan="@distsubgroupcount">@list[i].BPharmacySubGroup1Count</td>
                                    }
                                }
                                else if (list[i].Specialization == "Pharm.D" || list[i].Specialization == "Pharm.D PB")
                                {
                                    @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].PharmacySpec1)
                                    @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].PharmacyspecializationWiseFaculty)
                                    @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].BPharmacySubGroup1Count)
                                    <td class="col1" style="text-align: left; vertical-align: top;">@list[i].PharmacySpec1</td>
                                    <td class="col1" style="text-align: right; vertical-align: top;">@list[i].PharmacyspecializationWiseFaculty</td>
                                    if (subgrouploop == 1)
                                    {
                                        <td class="col1" style="text-align: right; vertical-align: top; font-weight: bold;" rowspan="@pharmddistsubgroupcount">@list[i].BPharmacySubGroupRequired</td>
                                        <td class="col1" style="text-align: right; vertical-align: top; color: red; font-weight: bold; " rowspan="@pharmddistsubgroupcount">@list[i].BPharmacySubGroup1Count</td>
                                    }
                                }
                                else
                                {
                                    @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].PharmacySpec1)
                                    <td class="col1" style="text-align: left; vertical-align: top;">@list[i].PharmacySpec1</td>
                                    <td class="col1" style="text-align: right; vertical-align: top;">@list[i].PharmacyspecializationWiseFaculty</td>
                                    if (subgrouploop == 1)
                                    {
                                        @*<td class="col2" style="text-align: right; vertical-align: top; font-weight: bold;" rowspan="@distsubgroupcount">@list[i].BPharmacySubGroupRequired</td>
                                            <td class="col2" style="text-align: right; vertical-align: top; color: red; font-weight: bold; " rowspan="@distsubgroupcount">@list[i].BPharmacySubGroup1Count</td>*@
                                        <td class="col1" style="text-align: right; vertical-align: top; font-weight: bold;">@list[i].BPharmacySubGroupRequired</td>
                                        <td class="col1" style="text-align: right; vertical-align: top; color: red; font-weight: bold;">@list[i].BPharmacySubGroup1Count</td>
                                    }
                                }

                                <td class="col1" style="text-align: right; vertical-align: middle; color: red; font-weight: bold; " rowspan="@distSpeccount">@list[i].BPharmacySubGroupMet</td>
                                @*if (list[i].PharmacyGroup1 == null)
                                    {
                                        <td class="col1" style="text-align: right; vertical-align: top;">@Math.Ceiling(list[i].requiredFaculty)</td>
                                    }
                                    else
                                    {
                                        <td class="col1" style="text-align: right; vertical-align: top;"></td>
                                    }*@
                            }

                            @*<td class="col2" style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@Math.Ceiling(departmentWiseRequiredFaculty)</td>*@

                            @*@if (list[i].PharmacyGroup1 == null)
                                {
                                    <td class="col1" style="text-align: center; vertical-align: top;">
                                        @Html.DisplayFor(m => m[0].FacultyWithIntakeReports[i].specializationWiseFaculty, new { @placeholder = "", style = "text-align: right;" })
                                    </td>
                                }
                                else
                                {
                                    <td class="col1" style="text-align: right; vertical-align: top;"></td>
                                }*@

                            @*<td class="col2" style="text-align: center; vertical-align: top;">
                                    <span>@adjustedFaculty</span>
                                </td>*@

                        </tr>
                    }
                    else
                    {
                        <tr>
                            @if (deptloop == 1)
                            {

                                <td class="col1" style="text-align: left; vertical-align: top;" rowspan="@distDeptcount">@list[i].Department</td>
                            }

                            <td class="col1" style="text-align: left; vertical-align: top;">@list[i].Degree</td>
                            @if (specloop == 1)
                            {

                                <td class="col1" style="text-align: left; vertical-align: top;" rowspan="@distSpeccount">@list[i].Specialization</td>
                            }

                            @*<td class="col2" style="text-align: center; vertical-align: top;">@list[i].shiftId</td>*@
                                @*@if (list[i].PharmacyGroup1 != "Group1")
                                    {
                                        <td class="col2" style="text-align: right; vertical-align: top;">@list[i].approvedIntake5</td>
                                        <td class="col2" style="text-align: right; vertical-align: top;">@list[i].approvedIntake4</td>
                                        <td class="col2" style="text-align: right; vertical-align: top;">@list[i].approvedIntake3</td>
                                        <td class="col2" style="text-align: right; vertical-align: top;">@list[i].approvedIntake2</td>
                                        <td class="col2" style="text-align: right; vertical-align: top;">@list[i].approvedIntake1</td>
                                    }
                                    else
                                    {
                                        <td class="col2" style="text-align: right; vertical-align: top;"></td>
                                        <td class="col2" style="text-align: right; vertical-align: top;"></td>
                                        <td class="col2" style="text-align: right; vertical-align: top;"></td>
                                        <td class="col2" style="text-align: right; vertical-align: top;"></td>
                                        <td class="col2" style="text-align: right; vertical-align: top;"></td>
                                    }*@

                                @if (departments.Contains(list[i].Department))
                                {
                                    if (list[i].PharmacyGroup1 != "Group1")
                                    {
                                        <td class="col1" style="text-align: right; vertical-align: top;">@totalBtechFirstYearIntake</td>
                                    }
                                    else
                                    {
                                        <td class="col1" style="text-align: right; vertical-align: top;"></td>
                                    }

                                    if (list[i].Specialization == "B.Pharmacy")
                                    {
                                        @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].PharmacySpec1)
                                        <td class="col1" style="text-align: right; vertical-align: top;">@list[i].PharmacySpec1</td>
                                        <td class="col1" style="text-align: right; vertical-align: top;">@list[i].PharmacyspecializationWiseFaculty</td>
                                        if (subgrouploop == 1)
                                        {
                                            <td class="col1" style="text-align: right; vertical-align: top; font-weight: bold;" rowspan="@distsubgroupcount">@list[i].BPharmacySubGroupRequired</td>
                                            <td class="col1" style="text-align: right; vertical-align: top; color: red; font-weight: bold; " rowspan="@distsubgroupcount">@list[i].BPharmacySubGroup1Count</td>
                                        }

                                    }
                                    else
                                    {
                                        <td class="col1" style="text-align: right; vertical-align: top;"></td>
                                        <td class="col1" style="text-align: right; vertical-align: top;"></td>
                                        <td class="col1" style="text-align: right; vertical-align: top;"></td>
                                        <td class="col1" style="text-align: right; vertical-align: top;"></td>
                                    }
                                    if (specloop == 1)
                                    {
                                        <td class="col1" style="text-align: right; vertical-align: middle; color: red; font-weight: bold; " rowspan="@distSpeccount">@list[i].BPharmacySubGroupMet</td>
                                    }
                                    <td class="col1" style="text-align: right; vertical-align: top;">@Math.Ceiling(firstYearRequired)</td>
                                }
                                else
                                {
                                    if (list[i].PharmacyGroup1 != "Group1")
                                    {
                                        <td class="col1" style="text-align: right; vertical-align: top;">@list[i].totalIntake</td>
                                    }
                                    else
                                    {
                                        <td class="col1" style="text-align: right; vertical-align: top;"></td>
                                    }

                                    @*<td class="col2" style="text-align: right; vertical-align: top;" rowspan="@distSpeccount">@list[i].PharmacySpec1</td>*@
                                    if (list[i].Specialization == "B.Pharmacy")
                                    {
                                        @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].PharmacySpec1)
                                        @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].PharmacyspecializationWiseFaculty)
                                        @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].BPharmacySubGroup1Count)
                                        <td class="col1" style="text-align: left; vertical-align: top;">@list[i].PharmacySpec1</td>
                                        <td class="col1" style="text-align: right; vertical-align: top;">@list[i].PharmacyspecializationWiseFaculty</td>
                                        if (subgrouploop == 1)
                                        {
                                            <td class="col1" style="text-align: right; vertical-align: top; font-weight: bold;" rowspan="@distsubgroupcount">@list[i].BPharmacySubGroupRequired</td>
                                            <td class="col1" style="text-align: right; vertical-align: top; color: red; font-weight: bold; " rowspan="@distsubgroupcount">@list[i].BPharmacySubGroup1Count</td>
                                        }

                                        if (specloop == 1)
                                        {
                                            <td class="col1" style="text-align: right; vertical-align: middle; color: red; font-weight: bold;" rowspan="@distSpeccount">@list[i].BPharmacySubGroupMet</td>
                                        }
                                    }
                                    else if (list[i].Specialization == "Pharm.D")
                                    {
                                        @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].PharmacySpec1)
                                        @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].PharmacyspecializationWiseFaculty)
                                        @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].BPharmacySubGroup1Count)
                                        <td class="col1" style="text-align: left; vertical-align: top;">@list[i].PharmacySpec1</td>
                                        <td class="col1" style="text-align: right; vertical-align: top;">@list[i].PharmacyspecializationWiseFaculty</td>
                                        if (subgrouploop == 1 && @list[i].PharmacySpec1 != null)
                                        {
                                            //<td class="col2" style="text-align: right; vertical-align: top; font-weight: bold;" rowspan="@pharmddistsubgroupcount">@list[i].BPharmacySubGroupRequired</td>
                                            //<td class="col2" style="text-align: right; vertical-align: top; color: red; font-weight: bold; " rowspan="@pharmddistsubgroupcount">@list[i].BPharmacySubGroup1Count</td>
                                        }
                                        else if (@list[i].PharmacySpec1 == null && subgrouploop == 1)
                                        {
                                            <td class="col1" style="text-align: right; vertical-align: top; font-weight: bold;" rowspan="@pharmddistsubgroupcount">@list[i].BPharmacySubGroupRequired</td>
                                            <td class="col1" style="text-align: right; vertical-align: top; color: red; font-weight: bold; " rowspan="@pharmddistsubgroupcount">@list[i].BPharmacySubGroup1Count</td>
                                        }
                                        if (specloop == 1)
                                        {
                                            //<td class="col2" style="text-align: right; vertical-align: middle; color: red; font-weight: bold;" rowspan="@distSpeccount">@list[i].BPharmacySubGroupMet</td>
                                        }
                                    }
                                    else if (list[i].Specialization == "Pharm.D PB")
                                    {
                                        @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].PharmacySpec1)
                                        @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].PharmacyspecializationWiseFaculty)
                                        @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].BPharmacySubGroup1Count)
                                        <td class="col1" style="text-align: left; vertical-align: top;">@list[i].PharmacySpec1</td>
                                        <td class="col1" style="text-align: right; vertical-align: top;">@list[i].PharmacyspecializationWiseFaculty</td>
                                        if (subgrouploop == 1 && @list[i].PharmacySpec1 != null)
                                        {
                                            var pcount = @distSpeccount - 1;
                                            <td class="col1" style="text-align: right; vertical-align: top; font-weight: bold;" rowspan="@pcount">@list[i].BPharmacySubGroupRequired</td>
                                            <td class="col1" style="text-align: right; vertical-align: top; color: red; font-weight: bold; " rowspan="@pcount">@list[i].BPharmacySubGroup1Count</td>
                                        }
                                        else if (@list[i].PharmacySpec1 == null && subgrouploop == 1)
                                        {
                                            <td class="col1" style="text-align: right; vertical-align: top; font-weight: bold;" rowspan="0">@list[i].BPharmacySubGroupRequired</td>
                                            <td class="col1" style="text-align: right; vertical-align: top; color: red; font-weight: bold; " rowspan="0">@list[i].BPharmacySubGroup1Count</td>
                                        }
                                        @*else if (subgrouploop == 2)
                                            {
                                                <td class="col2" style="text-align: right; vertical-align: top; font-weight: bold;" rowspan="0">@list[i].BPharmacySubGroupRequired</td>
                                                <td class="col2" style="text-align: right; vertical-align: top; color: red; font-weight: bold; " rowspan="0">@list[i].BPharmacySubGroup1Count</td>
                                            }*@
                                        if (specloop == 1)
                                        {
                                            <td class="col1" style="text-align: right; vertical-align: middle; color: red; font-weight: bold;" rowspan="@distSpeccount">@list[i].BPharmacySubGroupMet</td>
                                        }


                                    }
                                    else
                                    {
                                        @Html.HiddenFor(m => m[0].FacultyWithIntakeReports[i].PharmacySpec1)
                                        if (@list[i].Specialization == "Pharmacognosy".ToUpper())
                                        {
                                            <td class="col1" style="text-align: left; vertical-align: top;">@list[i].PharmacySpec1</td>
                                        }
                                        else
                                        {
                                            <td class="col1" style="text-align: left; vertical-align: top;">@list[i].Specialization</td>
                                        }
                                        <td class="col1" style="text-align: right; vertical-align: top;">@list[i].PharmacyspecializationWiseFaculty</td>
                                        if (subgrouploop == 1)
                                        {
                                            <td class="col1" style="text-align: right; vertical-align: top; font-weight: bold;">@list[i].BPharmacySubGroupRequired</td>
                                            <td class="col1" style="text-align: right; vertical-align: top; color: red; font-weight: bold;">@list[i].BPharmacySubGroup1Count</td>
                                        }
                                        if (specloop == 1)
                                        {
                                            <td class="col1" style="text-align: right; vertical-align: middle; color: red; font-weight: bold;" rowspan="@distSpeccount">@list[i].BPharmacySubGroupMet</td>
                                        }
                                    }
                                    @*if (list[i].PharmacyGroup1 == null)
                                        {
                                            <td class="col1" style="text-align: right; vertical-align: top;">@Math.Ceiling(list[i].requiredFaculty)</td>
                                        }
                                        else
                                        {
                                            <td class="col1" style="text-align: right; vertical-align: top;"></td>
                                        }*@
                                }

                                @*@if (deptloop == 1)
                                    {
                                        <td class="col2" style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@Math.Ceiling(departmentWiseRequiredFaculty)</td>
                                    }*@
                                @*@if (list[i].PharmacyGroup1 == null)
                                    {
                                        <td class="col1" style="text-align: center; vertical-align: top;">
                                            @Html.DisplayFor(m => m[0].FacultyWithIntakeReports[i].specializationWiseFaculty, new { @placeholder = "", style = "text-align: right;" })
                                        </td>
                                    }
                                    else
                                    {
                                        <td class="col1" style="text-align: right; vertical-align: top;"></td>
                                    }*@

                                @*<td class="col2" style="text-align: center; vertical-align: top;">
                                        <span>@adjustedFaculty</span>
                                    </td>*@

                            </tr>

                    }
                    deptloop++;
                    specloop++;
                    subgrouploop++;

                }


            }
        </tbody>
    </table>
    <br />

    @*//For Faculty*@

    <h2>Appeal for faculty deficiency (Department / Specialization Wise)</h2> <br />
    <table style="width: 100%; border: 1px; border-color: red" class="webGrid">

        @*<tr>
                <th class="col3" colspan="20" style="text-align: left">Deficiencies in Faculty (Department / Specialization Wise)</th>
            </tr>*@
        <tr>
            @*<th class="col1" style="text-align: center; vertical-align: top;" rowspan="2">SNo</th>
                <th class="col1" style="text-align: center; vertical-align: top;" rowspan="2">Code</th>
                <th class="col1" style="text-align: left; vertical-align: top;" rowspan="2">College Name</th>*@
            <th class="col1" style="text-align: center; vertical-align: top;" rowspan="2">Department</th>
            <th class="col1" style="text-align: left; vertical-align: top;" rowspan="2">Degree</th>
            <th class="col1" style="text-align: left; vertical-align: top;" rowspan="2">Specialization</th>
            @*<th class="col1" style="text-align: center; vertical-align: top;" rowspan="2">ShiftId</th>*@
            @*<th class="col1" style="text-align: center; vertical-align: top;" colspan="4">Intake</th>*@
            @*<th class="col1" style="text-align: center; vertical-align: top;" rowspan="2">Total Intake*</th>
                <th class="col1" style="text-align: center; vertical-align: top;" rowspan="2">Specialization Wise Faculty Required</th>*@
            @*<th class="col1" style="text-align: center; vertical-align: top; color: red" rowspan="2">Total Faculty Requirement</th>*@
            @*<th class="col1" style="text-align: center; vertical-align: top;" colspan="2">Specialization Wise Available Faculty</th>*@

            @*<th class="col1" style="text-align: center; vertical-align: top;" rowspan="2">Specialization Wise Available Faculty</th>*@
            @*<th class="col1" style="text-align: center; vertical-align: top; color: red">Whether minimum requirement met</th>*@
            <th class="col1" style="text-align: center; vertical-align: top; color: red" rowspan="2">Deficiency</th>
            <th class="col1" style="text-align: center; vertical-align: top; color: red" rowspan="2">Deficiency of Ph.D faculty</th>
            <th class="col1" style="text-align: center; vertical-align: top; color: red" rowspan="2">Appointed New Faculty</th>
            <th class="col1" style="text-align: center; vertical-align: top; color: red" rowspan="2">Faculty Existing-Reverify </th>
            @*<th class="col1" style="text-align: center; vertical-align: top; color: red" rowspan="2">Supporting Documents</th>*@
        </tr>
        <tr>
            @*<th class="col1" style="text-align: right; vertical-align: top;">IV Year</th>
                <th class="col1" style="text-align: right; vertical-align: top;">III Year</th>
                <th class="col1" style="text-align: right; vertical-align: top;">II Year</th>
                <th class="col1" style="text-align: right; vertical-align: top;">I Year</th>*@

            @*<th class="col1" style="text-align: center; vertical-align: top;">No. Of UG Faculty</th>
                <th class="col1" style="text-align: center; vertical-align: top;">No. Of PG Faculty</th>
                <th class="col1" style="text-align: center; vertical-align: top;">No. Of Ph.D Faculty</th>*@
        </tr>

        @foreach (var collegeId in Model.Select(c => c.collegeId).Distinct().ToList())
        {
            collegeid = collegeId;
            var count = Model.Where(m => m.collegeId == collegeId).Select(m => m).Count();
            var list = Model.Where(c => c.collegeId == collegeId && c.shiftId == 1).ToList();
            var PharmDRequiredFaculty = 0;
            var distDeptcount = 1;
            var distSpeccount = 1;
            var distsubgroupcount = 1;
            var pharmddistsubgroupcount = 1;
            var pharmadpbdistsubgroupcount = 1;
            var deptloop = 1;
            var specloop = 1;
            var subgrouploop = 1;
            decimal departmentWiseRequiredFaculty = 0;
            int remainingFaculty = 0;
            int remainingPHDFaculty = 0;
            var remainingphramdFaculty = 0;
            var remainingmpharmacyfaculty = 0;
            if (ViewBag.ALLTotalCollegeFaculty > 0)
            {
                var faculty = ViewBag.ALLTotalCollegeFaculty - (int)Math.Ceiling(ViewBag.BpharmacyrequiredFaculty);
                remainingmpharmacyfaculty = faculty;
                if (ViewBag.PharmDrequiredFaculty > 0)
                {
                    remainingmpharmacyfaculty = remainingmpharmacyfaculty - (int)Math.Ceiling(ViewBag.PharmDrequiredFaculty);
                }
                if (ViewBag.PharmDPBrequiredFaculty > 0)
                {
                    remainingmpharmacyfaculty = remainingmpharmacyfaculty - (int)Math.Ceiling(ViewBag.PharmDPBrequiredFaculty);
                }

                if (remainingmpharmacyfaculty < 0)
                {
                    remainingmpharmacyfaculty = 0;
                }
            }
            foreach (var item in list)
            {
                distDeptcount = list.Where(d => d.Department == item.Department).Distinct().Count();



                int indexnow = list.IndexOf(item);

                if (indexnow > 0 && list[indexnow].Department != list[indexnow - 1].Department)
                {
                    deptloop = 1;
                }

                departmentWiseRequiredFaculty = list.Where(d => d.Department == item.Department).Select(d => d.requiredFaculty).Sum();

                string minimumRequirementMet = string.Empty;
                int facultyShortage = 0;
                int adjustedFaculty = 0;
                int adjustedPHDFaculty = 0;

                int tFaculty = (int)Math.Ceiling(Convert.ToDecimal(item.totalFaculty));
                int rFaculty = (int)Math.Ceiling(item.requiredFaculty);

                var degreeType = jntuh_degree.Where(d => d.degree == item.Degree).Select(d => d.jntuh_degree_type.degreeType).FirstOrDefault();


                if (item.Degree == "Pharm.D")//&& @ViewBag.BpharmcyCondition == "No"
                {
                    tFaculty = item.totalcollegefaculty;
                    rFaculty = (int)Math.Ceiling(@ViewBag.BpharmacyrequiredFaculty);

                    var pharmadreqfaculty = PharmDRequiredFaculty = (int)Math.Ceiling(item.pharmadrequiredfaculty);
                    if (deptloop == 1)
                    {
                        if (tFaculty >= rFaculty && ((tFaculty - rFaculty) >= pharmadreqfaculty))
                        {
                            minimumRequirementMet = "YES";
                            adjustedFaculty = tFaculty - rFaculty;

                            if (adjustedFaculty > pharmadreqfaculty)
                            {
                                remainingphramdFaculty = adjustedFaculty - pharmadreqfaculty;
                                adjustedFaculty = pharmadreqfaculty;
                            }
                        }
                        else
                        {
                            remainingphramdFaculty = tFaculty - rFaculty;
                        }
                    }
                }

                if (item.Degree == "Pharm.D PB")//&& @ViewBag.BpharmcyCondition == "No" && @ViewBag.PharmaDCondition == "No"
                {
                    tFaculty = item.totalcollegefaculty;
                    rFaculty = (int)Math.Ceiling(@ViewBag.BpharmacyrequiredFaculty);

                    var pharmadpbreqfaculty = (int)Math.Ceiling(item.pharmadPBrequiredfaculty);
                    if (deptloop == 1)
                    {
                        if (tFaculty >= rFaculty && ((tFaculty - rFaculty) >= pharmadpbreqfaculty))
                        {
                            minimumRequirementMet = "YES";
                            adjustedFaculty = tFaculty - rFaculty;

                            if (remainingphramdFaculty > pharmadpbreqfaculty)
                            {
                                adjustedFaculty = pharmadpbreqfaculty;
                                remainingphramdFaculty = remainingphramdFaculty - pharmadpbreqfaculty;
                            }
                            else
                            {
                                adjustedFaculty = remainingphramdFaculty;
                            }
                        }
                    }
                }



                if (item.Degree == "B.Pharmacy" && indexnow > 0 && list[indexnow].PharmacySubGroup1 != list[indexnow - 1].PharmacySubGroup1 && item.PharmacySubGroup1 != "SubGroup6")
                {
                    tFaculty = (int)Math.Ceiling(Convert.ToDecimal(item.BPharmacySubGroup1Count));
                    rFaculty = item.BPharmacySubGroupRequired;
                    if (deptloop == 1)
                    {
                        if (rFaculty <= tFaculty)
                        {
                            minimumRequirementMet = "YES";
                            remainingFaculty = tFaculty - rFaculty;
                            adjustedFaculty = rFaculty;
                        }
                        else
                        {
                            minimumRequirementMet = "NO";
                            adjustedFaculty = tFaculty;
                            facultyShortage = rFaculty - tFaculty;
                        }

                        remainingPHDFaculty = item.phdFaculty;

                        if (remainingPHDFaculty > 0 && degreeType.Equals("PG"))
                        {
                            adjustedPHDFaculty = 1;
                            remainingPHDFaculty = remainingPHDFaculty - 1;
                        }
                    }
                    else
                    {
                        if (rFaculty <= remainingFaculty && tFaculty >= rFaculty)
                        {
                            minimumRequirementMet = "YES";
                            remainingFaculty = remainingFaculty + (tFaculty - rFaculty);
                            adjustedFaculty = rFaculty;
                        }
                        else if (tFaculty >= rFaculty)
                        {
                            minimumRequirementMet = "NO";
                            adjustedFaculty = rFaculty;
                            facultyShortage = rFaculty - remainingFaculty;
                            //remainingFaculty = 0;
                        }
                        else if (tFaculty < rFaculty)
                        {
                            minimumRequirementMet = "NO";
                            adjustedFaculty = tFaculty;
                            remainingFaculty = remainingFaculty - tFaculty;
                        }
                        if (remainingPHDFaculty > 0 && degreeType.Equals("PG"))
                        {
                            adjustedPHDFaculty = 1;
                            remainingPHDFaculty = remainingPHDFaculty - 1;
                        }
                    }

                }

                else if (item.Degree == "B.Pharmacy" && indexnow == 0 && item.PharmacySubGroup1 != "SubGroup6")
                {
                    tFaculty = (int)Math.Ceiling(Convert.ToDecimal(item.BPharmacySubGroup1Count));
                    rFaculty = item.BPharmacySubGroupRequired;
                    if (deptloop == 1)
                    {
                        if (rFaculty <= tFaculty)
                        {
                            minimumRequirementMet = "YES";
                            remainingFaculty = tFaculty - rFaculty;
                            adjustedFaculty = rFaculty;
                        }
                        else
                        {
                            minimumRequirementMet = "NO";
                            adjustedFaculty = tFaculty;
                            facultyShortage = rFaculty - tFaculty;
                        }

                        remainingPHDFaculty = item.phdFaculty;

                        if (remainingPHDFaculty > 0 && degreeType.Equals("PG"))
                        {
                            adjustedPHDFaculty = 1;
                            remainingPHDFaculty = remainingPHDFaculty - 1;
                        }
                    }
                    else
                    {
                        if (rFaculty <= remainingFaculty && tFaculty >= rFaculty)
                        {
                            minimumRequirementMet = "YES";
                            remainingFaculty = remainingFaculty - rFaculty;
                            adjustedFaculty = rFaculty;
                        }
                        else if (tFaculty >= rFaculty)
                        {
                            minimumRequirementMet = "NO";
                            adjustedFaculty = remainingFaculty;
                            facultyShortage = rFaculty - remainingFaculty;
                            remainingFaculty = 0;
                        }
                        else if (tFaculty < rFaculty)
                        {
                            minimumRequirementMet = "NO";
                            adjustedFaculty = tFaculty;
                            //remainingFaculty = remainingFaculty - tFaculty;
                        }




                        if (remainingPHDFaculty > 0 && degreeType.Equals("PG"))
                        {
                            adjustedPHDFaculty = 1;
                            remainingPHDFaculty = remainingPHDFaculty - 1;
                        }
                    }

                }


                else if (item.Degree == "M.Pharmacy" && item.PharmacyspecializationWiseFaculty >= 1)
                {
                    //tFaculty = (int)Math.Ceiling(Convert.ToDecimal(list[i].specializationWiseFaculty));
                    //if (remainingphramdFaculty > 0)
                    //{
                    //    tFaculty = remainingphramdFaculty;
                    //}
                    //else
                    //{
                    //    tFaculty = remainingFaculty;
                    //}



                    tFaculty = remainingmpharmacyfaculty;
                    rFaculty = (int)Math.Ceiling(item.requiredFaculty);


                    if (rFaculty <= tFaculty && remainingphramdFaculty > 0)
                    {
                        //minimumRequirementMet = "YES";
                        remainingphramdFaculty = remainingphramdFaculty - rFaculty;
                        adjustedFaculty = rFaculty;
                    }
                    else if (rFaculty <= tFaculty && remainingphramdFaculty == 0 && remainingmpharmacyfaculty > 0)
                    {
                        // minimumRequirementMet = "NO";
                        
                        
                        //remainingFaculty = remainingFaculty - rFaculty;
                        //adjustedFaculty = rFaculty;
                        //remainingmpharmacyfaculty = remainingmpharmacyfaculty - rFaculty;
                        
                        if(item.specializationId==116)
                        {
                             int UGRfFaculty = list[1].approvedIntake1 >= 100 ? 6 : 5;
                            int PAQAAvilableFaculty = list.FirstOrDefault().FacultyWithIntakeReports.Where(F => F.specializationId == item.specializationId).Select(F => F.AvailableFaculty).FirstOrDefault();
                            int PharmaChemistryAvilableFaculty = list.FirstOrDefault().FacultyWithIntakeReports.Where(F => F.specializationId == 117).Select(F => F.AvailableFaculty).FirstOrDefault();
                            int QAAvilableFaculty = list.FirstOrDefault().FacultyWithIntakeReports.Where(F => F.specializationId == 122).Select(F => F.AvailableFaculty).FirstOrDefault();
                            int PGRfFaculty = (int)Math.Ceiling(list.Where(F => F.specializationId == item.specializationId).Select(F => F.requiredFaculty).FirstOrDefault());
                            int TotalFaculty =(PharmaChemistryAvilableFaculty+QAAvilableFaculty)-UGRfFaculty;
                                if(TotalFaculty>=0)
                                {
                                    if (PAQAAvilableFaculty >= PGRfFaculty)
                                {
                                    remainingFaculty = remainingFaculty - rFaculty;
                                     adjustedFaculty = rFaculty;
                                    remainingmpharmacyfaculty = remainingmpharmacyfaculty - rFaculty;
                                }
                                    else
                                {
                                     remainingFaculty = remainingFaculty ;
                                     adjustedFaculty = 0;
                                     remainingmpharmacyfaculty = remainingmpharmacyfaculty ;
                                }
                                }
                            else if(TotalFaculty<0)
                            {
                                 if((PAQAAvilableFaculty-TotalFaculty)>=PGRfFaculty)
                                {
                                    remainingFaculty = remainingFaculty - rFaculty;
                                     adjustedFaculty = rFaculty;
                                    remainingmpharmacyfaculty = remainingmpharmacyfaculty - rFaculty;
                                }
                                    else
                                {
                                     remainingFaculty = remainingFaculty ;
                                     adjustedFaculty = 0;
                                     remainingmpharmacyfaculty = remainingmpharmacyfaculty ;
                                }
                            }
                        }
                        else
                        {
                            int UGRfFaculty = 0;
                            if (item.specializationId==120)
                            {
                                UGRfFaculty = list[0].approvedIntake1 >= 100 ? 6 : 4;   
                            }
                            else if (item.specializationId == 116 || item.specializationId == 117 || item.specializationId == 124)
                            {
                                UGRfFaculty = list[0].approvedIntake1 >= 100 ? 6 : 5;
                            }
                            else if (item.specializationId == 122)
                            {
                                UGRfFaculty = list[0].approvedIntake1 >= 100 ? 5 : 4;
                            }
                            else if (item.specializationId == 121)
                            {
                                UGRfFaculty = list[0].approvedIntake1 = 3;
                            }
                             
                            int AvilableFaculty = list.FirstOrDefault().FacultyWithIntakeReports.Where(F => F.specializationId == item.specializationId).Select(F => F.AvailableFaculty).FirstOrDefault();
                            int PGRfFaculty = (int)Math.Ceiling(list.Where(F => F.specializationId == item.specializationId).Select(F => F.requiredFaculty).FirstOrDefault());
                            int TotalFaculty = list.Where(F => F.specializationId == 122).Select(F => F.totalFaculty).FirstOrDefault();
                            // int TotalFaculty1= Math.Round(PGRfFaculty, 2);
                            if (AvilableFaculty >= (UGRfFaculty + PGRfFaculty))
                            {
                                remainingFaculty = remainingFaculty - rFaculty;
                                adjustedFaculty = rFaculty;
                                remainingmpharmacyfaculty = remainingmpharmacyfaculty - rFaculty;
                            }
                            else
                            {
                                remainingFaculty = remainingFaculty;
                                adjustedFaculty = 0;
                                remainingmpharmacyfaculty = remainingmpharmacyfaculty;
                            }
                            
                        }
                        
                       
                    }

                    else if (tFaculty <= rFaculty && remainingphramdFaculty > 0)
                    {
                        remainingphramdFaculty = remainingphramdFaculty - rFaculty;
                        adjustedFaculty = tFaculty;
                    }
                    else if (tFaculty <= rFaculty && remainingphramdFaculty == 0 && remainingmpharmacyfaculty > 0)
                    {
                        remainingFaculty = remainingFaculty - rFaculty;
                        adjustedFaculty = tFaculty;
                        remainingmpharmacyfaculty = remainingmpharmacyfaculty - tFaculty;
                    }
                    if (remainingPHDFaculty > 0 && degreeType.Equals("PG"))
                    {
                        adjustedPHDFaculty = 1;
                        remainingPHDFaculty = remainingPHDFaculty - 1;
                    }
                }
                if (list.IndexOf(item) == 0)
                {
                    <tr>
                        @*<td class="col2" style="text-align: center; vertical-align: top;width:10px" rowspan="@count">@(sno++)</td>
                            <td class="col2" style="text-align: center; vertical-align: top;width:10px; text-transform: uppercase" rowspan="@count">@item.collegeCode</td>
                            <td class="col2" style="text-align: left; vertical-align: top; text-transform: uppercase" rowspan="@count">@item.collegeName)</td>*@
                        <td class="col2" style="text-align: center; vertical-align: middle; font-weight: bold" rowspan="@distDeptcount">@item.Department</td>
                        <td class="col2" style="text-align: left; vertical-align: top;">@item.Degree</td>
                        <td class="col2" style="text-align: left; vertical-align: top;">@item.Specialization<span style="color: red;">*</span></td>
                        @*<td class="col2" style="text-align: center; vertical-align: top;">@item.shiftId</td>*@
                        @*<td class="col2" style="text-align: right; vertical-align: top;">@item.approvedIntake4</td>
                            <td class="col2" style="text-align: right; vertical-align: top;">@item.approvedIntake3</td>
                            <td class="col2" style="text-align: right; vertical-align: top;">@item.approvedIntake2</td>
                            <td class="col2" style="text-align: right; vertical-align: top;">@item.approvedIntake1</td>*@
                        @*<td class="col2" style="text-align: right; vertical-align: top; font-weight: bold">@item.totalIntake</td>
                            <td class="col2" style="text-align: right; vertical-align: top;">@Math.Round(@item.requiredFaculty)</td>*@
                        @*<td class="col2" style="text-align: right; vertical-align: top;"></td>*@
                        @*<td class="col2" style="text-align: right; vertical-align: top;">@item.ugFaculty</td>
                            <td class="col2" style="text-align: right; vertical-align: top;">@item.pgFaculty</td>
                            <td class="col2" style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@item.phdFaculty</td>*@
                        @*<td class="col2" style="text-align: right; vertical-align: top;">@item.specializationWiseFaculty</td>*@ @*@item.totalFaculty*@
                        @if (item.deficiency == true && item.Department != "B.Pharmacy")
                        {
                            var deffaculty = Math.Round(@item.requiredFaculty) - @item.specializationWiseFaculty; //@item.totalFaculty
                            <td class="col2" style="text-align: right; vertical-align: top;">
                                YES (@deffaculty)
                                @*<a href="@Html.ActionLink("fdf", "FacultyRegistrationNumber", new {collegeId = item.collegeId, deficencycount = (int) deffaculty, degree = item.Degree, departmentid = item.DepartmentID})" target="_blank" class="editdefDialog">(@deffaculty)</a>*@
                                @*@Html.ActionLink("fdf", "FacultyRegistrationNumber", new { collegeId = item.collegeId, deficencycount = (int)deffaculty, degree = item.Degree, departmentid = item.DepartmentID }, new { @class = "editdefDialog" })*@
                            </td>
                        }
                        else if (item.deficiency == true && item.Department == "B.Pharmacy" && @ViewBag.BpharmacyRequired > 0)
                        {
                            var deffaculty = @ViewBag.BpharmacyRequired; //@item.totalFaculty

                            <td class="col2" style="text-align: right; vertical-align: top;">
                                YES (@deffaculty)
                                @*<a href="@Html.ActionLink("fdf", "FacultyRegistrationNumber", new {collegeId = item.collegeId, deficencycount = (int) deffaculty, degree = item.Degree, departmentid = item.DepartmentID})" target="_blank" class="editdefDialog">(@deffaculty)</a>*@
                                @*@Html.ActionLink("fdf", "FacultyRegistrationNumber", new { collegeId = item.collegeId, deficencycount = (int)deffaculty, degree = item.Degree, departmentid = item.DepartmentID }, new { @class = "editdefDialog" })*@
                            </td>
                        }
                        else
                        {
                            <td class="col2" style="text-align: right; vertical-align: top;">NO</td>
                        }

                        @*<td class="col2" style="text-align: right; vertical-align: top;"></td>*@
                        @if (item.PHDdeficiency == true && item.Department != "B.Pharmacy")
                        {
                            var phddeffaculty = @item.AvailablePHDFaculty;
                            <td class="col2" style="text-align: right; vertical-align: top;">
                                YES (@phddeffaculty)
                                @*<a href="" target="_blank">(@phddeffaculty)</a>*@
                            </td>
                        }
                        else if (item.deficiency == true && item.Department == "B.Pharmacy")
                        {
                            <td class="col2" style="text-align: right; vertical-align: top;">NO</td>
                        }
                        else
                        {
                            <td class="col2" style="text-align: right; vertical-align: top;">NO</td>
                        }
                        @if ((item.deficiency == true || item.PHDdeficiency == true) && item.deficiencystatus == false && item.Department !="B.Pharmacy")
                        {
                            var deffaculty = Math.Round(@item.requiredFaculty) - @item.specializationWiseFaculty; //@item.totalFaculty
                            <td class="col2" style="text-align: right; vertical-align: top;">
                                @*@Html.RadioButton("Appeal", true, new { @class = "editDialog"  })  &nbsp;&nbsp;*@
                                @Html.CheckBox("Compliance", false, new { collegeId = item.collegeId, deficencycount = (int)deffaculty, degree = item.Degree, departmentid = item.DepartmentID, specializationid = item.specializationId, @class = "editDialog" }) &nbsp;&nbsp;
                            </td>
                        }
                        else if ((item.deficiency == true || item.PHDdeficiency == true) && item.deficiencystatus == false && item.Department == "B.Pharmacy" && @ViewBag.BpharmacyRequired > 0)
                        {
                            var deffaculty = Math.Round(@item.requiredFaculty) - @item.specializationWiseFaculty; //@item.totalFaculty
                            <td class="col2" style="text-align: right; vertical-align: top;">
                                @*@Html.RadioButton("Appeal", true, new { @class = "editDialog"  })  &nbsp;&nbsp;*@
                                @Html.CheckBox("Compliance", false, new { collegeId = item.collegeId, deficencycount = (int)deffaculty, degree = item.Degree, departmentid = item.DepartmentID, specializationid = item.specializationId, @class = "editDialog" }) &nbsp;&nbsp;
                            </td>
                        }
                        else if (item.deficiencystatus)
                        {
                            <td class="col2" style="text-align: right; vertical-align: top;">
                                <span style="color: green; font-weight: bold;">Appeal Submitted</span>
                                @Html.CheckBox("Compliance", false, new { @disabled = "disabled" }) &nbsp;&nbsp;
                            </td>
                        }
                        else
                        {
                            <td class="col2" style="text-align: right; vertical-align: top;"></td>
                        }
                        @if ((item.deficiency == true || item.PHDdeficiency == true ) && item.Department != "B.Pharmacy")
                        {
                            var deffaculty = Math.Round(@item.requiredFaculty) - @item.specializationWiseFaculty; //@item.totalFaculty
                            <td class="col2" style="text-align: right; vertical-align: top;">
                                @*@Html.RadioButton("Appeal", true, "")*@
                                @*@Html.CheckBox("reverification", false, new {collegeId = item.collegeId, deficencycount = (int) deffaculty, degree = item.Degree, departmentid = item.DepartmentID, specializationid = item.specializationId, @class = "editdefDialog"}) &nbsp;&nbsp;*@
                                @Html.CheckBox("reverification", false, new { collegeId = UAAAS.Models.Utilities.EncryptString(item.collegeId.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]), deficencycount = (int)deffaculty, degree = item.Degree, departmentid = item.DepartmentID, specializationid = item.specializationId, @class = "editreverificationDialog" }) &nbsp;&nbsp;
                            </td>
                        }
                        else if ((item.deficiency == true || item.PHDdeficiency == true) && item.Department == "B.Pharmacy" && @ViewBag.BpharmacyRequired > 0)
                        {
                            var deffaculty = Math.Round(@item.requiredFaculty) - @item.specializationWiseFaculty; //@item.totalFaculty
                            <td class="col2" style="text-align: right; vertical-align: top;">
                                @*@Html.RadioButton("Appeal", true, "")*@
                                @*@Html.CheckBox("reverification", false, new {collegeId = item.collegeId, deficencycount = (int) deffaculty, degree = item.Degree, departmentid = item.DepartmentID, specializationid = item.specializationId, @class = "editdefDialog"}) &nbsp;&nbsp;*@
                                @Html.CheckBox("reverification", false, new { collegeId = UAAAS.Models.Utilities.EncryptString(item.collegeId.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]), deficencycount = (int)deffaculty, degree = item.Degree, departmentid = item.DepartmentID, specializationid = item.specializationId, @class = "editreverificationDialog" }) &nbsp;&nbsp;
                            </td>
                        }
                        else
                        {
                            <td class="col2" style="text-align: right; vertical-align: top;"></td>
                        }
                        @*<td class="col2" style="text-align: right; vertical-align: top;">
                                @Html.TextBoxFor(model => model.FirstOrDefault().collegeCode, new { type = "file", @class = "file" })
                            </td>*@
                    </tr>
                }
                else
                {
                    <tr>
                        @if (deptloop == 1)
                        {

                            <td class="col2" style="text-align: center; vertical-align: middle; font-weight: bold" rowspan="@distDeptcount">@item.Department</td>
                        }

                        <td class="col2" style="text-align: left; vertical-align: top;">@item.Degree</td>
                        <td class="col2" style="text-align: left; vertical-align: top;">@item.Specialization</td>
                        @*<td class="col2" style="text-align: center; vertical-align: top;">@item.shiftId</td>*@
                        @*<td class="col2" style="text-align: right; vertical-align: top;">@item.approvedIntake4</td>
                            <td class="col2" style="text-align: right; vertical-align: top;">@item.approvedIntake3</td>
                            <td class="col2" style="text-align: right; vertical-align: top;">@item.approvedIntake2</td>
                            <td class="col2" style="text-align: right; vertical-align: top;">@item.approvedIntake1</td>*@
                        @*<td class="col2" style="text-align: right; vertical-align: top; font-weight: bold">@item.totalIntake</td>
                            <td class="col2" style="text-align: right; vertical-align: top;">@Math.Round(@item.requiredFaculty)</td>*@
                        @*<td class="col2" style="text-align: right; vertical-align: top;"></td>*@
                        @*<td class="col2" style="text-align: right; vertical-align: top;">@item.ugFaculty</td>
                            <td class="col2" style="text-align: right; vertical-align: top;">@item.pgFaculty</td>
                            @if (deptloop == 1)
                            {
                                <td class="col2" style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@item.phdFaculty</td>
                            }*@

                        @*<td class="col2" style="text-align: right; vertical-align: top;">@item.specializationWiseFaculty</td>*@
                        @if ((item.Department == "Pharm.D" || item.Department == "Pharm.D PB") && (item.BPharmacySubGroup1Count < item.BPharmacySubGroupRequired))
                        {
                            var deffaculty = @item.BPharmacySubGroupRequired - @item.BPharmacySubGroup1Count; //@item.totalFaculty
                            <td class="col2" style="text-align: right; vertical-align: top;">
                                YES (@deffaculty)
                                @*<a href="@Html.ActionLink("fdf", "FacultyRegistrationNumber", new {collegeId = item.collegeId, deficencycount = (int) deffaculty, degree = item.Degree, departmentid = item.DepartmentID})" target="_blank" class="editdefDialog">(@deffaculty)</a>*@
                            </td>
                        }
                        else if (item.Department == "M.Pharmacy" && item.requiredFaculty > 0 && (adjustedFaculty < (int) Math.Ceiling(item.requiredFaculty)))
                        {
                            var deffaculty = (int) Math.Ceiling(item.requiredFaculty) - adjustedFaculty;
                            <td class="col2" style="text-align: right; vertical-align: top;">
                                YES (@deffaculty)
                            </td>
                        }
                        else
                        {
                            <td class="col2" style="text-align: right; vertical-align: top;">NO</td>
                        }
                        @*<td class="col2" style="text-align: right; vertical-align: top;"></td>*@
                        @if (item.PharmacyspecializationWiseFaculty < 1 && item.Department == "M.Pharmacy" && item.requiredFaculty > 0)
                        {
                            var phddeffaculty = 1;
                            <td class="col2" style="text-align: right; vertical-align: top;">
                                YES (@phddeffaculty)
                                @*<a href="" target="_blank">(@phddeffaculty)</a>*@
                            </td>
                        }
                        else
                        {
                            <td class="col2" style="text-align: right; vertical-align: top;">NO</td>
                        }
                        @*@if (item.deficiencystatus == false && item.Department == "M.Pharmacy" && item.PharmacyspecializationWiseFaculty < 1 && item.requiredFaculty > 0)
                        {
                            var deffaculty = 1; //@item.totalFaculty
                            <td class="col2" style="text-align: right; vertical-align: top;">
                                @Html.CheckBox("compliance", false, new { collegeId = item.collegeId, deficencycount = (int)deffaculty, degree = item.Degree, departmentid = item.DepartmentID, specializationid = item.specializationId, @class = "editDialog" }) &nbsp;&nbsp;
                            </td>
                        }*@
                        @if ((item.Department == "Pharm.D" || item.Department == "Pharm.D PB") && (item.BPharmacySubGroup1Count < item.BPharmacySubGroupRequired) && item.deficiencystatus == false)
                        {
                            var deffaculty = @item.BPharmacySubGroupRequired - @item.BPharmacySubGroup1Count; //@item.totalFaculty
                            <td class="col2" style="text-align: right; vertical-align: top;">
                                @*@Html.RadioButton("Appeal", true, new { @class = "editDialog" })  &nbsp;&nbsp;*@
                                @Html.CheckBox("compliance", false, new { collegeId = item.collegeId, deficencycount = (int)deffaculty, degree = item.Degree, departmentid = item.DepartmentID, specializationid = item.specializationId, @class = "editDialog" }) &nbsp;&nbsp;
                            </td>
                        }
                        else if (item.deficiencystatus == false && item.Department == "M.Pharmacy" && item.requiredFaculty > 0 && (adjustedFaculty < (int)Math.Ceiling(item.requiredFaculty)))
                        {
                            var deffaculty = (int)Math.Ceiling(item.requiredFaculty) - adjustedFaculty;
                            <td class="col2" style="text-align: right; vertical-align: top;">
                                @*@Html.RadioButton("Appeal", true, new { @class = "editDialog" })  &nbsp;&nbsp;*@
                                @Html.CheckBox("compliance", false, new { collegeId = item.collegeId, deficencycount = (int)deffaculty, degree = item.Degree, departmentid = item.DepartmentID, specializationid = item.specializationId, @class = "editDialog" }) &nbsp;&nbsp;
                            </td>
                        }
                        else if (item.deficiencystatus)
                        {
                            <td class="col2" style="text-align: right; vertical-align: top;">
                                <span style="color: green; font-weight: bold">Appeal submitted</span>
                                @Html.CheckBox("Compliance", false, new {@disabled = "disabled"}) &nbsp;&nbsp;
                            </td>
                        }
                        else
                        {
                            <td class="col2" style="text-align: right; vertical-align: top;"></td>
                        }
                        @*@if (item.Department == "M.Pharmacy" && item.PharmacyspecializationWiseFaculty < 1 && item.requiredFaculty > 0)
                        {
                            var deffaculty = Math.Round(@item.requiredFaculty) - @item.specializationWiseFaculty; //@item.totalFaculty
                            <td class="col2" style="text-align: right; vertical-align: top;">
                                @Html.RadioButton("Appeal", true, "")
                                @Html.CheckBox("reverification", false, new { collegeId = item.collegeId, deficencycount = (int)deffaculty, degree = item.Degree, departmentid = item.DepartmentID, specializationid = item.specializationId, @class = "editdefDialog" })  &nbsp;&nbsp;
                                @Html.CheckBox("reverification", false, new { collegeId = UAAAS.Models.Utilities.EncryptString(item.collegeId.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]), deficencycount = (int)deffaculty, degree = item.Degree, departmentid = item.DepartmentID, specializationid = item.specializationId, @class = "editreverificationDialog" }) &nbsp;&nbsp;
                            </td>
                        }*@
                        @if ((item.Department == "Pharm.D" || item.Department == "Pharm.D PB") && (item.BPharmacySubGroup1Count < item.BPharmacySubGroupRequired))
                        {
                            var deffaculty = @item.BPharmacySubGroupRequired - @item.BPharmacySubGroup1Count;  //@item.totalFaculty
                            <td class="col2" style="text-align: right; vertical-align: top;">
                                @*@Html.RadioButton("Appeal", true, "")*@
                                @*@Html.CheckBox("reverification", false, new { collegeId = item.collegeId, deficencycount = (int)deffaculty, degree = item.Degree, departmentid = item.DepartmentID, specializationid = item.specializationId, @class = "editdefDialog" })  &nbsp;&nbsp;*@
                                @Html.CheckBox("reverification", false, new { collegeId = UAAAS.Models.Utilities.EncryptString(item.collegeId.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]), deficencycount = (int)deffaculty, degree = item.Degree, departmentid = item.DepartmentID, specializationid = item.specializationId, @class = "editreverificationDialog" }) &nbsp;&nbsp;
                            </td>
                        }
                        else if (item.Department == "M.Pharmacy" && item.requiredFaculty > 0 && (adjustedFaculty < (int) Math.Ceiling(item.requiredFaculty)))
                        {
                            var deffaculty = (int)Math.Ceiling(item.requiredFaculty) - adjustedFaculty;
                            <td class="col2" style="text-align: right; vertical-align: top;">
                                @Html.CheckBox("reverification", false, new { collegeId = UAAAS.Models.Utilities.EncryptString(item.collegeId.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]), deficencycount = (int)deffaculty, degree = item.Degree, departmentid = item.DepartmentID, specializationid = item.specializationId, @class = "editreverificationDialog" }) &nbsp;&nbsp;
                            </td>
                        }
                        else
                        {
                            <td class="col2" style="text-align: right; vertical-align: top;"></td>
                        }
                        @*@if (item.deficiency == true || item.PHDdeficiency == true)
                            {
                                <td class="col2" style="text-align: right; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.FirstOrDefault().collegeCode, new {type = "file", @class = "file"})
                                </td>
                            }
                            else
                            {
                                <td class="col2" style="text-align: right; vertical-align: top;"></td>
                            }*@
                    </tr>

                }
                deptloop++;

            }

        }

    </table>
}

<br />
<p style="text-align: right">
    @Html.ActionLink("GoTo Step- 3", "LabsForAppeal", null, new {@class = "create_button"})
</p>
<p style="color: red; font-weight: bold; font-size: 12px">* Please refer to columns '10' and '11' of the deficiency report for B.Pharmacy Department / Division-wise Teaching staff specialization deficiencies as per PCI norms.</p>
<div id="dialog-confirm" style="display: none">
    <p>
        <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
        Are you sure to delete ?
    </p>
</div>
<div id="dialog-edit" style="display: none">
</div>

<div id="dialog-appeal-edit" style="display: none">
</div>
<div id="Appealcpldialog-edit" style="display: none">
</div>