@model IList<UAAAS.Controllers.FacultyVerificationController.CollegeFacultyWithIntakeReport>
    @using UAAAS.Models;
    @{
        uaaasDBContext db = new uaaasDBContext();
        var jntuh_degree = db.jntuh_degree.ToList();
        ViewBag.Title = "CollegeFacultyWithIntake";
        int sno = 1;
    }   
    @using (Html.BeginForm())
    {      
        <table style="width: 100%; border: 1px;" border="1">
            <tr>
                <th style="text-align: center; vertical-align: top; background-color:yellow" rowspan="2">SNo</th>
                <th style="text-align: center; vertical-align: top; background-color: yellow" rowspan="2">Code</th>
                <th style="text-align: left; vertical-align: top; background-color: yellow" rowspan="2">College Name</th>
                <th style="text-align: left; vertical-align: top; background-color: yellow" rowspan="2">Department</th>
                <th style="text-align: left; vertical-align: top; background-color: yellow" rowspan="2">Degree</th>
                <th style="text-align: left; vertical-align: top; background-color: yellow" rowspan="2">Specialization</th>
                <th style="text-align: center; vertical-align: top; background-color: yellow" colspan="4">Intake</th>
                <th style="text-align: center; vertical-align: top; background-color: yellow" rowspan="2">Total</th>
                <th style="text-align: center; vertical-align: top; background-color: yellow" rowspan="2">Minimum Faculty Requirement Program Wise</th>
                <th style="text-align: center; vertical-align: top; background-color: yellow" rowspan="2">Total Faculty Requirement</th>

                <th style="text-align: center; vertical-align: top; background-color: yellow" rowspan="2">Available Faculty</th>
                <th style="text-align: center; vertical-align: top; background-color: yellow" rowspan="2">FalseName Faculty</th>
                <th style="text-align: center; vertical-align: top; background-color: yellow" rowspan="2">FalsePhoto Faculty</th>
                <th style="text-align: center; vertical-align: top; background-color: yellow" rowspan="2">FalsePANNo Faculty</th>
                <th style="text-align: center; vertical-align: top; background-color: yellow" rowspan="2">FalseAadhaarNo Faculty</th>
                <th style="text-align: center; vertical-align: top; background-color: yellow" rowspan="2">Certificate(s) Incomplete Faculty</th>
                <th style="text-align: center; vertical-align: top; background-color: yellow" rowspan="2">Absent Faculty</th>
            </tr>
            <tr>
                <th style="text-align: right; vertical-align: top; background-color: yellow">IV Year</th>
                <th style="text-align: right; vertical-align: top; background-color: yellow">III Year</th>
                <th style="text-align: right; vertical-align: top; background-color: yellow">II Year</th>
                <th style="text-align: right; vertical-align: top; background-color: yellow">I Year</th>


            </tr>
            <tbody>
                @foreach (var collegeId in Model.Select(c => c.collegeId).Distinct().ToList())
                {
                    var count = Model.Where(m => m.collegeId == collegeId).Select(m => m).Count();
                    var list = Model.Where(c => c.collegeId == collegeId).ToList();
                    var distDeptcount = 1;
                    var deptloop = 1;
                    decimal departmentWiseRequiredFaculty = 0;

                    for (int i = 0; i < list.Count(); i++)
                    {

                        @Html.HiddenFor(m => m[i].id)
                        @Html.HiddenFor(m => m[i].collegeId)
                        @Html.HiddenFor(m => m[i].specializationId)
                        @Html.HiddenFor(m => m[i].shiftId)

                        distDeptcount = list.Where(d => d.Department == list[i].Department).Distinct().Count();

                        int indexnow = list.IndexOf(list[i]);

                        if (indexnow > 0 && list[indexnow].Department != list[indexnow - 1].Department)
                        {
                            deptloop = 1;
                        }

                        departmentWiseRequiredFaculty = list.Where(d => d.Department == list[i].Department).Select(d => d.requiredFaculty).Sum();



                        if (list.IndexOf(list[i]) == 0)
                        {
                            <tr>
                                <td  style="text-align: center; vertical-align: top;width:10px" rowspan="@count">@(sno++)</td>
                                <td  style="text-align: center; vertical-align: top;width:10px; text-transform: uppercase" rowspan="@count">@list[i].collegeCode</td>
                                <td  style="text-align: left; vertical-align: top; text-transform: uppercase" rowspan="@count">@list[i].collegeName</td>
                                <td  style="text-align: left; vertical-align: top;" rowspan="@distDeptcount">@list[i].Department</td>
                                <td  style="text-align: left; vertical-align: top;">@list[i].Degree</td>
                                <td  style="text-align: left; vertical-align: top;">@list[i].Specialization</td>
                                <td  style="text-align: right; vertical-align: top;">@list[i].approvedIntake4</td>
                                <td  style="text-align: right; vertical-align: top;">@list[i].approvedIntake3</td>
                                <td  style="text-align: right; vertical-align: top;">@list[i].approvedIntake2</td>
                                <td  style="text-align: right; vertical-align: top;">@list[i].approvedIntake1</td>

                                <td  style="text-align: right; vertical-align: top;">@list[i].totalIntake</td>
                                <td  style="text-align: right; vertical-align: top;">@Math.Ceiling(list[i].requiredFaculty)</td>


                                <td  style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@Math.Ceiling(departmentWiseRequiredFaculty)</td>
                                <td  style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@list[i].AvailableFaculty</td>
                                <td  style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@list[i].FalseNameFaculty</td>
                                <td  style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@list[i].FalsePhotoFaculty</td>
                                <td  style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@list[i].FalsePANNumberFaculty</td>
                                <td  style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@list[i].FalseAadhaarNumberFaculty</td>
                                <td  style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@list[i].CertificatesIncompleteFaculty</td>
                                <td  style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@list[i].AbsentFaculty</td>

                            </tr>
                        }
                        else
                        {
                            <tr>
                                @if (deptloop == 1)
                                {

                                    <td  style="text-align: left; vertical-align: top;" rowspan="@distDeptcount">@list[i].Department</td>
                                }

                                <td  style="text-align: left; vertical-align: top;">@list[i].Degree</td>
                                <td  style="text-align: left; vertical-align: top;">@list[i].Specialization</td>
                                <td  style="text-align: right; vertical-align: top;">@list[i].approvedIntake4</td>
                                <td  style="text-align: right; vertical-align: top;">@list[i].approvedIntake3</td>
                                <td  style="text-align: right; vertical-align: top;">@list[i].approvedIntake2</td>
                                <td  style="text-align: right; vertical-align: top;">@list[i].approvedIntake1</td>

                                <td  style="text-align: right; vertical-align: top;">@list[i].totalIntake</td>
                                <td  style="text-align: right; vertical-align: top;">@Math.Ceiling(list[i].requiredFaculty)</td>

                                @if (deptloop == 1)
                                {
                                    <td  style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@Math.Ceiling(departmentWiseRequiredFaculty)</td>
                                    <td  style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@list[i].AvailableFaculty</td>
                                    <td  style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@list[i].FalseNameFaculty</td>
                                    <td  style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@list[i].FalsePhotoFaculty</td>
                                    <td  style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@list[i].FalsePANNumberFaculty</td>
                                    <td  style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@list[i].FalseAadhaarNumberFaculty</td>
                                    <td  style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@list[i].CertificatesIncompleteFaculty</td>
                                    <td  style="text-align: right; vertical-align: top;" rowspan="@distDeptcount">@list[i].AbsentFaculty</td>
                                }

                            </tr>

                        }
                        deptloop++;

                    }

                }
            </tbody>
        </table>
    }

