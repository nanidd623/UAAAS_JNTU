@model UAAAS.Models.my_aspnet_users
@{
    ViewBag.Title = "Add User";
}

<h2>Add User</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    if (TempData["Error"] != null)
    {
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
    }
    if (TempData["Success"] != null)
    {
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
    }
    <div class="details_table">

        @Html.HiddenFor(model => model.applicationId, new { Value = 1 })
        @*<div class="editor-label">
            @Html.LabelFor(model => model.applicationId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.applicationId)
            @Html.ValidationMessageFor(model => model.applicationId)
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.name)
            @Html.ValidationMessageFor(model => model.name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.email)
            @Html.ValidationMessageFor(model => model.email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.isApproved)
        </div>
        <div class="editor-field">
            @*@Html.EditorFor(model => model.isApproved)*@
            <label>@Html.RadioButtonFor(model => model.isApproved, true) Active</label>
            <label>@Html.RadioButtonFor(model => model.isApproved, false) Inactive</label>
            @Html.ValidationMessageFor(model => model.isApproved)
        </div>

        @Html.HiddenFor(model => model.isAnonymous, new { Value = false })
        @Html.HiddenFor(model => model.lastActivityDate, new { Value = DateTime.Now })

        @*<div class="editor-label">
            @Html.LabelFor(model => model.isAnonymous)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.isAnonymous)
            @Html.ValidationMessageFor(model => model.isAnonymous)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.lastActivityDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.lastActivityDate)
            @Html.ValidationMessageFor(model => model.lastActivityDate)
        </div>*@

        <div class="editor-label last-row">
            &nbsp;
        </div>
        <div class="editor-field last-row">
            <p>
                @Html.ActionLink("Back", "Index", null, new { @class = "back_button" })
                <input type="submit" value="Add" />
            </p>
        </div>
        <div class="clear"></div>

    </div>
}
