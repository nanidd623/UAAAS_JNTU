@model IList<UAAAS.Models.CollegeExpenditure>
@using System.Globalization
@using UAAAS.Models
@{
    ViewBag.Title = "College Expenditure";
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
}

@if (TempData["Error"] != null)
{
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
}
@if (TempData["Success"] != null)
{
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
}
@if (ViewBag.IsEditable == true)
{
    <h2>College Expenditure</h2>
    <p class="create_link_right">
        @Html.ActionLink("Edit", "Edit", "CollegeExpenditure", new { @class = "create_button" /* id=Model.PrimaryKey */ })
    </p>
}
else
{
    @*<p class="create_link_right">
            <input name="btnPrint" type="button" onclick="printdiv('div_print');" value=" Print" class="create_button">
        </p>*@
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $(".view_hide").show();
    });
    function printdiv(printpage) {
        $(".view_hide").hide();
        //Get the HTML of div
        var divElements = document.getElementById(printpage).innerHTML;
        //Get the HTML of whole page
        var oldPage = document.body.innerHTML;

        //Reset the page's HTML with div's HTML only
        document.body.innerHTML =
          "<html><head><title></title></head><body>" +
          divElements.fontsize(1) + "</body>";

        //Print Page
        window.print();

        //Restore orignal HTML
        document.body.innerHTML = oldPage;
        $(".view_hide").show();
        return false;
    }
</script>
<div id="div_print">
    @if (ViewBag.IsEditable == false)
    {
        <h2>College Expenditure</h2>
    }
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)

        if (ViewBag.Norecords == true)
        {
            <div class="warning" style="width: 200px; margin: 0 auto;">
                <p>No Data found</p>
            </div>
        }
        else
        {

            <table class="four_columns" style="width: 100%;">
                <tr style="font-weight: bold;">
                    <td style="text-align: center; width: 50px;" class="col11">S.No</td>
                    <td style="text-align: left; width: 250px;" class="col11">Expenditure</td>
                    <td style="text-align: left;" class="col11">Rupees in Lakhs</td>
                </tr>

                @for (int i = 0; i < ViewBag.Count; i++)
                {
                    <tr>
                        <td style="text-align: center;" class="col21">
                            @(i + 1)
                        </td>
                        <td style="text-align: left;" class="col21">
                            @Html.LabelFor(m => m[i].expenditure, Model[i].expenditure == null ? string.Empty : Model[i].expenditure.ToString())
                            @Html.HiddenFor(m => m[i].expenditureTypeID)
                        </td>
                        <td style="text-align: left;" class="col21">
                            @if (ViewBag.Update == true)
                            {
                                if (Model[i].expenditureTypeID == 8)
                                {
                                    if (Model[i].expenditureAmount > 0)
                                    {
                                        var expamount = Convert.ToInt32(Model[i].expenditureAmount) + " th Payscale";
                                        @Html.Label(expamount)
                                    }
                                    else
                                    {
                                        @Html.Label("NA")
                                    }
                                    @*@Html.DisplayFor(m => m[i].expenditureAmount, new { Value = Model[i].expenditureAmount == 0 ? "0" :  Math.Ceiling(Model[i].expenditureAmount).ToString(), style = "text-align: center;" })*@
                                }
                                else
                                {
                                    @Html.DisplayFor(m => m[i].expenditureAmount, new { Value = Model[i].expenditureAmount == 0 ? "0" : Model[i].expenditureAmount.ToString(CultureInfo.InvariantCulture), style = "text-align: center;" })
                                }
                            }
                            else
                            {
                                @Html.DisplayFor(m => m[i].expenditureAmount, new { Value = Model[i].expenditureAmount == 0 ? string.Empty : Model[i].expenditureAmount.ToString(CultureInfo.InvariantCulture), style = "text-align: center;" })
                            }
                        </td>
                    </tr>
                }
            </table>

        }
    }
</div>
