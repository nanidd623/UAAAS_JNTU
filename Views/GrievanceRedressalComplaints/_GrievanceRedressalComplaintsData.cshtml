@model UAAAS.Models.GrievanceRedressalComplaints
<script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@using (Ajax.BeginForm("AddEditRecord", "GrievanceRedressalComplaints", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "ComplaintsDialog" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.collegeId, new { @Value = Model.collegeId })
    if (TempData["Error"] != null)
    {
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
    }
    if (TempData["Success"] != null)
    {
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
    }
    <div class="details_table">
        @if (ViewBag.IsUpdate == true)
        {
            @Html.HiddenFor(model => model.id)
        }
        <div class="editor-label" style="width: 98%">
            @Html.LabelFor(model => model.complaintReceived)<br />
            @Html.TextAreaFor(model => model.complaintReceived, new { style = "width: 80%;" })
            @Html.ValidationMessageFor(model => model.complaintReceived)
        </div>

        <div class="editor-label" style="width: 98%">
            @Html.LabelFor(model => model.actionsTaken)
            <br />
            @Html.TextAreaFor(model => model.actionsTaken, new { style = "width: 80%;" })
            @Html.ValidationMessageFor(model => model.actionsTaken)
        </div>

        @Html.HiddenFor(model => model.createdOn)
        @Html.HiddenFor(model => model.createdBy)
        <div style="text-align: center">
            <p>
                @if (ViewBag.IsUpdate == true)
                {
                    <input type="submit" value="Update" id="btnUpdate" name="cmd" />   
                }
                else
                {
                    <input type="submit" value="Save" id="btnSave" name="cmd" />
                }
            </p>
        </div>
    </div>
    
    
@*<table class="downloads_table" style="width: 100%;">
        <tr>
            <td class="editor-label1" style="width: 100%;">
                @Html.LabelFor(model => model.complaintReceived)
            </td>
        </tr>
        <tr>
            <td class="editor-field1" style="width: 100%;">
                @Html.TextBoxFor(model => model.complaintReceived)
                @Html.ValidationMessageFor(model => model.complaintReceived)
            </td>
        </tr>
        <tr>
            <td class="editor-label1" style="width: 100%;">
                @Html.LabelFor(model => model.actionsTaken)
            </td>
        </tr>
        <tr>
            <td class="editor-field1" style="width: 100%;">
                @Html.TextBoxFor(model => model.actionsTaken)
                @Html.ValidationMessageFor(model => model.actionsTaken)
            </td>
        </tr>
        
    </table>
    <p>
        @if (ViewBag.IsUpdate == true)
        {
            <input type="submit" value="Update" id="btnUpdate" name="cmd" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" />
        }
        else
        {
            <input type="submit" value="Save" id="btnSave" name="cmd" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" />
        }
        <input type="button" value="Cancel" id="btnCancel" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" />
    </p>*@
}