@using System.Web.UI.WebControls
@using UAAAS.Models
@model IEnumerable<UAAAS.Models.FacultyRegistration>
@{
    ViewBag.Title = "Department wise Faculty";
    var index = 1;
    string fid = string.Empty;
    DateTime date = new DateTime(2018, 02, 19, 00, 00, 00);
    int?[] Group1_Specializationids = new int?[] { 115, 119, 172, 120 };
    int?[] Group2_Specializationids = new int?[] { 116, 167, 123, 170, 117, 124 };
    int?[] Group3_Specializationids = new int?[] { 18, 19, 114, 169, 122 };
    int?[] Group4_Specializationids = new int?[] { 172, 117, 121 };

}

<script type="text/javascript">
    var asInitVals = new Array();
    $(document).ready(function () {
        var mainUrl = window.location;
        var url;

        /* Initialize table and make first column non-sortable*/
        var oTable = $('#example').dataTable({
            "bJQueryUI": true,
            "iDisplayLength": 50,
            "bStateSave": false,
            "sDom": '<"top"lfip>rt<"bottom"ip<"clear">',
            //"sPaginationType": "full_numbers",
            "oLanguage": {
                "sSearch": "Search all columns:",
                "oPaginate": {
                    "sFirst": "",
                    "sLast": "",
                    "sNext": "",
                    "sPrevious": ""
                }
            },
            "fnInitComplete": function () {
                var oSettings = $('#example').dataTable().fnSettings();
                for (var i = 0 ; i < oSettings.aoPreSearchCols.length ; i++) {
                    if (oSettings.aoPreSearchCols[i].sSearch.length > 0) {
                        $("tfoot input")[i].value = oSettings.aoPreSearchCols[i].sSearch;
                        $("tfoot input")[i].className = "";
                    }
                }
            },
            "aoColumns": [{ "bSortable": true, "bSearchable": true }, null, null, null, null, null, null, null, null, null, null],
            //"aoColumns": [{ type: "select", values: ['Gecko', 'Trident', 'KHTML', 'Misc', 'Presto', 'Webkit', 'Tasman'] },{ type: "text" },null,{ type: "number" },{ type: "select" }]
        });
        /*
         * Support functions to provide a little bit of 'user friendlyness' to the textboxes in
         * the footer
         */
        $("tfoot input").each(function (i) {
            asInitVals[i] = this.value;
        });
        $("tfoot input").focus(function () {
            if (this.className == "search_init") {
                this.className = "";
                this.value = "";
            }
        });
        $("tfoot input").blur(function (i) {
            if (this.value == "") {
                this.className = "search_init";
                this.value = asInitVals[$("tfoot input").index(this)];
            }
        });

        $("tfoot input").keyup(function () {
            /* Filter on the column (the index) of this element */
            oTable.fnFilter(this.value, $("tfoot input").index(this));
        });

        $('#departmentName').change(function () {
            var departmentName = $(this).val();
            if ($('#departmentName').val() != '') {
                window.location = '/FacultyVerificationDENew/DepartmentWiseFacultyView?departmentname=' + departmentName;
            }
            else {
                window.location = '/FacultyVerificationDENew/DepartmentWiseFacultyView';
            }
        });

        $("#btnExport").click(function () {
            var departmentName = $("#departmentName").val();
            if (departmentName == null || departmentName == "")
                return false;
            else {
                window.location = '/FacultyVerificationDENew/DepartmentWiseFacultyExport?departmentname=' + departmentName;
            }
        });

        $("#btnAllExport").click(function () {
            window.location = '/FacultyVerificationDENew/AllDepartmentsFacultyExport';
        });
    });
</script>

<div>
    <h2 style="display:inline-block">Department wise Faculty</h2>
    <p style="float: right">
        <input type="submit" id="btnAllExport" value="All Departments Export" name="command" />
    </p>
</div>

<table class="four_columns">
    <tr>
        <td class="col1">
            <span>Department</span>
        </td>
        <td class="col2" colspan="4">
            @Html.DropDownList("departmentName", new SelectList(ViewBag.Departments as System.Collections.IEnumerable, "deptName", "deptName"), "--Select--", new { id = "departmentName" })
            &nbsp;&nbsp;&nbsp;
        </td>
    </tr>
</table>
<br />
@if (Model.Count() > 0)
{
    <div style="text-align: right">
        <p style="text-align: right">
            <input type="submit" id="btnExport" value="Export" name="command" />
        </p>
    </div>
}

@using (Html.BeginForm())
{
    if (TempData["Error"] != null)
    {
        <div class="error">
            <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
        </div>
    }
    if (TempData["Success"] != null)
    {
        <div class="success">
            <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
        </div>
    }


    <table id="example" class="display">
        <thead>
            <tr>
                <th style="width: 50px; text-align: center;">S.No</th>
                <th style="width: 140px; text-align: center;">Registration ID</th>
                <th style="text-align: left;width:315px">Full Name</th>
                <th style="width: 120px; text-align: center;">College</th>
                <th style="width: 120px; text-align: center;">Degree</th>
                <th style="width: 120px; text-align: center;">Department</th>
                <th style="width: 120px; text-align: center;">Specialization</th>
                <th style="width: 120px; text-align: center;">PG Specialization</th>
                <th style="width: 120px; text-align: center;">Identified For</th>
                <th style="width: 120px; text-align: center;">Email</th>
                <th style="width: 120px; text-align: center;">Phone Number</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                int Phd = 0;
                if (@item.jntuh_registered_faculty_education.Count() != 0)
                {
                    if (@item.jntuh_registered_faculty_education.Where(e => e.jntuh_education_category.id == 6).Select(e => e.id).FirstOrDefault() != 0)
                    {
                        Phd = 1;
                    }
                }
                <tr>
                    <td style="text-align: center; vertical-align: middle;border-bottom: 1px solid #fff;">
                        @(index++)
                    </td>
                    <td style="text-align: center; text-transform: uppercase; vertical-align: middle;">
                        @Html.DisplayFor(modelItem => item.RegistrationNumber)
                    </td>
                    <td style="vertical-align: middle; text-transform: uppercase; text-align: left;">
                        @if (item.Principal != "")
                        {
                            if (@Phd == 1)
                            {
                                @*@Html.ActionLink(Html.DisplayFor(modelItem => item.FirstName).ToHtmlString(), "ViewFacultyDetails", "FacultyVerificationDENew", new { fid = UAAAS.Models.Utilities.EncryptString(item.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]), collegeid = Request.Params["collegeid"] }, new { target = "_blank" })*@
                                @Html.DisplayFor(modelItem => item.FirstName)
                                <span>&nbsp;&nbsp;</span>
                                @Html.DisplayFor(modelItem => item.MiddleName)
                                <span>&nbsp;&nbsp;</span>
                                @Html.DisplayFor(modelItem => item.LastName)
                                if (item.NotconsiderPhd == true)
                                {
                                    <span style="color: blue; font-weight: bold">(Ph.D)</span>
                                }
                                else
                                {
                                    <span style="color: Red; font-weight: bold">(Ph.D)</span>
                                }

                                <span style="color: red; font-weight: bold;">(Principal)</span>
                            }
                            else
                            {
                                @*@Html.ActionLink(Html.DisplayFor(modelItem => item.FirstName).ToHtmlString(), "ViewFacultyDetails", "FacultyVerificationDENew", new { fid = UAAAS.Models.Utilities.EncryptString(item.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]), collegeid = Request.Params["collegeid"] }, new { target = "_blank" })*@
                                @Html.DisplayFor(modelItem => item.FirstName)
                                <span>&nbsp;&nbsp;</span>
                                @Html.DisplayFor(modelItem => item.MiddleName)
                                <span>&nbsp;&nbsp;</span>
                                @Html.DisplayFor(modelItem => item.LastName) <span style="color: red; font-weight: bold;">(Principal)</span>
                            }

                        }
                        else
                        {
                            if (@Phd == 1)
                            {
                                @*@Html.ActionLink(Html.DisplayFor(modelItem => item.FirstName).ToHtmlString(), "ViewFacultyDetails", "FacultyVerificationDENew", new { fid = UAAAS.Models.Utilities.EncryptString(item.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]), collegeid = Request.Params["collegeid"] }, new { target = "_blank" })*@
                                @Html.DisplayFor(modelItem => item.FirstName)
                                <span>&nbsp;&nbsp;</span>
                                @Html.DisplayFor(modelItem => item.MiddleName)
                                <span>&nbsp;&nbsp;</span>
                                if (item.NotconsiderPhd == true)
                                {
                                    <span style="color: blue; font-weight: bold">(Ph.D)</span>
                                }
                                else
                                {
                                    <span style="color: Red; font-weight: bold">(Ph.D)</span>
                                }
                            }
                            else
                            {
                                @*@Html.ActionLink(Html.DisplayFor(modelItem => item.FirstName).ToHtmlString(), "ViewFacultyDetails", "FacultyVerificationDENew", new { fid = UAAAS.Models.Utilities.EncryptString(item.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]), collegeid = Request.Params["collegeid"] }, new { target = "_blank" })*@
                                @Html.DisplayFor(modelItem => item.FirstName)
                                <span>&nbsp;&nbsp;</span>
                                @Html.DisplayFor(modelItem => item.MiddleName)
                                <span>&nbsp;&nbsp;</span>
                                @Html.DisplayFor(modelItem => item.LastName)
                            }
                        }

                    </td>
                    <td style="text-align: left; vertical-align: middle;">
                        @Html.DisplayFor(modelItem => item.CollegeName)
                    </td>
                    <td style="text-align: left; vertical-align: middle;">
                        @Html.DisplayFor(modelItem => item.DegreeName)
                    </td>
                    <td style="text-align: left; vertical-align: middle;">
                        @Html.DisplayFor(modelItem => item.department)
                    </td>
                    <td style="text-align: left; vertical-align: middle;">
                        <span>
                            @if (item.IdentfiedFor == "PG" || item.IdentfiedFor == "UG&PG")
                            {
                                @Html.DisplayFor(modelItem => item.SpecializationIdentfiedFor)
                            }

                        </span>
                    </td>
                    <td style="text-align: left; vertical-align: middle;">

                        @if (Group1_Specializationids.Contains(item.PGSpecialization))
                        {
                            @Html.DisplayFor(modelItem => item.PGSpecializationName)
                            <span style="color: red; font-weight: bold">(G1)</span>
                        }
                        else if (Group2_Specializationids.Contains(item.PGSpecialization))
                        {
                            @Html.DisplayFor(modelItem => item.PGSpecializationName)
                            <span style="color: red; font-weight: bold">(G2)</span>
                        }
                        else if (Group3_Specializationids.Contains(item.PGSpecialization))
                        {
                            @Html.DisplayFor(modelItem => item.PGSpecializationName)
                            <span style="color: red; font-weight: bold">(G3)</span>
                        }
                        else if (Group4_Specializationids.Contains(item.PGSpecialization))
                        {
                            @Html.DisplayFor(modelItem => item.PGSpecializationName)
                            <span style="color: red; font-weight: bold">(G4)</span>
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.PGSpecializationName)
                        }
                    </td>
                    <td style="text-align: left; vertical-align: middle;">
                        @Html.DisplayFor(modelItem => item.IdentfiedFor)
                    </td>
                    <td style="text-align: left; vertical-align: middle;">
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td style="text-align: left; vertical-align: middle;">
                        @Html.DisplayFor(modelItem => item.Mobile)
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <th>
                    <input type="text" id="i-0" style="width: 80%; text-align: left; display: none;" class="search_init">
                </th>
                <th>
                    <input type="text" id="i-1" style="width: 90%; text-align: center;" class="search_init">
                </th>
                <th>
                    <input type="text" id="i-2" style="width: 90%; text-align: center;" class="search_init">
                </th>
                <th>
                    <input type="text" id="i-3" style="width: 90%; text-align: center;" class="search_init">
                </th>
                <th>
                    <input type="text" id="i-4" style="width: 90%; text-align: center" class="search_init">
                </th>
                <th>
                    <input type="text" id="i-5" style="width: 90%; text-align: center" class="search_init">
                </th>
                <th>
                    <input type="text" id="i-6" style="width: 90%; text-align: center;" class="search_init">
                </th>
                <th>
                    <input type="text" id="i-7" style="width: 90%; text-align: center;" class="search_init">
                </th>
                <th>
                    <input type="text" id="i-8" style="width: 90%; text-align: center" class="search_init">
                </th>
                <th>
                    <input type="text" id="i-9" style="width: 90%; text-align: center;" class="search_init">
                </th>
                <th>
                    <input type="text" id="i-10" style="width: 90%; text-align: center" class="search_init">
                </th>
            </tr>
        </tfoot>
    </table>
}

