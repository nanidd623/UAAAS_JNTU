@model IList<UAAAS.Models.OtherDesirableRequirements>
@using UAAAS.Models
@{
    ViewBag.Title = "Other Desirables";
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    } 
}

<h2>Other Desirables</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    if (ViewBag.NotUpload == true)
    {
    <span class="notUpload">You can not upload data Please contact Affiliations & Academic Audit if you want to upload</span>
    }
    else
    {
        if (TempData["Error"] != null)
        {
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
        }
        if (TempData["Success"] != null)
        {
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
        }
    
    <table class="">

        @for (int i = 0; i < ViewBag.Count; i++)
        {
            <tr>
                <td class="col1" style="width: 800px">
                    @Html.LabelFor(m => m[i].requirementType, Model[i].requirementType == null ? string.Empty : Model[i].requirementType.ToString())
                    @Html.HiddenFor(m => m[i].id)
                    @Html.HiddenFor(m => m[i].collegeId)
                    @Html.HiddenFor(m => m[i].governingBodymeetings)
                </td>
                <td class="col2" style="width: 200px">
                    @if (Model[i].requirementType == "No. of Governing Body meetings held in the past one academic year")
                    {                       
                        if(Model[i].governingBodymeetings==2)
                        {
                            <label>@Html.RadioButtonFor(m => m[i].isSelected,true, new { id = "nil" }) NIL</label>
                            <label>@Html.RadioButtonFor(m => m[i].isSelected,false, new { id = "one" }) One</label>
                            <label>@Html.RadioButtonFor(m => m[i].isSelected, 2,new { id = "oneormore" }) One or more</label>
                                   <script type="text/javascript">                                       
                                        $('#nil').removeAttr("checked");
                                        $('#one').removeAttr("checked");
                                        $('#oneormore').attr("checked", "checked");                                      
                                    </script>
                        }
                        else
                        {
                            <label>@Html.RadioButtonFor(m => m[i].isSelected, true) NIL</label>
                            <label>@Html.RadioButtonFor(m => m[i].isSelected, false) One</label>
                            <label>@Html.RadioButtonFor(m => m[i].isSelected, 2) One or more</label>
                        }
                        
                       
                    }
                    else
                    {
                    <label>@Html.RadioButtonFor(m => m[i].isSelected, true) Yes</label>
                    <label>@Html.RadioButtonFor(m => m[i].isSelected, false) No</label>
                    }
                    @Html.ValidationMessageFor(m => m[i].isSelected)
                   
                </td>
            </tr>
        }
        <tr>

        </tr>
    </table>
    <p class="right_buttons">
        <input type="submit" value="Save" />
    </p>
    }
}
