@model UAAAS.Models.ClusterScheduleEmails
@{
    ViewBag.Title = "Cluster Schedule Emails";
}
<h2>Cluster Schedule Emails</h2>
<script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {

        $('#btnsubmit').click(function () {          
            if ($('#Cluster').val() == '') {
                $('#Cluster').addClass('input-validation-error');
                return false;
            }
            else {               
                $('#Cluster').removeClass('input-validation-error');
            }
        });
        //rettriveing clusterName by using querystring
        function querystring(key) {
            var re = new RegExp('(?:\\?|&)' + key + '=(.*?)(?=&|$)', 'gi');
            var r = [], m;
            while ((m = re.exec(document.location.search)) != null) r.push(m[1]);
            return r;
        }
        $("#Cluster").change(function () {
            if ($('#Cluster').val() == '') {
                $('#divexport').hide();
            }
            else {
                $('#divexport').show();
                $('#divexport').css('display', 'inline');
                var id = $('#Cluster').val();
                var s = $("#btnexport").attr("href");
                s = s.substring(0, s.indexOf('=') + 1);
                $("#btnexport").attr("href", s + id)
            }
            var ClusterID = $(this).val();
           // alert('a');
            GetPincodes(ClusterID);
        });

        if ($("#Cluster").val() > 0) {
            var ClusterID = $("#Cluster").val();
            //alert('b');
            GetPincodes(ClusterID);
        }

        function GetPincodes(ClusterID) {
            $.getJSON("/AutoAllocation/GetPincodes", { id: ClusterID },
                function (data) {
                    //alert('c');
                    $("#divCollegeCount").html(data);
                });
        }       

    });
</script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    if (TempData["Error"] != null)
    {
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
    }
    if (TempData["Success"] != null)
    {
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
    }    
    <div class="details_table">

        <div class="editor-label">
            @Html.LabelFor(model => model.cluster)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.cluster,
            new SelectList(ViewBag.Cluster as System.Collections.IEnumerable, "Text", "Value"),
            "-- Select --", new { id = "Cluster",@style="width: 20%;" })
            <div id="divCollegeCount" style="color: red; display: inline;"></div>
            <div style="display:none;" id="divexport">  @Html.ActionLink("Export", "Index", "AuditScheduleReport", new {clusterName = DBNull.Value}, new { @class = "create_button", id = "btnexport" })</div>
            @Html.ValidationMessageFor(model => model.cluster)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.emailSubject)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.emailSubject, new { @style = "width: 90%;" ,placeholder="Subject"})
            @Html.ValidationMessageFor(model => model.emailSubject)
        </div>

        <div class="editor-label" style="height:160px">
            @Html.LabelFor(model => model.emailBody)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.emailBody, new { @style = "height:150px" ,placeholder="Body"})
            @Html.ValidationMessageFor(model => model.emailBody)
        </div>

        <div class="editor-label" style="height:90px">
            @Html.LabelFor(model => model.smsText)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.smsText, new {placeholder="SMS Text" })
            @Html.ValidationMessageFor(model => model.smsText)
        </div>
         <div class="clear"></div>
        <div style="text-align: center">
            <p>
                <input type="submit" id="btnsubmit" value="Send" class="submit" name="cmd" />
            </p>
        </div>

    </div>
}
