@model IList<UAAAS.Models.AdminLand>
@using UAAAS.Models
@{
    ViewBag.Title = "Instructional Area";
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    } 
}

<h2>Instructional Area</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    if (ViewBag.NotUpload == true)
    {
    <span class="notUpload">You can not upload data Please contact Affiliations & Academic Audit if you want to upload</span>
    }
    else
    {
        @*if (TempData["Error"] != null)
        {
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
        }
        if (TempData["Success"] != null)
        {
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
        }*@
    
    <table class="downloads_table InstructionalLand" style="width: 100%;">

        <tr style="font-weight: bold;">
            <th style="text-align: left;">Type</th>
            <th style="text-align: center; width: 120px;" class="col11">Program</th>
            @*<th style="text-align: center; width: 250px;" class="col11">Specialization</th>*@
            <th style="text-align: center; width: 150px; display: none;">Required Rooms</th>
            <th style="text-align: center; width: 120px;">Available Rooms</th>
            <th style="text-align: center; width: 120px; display: none;">Required Area</th>
            <th style="text-align: center; width: 120px;">Available Area</th>
        </tr>

        @for (int i = 0; i < ViewBag.Count; i++)
        {
            <tbody>
                <tr>
                    <td style="text-align: left;">
                        @Html.LabelFor(m => m[i].requirementType, Model[i].requirementType == null ? string.Empty : Model[i].requirementType.ToString())
                        @Html.HiddenFor(m => m[i].id)
                        @Html.HiddenFor(m => m[i].collegeId)
                        @Html.HiddenFor(m => m[i].specializationID)
                    </td>
                    <td style="text-align: center;">@Html.LabelFor(m => m[i].programId, Model[i].jntuh_program_type == null ? string.Empty : Model[i].jntuh_program_type.programType.ToString())</td>
                    @*<td style="text-align: center;">@Html.LabelFor(m => m[i].specializationName, Model[i].specializationName == null ? string.Empty : Model[i].specializationName.ToString())</td>*@
                    <td style="text-align: center; display: none;">@Html.LabelFor(m => m[i].requiredRooms, Model[i].requiredRooms == null ? Model[i].requiredRoomsCalculation == null ? "-" : Model[i].requiredRoomsCalculation : Model[i].requiredRooms.ToString().Replace(".00", ""))</td>
                    <td style="text-align: center;">@Html.TextBoxFor(m => m[i].availableRooms, new { id = "aRooms", @class = "allownumericwithdecimal availableRooms", @style = "width: 60px; text-align: center;", Value = Model[i].availableRooms.ToString().Replace(".00", "") })</td>
                    <td style="text-align: center; display: none;">@Html.LabelFor(m => m[i].requiredArea, Model[i].requiredArea == null ? Model[i].requiredAreaCalculation == null ? "-" : Model[i].requiredAreaCalculation : Model[i].requiredArea.ToString().Replace(".00", ""))</td>
                    <td style="text-align: center;">@Html.TextBoxFor(m => m[i].availableArea, new { id = "aArea", @class = "allownumericwithdecimal availableArea", @style = "width: 60px; text-align: center;", Value = Model[i].availableArea.ToString().Replace(".00", "") })</td>
                </tr>
            </tbody>
        }

    </table>
    <p class="right_buttons">
        <input type="submit" value="Save" onclick="return validate();" />
    </p>
    }
}
<script type="text/javascript">
    function validate() {
        var availableRoomsResult = true;
        var availableAreaResult = true;
        $('.InstructionalLand > tbody  > tr').each(function () {
            var availableRooms = $(this).find('#aRooms').val();
            var availableArea = $(this).find('#aArea').val();

            if (availableArea != '') {
                if (availableArea != "0") {
                    if (availableRooms == '' || availableRooms == "0") {
                        alert("Please Enter Available Rooms");
                        $(this).find("#aRooms").css({
                            "background": "#FC6A6C"
                        });
                        availableRoomsResult = false;
                    }
                    else {
                        $(this).find("#aRooms").css({
                            "background": "#FFFFFF"
                        });
                    }
                }
            }
            if (availableRooms != '') {
                if (availableRooms != "0") {
                    if (availableArea == '' || availableArea == "0") {
                        alert("Please Enter Available Area");
                        $(this).find("#aArea").css({
                            "background": "#FC6A6C"
                        });
                        availableAreaResult = false;
                    }
                    else {
                        $(this).find("#aArea").css({
                            "background": "#FFFFFF"
                        });
                    }
                }
            }
        });
        return availableRoomsResult && availableAreaResult;
    }
</script>
