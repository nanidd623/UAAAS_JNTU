@model UAAAS.Models.Laboratories
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@{
    ViewBag.Title = "LaboratoriesData";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    } 
}

<h2>Add Laboratories</h2>


@using (Ajax.BeginForm("AddEditRecord", "Laboratories", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "LaboratoriesDialog" }))
{
    @Html.ValidationSummary(true)
    if (TempData["Error"] != null)
    {
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
    }
    if (TempData["Success"] != null)
    {
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
    }
    <div class="details_table">
        @if (ViewBag.IsUpdate == true)
        {
            @Html.HiddenFor(model => model.id)
        }
        @Html.HiddenFor(model => model.collegeId, new { @Value = Model.collegeId })
        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.degreeId)
        </div>
        <div class="editor-field" style="width: 300px">
            @Html.DropDownListFor(model => model.degreeId,
            new SelectList(ViewBag.Degree as System.Collections.IEnumerable, "degreeId", "degree"),
            "-- Select --", new { id = "degreeId", @class = "width" })
            @Html.ValidationMessageFor(model => model.degreeId)
        </div>
         <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.departmentId)
        </div>
        <div class="editor-field" style="width: 300px">
            @Html.DropDownListFor(model => model.departmentId,
            new SelectList(Enumerable.Empty<SelectListItem>(), "id", "departmentName"),
            "-- Select --", new { id = "departmentId", @class = "width" })
            @Html.ValidationMessageFor(model => model.departmentId)
        </div>

         <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.specializationId)
        </div>
        <div class="editor-field" style="width: 300px">
            @Html.DropDownListFor(model => model.specializationId,
            new SelectList(Enumerable.Empty<SelectListItem>(), "id", "specializationName"),
            "-- Select --", new { id = "Specialization", @class = "width" })
            @Html.ValidationMessageFor(model => model.specializationId)
        </div>
         <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.shiftId)
        </div>
        <div class="editor-field" style="width: 300px">
            @Html.DropDownListFor(model => model.shiftId,
            new SelectList(ViewBag.Shift as System.Collections.IEnumerable, "id", "shiftName"),
            new { id = "Shift", @class = "width" })
            @Html.ValidationMessageFor(model => model.shiftId)
        </div>
        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.yearInDegreeId)
        </div>
        <div class="editor-field" style="width: 300px">
            @Html.DropDownListFor(model => model.yearInDegreeId,
            new SelectList(ViewBag.Year as System.Collections.IEnumerable, "id", "yearInDegree"),
            new { id = "Year", @class = "width" })
            @Html.ValidationMessageFor(model => model.yearInDegreeId)
        </div>
        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.labName)
        </div>
        <div class="editor-field" style="width: 300px">
            @Html.TextBoxFor(model => model.labName)
            @Html.ValidationMessageFor(model => model.labName)
        </div>
        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.IsShared)
        </div>
        <div class="editor-field" style="width: 300px">
            @Html.DropDownListFor(model => model.IsShared, new List<SelectListItem>
                 {
                    new SelectListItem{ Text="true", Value = "1" },
                    new SelectListItem{ Text="false", Value = "0" }
                 })       
            @Html.ValidationMessageFor(model => model.IsShared)
        </div>
        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.totalExperiments)
        </div>
        <div class="editor-field" style="width: 300px">
            @Html.TextBoxFor(model => model.totalExperiments)
            @Html.ValidationMessageFor(model => model.totalExperiments)
        </div>
        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.labFloorArea)
        </div>
        <div class="editor-field" style="width: 300px">
            @Html.TextBoxFor(model => model.labFloorArea)
            @Html.ValidationMessageFor(model => model.labFloorArea)
        </div>

        @Html.HiddenFor(model => model.createdOn)
        @Html.HiddenFor(model => model.createdBy)
        <div style="text-align: center">
            <p>
                @if (ViewBag.IsUpdate == true)
                {
                    <input type="submit" value="Update" id="btnUpdate" name="cmd" />                   
                }
                else
                {
                    <input type="submit" value="Save" id="btnSave" name="cmd" />
                }
            </p>
        </div>
    </div>
 
}

<script type="text/javascript">
    $(document).ready(function () {
        GetSpecialization(@Model.departmentId);
        $(".calendar, .year").css("width", "75px");
        if ($("#degreeId").val() > 0) {
            GetDepartments($("#degreeId").val());
        }
        
        
        $("#degreeId").change(function () {
            var DegreeID = $(this).val();
            GetDepartments(DegreeID);
        });
        if ($("#departmentId").val() > 0)
        {
            GetSpecialization($("#departmentId").val());
        }
        $("#departmentId").change(function () {
            var DepartmentID = $(this).val();
            GetSpecialization(DepartmentID);
        });

        function GetDepartments(DegreeID) {
            $.getJSON("/Laboratories/GetDepartments",{ id : DegreeID},
                function(DepartmentsData){
                    var select = $("#departmentId");
                    select.empty();
                    select.append($('<option/>',{
                        value: '',
                        text: '-- Select --'
                    }));
                    $.each(DepartmentsData,function(index, itemdata){
                        select.append($('<option/>',{
                            value: itemdata.Value,
                            text: itemdata.Text,
                            selected: (itemdata.Value == @Model.departmentId ? true : false)
                        }));
                    });
                });
            }

        function GetSpecialization(DepartmantID){
            $.getJSON("/Laboratories/GetSpecialization", { id: DepartmantID },
                function(Specializationdata){
                    var select = $("#Specialization");
                    select.empty();
                    select.append($('<option/>',{
                        value: '',
                        text: '-- Select --'
                    }));
                    $.each(Specializationdata,function(index, itemdata){
                        select.append($('<option/>',{
                            value: itemdata.Value,
                            text: itemdata.Text,
                            selected: (itemdata.Value == @Model.specializationId ? true : false)
                        }));
                    });
                });
            }
    });

</script>
