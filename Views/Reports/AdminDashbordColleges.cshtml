@model IList<UAAAS.Models.AdminDashbord>
@using UAAAS.Models
@{
    var Title = Request["strtype"].ToString();
    if (Title != null)
    {
        ViewBag.Title = Title;
    }
    int sno = 1;    
}

@if (TempData["Error"] != null)
{
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
}
<script type="text/javascript">
    var asInitVals = new Array();
    $(document).ready(function () {
        $('#collegestatusId').removeClass('input-validation-error');
        $('#districtId').removeClass('input-validation-error');
        $('#collegeTypeId').removeClass('input-validation-error');
        /* Initialize table and make first column non-sortable*/
        var oTable = $('#example').dataTable({
            "bJQueryUI": true,
            "iDisplayLength": 1000,
            "bStateSave": false,
            "sDom": '<"top"lfip>rt<"bottom"ip<"clear">',
            //"sPaginationType": "full_numbers",
            "oLanguage": {
                "sSearch": "Search all columns:",
                "oPaginate": {
                    "sFirst": "",
                    "sLast": "",
                    "sNext": "",
                    "sPrevious": ""
                }
            },
            "fnInitComplete": function () {
                var oSettings = $('#example').dataTable().fnSettings();
                for (var i = 0 ; i < oSettings.aoPreSearchCols.length ; i++) {
                    if (oSettings.aoPreSearchCols[i].sSearch.length > 0) {
                        $("tfoot input")[i].value = oSettings.aoPreSearchCols[i].sSearch;
                        $("tfoot input")[i].className = "";
                    }
                }
            },
            "aoColumns": [{ "bSortable": true, "bSearchable": true }, null, null],
            //"aoColumns": [{ type: "select", values: ['Gecko', 'Trident', 'KHTML', 'Misc', 'Presto', 'Webkit', 'Tasman'] },{ type: "text" },null,{ type: "number" },{ type: "select" }]
        });
        /*
         * Support functions to provide a little bit of 'user friendlyness' to the textboxes in
         * the footer
         */
        $("tfoot input").each(function (i) {
            asInitVals[i] = this.value;
        });
        $("tfoot input").focus(function () {
            if (this.className == "search_init") {
                this.className = "";
                this.value = "";
            }
        });
        $("tfoot input").blur(function (i) {
            if (this.value == "") {
                this.className = "search_init";
                this.value = asInitVals[$("tfoot input").index(this)];
            }
        });

        $("tfoot input").keyup(function () {
            /* Filter on the column (the index) of this element */
            oTable.fnFilter(this.value, $("tfoot input").index(this));
        });
        //$.getJSON("/CollegeIntakeProposed/GetDepartments",{ id : DegreeID},
    });


</script>
@using (Html.BeginForm("AdminDashbordColleges", "AdminDashbord", FormMethod.Post))
{
    if (Title != null)
    {
    <h2>@Title</h2>
    }
    <input type="hidden" name="Header" value="@Title" />
    <div style="text-align: right">
        <input type="submit" value="Export" name="cmd" />        
        @Html.ActionLink("Back", "Admin", "Dashboard", null, new { @class = "create_button" })
    </div>
    <table id="example" class="display">
        <thead>
           @* <tr>
                <th style="width: 20px; text-align: center;">S.No</th>
                <th style="text-align: center;">College Code</th>
                <th style="text-align: left;">College Name</th>               
                <th style="width: 150px; text-align: left;">Address</th>
                <th style="text-align: left;">City</th>
                <th style="text-align: center;">Pincode</th>
                <th class="ui-state-default" style="text-align: center;">Mobile</th>
            </tr>*@
             <tr>
            <th style="width: 50px; text-align: center;">S.No
            </th>
            <th style="width: 50px; text-align: center;">Code
            </th>
            <th style="text-align: left;">College Name
            </th>
            <th class="ui-state-default" style="width: 50px; text-align: center;">Status</th>
            <th class="ui-state-default" style="width: 50px; text-align: center;">A-414</th>
            <th class="ui-state-default" style="width: 70px; text-align: center;"></th>
            <th class="ui-state-default" style="width: 40px; text-align: center;"></th>
            <th class="ui-state-default" style="width: 40px; text-align: center;"></th>
            <th class="ui-state-default" style="width: 60px; text-align: center;"></th>
            <th class="ui-state-default" style="width: 135px; text-align: center;"></th>
            
        </tr>
        </thead>
        <tbody>

            @for (int i = 0; i < ViewBag.Count; i++)
            {
                @*<tr>
                    <td style="text-align: center;">
                        @(sno++)
                    </td>
                    <td style="text-align: center;">
                        @Model[i].collegeCode
                        @Html.HiddenFor(model => model[i].collegeCode)
                    </td>
                    <td style="text-align: left;">
                        @Model[i].collegeName
                        @Html.HiddenFor(model => model[i].collegeName)
                    </td>                  
                    <td style="text-align: left;">
                        @Model[i].address
                        @Html.HiddenFor(model => model[i].address)
                    </td>
                    <td style="text-align: left;">
                        @Model[i].townorCity
                        @Html.HiddenFor(model => model[i].townorCity)
                    </td>
                    <td style="text-align: center;">
                        @Model[i].pincode
                        @Html.HiddenFor(model => model[i].pincode)
                    </td>
                    <td style="text-align: center;">
                        @Model[i].mobile
                        @Html.HiddenFor(model => model[i].mobile)
                    </td>
                </tr>*@
            <tr>
                <td style="width: 50px; text-align: center;">
                    @(sno++)
                </td>
                <td style="width: 50px; text-align: center; text-transform: uppercase;">
                    @Model[i].collegeCode
                        @Html.HiddenFor(model => model[i].collegeCode)
                </td>
                <td style="text-align: left;">
                     @if (@Model[i].isActive == false)
                    {
                        <span style="color: red;">
                             @Model[i].collegeName
                            @Html.HiddenFor(model => model[i].collegeName)
                        </span> 
                    }
                    else
                    {
                          @Model[i].collegeName
                            @Html.HiddenFor(model => model[i].collegeName)
                      
                    }                   
                </td>
                <td style="width: 50px; text-align: center; font-weight: normal;">
                    @if (@Model[i].isActive == true)
                    {
                        <img src="../../Content/images/success.png" />
                    }
                    else
                    {
                        <img src="../../Content/images/not_submitted.png" />
                    }
                </td>
                <td style="width: 50px; text-align: center; font-weight: normal;">
                    <a href='@Url.Action("CollegeData", "AuditScheduleReport", new { preview = 1, collegeId = @Model[i].collegeid })' target="_blank" title="Click here to View College A-414 Data">
                        <img src="@Url.Content("../../Content/images/pdf.png")" alt="Home Page" height="18">
                    </a>
                </td>
                <td style="width: 70px; text-align: center; font-weight: normal;">
                    @if (@Model[i].isActive == true)
                    {
                        @Html.ActionLink("Permission", "Index", "DataSubmissionDate", new { id = UAAAS.Models.Utilities.EncryptString(@Model[i].collegeid.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]) }, new { @class = "edit_button1", target = "_blank" })
                    }
                </td>
                <td style="width: 40px; text-align: center; font-weight: normal;">
                    @if (@Model[i].isActive == true)
                    {
                        @Html.ActionLink("Edit", "AdminEdit", "CollegeIntakeProposed", new { id = UAAAS.Models.Utilities.EncryptString(@Model[i].collegeid.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]) }, new { @class = "edit_button1", target = "_blank" })
                    }
                </td>
                <td style="width: 40px; text-align: center;">
                    @Html.ActionLink("View", "View", "CollegeInformation", new { id = UAAAS.Models.Utilities.EncryptString(@Model[i].collegeid.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]) }, new { @class = "edit_button1", target = "_blank" })
                </td>
                <td style="width: 60px; text-align: center;">
                    @Html.ActionLink("Validation", "ValidateCollegeDataIndex", "ValidateCollegeData", new { id = UAAAS.Models.Utilities.EncryptString(@Model[i].collegeid.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]) }, new { @class = "edit_button1", target = "_blank" })
                </td>
                <td style="width: 135px; text-align: center;">
                    @Html.ActionLink("Missed Courses", "MissedProposedCoursesIndex", "MissedProposedCourses", new { id = UAAAS.Models.Utilities.EncryptString(@Model[i].collegeid.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]) }, new { @class = "edit_button1", target = "_blank" })
                </td>               
                 
            </tr>
            }
        </tbody>
        <tfoot>
            <tr>
            <th style="width: 50px;">
                <input type="text" id="i-0" style="width: 90%; text-align: left; display: none;" class="search_init">
            </th>
            <th style="width: 50px;">
                <input type="text" id="i-1" style="width: 60%; text-align: left;" class="search_init">
            </th>
            <th>
                <input type="text" id="i-2" style="width: 90%; text-align: left;" class="search_init">
            </th>
            <th class=" ui-state-default" style="width: 50px;">
                <input type="text" id="i-3" style="width: 90%; text-align: left; display: none;" class="search_init">
            </th>
            <th class=" ui-state-default" style="width: 50px;">
                <input type="text" id="i-4" style="width: 90%; text-align: left; display: none;" class="search_init">
            </th>
            <th class=" ui-state-default" style="width: 70px;">
                <input type="text" id="i-5" style="width: 90%; text-align: left; display: none;" class="search_init">
            </th>
            <th style="width: 40px;" class=" ui-state-default">
                <input type="text" id="i-6" style="width: 90%; text-align: left; display: none;" class="search_init">
            </th>
            <th style="width: 40px;" class=" ui-state-default">
                <input type="text" id="i-7" style="width: 90%; text-align: left; display: none;" class="search_init">
            </th>
            <th style="width: 60px;" class=" ui-state-default">
                <input type="text" id="i-8" style="width: 90%; text-align: left; display: none;" class="search_init">
            </th>
            <th style="width: 135px;" class=" ui-state-default">
                <input type="text" id="i-9" style="width: 90%; text-align: left; display: none;" class="search_init">
            </th>
             
        </tr>
        </tfoot>
    </table>
}

