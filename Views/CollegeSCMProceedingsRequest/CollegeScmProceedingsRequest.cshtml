@using System.Collections.Concurrent

@model UAAAS.Controllers.College.ScmProceedingsRequest
@{
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    }
    ViewBag.Title = "SCM Proceedings Request";
    int sno = 1;
    string requestDate = string.Empty;
}

<h2>Selection Committee Request</h2>
@*<div class="alerttext" style="background-color:cornflowerblue; border: 1px solid #f49820;">
        <p><b>Note: The College can request for Selection Committee any number of times for the same department even after submission of the previous SCM request by providing the required details again.</b></p>
    </div>*@
@*<div class="alerttext" style="background-color:cornflowerblue; border: 1px solid #f49820;">
        <p><b>Note:</b>Max Number of new faculty to be added as compliance faculty per department during appeal is restricted to only <b>Two</b>,irrespective of the number of the number of faculty selected during SCM.</p>
    </div>*@

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.plugin.from_html.js")" type="text/javascript"></script>

<script>
    $(document).ready(function () {


        //get pdf file size
        function GetNotificationFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#ScmNotificationSupportDoc")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }


        //get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            } else {
                return strName[0];
            }
        }


        //change function for pdf doc
        $(function () {
            $(".scmnotificationsupportdocfile").change(function () {

                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'pdf':
                        case 'PDF':

                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    $(".scmnotificationsupportdocfiles > span").text("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetNotificationFileSize(file);
                    size = size / 1048576;
                    if (size > 1) {
                        $(".scmnotificationsupportdocfiles > span").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $(".scmnotificationsupportdocfiles > span").text("");
                    }
                }

            });
        });


    });
</script>

@if (TempData["Error"] != null)
{
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
}
@if (TempData["Success"] != null)
{
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
}

<table style="width:100%;display:none;">
    <tr style="width:50%">
        <td>
            <a class="navigationurl" href="~/Content/UGC_Associate_Professor_Guidelines.pdf" target="_blank" style="color: red; font-weight: bold;">UGC Regulations <img src="../Content/images/latest.gif" alt="latest" /></a><br />
        </td>
        <td>
            <a class="navigationurl" href="~/Content/UGC_Associate_Prof_Format.docx" target="_blank" style="color: red; font-weight: bold;">UGC Associate Professor College Level Scrutiny Format <img src="../Content/images/latest.gif" alt="latest" /></a><br />
        </td>
    </tr>
    <tr>
        <td>
            <a class="navigationurl" href="~/Content/Associate_Professor_Guidelines.pdf" target="_blank" style="color: red; font-weight: bold;">AICTE Regulations <img src="../Content/images/latest.gif" alt="latest" /></a><br />
        </td>
        <td>
            <a class="navigationurl" href="~/Content/Associate_Professor_College_Level_Scrutiny_Format_New.docx" target="_blank" style="color: red; font-weight: bold;">AICTE Associate Professor College Level Scrutiny Format <img src="../Content/images/latest.gif" alt="latest" /></a><br />
        </td>
    </tr>
    @*<tr style="width:50%">
            <td>
                <a class="navigationurl" href="~/Content/Direct_Recruitment_application_form_UGC.docx" target="_blank" style="color: red; font-weight: bold;">Application form UGC</a><br />
            </td>
            <td>
                <a class="navigationurl" href="~/Content/Direct_Recruitment_application form_AICTE.docx" target="_blank" style="color: red; font-weight: bold;">Application form AICTE</a><br />
            </td>
        </tr>*@
</table>


@using (Html.BeginForm("CollegeScmProceedingsRequest", "CollegeSCMProceedingsRequest", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div>
        <table class="faculty_table" style="text-align: center; width: 100%">
            <tr>
                <td class="col1" style="font-weight: bold; width: 15%;">
                    <span>Department *</span>
                </td>
                <td class="col2" colspan="2" style="width: 85%;">
                    @Html.DropDownListFor(model => model.SpecializationId,
                        new SelectList(ViewBag.departments as System.Collections.IEnumerable, "SpecializationId", "SpecializationName"),
                        "-- Select --", new { id = "department", style = "" })

                </td>
            </tr>
            @*<tr>
                    <td class="col1" style="font-weight: bold; width: 15%;">
                        <span>Do you want to conduct SCM Interviews at University ?</span>
                    </td>
                    <td class="col2" colspan="2" style="width: 85%;">
                        @Html.RadioButtonFor(model => model.isscmatUniversity, true) <span>&nbsp;Yes</span>&nbsp;&nbsp;&nbsp;
                        @Html.RadioButtonFor(model => model.isscmatUniversity, false) <span>&nbsp;No</span>
                        @Html.ValidationMessageFor(model => model.isscmatUniversity)
                    </td>
                </tr>*@
            <tr>
                <td class="col1" style="font-weight: bold; width: 15%;">
                    <span>Total No of Faculty Required As For AICTE / PCI *</span>
                </td>
                <td class="col2" colspan="2" style="width: 85%;">
                    @Html.TextBoxFor(model => model.TotalFacultyRequired, new { @placeholder = "Total No of Faculty Required", @minlength = "1", @maxlength = "3", @style = "width:260px" })
                </td>
            </tr>

            <tr>
                <td colspan="3">
                    <table class="faculty_table" style="text-align: center; width: 100%">
                        <tr>
                            <td class="col1" style="font-weight: bold; width: 30%;">
                                <span>Faculty Type</span>
                            </td>
                            <td class="col1" style="width: 30%; font-weight: bold">
                                <span>Number of Available Faculty</span>
                            </td>
                            <td class="col1" style="width: 40%; font-weight: bold">
                                <span>Number of Required Faculty</span>
                            </td>
                        </tr>
                        <tr>
                            <td class="col1" style="font-weight: bold; width: 30%;">
                                <span>@Html.LabelFor(model => model.ProfessorVacancies) *</span>
                            </td>
                            <td class="col2" style="width: 35%;">
                                @Html.TextBoxFor(model => model.ProfessorVacancies, new { @placeholder = "Available Professor", @minlength = "1", @maxlength = "2" })
                                @Html.ValidationMessageFor(model => model.ProfessorVacancies)
                            </td>
                            <td class="col2" style="width: 35%;">
                                @Html.TextBoxFor(model => model.RequiredProfessorVacancies, new { @placeholder = "Required Professor", @minlength = "1", @maxlength = "2" })
                                @Html.ValidationMessageFor(model => model.RequiredProfessorVacancies)
                            </td>
                        </tr>
                        <tr>
                            <td class="col1" style="font-weight: bold; width: 30%;">
                                <span>@Html.LabelFor(model => model.AssociateProfessorVacancies) *</span>
                            </td>
                            <td class="col2" style="width: 35%;">
                                @Html.TextBoxFor(model => model.AssociateProfessorVacancies, new { @placeholder = "Available Associate Professor", @minlength = "1", @maxlength = "2" })
                                @Html.ValidationMessageFor(model => model.AssociateProfessorVacancies)
                            </td>
                            <td class="col2" style="width: 35%;">
                                @Html.TextBoxFor(model => model.RequiredAssociateProfessorVacancies, new { @placeholder = "Required Associate Professor", @minlength = "1", @maxlength = "2" })
                                @Html.ValidationMessageFor(model => model.RequiredAssociateProfessorVacancies)
                            </td>
                        </tr>
                        <tr>
                            <td class="col1" style="font-weight: bold; width: 30%;">
                                <span>@Html.LabelFor(model => model.AssistantProfessorVacancies) *</span>
                            </td>
                            <td class="col2" style="width: 35%;">
                                @Html.TextBoxFor(model => model.AssistantProfessorVacancies, new { @placeholder = "Available Assistant Professor", @minlength = "1", @maxlength = "2" })
                                @Html.ValidationMessageFor(model => model.AssistantProfessorVacancies)
                            </td>
                            <td class="col2" style="width: 35%;">
                                @Html.TextBoxFor(model => model.RequiredAssistantProfessorVacancies, new { @placeholder = "Required Assistant Professor", @minlength = "1", @maxlength = "2" })
                                @Html.ValidationMessageFor(model => model.RequiredAssistantProfessorVacancies)
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

            <tr>
                <td class="col1" style="font-weight: bold; width: 15%; vertical-align: middle">
                    <span>Reason for New Staff Selection Committee</span>
                </td>
                <td class="col2" colspan="2" style="width: 85%;">
                    @Html.TextAreaFor(model => model.Remarks, new { @style = "resize:none", @rows = "2", @cols = "3", @maxlength = "450" })

                </td>
            </tr>
            <tr>
                <td class="col1" style="font-weight: bold; width: 15%; vertical-align: middle">
                    <span>Paper Notification Date</span>
                </td>
                <td class="col2" colspan="2" style="width: 85%;">
                    @Html.TextBoxFor(model => model.NotificationDate, new { style = "width:200px", @class = "calendar" })

                </td>
            </tr>
            <tr>
                <td class="col1" style="font-weight: bold; width: 30%; vertical-align: middle; height: 30px">
                    <div>
                        <span>
                            Paper Notification *
                            <br />
                            <span style="color: blue;">(PDF should be less than 1MB size)</span>
                        </span>
                    </div>
                </td>
                <td class="col2" colspan="2" style="width: 85%; height: 20px">
                    <div class="editor-field scmnotificationsupportdocfiles">
                        @Html.TextBoxFor(model => model.ScmNotificationSupportDoc, new { type = "file", @class = "scmnotificationsupportdocfile", @required = "true" })

                        <br />
                        <span style="color: red;"></span>
                    </div><br /><br />

                </td>
            </tr>
        </table>

        <div style="text-align: right">
            <p style="text-align: right">
                @if (ViewBag.editable == false)
                {
                    <input type="submit" value="Submit" id="btnsend" name="cmd" />
                }


            </p>
        </div>
    </div>
}



@using (Html.BeginForm("CollegeScmPrint", "CollegeSCMProceedingsRequest", FormMethod.Post, new { }))
{

    if (ViewBag.collegescmrequestslist.Count != 0)
    {
        <div style="margin-top: 20px;">

            <span style="color: blue; font-size: 20px;line-height: 35px">Selection Procedure:<span style="color: red;font-weight: bold"> at University</span></span>
            @if (TempData["Error1"] != null)
            {
                <div class="error">
                    <p><strong>Error:</strong> @TempData["Error1"].ToString()</p>
                </div>
            }
            @if (TempData["Success1"] != null)
            {
                <div class="success">
                    <p><strong>Success:</strong> @TempData["Success1"].ToString()</p>
                </div>
            }
            @*<p style="text-align: right">
                    <input type="submit" class="create_button" value="Print" id="btn_print" name="cmd" />
                </p>*@
            <table class="webGrid">
                <thead>
                    <tr class="gridHeader">
                        <th>S.No.</th>
                        @*<th>Print</th>*@
                        <th>Department</th>

                        <th>Request Date</th>
                        <th style="width: 100px">Add Faculty</th>
                        <th style="width:105px">View Faculty</th>
                        <th style="width: 100px">Payment</th>
                    </tr>
                </thead>
                <tbody style="background: #FCF1D1;">
                    @for (int i = 0; i < Model.ScmProceedingsRequestslist.OrderByDescending(e => e.CreatedDate).Count(); i++)
                    {
                        requestDate = "";
                        bool isMultiple = Model.scmtotalrequests[i].TotalFacultyRequired % 5 == 0;
                        if (Model.ScmProceedingsRequestslist[i].RequestSubmittedDate != null)
                        {
                            requestDate = UAAAS.Models.Utilities.MMDDYY2DDMMYY(Model.ScmProceedingsRequestslist[i].RequestSubmittedDate.ToString());
                        }
                        else
                        {
                            requestDate = "--";

                        }

                        <tr>
                            <td style="text-align: center">
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].Id)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].CollegeId)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].CollegeName)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].CollegeCode)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].SpecializationId)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].DepartmentName)

                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].ProfessorVacancies)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].AssociateProfessorVacancies)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].AssistantProfessorVacancies)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].RequiredProfessorVacancies)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].RequiredAssistantProfessorVacancies)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].RequiredAssociateProfessorVacancies)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].ScmNotificationpath)
                                @(i + 1)
                            </td>

                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].DepartmentName)</td>

                            <td>@requestDate</td>
                            @*|| Model.scmtotalrequests.Select(a=>a.TotalFacultyRequired).FirstOrDefault() < 12*@
                            @*@if (Model.ScmProceedingsRequestslist[i].RequestSubmittedDate == null || (Model.ScmProceedingsRequestslist[i].RequestSubmittedDate != null && Model.scmtotalrequests.Select(a => a.TotalFacultyRequired).FirstOrDefault() < 11))*@
                            @if (Model.ScmProceedingsRequestslist[i].RequestSubmittedDate == null || Model.scmtotalrequests[i].TotalFacultyRequired < 5)
                            {
                                <td style="width: 100px; text-align: center">
                                    @if (ViewBag.editable == false)
                                    {
                                        @Html.ActionLink("Add", "AddRegistrationNumber", "CollegeSCMProceedingsRequest", new { @id = Model.ScmProceedingsRequestslist[i].Id }, new { @id = "openDialog", @class = "create_button" })
                                    }
                                </td>
                            }
                            else if (Model.ScmProceedingsRequestslist[i].RequestSubmittedDate != null && isMultiple == false)
                            {
                                <td style="width: 100px; text-align: center">
                                    @Html.ActionLink("Add", "AddRegistrationNumber", "CollegeSCMProceedingsRequest", new { @id = Model.ScmProceedingsRequestslist[i].Id }, new { @id = "openDialog", @class = "create_button" })
                                </td>
                            }
                            else
                            {
                                <td style="width: 100px; text-align: center">
                                    <span class="activate_button"></span>
                                </td>
                            }
                            <td style="width: 105px; text-align: center">
                                @Html.ActionLink("View", "ViewFaculty", "CollegeSCMProceedingsRequest", new { @scmid = Model.ScmProceedingsRequestslist[i].Id }, new { @class = "view_button", @target = "_blank" })
                            </td>
                            <td>
                                @if (Model.ScmProceedingsRequestslist[i].isscmatUniversity == true && Model.ScmProceedingsRequestslist[i].paymentId == null)
                                {

                                    @Html.ActionLink("Payment", "scmfeeDetails", "CollegeSCMProceedingsRequest", new { @class = "create_button" })
                                }
                                @if (Model.ScmProceedingsRequestslist[i].paymentId != null)
                                {
                                    @Html.ActionLink("Print", "CollegeScmPrint", "CollegeSCMProceedingsRequest", new { paymentid = Model.ScmProceedingsRequestslist[i].paymentId }, new { @class = "create_button", @target = "_blank" })
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}
@using (Html.BeginForm("CollegeScmPrint", "CollegeSCMProceedingsRequest", FormMethod.Post, new { }))
{

    if (ViewBag.sellectionatcollege.Count != 0)
    {
        <div style="margin-top: 20px;">
            <span style="color: blue; font-size: 20px;line-height: 35px">Selection Procedure:<span style="color: red;font-weight: bold"> at College</span></span>
            <table class="webGrid">
                <thead>
                    <tr class="gridHeader">
                        <th>S.No.</th>
                        <th>Department</th>
                        <th>Request Date</th>
                        <th style="width: 100px">Add Faculty</th>
                        <th style="width:105px">View Faculty</th>
                        <th style="width: 100px">Submit</th>
                    </tr>
                </thead>
                <tbody style="background: #FCF1D1;">
                    @for (int i = 0; i < Model.collegeatuniversity.OrderByDescending(e => e.CreatedDate).Count(); i++)
                    {
                        requestDate = "";
                        if (Model.collegeatuniversity[i].RequestSubmittedDate != null)
                        {
                            requestDate = UAAAS.Models.Utilities.MMDDYY2DDMMYY(Model.collegeatuniversity[i].RequestSubmittedDate.ToString());
                        }
                        else
                        {
                            requestDate = "--";

                        }

                        <tr>
                            <td style="text-align: center">
                                @(i + 1)
                            </td>
                            <td>@Html.DisplayFor(m => m.collegeatuniversity[i].DepartmentName)</td>
                            <td>@requestDate</td>

                            @if (Model.collegeatuniversity[i].RequestSubmittedDate == null)
                            {
                                <td style="text-align: center">
                                    @Html.ActionLink("Add", "AddRegistrationNumber", "CollegeSCMProceedingsRequest", new { @id = Model.collegeatuniversity[i].Id }, new { @id = "openDialog", @class = "create_button" })
                                </td>
                            }
                            else
                            {
                                <td style="width: 100px; text-align: center">
                                    <span class="activate_button"></span>
                                </td>
                            }
                            <td style="width: 105px; text-align: center">
                                @Html.ActionLink("View", "ViewFaculty", "CollegeSCMProceedingsRequest", new { @scmid = Model.collegeatuniversity[i].Id }, new { @class = "view_button", @target = "_blank" })
                            </td>
                            @if (Model.collegeatuniversity[i].RequestSubmittedDate == null)
                            {
                                <td>
                                    @Html.ActionLink("Submit", "SCMRequestSubmission", "CollegeSCMProceedingsRequest", new { @id = Model.collegeatuniversity[i].Id }, new { @class = "create_button" })
                                </td>
                            }
                            else
                            {
                                <td>
                                    @Html.ActionLink("Print", "sellectioncommetteatcollegeprint", "CollegeSCMProceedingsRequest", new { @class = "create_button", @target = "_blank" })
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}



@*@using (Html.BeginForm("CollegeScmPrint", "CollegeSCMProceedingsRequest", FormMethod.Post, new { }))
    {
        if (ViewBag.Payments.Count != 0)
        {
            <div style="margin-top: 50px;">
                <h2>Payment History</h2>
                <table class="webGrid" style="font-weight: bold">
                    <thead>
                        <tr class="paymentheader">
                            <th>S.No.</th>
                            <th>Challan Number</th>
                            <th>Txn Reference No.</th>
                            <th>Txn Amount.</th>
                            <th>Payment Description</th>
                            <th>Acknowledgement</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var pay in ((List<UAAAS.Models.jntuh_paymentresponse>)ViewBag.Payments).Select((value, i) => new { i = i + 1, value }))
                        {
                            <tr>
                                <td>@pay.i </td>
                                <td>@pay.value.CustomerID</td>
                                <td>@pay.value.TxnReferenceNo</td>
                                <td>@pay.value.TxnAmount</td>
                                <td>@pay.value.ErrorDescription</td>
                                <td>@Html.ActionLink("Print", "CollegeScmPrint", "CollegeSCMProceedingsRequest", new { paymentid = @pay.value.Id }, new { @class = "create_button", @target = "_blank" })</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    }*@

<style type="text/css">
    .paymentheader {
        background-color: bisque;
    }
    /*.paymentbody {
        background-color: darkgoldenrod;
    }*/
</style>


@*@using (Html.BeginForm("scmfeeDetails", "CollegeSCMProceedingsRequest", FormMethod.Get, new { }))
    {

         <p style="text-align: right">
                    <input type="submit" class="create_button" value="Payment&Submit" />
                </p>
    }*@

<div id="dialog-edit">
</div>
<script>
    $(document).ready(function () {


        $("#dialog-display").dialog({
            title: 'Submit:Selection Committee Request',
            autoOpen: true,
            resizable: false,
            height: 220,
            width: 500,
            show: { effect: 'drop', direction: "up" },
            modal: true,
            draggable: true,
            closeOnEscape: true,
            close: function (event, ui) {
                $(this).dialog("close");
            },
            buttons: {
                OK: function (event, ui) {
                    $(this).dialog("close");
                }
            }
        });


        var mainUrl = window.location;
        var url;

        $.ajaxSetup({ cache: false });

        var $myDialog = $("#dialog-edit").dialog({
            title: 'Add Registration Number',
            autoOpen: false,
            resizable: false,
            height: 350,
            width: 700,
            show: { effect: 'drop', direction: "up" },
            modal: true,
            draggable: true,
            closeOnEscape: true,
            open: function (event, ui) {
                $(this).load(url);

            },
            close: function (event, ui) {
                $(this).dialog("close");
            }
        });
        $("#openDialog").live("click", function (e) {
            // e.preventDefault();
            url = $(this).attr('href');
            $("#dialog-edit").dialog({
                title: 'Add Registration Number'
            });
            //  url = $("#openDialog").attr('href');
            $myDialog.dialog('open');

            return false;
        });
        $($myDialog).bind("dialogclose", function () {
            window.location = mainUrl;
        });
        window.setInterval(changeerror, 1000);
    });

    var c = 1;

    function changeerror() {

        switch (c) {
            case 0:
                $(".alerttext p,.submitalert").css("color", "yellow");
                //$(".error p").attr({"color": "red","text-align"});
                c = 1;
                break;
            case 1:
                $(".alerttext p,.submitalert").css("color", "black");
                c = 2;
                break;
            case 2:
                $(".alerttext p,.submitalert").css("color", "brown");
                c = 0;
                break;
        }
    }





</script>
<style>
    .webGrid a:link, .webGrid a:visited {
        color: white;
        text-decoration: none;
    }
</style>