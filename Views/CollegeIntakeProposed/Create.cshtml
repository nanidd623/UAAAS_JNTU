@model UAAAS.Models.CollegeIntakeProposed

@{
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    } 
    ViewBag.Title = "Add College Intake Proposed";
}

<h2>Create</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<style type="text/css">
    .width {
        width: 150px;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        GetSpecialization(@Model.DepartmentID);
        $(".calendar, .year").css("width", "75px");

        if ($("#Degree").val() > 0) {
            GetDepartments($("#Degree").val());
        }
        
        
        $("#Degree").change(function () {
            var DegreeID = $(this).val();
            GetDepartments(DegreeID);
        });
        if($("#Department").val() > 0)
        {
            GetSpecialization($("#Department").val());
        }
        $("#Department").change(function(){
            var DepartmentID = $(this).val();
            GetSpecialization(DepartmentID);
        });

        function GetDepartments(DegreeID){
            $.getJSON("/CollegeIntakeProposed/GetDepartments",{ id : DegreeID},
                function(DepartmentsData){
                    var select = $("#Department");
                    select.empty();
                    select.append($('<option/>',{
                        value: '',
                        text: '-- Select --'
                    }));
                    $.each(DepartmentsData,function(index, itemdata){
                        select.append($('<option/>',{
                            value: itemdata.Value,
                            text: itemdata.Text,
                            selected: (itemdata.Value == @Model.DepartmentID ? true : false)
                        }));
                    });
                });
            }

        function GetSpecialization(DepartmantID){
            $.getJSON("/CollegeIntakeProposed/GetSpecialization" ,{id : DepartmantID},
                function(Specializationdata){
                    var select = $("#Specialization");
                    select.empty();
                    select.append($('<option/>',{
                        value: '',
                        text: '-- Select --'
                    }));
                    $.each(Specializationdata,function(index, itemdata){
                        select.append($('<option/>',{
                            value: itemdata.Value,
                            text: itemdata.Text,
                            selected: (itemdata.Value == @Model.specializationId ? true : false)
                        }));
                    });
                });
            }
    });

</script>
@using (Ajax.BeginForm("AddEditRecord", "CollegeIntakeProposed", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "CollegeIntakeDialog" }))
{
    @Html.ValidationSummary(true)
    if (TempData["Error"] != null)
    {
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
    }
    if (TempData["Success"] != null)
    {
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
    }
    
    <div class="details_table">
        @if (ViewBag.IsUpdate == true)
        {
            @Html.HiddenFor(model => model.id)
        }
        @Html.HiddenFor(model => model.collegeId, new { @Value = Model.collegeId })
        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.degreeID)
        </div>
        <div class="editor-field" style="width: 300px">
            @* @Html.EditorFor(model => model.degreeID) *@
            @Html.DropDownListFor(model => model.degreeID,
            new SelectList(ViewBag.Degree as System.Collections.IEnumerable, "degreeId", "degree"),
            "-- Select --", new { id = "Degree", @class = "width" })
            @Html.ValidationMessageFor(model => model.degreeID)
        </div>

        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.DepartmentID)
        </div>
        <div class="editor-field" style="width: 300px">
            @Html.DropDownListFor(model => model.DepartmentID,
            new SelectList(Enumerable.Empty<SelectListItem>(), "id", "departmentName"),
            "-- Select --", new { id = "Department", @class = "width" })
            @Html.ValidationMessageFor(model => model.DepartmentID)
        </div>

        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.specializationId)
        </div>
        <div class="editor-field" style="width: 300px">
            @Html.DropDownListFor(model => model.specializationId,
            new SelectList(Enumerable.Empty<SelectListItem>(), "id", "specializationName"),
            "-- Select --", new { id = "Specialization", @class = "width" })
            @Html.ValidationMessageFor(model => model.specializationId)
        </div>

        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.shiftId)
        </div>
        <div class="editor-field" style="width: 300px">
            @Html.DropDownListFor(model => model.shiftId,
            new SelectList(ViewBag.Shift as System.Collections.IEnumerable, "id", "shiftName"),
            new { id = "Shift", @class = "width" })
            @Html.ValidationMessageFor(model => model.shiftId)
        </div>

        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.courseAffiliationStatusCodeId)
        </div>
        <div class="editor-field" style="width: 300px">
            @Html.DropDownListFor(model => model.courseAffiliationStatusCodeId,
            new SelectList(ViewBag.CourseAffiliationstatus as System.Collections.IEnumerable, "id", "courseAffiliationStatusCode"),
            "-- Select --", new { id = "CourseAffiliationstatus", @class = "width" })
            @Html.ValidationMessageFor(model => model.courseAffiliationStatusCodeId)
        </div>

        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.proposedIntake)<label>@ViewBag.Year</label>
        </div>
        <div class="editor-field" style="width: 300px">
            @Html.TextBoxFor(model => model.proposedIntake, new { Value = @Model.proposedIntake == 0 ? "" : @Model.proposedIntake.ToString(), @class = "width" })
            @Html.ValidationMessageFor(model => model.proposedIntake)
        </div>
        @Html.HiddenFor(model => model.createdOn)
        @Html.HiddenFor(model => model.createdBy)
      
        <div style="text-align:center">
            <p>
                @if (ViewBag.IsUpdate == false)
                {
                    <input type="submit" value="Add" id="btnAdd" name ="cmd" />
                }
                else
                {
                    <input type="submit" value="Save" id="btnSave" name="cmd" />
                }
            </p>
        </div>
    </div>
}
