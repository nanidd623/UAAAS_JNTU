@using UAAAS.Models;
@model List<UAAAS.Models.CollegeDirectPrinicpal>
@{
    ViewBag.Title = "Direct Recruitment of Principal & Director";
    //Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    var radiobtnyes_id = string.Empty;
    var radiobtnno_id = string.Empty;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link href="~/Scripts/Jquerydatatables/jquery.dataTables.min.css" rel="stylesheet" />
    <script src="~/Scripts/Jquerydatatables/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/Jquerydatatables/dataTables.bootstrap.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.8.20.min.js"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var url;
            $(".Terms").click(function () {

                if ($(this).val() == "True") {
                    //$(".submitButton").show();
                    $(".submitButton").attr('style', 'display: block');
                    $(".rbtn").css("background-color", "#E8EFF3");
                }
                else {
                    $(".submitButton").attr('style', 'display: none');
                    //$(".submitButton").hide();
                }
            });

            $("#btnRegister").click(function () {
                //alert("btnRegister");
                var phdschlrtxt1 = $('#phdsholarstxt_1').val();
                if (phdschlrtxt1 > 0) {
                    $("#phdsholartxtFile_1").addClass('required');
                }
                else {
                    $("#phdsholartxtFile_1").removeClass('required');
                    //$("#phdsholartxtFile_1").css("background-color", "#FCF1D1");
                }

                var phdschlrtxt2 = $('#phdsholarstxt_2').val();
                if (phdschlrtxt2 > 0) {
                    $("#phdsholartxtFile_2").addClass('required');
                }
                else {
                    $("#phdsholartxtFile_2").removeClass('required');
                    //$("#phdsholartxtFile_1").css("background-color", "#FCF1D1");
                }
            });
            //$('.isactivitystatus').click(function () {
            //    $('.faculty_table > tbody  > tr').each(function () {
            //        var selectedVal = "";
            //        //var selected = $(".Identified input[type='radio']:checked");
            //        var selected = $(this).find(".Identified input[type='radio']:checked");
            //        //alert(selected.length);
            //        if (selected.length == 0) {
            //             //alert('0');
            //            $(this).find('#isactivitystatus').addClass('required');
            //            $(this).find('.Identified').css('background-color', 'red');

            //        } else {
            //            //alert('1');
            //            $(this).find('#isactivitystatus').removeClass('required');
            //            $(this).find('.Identified').css('background-color', '#FCF1D1');
            //        }
            //    });
            //});
            //$('#btnSubmit').click(function () {
            //    $('.faculty_table > tbody  > tr').each(function () {
            //        var selectedVal = "";
            //        var selected = $(this).find(".Identified input[type='radio']:checked");
            //        //alert(selected.length);
            //        if (selected.length == 0) {
            //            $(this).find('#isactivitystatus').addClass('required');
            //            $(this).find('.Identified').css('background-color', 'red');
            //            return false;
            //        } else {
            //            $(this).find('#isactivitystatus').removeClass('required');
            //            $(this).find('.Identified').css('background-color', '#FCF1D1');
            //        }
            //    });

            //});

            $.ajaxSetup({ cache: false });
            $(".editDialog").live("click", function (e) {
                var str = $(this).attr('id');
                var collegeId = str.split('$')[0];
                var activityId = str.split('$')[1];
                url = "/DirectRecruitmentPrincipalDirector/FacultyExperienceAdd?activitytypeId=" + activityId + "&enccollegeId=" + collegeId;
                e.preventDefault();
                $("#dialog-edit").dialog({
                    title: 'Add Experience'
                });

                $myDialog.dialog('open');
                return false;
            });


            var $myDialog = $("#dialog-edit").dialog({
                title: 'Add/Edit Department',
                autoOpen: false,
                resizable: false,
                height: 350,
                width: 740,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: true,
                closeOnEscape: true,
                open: function (event, ui) {
                    $(this).load(url);
                },
                close: function (event, ui) {
                    //$(this).dialog("close");
                    //$(this).load(url);
                    window.location.reload();
                }
            });


            $(".viewDialog").live("click", function (e) {
                var str = $(this).attr('id');
                var collegeId = str.split('$')[0];
                var activityId = str.split('$')[1];
                url = "/DirectRecruitmentPrincipalDirector/FacultyExperiencesView?activitytypeId=" + activityId + "&enccollegeId=" + collegeId;
                e.preventDefault();
                $("#dialog-view").dialog({
                    title: 'View Uploaded Details'
                });

                $myDialog.dialog('open');
                return false;
            });


            var $myDialog = $("#dialog-view").dialog({
                title: 'View Experience',
                autoOpen: false,
                resizable: false,
                height: 350,
                width: 1100,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: true,
                closeOnEscape: true,
                open: function (event, ui) {
                    $(this).load(url);
                },
                close: function (event, ui) {
                    //$(this).dialog("close");
                    //$(this).load(url);
                    window.location.reload();
                }
            });

            window.onload = function (e) {
                //alert("onload");
                if (@ViewBag.principalExperiences.Count > 0)
                {
                    //alert("checked cond");
                    $("#facultyexpdv").attr('style', 'display: block');
                }
                else {
                    $("#facultyexpdv").attr('style', 'display: none');
                }
            };

            $("#phdsholarstxt_1").change(function()
            {
                var phdschlrtxt = $(this).val();
                if (phdschlrtxt > 0) {
                    $("#phdsholartxtFile_1").addClass('required');
                }else {
                    $("#phdsholartxtFile_1").removeClass('required');
                    //$("#phdsholartxtFile_1").css("background-color", "#FCF1D1");
                }

            });

            $("#phdsholarstxt_2").change(function()
            {
                var phdschlrtxt = $(this).val();
                if (phdschlrtxt > 0) {
                    $("#phdsholartxtFile_2").addClass('required');
                }else {
                    $("#phdsholartxtFile_2").removeClass('required');
                    //$("#phdsholartxtFile_1").css("background-color", "#FCF1D1");
                }

            });

            $(".isactivitystatusyes").click(function () {
                var radiobtnyess_id = "#txtFile_" + $(this).attr('id').split('_')[1];
                var phdradiobtnyess_id = "#phdsholartxtFile_" + $(this).attr('id').split('_')[1];
                var actitityID = $(this).attr('id').split('_')[1];
                //alert($(this).attr('id').split('_')[1]);
                //alert(actitityID);
                //alert(radiobtnyess_id);
                //alert(phdradiobtnyess_id);
                //$("#lblAffilitionId_@radiobtnyes_id table").attr('style', 'display: block');
                //$("#fieldAffilitionId_@radiobtnyes_id table").attr('style', 'display: block');
                $(radiobtnyess_id).attr('style', 'display: block');
                if (actitityID == 0) {
                    //var phdsholarstxt = "#phdsholarstxt_" + $(this).attr('id').split('_')[1];
                    $(".directrecurit").attr('style', 'display: block');
                    $(".directrecurit").attr('style', 'text-align: center');
                    $("#phdsholartxtFile_1").attr('style', 'display: block');
                    $("#phdsholartxtFile_2").attr('style', 'display: block');
                    $("#phdsholarstxt_1").attr("placeholder", "No.of Ph.D. Scholars");
                    $("#phdsholarstxt_2").attr("placeholder", "No.of Ph.D. Scholars");
                }
                if (actitityID == 3) {
                    $(".directrecuritqus3").attr('style', 'display: block');
                    $("#phdsholarstxt_3").attr("placeholder", "No.of research publications ");
                    $("#phdsholarstxt_3").attr('style', 'width: 175px');
                }
                if (actitityID == 4) {
                    $("#facultyexpdv").attr('style', 'display: block');
                }

                //if (actitityID >= 4 && actitityID <= 6) {
                //    //alert(actitityID);
                //    var remarks = "#remarkstxt_" + $(this).attr('id').split('_')[1];
                //    //alert(remarks);
                //    $(remarks).attr('style', 'display: block');
                //    $(remarks).attr('style', 'width: 300px');
                //    if (actitityID == 4) {
                //        $(remarks).attr("placeholder", "Rupees in Lakhs");
                //    }
                //    else if (actitityID == 5) {
                //        $(remarks).attr("placeholder", "Enter No.of faculty members have received certificates on MOOCs courses");
                //    } else {
                //        $(remarks).attr("placeholder", "Enter No.of students have received certificates on MOOCs courses");
                //    }
                //    //$(remarks).addClass('required');
                //}
            });
            $(".isactivitystatusno").click(function () {
                var radiobtnnoo_id = "#txtFile_" + $(this).attr('id').split('_')[1];
                var actitityID = $(this).attr('id').split('_')[1];
                //alert(radiobtnno_id);
                //$("#lblAffilitionId_@radiobtnno_id table").attr('style', 'display: none');
                //$("#fieldAffilitionId_@radiobtnno_id table").attr('style', 'display: none');
                $(radiobtnnoo_id).attr('style', 'display: none');
                if (actitityID == 0) {
                    $(".directrecurit").attr('style', 'display: none');
                    $("#phdsholartxtFile_1").attr('style', 'display: none');
                    $("#phdsholartxtFile_2").attr('style', 'display: none');
                }
                if (actitityID == 3) {
                    $(".directrecuritqus3").attr('style', 'display: none');
                }
                if (actitityID == 4) {
                    $("#facultyexpdv").attr('style', 'display: none');
                    //$("#facultyexpdvEnablecnt").attr('style', 'display: none');
                }
                //if (actitityID >= 4 && actitityID <= 6) {
                //    //alert(actitityID);
                //    var remarks = "#remarkstxt_" + $(this).attr('id').split('_')[1];
                //    //alert(remarks);
                //    $(remarks).attr('style', 'display: none');
                //    $(remarks).removeClass('required');
                //    $(remarks).val('');
                //}
            });

            $(".Supportingfile").change(function () {
                var docfile = $(this).attr('id');
                var rdid = $(this).attr('id').split('_')[1];
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'pdf':
                        case 'PDF':
                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    //alert("You can upload only  PDF files");
                    $(".SupportingfileSpan_" + rdid).text("You can upload only  PDF files");
                    $(".SupportingfileSpan_" + rdid).css("color", "red");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetFileSize(file, docfile);
                    size = size / 1048576;
                    if (size > 1) {
                        $(".SupportingfileSpan_" + rdid).text("Document should not exceed 1 MB in Size");
                        $(".SupportingfileSpan_" + rdid).css("color", "red");
                        $(this).val('');
                    } else {
                        $(".SupportingfileSpan_" + rdid).text("");
                    }
                }
            });


            //get file path from client system
            function getNameFromPath(strFilepath) {
                var objRE = new RegExp(/([^\/\\]+)$/);
                var strName = objRE.exec(strFilepath);

                if (strName == null) {
                    return null;
                } else {
                    return strName[0];
                }
            }

            //get file size
            function GetFileSize(fileid, title) {

                try {
                    var fileSize = 0;
                    //for IE
                    if ($.browser.msie) {
                        //before making an object of ActiveXObject,
                        //please make sure ActiveX is enabled in your IE browser
                        var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                        var filePath = $("#" + fileid)[0].value;
                        var objFile = objFSO.getFile(filePath);
                        var fileSize = objFile.size; //size in kb
                        //fileSize = fileSize / 1048576; //size in mb
                    }
                        //for FF, Safari, Opeara and Others
                    else {
                        fileSize = $("#" + title)[0].files[0].size;//size in kb
                        //fileSize = $(".Supportingfile")[0].files[0].size; //size in kb
                        //fileSize = fileSize / 1048576; //size in mb
                    }

                    return fileSize;
                } catch (e) {

                    //alert("Error is : " + e);
                }
            }
        });
    </script>
</head>
<body>
    <h2>Furnish Principal Details</h2>
    <br />
    @if (TempData["Error"] != null)
    {
        <div class="error">
            <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
        </div>
    }

    @if (TempData["Success"] != null)
    {
        <div class="success">
            <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
        </div>
    }
    <p><b style="color:red;font-size:14px;">Note: </b><span style="font-weight:bold;color:red;font-size:14px;">Please upload all the details with relevant proofs.</span></p><br />
    @using (Html.BeginForm("Create", "DirectRecruitmentPrincipalDirector", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true)
        <div>
            @{int rowNo = 0;}
            @for (int i = 0; i < ViewBag.extraactivities.Count; i++)
            {
                var sno = @i + 1;
                var txtFile = "txtFile" + @rowNo;
                <table class="faculty_table">
                    @Html.HiddenFor(model => model[i].activityid, new { @Value = @ViewBag.extraactivities[i].id })
                    <tr>
                        <td class="col1" style="width:5%">@sno</td>
                        <td class="col1" colspan="3" style="width:42%">
                            @if (i == 1 || i == 2)
                            {
                                @ViewBag.extraactivities[i].activitydescription <p style="color:red;">(Upload details of scholar names being guided)</p>
                            }
                            else if (i == 3)
                            {
                                @ViewBag.extraactivities[i].activitydescription <p style="color:red;">(Upload details of publications)</p>
                            }
                            else if (i == 5)
                            {
                                @ViewBag.extraactivities[i].activitydescription <p style="color:red;">(Upload SCM copy)</p>
                            }
                            else
                            {
                                @ViewBag.extraactivities[i].activitydescription
                            }

                        </td>
                        <td class="col4" style="width:20%">
                            @if (i == 1 || i == 2)
                            {
                                <div class="directrecurit" style="text-align:center;display:none;">
                                    @*<label>@Html.RadioButtonFor(model => model[i].activitystatus, true, new { @id = "isactivitystatusyes_" + i, @class = "isactivitystatusyes" }) Yes </label>
                                        <label>@Html.RadioButtonFor(model => model[i].activitystatus, false, new { @id = "isactivitystatusno_" + i, @class = "isactivitystatusno" }) No</label>
                                        @Html.ValidationMessageFor(model => model[i].activitystatus)*@
                                    @Html.TextBoxFor(model => model[i].noofphdscholars, new { @id = "phdsholarstxt_" + i, @type = "text", @class = "required", @maxlength = "3", onkeypress = "return isNumberKey(event)" })
                                    <br />@Html.ValidationMessageFor(model => model[i].noofphdscholars)
                                </div>
                            }
                            @*else if (i == 4 && @ViewBag.principalExperiences.Count > 0)
                                {
                                    @Html.RadioButtonFor(model => model[i].activitystatus, true)
                                }*@
                            else
                            {
                                <div class="Identified" style="text-align:center;">
                                    <label>@Html.RadioButtonFor(model => model[i].activitystatus, true, new { @id = "isactivitystatusyes_" + i, @class = "isactivitystatusyes" }) Yes </label>
                                    <label>@Html.RadioButtonFor(model => model[i].activitystatus, false, new { @id = "isactivitystatusno_" + i, @class = "isactivitystatusno" }) No</label>
                                    @Html.ValidationMessageFor(model => model[i].activitystatus)
                                </div>
                            }

                        </td>
                        <td class="col4 readonly" style="width:38%">
                            @*id="@fieldAffilitionId"*@
                            <table>
                                <tr>
                                    @if (i == 0)
                                    {

                                    }
                                    else if (i == 1 || i == 2)
                                    {
                                        <td>
                                            @Html.TextBoxFor(model => model[i].activitydoc, new { type = "file", @id = "phdsholartxtFile_" + i, @name = "@file", @class = "Supportingfile", @style = "display:none;" }) @*, @disabled = "disabled"*@
                                            @Html.HiddenFor(model => model[i].activitydocpath)
                                            <span class="SupportingfileSpan_@i" style="color:red;"></span>
                                        </td>
                                    }
                                    else if (i == 3)
                                    {
                                        <td>
                                            <div class="directrecuritqus3" style="display:none;">
                                                @Html.TextBoxFor(model => model[i].activitydoc, new { type = "file", @id = "txtFile_" + i, @name = "@file", @class = "required Supportingfile" }) @*, @disabled = "disabled"*@
                                                @Html.HiddenFor(model => model[i].activitydocpath)
                                                @Html.TextBoxFor(model => model[i].noofphdscholars, new { @id = "phdsholarstxt_" + i, @type = "text", @class = "required", @maxlength = "3", onkeypress = "return isNumberKey(event)" })
                                                <br />@Html.ValidationMessageFor(model => model[i].noofphdscholars)
                                                <span class="SupportingfileSpan_@i" style="color:red;"></span>
                                            </div>
                                        </td>
                                    }
                                    else if (i == 4)
                                    {
                                        if (@ViewBag.principalExperiences.Count > 0)
                                        {
                                            <td>
                                                <div id="facultyexpdv" style="display:none;">
                                                    @Html.ActionLink("Add Experience", "FacultyExperienceAdd", "DirectRecruitmentPrincipalDirector", new { activitytypeId = @sno, enccollegeId = @ViewBag.EnccollegeId }, new { @id = @ViewBag.EnccollegeId + "$" + @sno, @class = "create_button", @target = "_blank" })@*editDialog*@
                                                    @Html.ActionLink("View Experience", "FacultyExperiencesView", "DirectRecruitmentPrincipalDirector", new { activitytypeId = i, enccollegeId = @ViewBag.EnccollegeId }, new { @id = @ViewBag.EnccollegeId + "$" + @sno, @class = "viewDialog create_button" })
                                                </div>
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                                <div id="facultyexpdv" style="display:none;">
                                                    @Html.ActionLink("Add Experience", "FacultyExperienceAdd", "DirectRecruitmentPrincipalDirector", new { activitytypeId = @sno, enccollegeId = @ViewBag.EnccollegeId }, new { @id = @ViewBag.EnccollegeId + "$" + @sno, @class = "create_button", @target = "_blank" })@*editDialog*@
                                                </div>
                                            </td>
                                        }
                                    }
                                    else
                                    {
                                        <td>
                                            @Html.TextBoxFor(model => model[i].activitydoc, new { type = "file", @id = "txtFile_" + i, @name = "@file", @class = "required Supportingfile", @style = "display:none;" }) @*, @disabled = "disabled"*@
                                            @Html.HiddenFor(model => model[i].activitydocpath)
                                            @Html.TextBoxFor(model => model[i].remarks, new { @id = "remarkstxt_" + i, @type = "text", @style = "display: none;", @class = "required" })
                                            <span class="SupportingfileSpan_@i" style="color:red;"></span>
                                        </td>
                                    }
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            }
            <br />
            <div class="col2" style="width: 99%;">
                <b>Declaration:</b>
                <br />
                I hereby declare that all the information submitted is true to the best of my knowledge and belief.
                In case at a later date, it is found that I have furnished false/wrong information, I am aware that I am liable for prosecution & legal action by the University.
                <br />
                <br />
                <div style="text-align: center; font-weight: bold;" class="rbtn">
                    <label>@Html.RadioButton("Terms", true, new { @id = "Agree", @class = "Terms Agree" }) I Agree the Terms & Conditions </label>
                    <label>@Html.RadioButton("Terms", false, new { @id = "Agree", @class = "Terms Disagree" }) I Disagree the Terms & Conditions </label>
                </div>
            </div>
            <br />
            <div class="alerttext" style="background-color: red; border: 1px solid #f49820; color: white">
                <p>
                    <b>Note:&nbsp;The details once submitted here, with regard to Experience are not editable at later stage. Hence, it is advised to be very cautious while submitting the details.</b>
                </p>
            </div>

            <div style="line-height: 1.2rem;display:none;" class="right_buttons submitButton">
                <input type="submit" id="btnRegister" value="Submit" class="submit" name="Command" />
            </div>
            @*<div style="text-align: right">
                    <p>
                        <input type="submit" value="Submit" id="btnSubmit" name="cmd" />
                    </p>
                </div>*@
        </div>
    }

    <div id="dialog-edit" style="display: none">
    </div>
    <div id="dialog-view" style="display: none">
    </div>
</body>
</html>
