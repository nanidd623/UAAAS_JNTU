@model UAAAS.Models.CollegeFaculty
@{
    ViewBag.Title = "Verify Faculty";
    string regno = string.Empty;

}

<script src="~/Scripts/jquery-1.7.1.min.js"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    var DeptNames = null;
    $(document).ready(function() {

        var Identifiedvalue = $("input[name=facultyRecruitedFor]:checked").val();
       


        if (Identifiedvalue == "UG&PG" || Identifiedvalue == "PG") {






            if(Mpharmacy=="36" || Mpharmacy == "27" || Mpharmacy == "39")
            {
                $(".MpharmacySpec").css("display", "block");
                $(".Pgdepartment").css("display", "block");
                $(".specialization").css("display", "block");
            }
            else {
                $(".MpharmacySpec").css('display', 'none');
                $(".Pgdepartment").css("display", "block");
                $(".specialization").css("display", "block");
            }
        }
        else {
            //$.ajax({
            //    type: "GET",
            //    contentType: "application/json",
            //    url: "/Faculty/GetSpecializations?id=" + Mpharmacy,
            //    dataType: "Json",
            //    success: function (data) {
            //        debugger
            //        $("#SpecializationId").find('option').remove();
            //        var item = "<option value=''>"+data.data[0].Specname+"</option>";
            //        $("#SpecializationId").html(item);
            //    },
            //    error: function ajaxError(response) {
            //        alert(response.status + ' ' + response.statusText);
            //    }
            //});
            //$(".specialization").css("display", "none");
            //$(".departments").css("display", "block");
            if(phar == "26")
            {
                $(".MpharmacySpec").css('display', 'block');
                $(".specialization").css("display", "none");
                $(".departments").css("display", "block");
            }
            else {
                $(".MpharmacySpec").css('display', 'none');
                $(".specialization").css("display", "none");
                $(".departments").css("display", "block");
            }

        }
    });
    $("#UgdepartmentName").change(function () {

        var deptid =$(this).val();
        if(deptid == "26")
        {
            $(".MpharmacySpec").css('display','block');
        }
        else if(deptid == "")
        {

        }
        else
        {

            $(".MpharmacySpec").css('display','none');
        }
    });
    $(".departmentPg").on('change',function () {

        var deptValue = $(this).val();


        if (deptValue == "36" || deptValue == "27" || deptValue == "39") {
            $.ajax({
                type: "GET",
                contentType: "application/json",
                url: "/Faculty/GetSpecializations?id=" + deptValue,
                dataType: "Json",
                success: function (data) {
                    debugger
                    // console.log(data);
                    // first remove the current options if any
                    $("#SpecializationId").find('option').remove();
                    var item = "<option value=''>---Select---</option>";

                    $.each(data.data, function (i, state) {
                        // $(".Specialization").append($("<option></option>").val(state.Specid).html(state.Specname));
                        item += "<option value='" + state.Specid + "'>" + state.Specname + "</option>";
                        // $("#Specialization").append($('<option></option>').val(item.Value).html(item.Text));
                    });
                    $("#SpecializationId").html(item);

                },
                error: function ajaxError(response) {
                    alert(response.status + ' ' + response.statusText);
                }
            });
            $(".MpharmacySpec").css('display', 'block');
        }
        else if(deptValue=="")
        {

        }
        else {

            $(".MpharmacySpec").css('display', 'none');

            $.ajax({
                type: "GET",
                contentType: "application/json",
                url: "/Faculty/GetSpecializations?id=" + deptValue,
                dataType: "Json",
                success: function (data) {

                    // console.log(data);
                    // first remove the current options if any
                    $("#SpecializationId").find('option').remove();
                    var item = "<option value=''>---Select---</option>";

                    $.each(data.data, function (i, state) {
                        // $(".Specialization").append($("<option></option>").val(state.Specid).html(state.Specname));
                        item += "<option value='" + state.Specid + "'>" + state.Specname + "</option>";
                        // $("#Specialization").append($('<option></option>').val(item.Value).html(item.Text));
                    });
                    $("#SpecializationId").html(item);

                },
                error: function ajaxError(response) {
                    alert(response.status + ' ' + response.statusText);
                }
            });



        }
    });

    $(".IdentifiedFor").click(function () {

        var selectedValue = $(this).val();
        var mphar=$(".departmentPg").val();
        var specdata=$(".Specialization").val();

        if (selectedValue == "UG&PG" || selectedValue == "PG")
        {
            $(".Pgdepartment").css("display", "block");
            // $(".Specialization").find('option').remove();
            var item = "<option value=''>---Select---</option>";
            // item +="<option>"+specdata+"</option>";
            $(".Specialization").html(item);
            $(".specialization").css("display","block");
            $(".departments").css("display", "none");
            if(mphar=="36" || mphar=="27")
            {
                $(".MpharmacySpec").css("display","block");
            }
            else {
                $(".MpharmacySpec").css('display', 'none');
            }
        }
        else
        {
            $(".Pgdepartment").css("display", "none");
            $(".specialization").css("display", "none");
            $(".departments").css("display", "block");
            $(".MpharmacySpec").css('display', 'none');
        }


    });

    $(".aadhaarfile1").change(function () {

        var file = getNameFromPath($(this).val());
        var flag;
        if (file != null) {
            var extension = file.substr((file.lastIndexOf('.') + 1));
            switch (extension) {
                case 'jpg':
                case 'JPG':
                case 'jpeg':
                case 'JPEG':
                    flag = true;
                    break;
                default:
                    flag = false;
            }
        }

        if (flag == false) {
            alert("Aadhaar Card document should be in JPEG format only");
            $(this).val('');
            return false;
        }
        else {
            var size = GetCertificateSize(this.id);

            if (size > 102400) {
                alert("Aadhaar Card document size should not exceed 100 KB in Size");
                $(this).val('');
            }
            else {
                //$(".certificates > span").text("");
            }
        }
    });

    //get file path from client system
    function getNameFromPath(strFilepath) {
        var objRE = new RegExp(/([^\/\\]+)$/);
        var strName = objRE.exec(strFilepath);

        if (strName == null) {
            return null;
        }
        else {
            return strName[0];
        }
    }
    //get file size
    function GetCertificateSize(fileid) {

        try {
            var fileSize = 0;
            //for IE

            if ($.browser.msie) {
                //before making an object of ActiveXObject,
                //please make sure ActiveX is enabled in your IE browser
                var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                var filePath = $("#" + fileid)[0].value;
                var objFile = objFSO.getFile(filePath);
                var fileSize = objFile.size; //size in kb
                //fileSize = fileSize / 1048576; //size in mb
            }
                //for FF, Safari, Opeara and Others
            else {
                fileSize = $("#" + fileid)[0].files[0].size //size in kb
                //fileSize = fileSize / 1048576; //size in mb
            }

            return fileSize;
        }
        catch (e) {

            //alert("Error is : " + e);
        }
    }
    

</script>
@*@using (Html.BeginForm())*@
@using (Ajax.BeginForm("AdocFacultyRegistrationNumber", "Faculty", new AjaxOptions(), new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    if (TempData["Error"] != null)
    {
        <div class="error">
            <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
        </div>
    }
    if (TempData["Success"] != null)
    {
        <div class="success">
            <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
        </div>
    }

    @Html.HiddenFor(model => model.collegeId, new { @Value = Model.collegeId })
    @Html.HiddenFor(model => model.id, new { @Value = Model.id })

    <fieldset>
        <legend></legend>

        @if (Model.id > 0)
        {
            <div class="editor-label" style="width: 200px;">
                <span>Registration Number</span>
            </div>
            @*<div class="editor-field" style="width: 380px;">DepartmentId,DepartmentName
                    @Html.TextBoxFor(model => model.FacultyRegistrationNumber, new { @maxlength = "25", @placeholder = "Enter Faculty Registration Number", style = "width: 300px;" })
                </div>*@
            <div class="editor-field" style="width: 380px;">

                @Html.DisplayFor(model => model.FacultyRegistrationNumber)
                @Html.HiddenFor(model => model.FacultyRegistrationNumber)
            </div>
          
            <div class="editor-label" style="width: 200px;">
                @Html.Label("Faculty Name")
            </div>
            <div class="editor-field" style="width: 380px;">
                @Html.DisplayFor(model => model.facultyFirstName)
                @Html.DisplayFor(model => model.facultyLastName)
                @Html.DisplayFor(model => model.facultySurname)
            </div>
              <div class="editor-label" style="width: 200px;">
                <span>Adoc Registration Number</span>
            </div>
             <div class="editor-field" style="width: 380px;">
                @Html.TextBoxFor(model => model.AdocFacultyRegistrationNumber, new { @maxlength = "25", @placeholder = "Enter Faculty Registration Number", style = "width: 218px;", @class = "RegistrationNo required" })
                
            </div>
            <div class="editor-label" style="width: 200px;">
                <span>Designation</span>
            </div>
            <div class="editor-field" style="width: 380px;">
                @Html.DisplayFor(model => model.designation)
                @if (Model.facultyOtherDesignation != null)
                {
                    <span>, @Model.facultyOtherDesignation</span>}
            </div>
                //if (TempData["AadhaarCount"] == null)
                //{

                    <div class="editor-label" style="width: 200px;">
                        <span>Aadhaar Number</span>
                    </div>
                    <div class="editor-field" style="width: 380px;">
                        @Html.TextBoxFor(model => model.AdocAadhaarNumber, new { @id = "facultyAadhaarNumber", @placeholder = "Enter AadhaarNumber" })
                        @Html.ValidationMessageFor(model => model.AdocAadhaarNumber)
                    </div>

                    <div class="editor-label" style="width: 200px;">
                        <span>Aadhaar Document</span>
                    </div>
            <div class="editor-field" style="width: 380px;">
                @Html.TextBoxFor(model => model.AdocAadhaarDocument, new { type = "file", @class = "aadhaarfile1 required" })
               
            </div>
        }

        @*<div class="editor-label" style="width: 200px;">
            <span>Identified For</span>
        </div>
        <div class="editor-field" style="width: 380px;">
           @if (@Model.facultyRecruitedFor != null)
            {
                @Html.DisplayFor(model => model.facultyRecruitedFor)
            }
           else
           {

           }

        </div>*@


        @*<div class="Pgdepartment" style="display: none;">
            <div class="editor-label" style="width: 200px;">
                <span>PG Departments</span>
            </div>
            <div class="editor-field" style="width: 380px;">
                @Html.DropDownListFor(model => model.facultyPGDepartmentId,
new SelectList(ViewBag.PGDepartments as System.Collections.IEnumerable, "PGdeptid", "PGDeptname"),
"-- Select --", new { id = "departmentName", @class = "departmentPg required" })
            </div>
        </div>


        <div class="specialization" style="display: none;">
            <div class="editor-label" style="width: 200px;">
                <span>PG Specialization</span>
            </div>
            <div class="editor-field" style="width: 380px;">
                @Html.DropDownListFor(model => model.SpecializationId, new SelectList(ViewBag.PGSpecializations as System.Collections.IEnumerable, "specid", "Specializationname"),
                 "-- Select --", new { style = "width: 200px", @class = "Specialization required" })
              
            </div>
        </div>

      

        <div class="departments" style="display: none;">
            <div class="editor-label" style="width: 200px;">
                <span>Departments </span>
            </div>
            <div class="editor-field" style="width: 380px;">
                @Html.DropDownListFor(model => model.facultyDepartmentId,
new SelectList(ViewBag.departments as System.Collections.IEnumerable, "DepartmentId", "DepartmentName"),
"-- Select --", new { id = "UgdepartmentName", @class = "departmentUg required" })
            </div>
        </div>

        <div class="MpharmacySpec" style="display: none;">
            <div class="editor-label" style="width: 200px;">
                @Html.LabelFor(model => model.FacultySpecalizationId)
            </div>
            <div class="editor-field" style="width: 380px;">
                @Html.DropDownListFor(model => model.FacultySpecalizationId,
         new SelectList(ViewBag.MpharmacySpec as System.Collections.IEnumerable, "MPharmacyspecid", "MPharmacyspecname"), "---Select---", new { @class = "required", @id = "MpharmacySpecNew" })
            </div>
        </div>*@


        <div style="text-align: center">
            <p>
                <input type="submit" value="Submit" id="btnsend" name="cmd" />
                @*@Html.ActionLink("Cancel", "Teaching", "Faculty", null, new { @class = "create_button" })*@
                <input type="button" class="create_button" name="Cancel" id="btneditcancel" value="Cancel" />
            </p>
        </div>
    </fieldset>
}