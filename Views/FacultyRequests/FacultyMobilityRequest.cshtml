@model UAAAS.Models.MobilityRequest
@{
    ViewBag.Title = "Mobility Request";
    int count = 1;
    string Display = string.Empty;
    string PresentDisplay = string.Empty;

}

<h2>Faculty Mobility Request</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.plugin.from_html.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
      
        $("#Upload").click(function () {
            //return Validate();
            var PresentCollegeId = $("#PresentCollegeid").val();
            if (PresentCollegeId != null && PresentCollegeId != 0) {
                $("#PresentDesignationId").addClass("required");
                $("#PresentfacultyDateOfAppointment").addClass("required");
                $("#Documentfile").addClass("required");
                return true;
            }
        });

        // For Deleting
        $(".confirmDialog").live("click", function (e) {
            var url = $(this).attr('href');
            $("#dialog-confirm").dialog({
                title: 'Delete Leave',
                autoOpen: false,
                resizable: false,
                height: 170,
                width: 350,
                show: { effect: 'fadeIn', direction: "up" },
                modal: true,
                draggable: true,
                buttons: {
                    "Yes": function () {
                        $(this).dialog("close");
                        window.location = url;

                    },
                    "No": function () {
                        $(this).dialog("close");

                    }
                }
            });

            $("#dialog-confirm").dialog('open');
            return false;
        });

        function Validate() {
            var isValidUrl = true;
            var isValidTitle = true;

            var startDate = $("#SLeavefromdate").val();
            var endDate = $("#SLeavetodate").val();
            if (startDate == "" || endDate == "") {
                alert("from date and to date should not be empty.");
                isValidDate = false;
                return isValidDate;
            }
            if (startDate != " " && endDate != " ") {
                var fromDate = startDate.substr(6, 4) + startDate.substr(3, 2) + startDate.substr(0, 2);
                var toDate = endDate.substr(6, 4) + endDate.substr(3, 2) + endDate.substr(0, 2);
                if (toDate < fromDate) {
                    alert("from date should be less than to date.");
                    isValidDate = false;
                }
                else {
                    isValidDate = true;
                }
            }



            return isValidDate;
        }

        $(".SupportingDocument").change(function () {
            debugger;
            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'pdf':
                    case 'PDF':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                alert("You can upload only  PDF files");
                $(this).val('');
                return false;
            } else {
                var size = GetFileSize($(this).val(), "SupportingDocument");
                size = size / 524288;
                if (size > 1) {
                    alert('Pdf should be less than 500 KB size');
                    $(this).val('');
                }
            }
        });

        //get file size
        function GetFileSize(fileid, title) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject,
                    //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#" + title)[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            } else {
                return strName[0];
            }
        }

    });
</script>

<style>
    .col1 {
        width: 14%;
        height: 20px;
    }

    .col2 {
        width: 36%;
        height: 20px;
    }

    .PrevoiusCollege{
        display:@Display;
    }
    #Present{
     display:@PresentDisplay;
    }
</style>

@if (TempData["SUCCESS"] != null)
{
    <div class="success">
        <p style="text-align: center;font-weight: bold">@TempData["SUCCESS"].ToString()</p>
    </div>
}
@if (TempData["ERROR"] != null)
{
    <div class="error">
        <p style="text-align: center;font-weight: bold;">@TempData["ERROR"].ToString()</p>
    </div>
}
<br />
@if (Model.TicketId != null)
{
    <div style="float:right;">
        @Html.ActionLink("Download Acknowledge", "FacultyMobiltyPDF", "FacultyRequests", new { preview = 0, strfacultyId = UAAAS.Models.Utilities.EncryptString(Model.FacultyId.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]) }, new { @class = "create_button" })
    </div><br/><br/>
    
}
@using (Html.BeginForm("FacultyMobilityRequest", "FacultyRequests", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div style="padding-left:10px;">
        <div>
            <table width="100%">
                @Html.HiddenFor(model => model.FacultyId)
                @Html.HiddenFor(model => model.CollegeId)
                <tr>
                    <td class="col1">Registration Number</td>
                    <td class="col2">
                        @Html.DisplayFor(model => model.FacultyRegistration)
                        @Html.HiddenFor(model => model.FacultyRegistration)
                        @Html.ValidationMessageFor(model => model.FacultyRegistration)
                    </td>
                    <td>&nbsp;&nbsp;</td>
                    <td class="col1">Name</td>
                    <td class="col2">
                        @Html.DisplayFor(model => model.FacultyName)
                    </td>
                </tr>
                <tr>
                    <td class="col3">College Name</td>
                    <td class="col4">
                        @Html.DisplayFor(model => model.CollegeName, new { @class = "" })
                        @Html.HiddenFor(model => model.CollegeId)
                    </td>
                    <td>&nbsp;&nbsp;</td>
                    <td class="col3">Supporting Document</td>
                    <td class="col4">
                        @if (Model.SupportingDocumentView != null)
                        {
                            <a href="../Content/Upload/Faculty/MobilitySupportDocuments/@Model.SupportingDocumentView" target="_blank">
                                <span style="color:red;font-weight:bold;">View</span>
                            </a>
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.SupportingDocument, new { @type = "file", @class = "SupportingDocument", @id = "SupportingDocument" })
                            @Html.ValidationMessageFor(model => model.SupportingDocument)
                        }
                       
                    </td>
                </tr>
                <tr><td style="height: 15px;"></td></tr>
            </table>
            @if (TempData["BtnHiding"] == "false")
            {
                <div style="float: right;">
                    <input type="submit" id="Upload" name="Upload" value="Submit" style="float: right;" />
                </div>
            }
        </div>
    </div>
    <br />
}

<div id="editDialog" style="display: none"></div>
<div id="dialog-confirm" style="display: none">
    <p>
        <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
        Are you sure to delete ?
    </p>
</div>