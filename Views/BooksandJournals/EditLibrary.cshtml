@model IList<UAAAS.Models.LibraryDetails>
@using UAAAS.Models
@{
    ViewBag.Title = "College Library Details";
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";

    }
    string filePath = string.Empty;
}

<h2>College Library Details</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<style type="text/css">
    .col21 input {
        width: 60px;
        text-align: center;
    }
</style>
<script type="text/javascript">
    //$(document).ready(function () {
    //    $('#EJournalsSubscriptionNumber').keypress(function (event) {
    //        var keycode = (event.keyCode ? event.keyCode : event.which);
    //        alert(keycode);
    //        if (keycode == '191') {
    //            alert('You pressed a "enter" key in somewhere');
    //        }
    //    });
    //});
</script>
<script type="text/javascript">
    function Validate() {
        var isValidUrl = true;
        var isValidTitle = true;
        var uploadedFile = $("#filepicker").val();

        if (uploadedFile == '') {
            alert("Please Upload Library Books PDF file");
            isValidUrl = false;
        }
        else {
            isValidUrl = true;
        }


        return isValidUrl;
    }

    //get file size
    function GetFileSize(fileid) {
        try {
            var fileSize = 0;
            //for IE
            if ($.browser.msie) {
                //before making an object of ActiveXObject,
                //please make sure ActiveX is enabled in your IE browser
                var objFSO = new ActiveXObject("Scripting.FileSystemObject"); var filePath = $("#filepicker")[0].value;
                var objFile = objFSO.getFile(filePath);
                var fileSize = objFile.size; //size in kb
                fileSize = fileSize / 1048576; //size in mb
            }
                //for FF, Safari, Opeara and Others
            else {
                fileSize = $("#filepicker")[0].files[0].size //size in kb
                fileSize = fileSize / 1048576; //size in mb
            }
            return fileSize;
        }
        catch (e) {
            alert(e);
            //alert("Error is : " + e);
        }
    }

    //get file path from client system
    function getNameFromPath(strFilepath) {
        var objRE = new RegExp(/([^\/\\]+)$/);
        var strName = objRE.exec(strFilepath);

        if (strName == null) {
            return null;
        }
        else {
            return strName[0];
        }
    }

    $(function () {
        $(".file").change(function () {

            var file = getNameFromPath($(this).val());

            var flag;
            if (file != null) {

                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'pdf':
                    case 'PDF':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                $(".files > span").text("You can upload only  Pdf files");
                $(this).val('');
                return false;
            }
            else {

                var size = GetFileSize(file);
                if (size > 3) {
                    $(".files > span").text("You can upload file up to 3 MB");
                    $(this).val('');
                }
                else {
                    $(".files > span").text("");
                }
            }
        });
    });
</script>



@using (Html.BeginForm("EditLibrary", "BooksandJournals", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    if (ViewBag.NotUpload == true)
    {
        <span class="notUpload">You can not upload data Please contact Affiliations & Academic Audit if you want to upload</span>
    }
    else
    {
        if (TempData["Error"] != null)
        {
            <div class="error">
                <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
            </div>
        }
        if (TempData["Success"] != null)
        {
            <div class="success">
                <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
            </div>
        }

        <table class="webGrid" style="width: 100%;">
            <tr style="font-weight: bold;" class="gridHeader">
                <td style="text-align: left;" class="col11">Degree</td>
                <td style="text-align: center;" class="col11">Number of Titles till the A.Y.2018-19</td>
                <td style="text-align: center;" class="col11">Number of Titles added in the A.Y.2019-20</td>
                <td style="text-align: center;" class="col11">Number of Volumes till the A.Y.2018-19</td>
                <td style="text-align: center;" class="col11">Number of Volumes added in the A.Y.2019-20</td>
                <td style="text-align: center;" class="col11">Number of National Print Journals till the A.Y.2018-19</td>
                <td style="text-align: center;" class="col11">Number of National Print Journals added in the A.Y.2019-20</td>
                <td style="text-align: center;" class="col11">Number of International Print Journals till the A.Y.2018-19</td>
                <td style="text-align: center;" class="col11">Number of International Print Journals added in the A.Y.2019-20</td>
                <td style="text-align: center;" class="col11">Number of e-Journals till the A.Y.2018-19</td>
                <td style="text-align: center;" class="col11">Number of e-Journals added in the A.Y.2019-20</td>
                <td style="text-align: center;" class="col11">Valid Subscription Number of e-Journals</td>
            </tr>

            @for (int i = 0; i < ViewBag.Count; i++)
            {
                <tr>
                    <td style="text-align: left;" class="col1">
                        @Html.LabelFor(m => m[i].degree, Model[i].degree == null ? string.Empty : Model[i].degree.ToString())
                        @Html.HiddenFor(m => m[i].degreeId)
                        @Html.HiddenFor(m => m[i].collegeId)
                        @*@Html.HiddenFor(m => m[i].totalTitles)
                            @Html.HiddenFor(m => m[i].totalVolumes)
                            @Html.HiddenFor(m => m[i].totalNationalJournals)
                            @Html.HiddenFor(m => m[i].totalInternationalJournals)
                            @Html.HiddenFor(m => m[i].totalEJournals)*@
                    </td>
                    <td style="text-align: center;" class="col21 ">@Html.TextBoxFor(m => m[i].totalTitles, Model[i].totalTitles == null ? string.Empty : Model[i].totalTitles.ToString())</td>
                    <td style="text-align: center;" class="col21">@Html.TextBoxFor(m => m[i].newTitles, Model[i].newTitles == null ? string.Empty : Model[i].newTitles.ToString())</td>
                    <td style="text-align: center;" class="col21">@Html.TextBoxFor(m => m[i].totalVolumes, Model[i].totalVolumes == null ? string.Empty : Model[i].totalVolumes.ToString())</td>
                    <td style="text-align: center;" class="col21">@Html.TextBoxFor(m => m[i].newVolumes, Model[i].newVolumes == null ? string.Empty : Model[i].newVolumes.ToString())</td>
                    <td style="text-align: center;" class="col21">@Html.TextBoxFor(m => m[i].totalNationalJournals, Model[i].totalNationalJournals == null ? string.Empty : Model[i].totalNationalJournals.ToString())</td>
                    <td style="text-align: center;" class="col21">@Html.TextBoxFor(m => m[i].newNationalJournals, Model[i].newNationalJournals == null ? string.Empty : Model[i].newNationalJournals.ToString())</td>
                    <td style="text-align: center;" class="col21">@Html.TextBoxFor(m => m[i].totalInternationalJournals, Model[i].totalInternationalJournals == null ? string.Empty : Model[i].totalInternationalJournals.ToString())</td>
                    <td style="text-align: center;" class="col21">@Html.TextBoxFor(m => m[i].newInternationalJournals, Model[i].newInternationalJournals == null ? string.Empty : Model[i].newInternationalJournals.ToString())</td>
                    <td style="text-align: center;" class="col21">@Html.TextBoxFor(m => m[i].totalEJournals, Model[i].totalEJournals == null ? string.Empty : Model[i].totalEJournals.ToString())</td>
                    <td style="text-align: center;" class="col21">@Html.TextBoxFor(m => m[i].newEJournals, Model[i].newEJournals == null ? string.Empty : Model[i].newEJournals.ToString())</td>
                    <td style="text-align: center;" class="col21">
                        @if (Model[i].degree.ToString() == "B.Tech" || Model[i].degree.ToString() == "B.Pharmacy")
                        {
                            @Html.HiddenFor(m => m[i].EJournalsSubscriptionNumber, new { @Value = DBNull.Value })
                        }
                        else
                        {
                            @Html.TextBoxFor(m => m[i].EJournalsSubscriptionNumber, Model[i].EJournalsSubscriptionNumber == null ? string.Empty : Model[i].EJournalsSubscriptionNumber.ToString())
                        }
                    </td>
                </tr>
            }
        </table>
        <table class="webGrid" style="width: 100%;">
            <tr>
                <td colspan="2" class="col1">
                    @*<span>MAC-ADRRESS LIST (Upload MAC-ADDRESSES of all computers in this format <a href="../../Content/MAC-ADDRESSES.xls"><span style="font-weight:bold;color:red">MAC-ADDRESSES.xls</span></a>)</span>*@
                    @*<pan><b>College Libraray Books LIST</b>: (Upload College Library bokks in this format - <a href="../../Content/MAC-ADDRESSES.xls"><img src="../../Content/images/excel.png" /></a>)</pan>*@
                </td>
            </tr>
            <tr>
                <td style="text-align: left;" class="col1">
                    <span>Upload Library Titles: </span><span style="color:red">*</span>
                </td>
                <td class="col2 files">
                    <input type="file" name="filepicker" id="filepicker" class="file" />
                    <br />
                    <span style="color: red;"></span><br />
                    @{
        foreach (var item in Model.Take(1).ToList())
        {
            filePath = item.LibraryTitlesPath;
        }
                    }
                    @if (!string.IsNullOrEmpty(filePath))
                    {
                        <span><a href="..//Content/Upload/CollegeEnclosures/@filePath" style="height: 50px;" class="viewFileData" target="_blank "><span style="font-weight:bold;color:red">View</span></a></span>
                    }

                    @*fileUploadcheck*@
                        @*@Html.TextBoxFor(model => model.uploadFile, new { type = "file", @class = "file" })<span style="color: red;"></span><br />*@
                        @*@if (!string.IsNullOrEmpty(macfile))
                                {

                                    <span><a href="../Content/Upload/CollegeEnclosures/@macfile" target="_blank"><span style="font-weight:bold;color:red">View</span></a></span>
                                    @Html.Hidden("hiddenfile", new { @Value = @macfile })
                                }
                            </td>*@
                </tr>
            </table>
        if (ViewBag.Count == 0)
        {
            <div class="warning" style="width: 550px; margin: 0 auto;">
                <p>Please select your courses in "College Information" page before filling up this page.</p>
            </div>
        }
        else
        {
            <p class="right_buttons">
                <input type="submit" id="btnsubmit" value="Save" name="fileUploader" class="subtUpload" onclick="return Validate();" />
            </p>}
    }
}