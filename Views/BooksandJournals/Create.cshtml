@model UAAAS.Models.Permanent_Affiliation.BookandJournalsModel

@{
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    if (ViewBag.TitleType == "List of Books")
    {
        ViewBag.Title = "Books";
    }
    else
    {
        ViewBag.Title = "Journals";
    }
}
@if (TempData["Error"] != null)
{
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div><br />
}
@if (TempData["Success"] != null)
{
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div><br />
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>

<script>
    $(document).ready(function () {

        $(".calendarnew").css("width", "160px");

        $('.calendarnew').attr("readonly", "true");
        $('.calendarnew').datepicker({
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            minDate: "-180M",
            maxDate: "+180M",
            yearRange: '2000:2050',
            showOn: "button",
            buttonImage: "@Url.Content("~/Content/themes/base/images/calendar.gif")",
            buttonImageOnly: true
        });

        $(".Supportingfile").change(function () {

            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'pdf':
                    case 'PDF':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                alert("You can upload only  PDF files");
                $(this).val('');
                return false;
            } else {
                var size = GetFileSize(file, "Documentfile");
                size = size / 1048576;
                if (size > 0.2000000000000000) {
                    alert("Document should not exceed 200 KB in Size");
                    $(this).val('');
                } else {

                }
            }

        });

        //get file size
        function GetFileSize(fileid, title) {

            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject,
                    //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#" + title)[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }

                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            } else {
                return strName[0];
            }
        }

        $.ajaxSetup({ cache: false });

        var $myDialog = $("#dialog-edit").dialog({
            title: '',
            autoOpen: false,
            resizable: false,
            height: 500,
            //height: 550,
            //width: 820,
            width: 720,
            show: { effect: 'drop', direction: "up" },
            modal: true,
            draggable: true,
            closeOnEscape: true,
            open: function (event, ui) {
                $(this).load(url);
            },
            close: function (event, ui) {
                $(this).dialog("close");
            }
        });

        $(".confirmDialog").live("click", function (e) {
            debugger;
            var url = $(this).attr('href');
            $("#dialog-confirm").dialog({
                title: 'Delete Book / Journal',
                autoOpen: false,
                resizable: false,
                height: 170,
                width: 350,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: true,
                buttons: {
                    "Yes": function () {
                        $(this).dialog("close");
                        window.location = url;
                    },
                    "No": function () {
                        $(this).dialog("close");
                    }
                }
            });
            $("#dialog-confirm").dialog('open');
            return false;
        });

        $("#activitySelectedyes").click(function () {
            $("#activityFile").removeAttr('style');
            $("#remarkstxt").removeAttr('style');
            $("#btnupload").removeAttr('style');
            $("#a_view").removeAttr('style');
        });

        if ($("#activitySelectedyes").is(":checked")) {
            $("#activityFile").removeAttr('style');
            $("#remarkstxt").removeAttr('style');
            $("#btnupload").removeAttr('style');
            $("#a_view").removeAttr('style');
        }

        $("#activitySelectedno").click(function () {
            $("#activityFile").attr('style', 'display: none');
            $("#remarkstxt").attr('style', 'display: none');
            $("#a_view").attr('style', 'display: none');
        });

        $('#btnupload').click(function () {
            if ($("#activitySelectedyes").is(":checked")) {
                var filename = $('#activityFile').val();
                if ((filename == '' || filename == undefined)) {
                    alert('Please select file');
                    return false;
                }
            } else {
                return true;
            }

        });
    });
</script>
@if (ViewBag.TitleType == "List of Books")
{
    <h2>Books</h2><br />
}
else
{
    <h2>Journals</h2><br />
}

@if (ViewBag.TitleType == "List of Books")
{
    @*using (Html.BeginForm("FileUpload", "BooksandJournals", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <table class="webGrid" style="width: 100%;">
            <tr>
                <td class="col1" style="width: 50%">
                    @ViewBag.ActivityDescription
                </td>
                @Html.HiddenFor(model => model.ActivityId)
                <td class="col2" style="width:10%">
                    <div style="text-align:center;">
                        <label>@Html.RadioButtonFor(model => model.ActivitySelected, true, new { @id = "activitySelectedyes" }) Yes </label>
                        <label>@Html.RadioButtonFor(model => model.ActivitySelected, false, new { @id = "activitySelectedno" }) No</label>
                        @Html.ValidationMessageFor(model => model.ActivitySelected)
                    </div>
                </td>
                <td class="col2 readonly" style="width: 40%">
                    @Html.TextAreaFor(model => model.Remarks, new { @id = "remarkstxt", @type = "text", @style = "display: none;", @class = "required", @placeholder = "Enter Remarks" })
                    @if (Model.ActivityDocumentPath != null)
                    {
                        @Html.TextBoxFor(model => model.ActivityDocument, new { type = "file", @id = "activityFile", @name = "fileUploader", @class = "Supportingfile", @style = "display:none;" })
                        <a href="~/Content/Upload/College/BooksandJournals/@Model.ActivityDocumentPath" target="_blank" id="a_view" style="display: none">
                            <span style="color: red;"><b>View</b></span><br />
                        </a>
                        @Html.HiddenFor(model => model.ActivityDocumentPath)
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.ActivityDocument, new { type = "file", @id = "activityFile", @name = "fileUploader", @class = "required Supportingfile", @style = "display:none;" })
                    }
                </td>
            </tr>
        </table>
        <div style="text-align: right">
            <p>
                <input type="submit" value="Save" name="fileUploader" class="btnclass" /> 
            </p>
        </div>
        <br />
    }*@
}

@using (Html.BeginForm("Edit", "BooksandJournals", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.BookandJournalId, new { @Value = Model.BookandJournalId })
    @Html.HiddenFor(model => model.CollegeId, new { @Value = Model.CollegeId })

    <table class="webGrid" style="width: 100%;">
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.EssentialType)
            </td>
            <td class="col2">
                @Html.DisplayFor(model => model.EssentialType, new { @readonly = "true" })
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.DegreeId)
            </td>
            <td class="col2">
                @Html.DropDownListFor(model => model.DegreeId, new SelectList(ViewBag.Degrees as System.Collections.IEnumerable, "id", "degree"), "---Select---", new { @class = "required", @style = "width:161px" })
                @Html.ValidationMessageFor(model => model.DegreeId)
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.AcademicYearId)
            </td>
            <td class="col2">
                @Html.DropDownListFor(model => model.AcademicYearId, new SelectList(ViewBag.AcademicYears as System.Collections.IEnumerable, "id", "academicYear"), "---Select---", new { @class = "required", @style = "width:161px" })
                @Html.ValidationMessageFor(model => model.AcademicYearId)
            </td>
        </tr>
        <tr>
            <td class="col1">
                Number of <span>@Model.EssentialType</span>s
                @*@Html.LabelFor(model => model.NumberOfBooks)*@
            </td>
            <td class="col2">
                @Html.TextBoxFor(model => model.NumberOfBooks, new { onkeypress = "return isNumberKey(event)", @placeholder = "Enter Number of " + @Model.EssentialType + "s" })
                @Html.ValidationMessageFor(model => model.NumberOfBooks)
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.AmountSpent)
            </td>
            <td class="col2">
                @Html.TextBoxFor(model => model.AmountSpent, new { onkeypress = "return isDecimalKey(event,this)", @placeholder = "Enter Amount Spent" })
                @Html.ValidationMessageFor(model => model.AmountSpent)
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.SupportingDocument)
            </td>
            <td class="col2">
                @if (Model.SupportingDocumentPath != null)
                {
                    @Html.TextBoxFor(model => model.SupportingDocument, new { type = "file", @id = "@txtFile", @name = "@file", @class = "Supportingfile" })
                    <a href="~/Content/Upload/College/BooksandJournals/@Model.SupportingDocumentPath" target="_blank">
                        <span style="color: red;"><b>View</b></span>
                    </a>
                }
                else
                {
                    @Html.TextBoxFor(model => model.SupportingDocument, new { type = "file", @id = "@txtFile", @name = "@file", @class = "required Supportingfile" })
                }
                @Html.ValidationMessageFor(model => model.SupportingDocument)
            </td>
        </tr>
    </table>

    <div style="text-align: right">
        <p>
            <input type="submit" value="Add" id="btnAdd" name="cmd" class="btnclass" />
        </p>
    </div>
}
<br />
@if (ViewBag.BooksJournalsList.Count > 0)
{
    <div style="margin-top:15px;">
        <h2>@ViewBag.TitleType</h2><br />
        <table class="webGrid">
            <thead>
                <tr class="col1">
                    <th>S.No</th>
                    <th>Degree</th>
                    <th>Academic Year</th>
                    <th>Number of <span>@Model.EssentialType</span>s</th>
                    <th>Amount spent</th>
                    <th>Supporting Document</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var pay in ((List<UAAAS.Controllers.Permanent_Affiliation.BooksJournals>)ViewBag.BooksJournalsList).Select((value, i) => new { i = i + 1, value }))
                {
                    <tr class="col2">
                        <td>@pay.i </td>
                        <td>@pay.value.DegreeId</td>
                        <td>@pay.value.AcademicYearId</td>
                        <td>@pay.value.NumberOfBooks</td>
                        <td>@pay.value.AmountSpent</td>
                        <td style="text-align: left; font-weight: normal;">
                            @if (pay.value.SupportingDocumentPath != null)
                            {
                                <a href="../Content/Upload/College/BooksandJournals/@pay.value.SupportingDocumentPath" target="_blank"><span style="color: red;font-weight: bold ">View</span></a>
                            }
                        </td>
                        @if (ViewBag.IsEditable == true)
                        {
                            @*<td>
                                            @Html.ActionLink("Edit", "Edit", "BooksandJournals", new
                                {
                                    collegeId = UAAAS.Models.Utilities.EncryptString(pay.value.CollegeId.ToString(),
                                    System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]).ToString(),

                                    BookandJournalId = UAAAS.Models.Utilities.EncryptString(pay.value.BookandJournalId.ToString(),
                                    System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]).ToString()
                                }, new { @class = "edit_button" })
                                        </td>*@

                            <td>
                                @Html.ActionLink("Delete", "Delete", "BooksandJournals", new
                           {
                               collegeId = UAAAS.Models.Utilities.EncryptString(pay.value.CollegeId.ToString(),
                                           System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]).ToString(),

                               essentialTypeId = UAAAS.Models.Utilities.EncryptString(pay.value.EssentialType.ToString(),
                               System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]).ToString(),

                               BookandJournalId = UAAAS.Models.Utilities.EncryptString(pay.value.BookandJournalId.ToString(),
                               System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]).ToString(),
                           }, new { @class = "confirmDialog delete_button" })
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<div id="dialog-confirm" style="display: none">
    <p>
        <span class="ui-icon ui-icon-alert"></span>
        Are you sure to delete this Book / Journal ?
    </p>
</div>