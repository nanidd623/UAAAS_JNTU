@model UAAAS.Models.CollegeInformation
@using UAAAS.Models
@{
    Layout = "~/Views/Shared/_PALayoutLeftMenu.cshtml";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    }
    ViewBag.Title = "College Information";
    int isSelectedOtherCategory = 1;
}

<h2>College Information</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $(".calendar, .year").css("width", "75px");

        debugger;
        $(".collegestatustr").attr('style', 'display: none');
        var csid = $("#status :selected").val();
        if (csid==1) {
            $(".collegestatustr").attr('style', 'display: block');

        } else {
            $(".collegestatustr").attr('style', 'display: none');
        }
        //$("#collegestatustr").attr('style', 'display: none');
        //College Status
        $("#status").change(function() {
            debugger;
            var status = $(this).val();
            if (status==1) {
                $(".collegestatustr").attr('style', 'display: block');
                $("#status :selected").val("1");

            } else {
                $(".collegestatustr").attr('style', 'display: none');
                $("#status :selected").val("2");
            }
        });


        $(".calendarnew").css("width","160px");

        $('.calendarnew').attr("readonly", "true");
        $('.calendarnew').datepicker({
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            minDate:"-180M",
            maxDate: "+180M",
            yearRange:'2000:2050',
            showOn: "button",
            buttonImage: "@Url.Content("~/Content/themes/base/images/calendar.gif")",
            buttonImageOnly: true
        });

        if($("#state").val() > 0)
        {
            GetDistricts($("#state").val());
        }

        $("#state").change(function () {
            var stateID = $(this).val();
            GetDistricts(stateID);
        });

        function GetDistricts(stateID){
            $.getJSON("/PA_CollegeInformation/GetDistrictList", { id: stateID },
                function (myData) {
                    var select = $("#district");
                    select.empty();
                    select.append($('<option/>', {
                        value: '',
                        text: '-- Select --'
                    }));
                    $.each(myData, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.Value,
                            text: itemData.Text,
                            selected : (itemData.Value == @Model.districtId ? true: false)
                        }));
                    });
                });}

        $(".Supportingfile").change(function () {

            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'pdf':
                    case 'PDF':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                alert("You can upload only  PDF files");
                $(this).val('');
                return false;
            } else {
                var size = GetFileSize(file, "Documentfile");
                size = size / 1048576;
                if (size > 0.2000000000000000) {
                    alert("Document should not exceed 200 KB in Size");
                    $(this).val('');
                } else {

                }
            }

        });

        //get file size
        function GetFileSize(fileid, title) {

            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject,
                    //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#" + title)[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }

                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            } else {
                return strName[0];
            }
        }
    });

    function isNumberKey(evt){
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
        {
            alert("Allows Only Digits");
            return false;
        }
        else
        {
            return true;
        }
    }
</script>

@using (Html.BeginForm("Edit", "PA_CollegeInformation", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.Hidden("DisableYourControls", System.Configuration.ConfigurationManager.AppSettings["ShouldFormsBeDisabled"].ToString());

    @Html.ValidationSummary(true)
    if (ViewBag.NotUpload == true)
    {
        <span class="notUpload">You can not upload data Please contact Affiliations & Academic Audit if you want to upload</span>
    }
    else
    {
        if (TempData["Error"] != null)
        {
            <div class="error">
                <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
            </div>
        }
        if (TempData["Success"] != null)
        {
            <div class="success">
                <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
            </div>
        }
        if (ViewBag.NotUpload == true)
        {
            <span class="notUpload">You can not upload data Please contact Affiliations & Academic Audit if you want to upload</span>
        }
        else
        {
            <table class="four_columns">
                <tr>
                    <td class="col1" colspan="4">
                        <b>@Html.LabelFor(model => model.collegeAffiliationTypeID)</b>
                        @Html.ValidationMessageFor(model => model.collegeAffiliationTypeID)
                    </td>
                </tr>
                <tr>
                    <td class="col2" colspan="4" style="line-height: 1.2rem;">
                        @Html.HiddenFor(model => model.id)

                        @Html.HiddenFor(model => model.collegeAffiliationTypeID)
                        @foreach (var item in Model.collegeAffiliationType)
                        {
                            var optionValue = "CAType_" + item.id;
                            if (optionValue == "CAType_11" && item.selected == 1)
                            {
                                isSelectedOtherCategory = isSelectedOtherCategory + 1;
                            }
                            var selectValue = item.selected;
                            <input type="radio"
                                   id="@optionValue"
                                   name="collegeAffiliationTypeID"
                                   value="@item.id" disabled="disabled" />
                            <label for="@optionValue">@item.name</label>

                            if (selectValue == 1)
                            {
                                <input type="hidden" name="collegeAffiliationTypeID" value="@item.id" id="@optionValue">
                            }
                            <script type="text/javascript">
                                if(@selectValue == 1)
                                {
                                    $("#@optionValue").attr('checked', 'checked');
                                }
                                @*else
                        {
                            $("#@optionValue").attr('checked', null);
                        }*@

                                $("input[type='radio']").click(function () {
                                    var selection=$(this).val();
                                    if(selection == 11)
                                    {
                                        $('.otherCategory').show();
                                    }
                                    else
                                    {
                                        $('.txtOtherCategory').val('');
                                        $('.otherCategory').hide();
                                    }
                                });
                            </script>
                            <br />
                        }
                        <br />
                        <div class="otherCategory">
                            @Html.LabelFor(model => model.otherCategory)&nbsp;
                            @Html.TextBoxFor(model => model.otherCategory, new
               {
                   @class =

                       "txtOtherCategory"
               })
                        </div>
                        <script type="text/javascript">
                            if(@isSelectedOtherCategory > 1)
                            {
                                $('.otherCategory').show();
                            }
                            else
                            {
                                $('.txtOtherCategory').val('');
                                $('.otherCategory').hide();
                            }
                        </script>
                    </td>
                </tr>
            </table>
            <br />
            <table class="four_columns">
                <tr>
                    <td class="col1" colspan="4">
                        <b>College Information</b>
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.collegeName)
                    </td>
                    <td class="col2" colspan="3">
                        @Html.DisplayFor(model => model.collegeName, new { @class = "focus" })
                        @Html.HiddenFor(model => model.collegeName)
                        @Html.ValidationMessageFor(model => model.collegeName)
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.formerCollegeName)
                    </td>
                    <td class="col2" colspan="3">
                        @Html.EditorFor(model => model.formerCollegeName, new { @class = "focus" })
                        @Html.HiddenFor(model => model.formerCollegeName)
                        @Html.ValidationMessageFor(model => model.formerCollegeName)
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.collegeCode)
                    </td>
                    <td class="col2">
                        @Html.DisplayFor(model => model.collegeCode)
                        @Html.HiddenFor(model => model.collegeCode)
                        @Html.ValidationMessageFor(model => model.collegeCode)
                    </td>
                    <td class="col3">
                        @Html.LabelFor(model => model.eamcetCode)
                    </td>
                    <td class="col4">
                        @Html.EditorFor(model => model.eamcetCode)
                        @Html.ValidationMessageFor(model => model.eamcetCode)
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.collegeStatusID)
                        <span class="collegestatustr">
                            <br />Minority Status
                        </span>
                    </td>
                    <td class="col2">
                        @Html.DropDownListFor(model => model.collegeStatusID,
                        new SelectList(ViewBag.Status as System.Collections.IEnumerable, "id", "collegeStatus"),
                        "-- Select --", new { id = "status" })
                        <span class="collegestatustr">
                            @Html.HiddenFor(model => model.minortyid)
                            <br />@Html.DropDownListFor(model => model.collegesubstatusId,
                                  new SelectList(ViewBag.SubStatus as System.Collections.IEnumerable, "id", "collegeStatus"),
                                  "-- Select --", new { id = "substatus" })
                        </span>

                        @Html.ValidationMessageFor(model => model.collegesubstatusId)
                    </td>
                    <td class="col1">
                        <table style="width: 100%" class="collegestatustr">
                            <tr>
                                <td style="height: 25px; text-align: left;">From:</td>
                            </tr>
                            <tr>
                                <td style="height: 25px; text-align: left;">To:</td>
                            </tr>
                            <tr>
                                <td style="height: 25px; text-align: left;">Supporting Document:</td>
                            </tr>
                        </table>
                    </td>
                    <td class="col21">
                        <table style="width: 100%" class="collegestatustr">
                            <tr>
                                <td>
                                    @Html.TextBoxFor(model => model.collegestatusfromdate, new { @id = "collegestatusfrom", @class = "calendarnew", style = "width=200px" })
                                    @Html.ValidationMessageFor(model => model.collegestatusfromdate)
                                </td>
                            </tr>
                            <tr>
                                <td style="height: 25px; width: 120px;">
                                    @Html.TextBoxFor(model => model.collegestatustodate, new { @id = "collegestatuto", @class = "calendarnew required" })
                                    @Html.ValidationMessageFor(model => model.collegestatusfromdate)
                                </td>
                            </tr>
                            <tr>
                                <td style="height: 25px; width: 55px;">
                                    @if (@Model.collegestatusfilepath == null)
                                    {
                                        @Html.TextBoxFor(model => model.collegestatusfile, new { @type = "file", @class = "required Supportingfile" })
                                        @Html.ValidationMessageFor(model => model.collegestatusfile)
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.collegestatusfile, new { @type = "file", @class = "Supportingfile" })
                                        <a href="~/Content/Upload/College/CollegeStatus/@Model.collegestatusfilepath" target="_blank">
                                            <span style="color: red;"><b>View</b></span>
                                        </a>
                                        @Html.HiddenFor(model => model.collegestatusfilepath)
                                    }
                                </td>
                            </tr>
                        </table>
                    </td>

                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.pgcetCode)
                    </td>
                    <td class="col2">
                        @if (ViewBag.pgcetStatus == true)
                        {
                            @Html.TextBoxFor(model => model.pgcetCode, new { @maxlength = "10", @class = "required" })
                            @Html.ValidationMessageFor(model => model.pgcetCode)
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.pgcetCode, new { @maxlength = "10" })
                        }
                    </td>
                    <td class="col3">
                        @Html.LabelFor(model => model.aicteid)
                    </td>
                    <td class="col4">
                        @Html.TextBoxFor(model => model.aicteid, new { @maxlength = "25" })
                        @Html.ValidationMessageFor(model => model.aicteid)
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.address)
                    </td>
                    <td class="col2">
                        @Html.DisplayFor(model => model.address)
                        @Html.HiddenFor(model => model.address)
                        @Html.ValidationMessageFor(model => model.address)
                    </td>
                    <td class="col3">
                        @Html.LabelFor(model => model.icetCode)
                    </td>
                    <td class="col4">
                        @Html.DisplayFor(model => model.icetCode)
                        @Html.HiddenFor(model => model.icetCode)
                        @Html.ValidationMessageFor(model => model.icetCode)
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.townOrCity)
                    </td>
                    <td class="col2">
                        @Html.DisplayFor(model => model.townOrCity)
                        @Html.HiddenFor(model => model.townOrCity)
                        @Html.ValidationMessageFor(model => model.townOrCity)
                    </td>
                    <td class="col3">
                        @Html.LabelFor(model => model.mandal)
                    </td>
                    <td class="col4">
                        @Html.EditorFor(model => model.mandal)
                        @Html.ValidationMessageFor(model => model.mandal)
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.stateId)
                    </td>
                    <td class="col2">
                        @Html.DropDownListFor(model => model.stateId,
                                                     new SelectList(ViewBag.State as System.Collections.IEnumerable, "id", "stateName"),
                                                     "-- Select --", new { id = "state" })
                        @Html.ValidationMessageFor(model => model.stateId)
                    </td>
                    <td class="col3">
                        @Html.LabelFor(model => model.districtId)
                    </td>
                    <td class="col4">
                        @Html.DropDownListFor(model => model.districtId,
                                                     new SelectList(Enumerable.Empty<SelectListItem>(), "id", "districtName"),
                                                     "-- Select --", new { id = "district" })
                        @Html.ValidationMessageFor(model => model.districtId)
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.pincode)
                    </td>
                    <td class="col2">
                        @Html.DisplayFor(model => model.pincode, new { @Value = Model.pincode == 0 ? "" : Model.pincode.ToString() })
                        @Html.HiddenFor(model => model.pincode)
                        @Html.ValidationMessageFor(model => model.pincode)
                    </td>

                    <td class="col3">
                        @Html.LabelFor(model => model.fax)
                    </td>
                    <td class="col4">
                        @Html.DisplayFor(model => model.fax)
                        @Html.HiddenFor(model => model.fax)
                        @Html.ValidationMessageFor(model => model.fax)
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.landline)
                    </td>
                    <td class="col2">
                        @Html.EditorFor(model => model.landline)
                        @Html.ValidationMessageFor(model => model.landline)
                    </td>
                    <td class="col3">
                        @Html.LabelFor(model => model.mobile)
                    </td>
                    <td class="col4">
                        @Html.EditorFor(model => model.mobile)
                        @Html.ValidationMessageFor(model => model.mobile)
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.email)
                    </td>
                    <td class="col2">
                        @Html.EditorFor(model => model.email)
                        @Html.ValidationMessageFor(model => model.email)
                    </td>
                    <td class="col3">
                        @Html.LabelFor(model => model.website)
                    </td>
                    <td class="col4">
                        @Html.EditorFor(model => model.website)
                        @Html.ValidationMessageFor(model => model.website)
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.collegeTypeID)
                    </td>
                    <td class="col2" colspan="3" style="line-height: 1.2rem;">
                        @Html.HiddenFor(model => model.collegeTypeID)
                        @foreach (var item in Model.collegeType)
                        {
                            var optionValue = "CType_" + item.id;
                            var selectValue = item.selected;
                            <input type="radio"
                                   id="@optionValue"
                                   name="collegeTypeID"
                                   value="@item.id" disabled="disabled" />
                            <label for="@optionValue" style="padding-right: 10px !important; text-align: left; display: inline-block;">@item.name</label>
                            if (selectValue == 1)
                            {
                                <input type="hidden" name="collegeTypeID" value="@item.id" id="@optionValue">
                            }

                            <script type="text/javascript">
                                if(@selectValue == 1)
                                {

                                    $("#@optionValue").attr('checked', 'checked');
                                }
                                @*else
                            $("#@optionValue").attr('checked', false);*@
                            </script>
                        }
                        @Html.ValidationMessageFor(model => model.collegeTypeID)
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.degreeId)
                    </td>
                    <td class="col2" colspan="3" style="line-height: 1.2rem;">
                        @Html.HiddenFor(model => model.degreeId)
                        @foreach (var item in Model.degree)
                        {
                            var optionValue = "degree_" + item.id;
                            var selectValue = item.selected;
                            <input type="checkbox"
                                   id="@optionValue"
                                   name="degreeId"
                                   value="@item.id" disabled="disabled" />
                            <label for="@optionValue" style="padding-right: 10px !important; text-align: left; display: inline-block;">@item.name</label>

                            if (selectValue == 1)
                            {
                                <input type="hidden" name="degreeId" value="@item.id" id="@optionValue">
                            }

                            <script type="text/javascript">
                                if(@selectValue == 1)
                                    $("#@optionValue").attr('checked', 'checked');
                                else
                                    $("#@optionValue").attr('checked', null);
                            </script>
                        }
                        @Html.ValidationMessageFor(model => model.degreeId)
                    </td>
                </tr>


            </table>
            <br />
            <table class="four_columns">
                <tr>
                    <td class="col11" colspan="2">
                        <b>Information on Establishment of the Institution :</b> (for existing colleges only)
                    </td>
                </tr>
                <tr>
                    <td class="col11" style="width: 340px;">
                        @Html.LabelFor(model => model.instituteEstablishedYear)
                    </td>
                    <td class="col41">
                        @Html.DisplayFor(model => model.instituteEstablishedYear, new { @class = "year", Value = @Model.instituteEstablishedYear == 0 ? "" : @Model.instituteEstablishedYear.ToString(), @maxlength = "4" })
                        @Html.ValidationMessageFor(model => model.instituteEstablishedYear)
                        @Html.HiddenFor(model => model.instituteEstablishedYear)
                    </td>
                </tr>
                <tr>
                    <td class="col11">
                        @Html.LabelFor(model => model.firstApprovalDateByAICTE)
                    </td>
                    <td class="col41">
                        @Html.DisplayFor(model => model.firstApprovalDateByAICTE, new { @class = "calendar1", style = "width: 80px", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)" }) <span>(DD/MM/YYYY)</span>
                        @Html.ValidationMessageFor(model => model.firstApprovalDateByAICTE)
                        @Html.HiddenFor(model => model.firstApprovalDateByAICTE)
                    </td>
                </tr>
                <tr>
                    <td class="col11">
                        @Html.LabelFor(model => model.FirstApprovalDateByAICTEDoc)
                    </td>
                    <td class="col41">
                        @if (Model.FirstApprovalDateByAICTEDocPath != null)
                        {
                            @Html.TextBoxFor(model => model.FirstApprovalDateByAICTEDoc, new { type = "file", @id = "@txtFile", @name = "@file", @class = "Supportingfile" })
                            <a href="~/Content/Upload/College/ApprovalDateByAICTE/@Model.FirstApprovalDateByAICTEDocPath" target="_blank">
                                <span style="color: red;"><b>View</b></span>
                            </a>
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.FirstApprovalDateByAICTEDoc, new { type = "file", @id = "@txtFile", @name = "@file", @class = "required Supportingfile" })
                        }
                        @Html.ValidationMessageFor(model => model.FirstApprovalDateByAICTEDoc)
                    </td>
                </tr>
                <tr>
                    <td class="col11">
                        @Html.LabelFor(model => model.firstAffiliationDateByJNTU)
                    </td>
                    <td class="col41">
                        @Html.DisplayFor(model => model.firstAffiliationDateByJNTU, new { @class = "calendar1", style = "width: 80px", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)" }) <span>(DD/MM/YYYY)</span>
                        @Html.ValidationMessageFor(model => model.firstAffiliationDateByJNTU)
                        @Html.HiddenFor(model => model.firstAffiliationDateByJNTU)
                    </td>
                </tr>
                <tr>
                    <td class="col11">
                        @Html.LabelFor(model => model.FirstAffiliationDateByJNTUDoc)
                    </td>
                    <td class="col41">
                        @if (Model.FirstAffiliationDateByJNTUDocPath != null)
                        {
                            @Html.TextBoxFor(model => model.FirstAffiliationDateByJNTUDoc, new { type = "file", @id = "@txtFile", @name = "@file", @class = "Supportingfile" })
                            <a href="~/Content/Upload/College/AffiliationDateByJNTU/@Model.FirstAffiliationDateByJNTUDocPath" target="_blank">
                                <span style="color: red;"><b>View</b></span>
                            </a>
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.FirstAffiliationDateByJNTUDoc, new { type = "file", @id = "@txtFile", @name = "@file", @class = "required Supportingfile" })
                        }
                        @Html.ValidationMessageFor(model => model.FirstAffiliationDateByJNTUDoc)
                    </td>
                </tr>
                <tr>
                    <td class="col11">
                        @Html.LabelFor(model => model.firstBatchCommencementYear)
                    </td>
                    <td class="col41">
                        @Html.DisplayFor(model => model.firstBatchCommencementYear, new { @class = "year", Value = @Model.firstBatchCommencementYear == 0 ? "" : @Model.firstBatchCommencementYear.ToString(), @maxlength = "4" })
                        @Html.ValidationMessageFor(model => model.firstBatchCommencementYear)
                        @Html.HiddenFor(model => model.firstBatchCommencementYear)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.HiddenFor(model => model.addressTye, new { Value = "COLLEGE" })
                        @Html.HiddenFor(model => model.createdOn, new { Value = DateTime.Now })

                    </td>
                    <td colspan="3" style="line-height: 1.2rem; " class="right_buttons">
                        <input type="submit" value="Save" onclick="return Validate();" />
                        @Html.ActionLink("Go to Affiliations", "Create", "AffiliationTypes", new { collegeId = "" }, new { @class = "create_button", @style = "padding: 1px 15px;display: none;" })
                    </td>
                </tr>
            </table>
        }
    }
}
<script type="text/javascript">
    function Validate() {
        debugger;
        var isValid = true;
        //var UGCfrmDt = $("#txtfrom_2").val();
        //var UGCtoDt = $("#txtto_2").val();
        //var frmDt = $("#txtfrom_3").val();
        //var toDt = $("#txtto_3").val();
        //if (UGCfrmDt!=""&UGCtoDt!="") {
        //    var UGCfromDate = UGCfrmDt.substr(6, 4) + UGCfrmDt.substr(3, 2) + UGCfrmDt.substr(0, 2);
        //    var UGCtoDate = UGCtoDt.substr(6, 4) + UGCtoDt.substr(3, 2) + UGCtoDt.substr(0, 2);
        //    if (UGCtoDate < UGCfromDate) {
        //        alert("from date should be less than to date.");
        //        $("#txtfrom_2").val("");
        //        $("#txtfrom_2").focus();
        //        return false;
        //    }
        //}
        //if (frmDt!=""&toDt!="") {
        //    var fromDate = frmDt.substr(6, 4) + frmDt.substr(3, 2) + frmDt.substr(0, 2);
        //    var toDate = toDt.substr(6, 4) + toDt.substr(3, 2) + toDt.substr(0, 2);
        //    if (toDate < fromDate) {
        //        alert("from date should be less than to date.");
        //        $("#txtfrom_3").val("");
        //        $("#txtfrom_3").focus();
        //        return false;
        //    }
        //}
        var startDate = document.getElementById("collegestatusfrom").value;
        var endDate = document.getElementById("collegestatuto").value;

        if ((Date.parse(endDate) <= Date.parse(startDate))) {
            alert("From date should be less than to date.");
            //document.getElementById("toDate").value = "";
            isValid = false;
        }
        else {
            isValid = true;
        }
        if ($("#CAType_11").is(":checked")) {
            var selecetedAffiliation = $("#CAType_11").val();
            if(selecetedAffiliation == 11)
            {
                var otherCategory = $.trim($('#otherCategory').val());
                if(otherCategory == '')
                {
                    isValid = false;
                    alert("Please enter Other Category");
                }
                else
                {
                    isValid = true;
                }
            }
            else
            {
                isValid = true;
            }
        }
        return isValid;
    }
</script>
