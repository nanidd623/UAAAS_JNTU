@model UAAAS.Models.CollegeExaminationBranch
@{
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    } 
    ViewBag.Title = "College Examination Branch";
}

<h2>College Examination Branch</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {

        var mainUrl = window.location;
        var url;

        $.ajaxSetup({ cache: false });

        var $myDialog = $("#dialog-edit").dialog({
            title: 'Add/Edit Staff Details',
            autoOpen: false,
            resizable: false,
            height: 200,
            width: 600,
            show: { effect: 'drop', direction: "up" },
            modal: true,
            draggable: true,
            closeOnEscape: true,
            open: function (event, ui) {
                $(this).load(url);
            },
            close: function (event, ui) {
                $(this).dialog("close");
            }
        });

        $("#openDialog").live("click", function (e) {

            e.preventDefault();
            $("#dialog-edit").dialog({
                title: 'Add Staff Details'
            });
            url = $("#openDialog").attr('href');

            $myDialog.dialog('open');
            return false;
        });

        $('.webGrid').find('tbody').find('tr').click(function () {
            url = $(this).find(".editDialog").attr('href');
        });

        $(".editDialog").live("click", function (e) {
            e.preventDefault();
            $("#dialog-edit").dialog({
                title: 'Edit Staff Details'
            });
            $myDialog.dialog('open');
            return false;
        });

        $(".confirmDialog").live("click", function (e) {
            var url = $(this).attr('href');
            $("#dialog-confirm").dialog({
                title: 'Delete Staff Details',
                autoOpen: false,
                resizable: false,
                height: 170,
                width: 350,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: true,
                buttons: {
                    "Yes": function () {
                        $(this).dialog("close");
                        window.location = url;
                    },
                    "No": function () {
                        $(this).dialog("close");
                    }
                }
            });
            $("#dialog-confirm").dialog('open');
            return false;
        });

        $(".viewDialog").live("click", function (e) {
            var url = $(this).attr('href');
            $("#dialog-view").dialog({
                title: 'View Staff Details',
                autoOpen: false,
                resizable: false,
                height: 250,
                width: 600,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: true,
                open: function (event, ui) {
                    $(this).load(url);
                },
                buttons: {
                    "Close": function () {
                        $(this).dialog("close");
                    }
                },
                close: function (event, ui) {
                    $(this).dialog('close');
                }
            });
            $("#dialog-view").dialog('open');
            return false;
        });

        $("#btncancel").live("click", function (e) {
            $("#dialog-edit").dialog("close");
        });

        $($myDialog).bind("dialogclose", function () {
            window.location = mainUrl;
        });
    });
</script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)    
    @Html.HiddenFor(model => model.collegeId, new { @Value = Model.collegeId })
    if (ViewBag.NotUpload == true)
    {
    <span class="notUpload">You can not upload data Please contact Affiliations & Academic Audit if you want to upload</span>
    }
    else
    {
        if (TempData["Error"] != null)
        {
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
        }
        if (TempData["Success"] != null)
        {
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
        }
    <table class="four_columns" style="width: 100%">
        <tr>
            <td class="col1" colspan="4">
                <b>Examination Branch: </b>
            </td>
        </tr>
        <tr>
    </table>
    <div class="details_table">
        <div class="editor-label" style="width: 410px">
            @Html.LabelFor(model => model.examinationBranchArea)
        </div>
        <div class="editor-field focus" style="width: 559px">
            @Html.TextBoxFor(model => model.examinationBranchArea, new { @Value = Model.examinationBranchArea == 0 ? "" : @Model.examinationBranchArea.ToString() })
            @Html.ValidationMessageFor(model => model.examinationBranchArea)
        </div>

        <div class="editor-label" style="width: 410px">
            @Html.LabelFor(model => model.isConfidenatialRoomExists)
        </div>
        <div class="editor-field" style="width: 559px">
            <label>@Html.RadioButtonFor(model => model.isConfidenatialRoomExists, true) Yes</label>
            <label>@Html.RadioButtonFor(model => model.isConfidenatialRoomExists, false) No</label>
            @Html.ValidationMessageFor(model => model.isConfidenatialRoomExists)
        </div>
        <div class="editor-label" style="width: 410px">
            @Html.LabelFor(model => model.isAdjacentPrincipalRoom)
        </div>
        <div class="editor-field" style="width: 559px">
            <label>@Html.RadioButtonFor(model => model.isAdjacentPrincipalRoom, true) Yes</label>
            <label>@Html.RadioButtonFor(model => model.isAdjacentPrincipalRoom, false) No</label>
            @Html.ValidationMessageFor(model => model.isAdjacentPrincipalRoom)
        </div>
    </div>
    <table>
        <tr>
            <td class="col1" colspan="4">
                <b>Details of measures taken by the college to maintain the Confidentiality/Security of the Examination Branch:</b>
            </td>
        </tr>
    </table>
    <div class="details_table">
        <div class="editor-label" style="width: 30px; min-height: 90px">
            @Html.LabelFor(model => model.securityMesearesTaken1)
        </div>
        <div class="editor-field" style="width: 939px">
            @Html.TextAreaFor(model => model.securityMesearesTaken1, new { style = "width: 930px; resize: none;" })
            @Html.ValidationMessageFor(model => model.securityMesearesTaken1)
        </div>
    </div>
    <div class="details_table">
        <div class="editor-label" style="width: 30px; min-height: 90px">
            @Html.LabelFor(model => model.securityMesearesTaken2)
        </div>
        <div class="editor-field" style="width: 939px">
            @Html.TextAreaFor(model => model.securityMesearesTaken2, new { style = "width: 930px; resize: none;" })
            @Html.ValidationMessageFor(model => model.securityMesearesTaken2)
        </div>
    </div>
    <div class="details_table">
        <div class="editor-label" style="width: 30px; min-height: 90px">
            @Html.LabelFor(model => model.securityMesearesTaken3)
        </div>
        <div class="editor-field" style="width: 939px">
            @Html.TextAreaFor(model => model.securityMesearesTaken3, new { style = "width: 930px; resize: none;" })
            @Html.ValidationMessageFor(model => model.securityMesearesTaken3)
        </div>
    </div>
    
    @Html.HiddenFor(model => model.collegeId)
    @Html.HiddenFor(model => model.createdOn)
    @Html.HiddenFor(model => model.createdBy);
    if (ViewBag.NotUpload == true)
    {
    }
    else
    { 
    <p class="right_buttons">
        @if (Model.id == 0)
        {
            <input type="submit" value="Save" />
        }
        else
        {
            <input type="submit" value="Save" />
        }
    </p> 
    }
    <br />
    <table class="four_columns">
        <tr>
            <td class="col1" colspan="4">
                <b>Staff Members :</b>                
            </td>
        </tr>
    </table>
    <div style="width: 200px; float: right; display: inline-block; text-align: right;">
                    <p class="create_link_right1">
                        @Html.ActionLink("Add Staff Member", "AddOrEditStaffMembers", "CollegeExaminationBranch", new { collegeId = @ViewBag.collegeId }, new { @id = "openDialog", @class = "create_button" })
                    </p>
                </div>
    }
    <br />    
    if (TempData["StaffDetailsSuccess"] != null)
    {
    <div class="success">
        <p><strong>Success:</strong> @TempData["StaffDetailsSuccess"].ToString()</p>
    </div>
    }    
    
    <div id="gridContent">
        @{            
    var grid = new WebGrid(ViewBag.StaffMembers,
    canPage: false,
        // rowsPerPage: 10,
    selectionFieldName: "selectedRow",
    ajaxUpdateContainerId: "gridContent"
    );
    // grid.Pager(WebGridPagerModes.NextPrevious);
    var count = 1; 
        }
        @grid.GetHtml(tableStyle: "webGrid",
                headerStyle: "gridHeader",
                alternatingRowStyle: "alt",
                selectedRowStyle: "select",
                columns: grid.Columns(
                grid.Column("ID", "S.No.", format: p => count++, style: "row_number", canSort: true),
                grid.Column("staffName", "Name of the Staff", null, style: "align_left", canSort: true),
                grid.Column("staffDesignation", "Designation", null, style: "align_left", canSort: true),
                grid.Column("isTeachingStaff", "Teaching/Non-Teaching", format: @<text>@if (item.isTeachingStaff == true)
                                                                                       {<label>Teaching</label>}
                                                                                       else
                                                                                       {<label>Non-Teaching</label>}</text>, style: "status", canSort: true),
                grid.Column("Edit", "Edit", format: @<text>@Html.ActionLink("Edit", "AddOrEditStaffMembers", new { id = item.id }, new { @class = "editDialog edit_button" }) </text>, style: "edit", canSort: true),
                grid.Column("Details", "Details", format: @<text>@Html.ActionLink("Details", "StaffMembersDetails", new { id = item.id }, new { @class = "viewDialog view_button" }) </text>, style: "view", canSort: true),
                grid.Column("Delete", "Delete", format: @<text>@Html.ActionLink("Delete", "DeleteStaffMembers", new { id = item.id }, new { @class = "confirmDialog delete_button" }) </text>, style: "view", canSort: true)
         ))
    </div> 
    if (ViewBag.Count == 0)
    {
    <div class="warning" style="width: 200px; margin: 0 auto;">
        <p>No Data found</p>
    </div>
    }
    <div id="dialog-confirm" style="display: none">
        <p>
            <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
            Are you sure to delete ?
        </p>
    </div>
    <div id="dialog-edit" style="display: none">
    </div>
    <div id="dialog-view" style="display: none">
    </div>   
    
}


