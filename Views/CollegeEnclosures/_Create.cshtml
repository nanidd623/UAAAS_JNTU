@model UAAAS.Models.CollegeEnclosures
<script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $('.submit').click(function (event, args) {
            if ($('#scannedCopy').val() == undefined && $('#scannedDocument').val() == '') {
                alert("Please select PDF File")
                return false;
            }
            else {
                return true;
            }
        });

        //get file size
        function GetFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject"); var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#scannedDocument")[0].files[0].size //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            }
            catch (e) {
                //alert("Error is : " + e);
            }
        }

        //get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            }
            else {
                return strName[0];
            }
        }
        //case 'txt':
        //                case 'TXT':
        //                case 'doc':
        //                case 'DOC':
        //                case 'docx':
        //                case 'DOCX':
        //                case 'xls':
        //                case 'XLS':
        //                case 'xlsx':
        //                case 'XLSX':
        //                case 'jpg':
        //                case 'JPG':
        //                case 'png':
        //                case 'PNG':
        //                case 'jpeg':
        //                case 'JPEG':
        //                case 'bmp':
        //                case 'BMP':
        //                case 'gif':
        //                case 'GIF':
        $(function () {
            $(".file").change(function () {
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'pdf':
                        case 'PDF':

                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }
                if (flag == false) {
                    $(".files > span").text("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                }
                else {
                    var size = GetFileSize(file);
                    size = size / 1048576;
                    if (size > 78) {
                        $(".files > span").text("Document should not exceed 78 MB in Size");
                        $(this).val('');
                    }
                    else {
                        $(".files > span").text("");
                    }
                }

            });
        });
    });
</script>
<style>
    .widthscroll {
        width: 200px;
        overflow: auto;
    }
</style>
@using (Ajax.BeginForm("AddEditRecord", "CollegeEnclosures", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "studentDialog" }, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.collegeId, new { @Value = Model.collegeId })
    if (TempData["Error"] != null)
    {
        <div class="error">
            <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
        </div>
    }
    if (TempData["Success"] != null)
    {
        <div class="success">
            <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
        </div>
    }
    <table class="downloads_table" style="width: 100%;">
        <tr>
            <td class="editor-label1" style="width: 100%;font-weight:bold;">
                Enclosure
            </td>
            <td class="editor-label1" style="width: 100%;font-weight:bold;">
                Document
            </td>
        </tr>
        <tr>
            <td class="editor-field1" style="width: 100%;">
                @Html.HiddenFor(model => model.enclosureId)
                @*@Html.DropDownListFor(model => model.enclosureId, new SelectList(ViewBag.Documents as System.Collections.IEnumerable, "id", "documentName"),
                    "-- Select --", new { id = "id", @class = "widthscroll", @disabled = "disabled", @readOnly = true, @style = "width:400px;" })*@ @*@style = "width:400px;",*@
                    <span>@Model.enclosureName</span>
                    @Html.ValidationMessageFor(model => model.enclosureId)
                </td>
                <td class="editor-field1 files" style="width: 100%;">
                    @Html.TextBoxFor(model => model.scannedDocument, new { type = "file", @class = "file" })
                    <br />
                    <span style="color: red;"></span>
                    @if (Model != null && Model.path != null)
                    {
                        <br />
                        <a href="@Model.path.Replace("~", "")" target="_blank" style="color:green;">Download</a>
                        @Html.HiddenFor(model => model.path)
                    }
                </td>
            </tr>
            @Html.HiddenFor(model => model.isActive)
            @Html.HiddenFor(model => model.createdBy)
            @Html.HiddenFor(model => model.createdOn)
        </table>
        <p>
            @if (ViewBag.IsUpdate == true)
            {
                <input type="submit" value="Update" id="btnUpdate" name="cmd" class="submit" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" style="float:right;" />
            }
            else
            {
                <input type="submit" value="Save" id="btnSave" name="cmd" class="submit" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" style="float:right;" />
            }
            <input type="button" value="Cancel" id="btnCancel" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" />
        </p>
}
