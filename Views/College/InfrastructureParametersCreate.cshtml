@model UAAAS.Models.InfrastructureParameters
@{
    ViewBag.Title = "Infrastructure Parameters";
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    } 
}

<h2>Infrastructure Parameters</h2>
<style type="text/css">
    .obtainedPoints {
        text-align: center;
    }
</style>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)    
    @Html.HiddenFor(model => model.collegeId, new { @Value = Model.collegeId })
    if (ViewBag.NotUpload == true)
    {
    <span class="notUpload">You can not upload data Please contact Affiliations & Academic Audit if you want to upload</span>
    }
    else
    {
        if (TempData["Error"] != null)
        {
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
        }
        if (TempData["Success"] != null)
        {
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
        }
    <table class="four_columns tblInfrastructure" style="width: 100%">
        <tr>
            <td class="col11" colspan="8">
                <b>Infrastructure Parameters:</b>(Please award points for the following parameters) (TOTAL POINTS: 50)
            </td>
            <td class="col11" style="text-align: center; width: 10%">
                <b>POINTS
                    <br />
                    ALLOTED  </b>
            </td>
            <td class="col11" style="text-align: center; width: 10%">
                <b>POINTS
                    <br />
                    OBTAINED</b>
            </td>
        </tr>
        <tr>
            <td class="col21" colspan="8">
                <b>1.   Built up area (total area in m2/ Quality/Internal Layout/Design/Circulation Area )  </b>
                <br />
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;No short-fall (5) / Short-fall by 5% (4) / Short-fall by 10% (3) / Short-fall by 15% (2) / Short-fall > 20% (1)  
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                <label>(0</label>@Model.allottedPoints1.ToString()<label>)</label>
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                @Html.TextBoxFor(model => model.Infrastructure1, new {Value = @Model.Infrastructure1 == 0 ? "" : @Model.Infrastructure1.ToString(), @class = "obtainedPoints", onchange = "CalculateTotalObtainedPoints()" })
                @Html.HiddenFor(model => model.InfrastructureId1)
                @Html.ValidationMessageFor(model => model.Infrastructure1)
            </td>
        </tr>
        <tr>
            <td class="col21" colspan="8">
                <b>2.	Instructional area (No. of  Classrooms/Area/Furniture/Teaching Aids): </b>
                <br />
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;No short-fall (5)/ Short-fall by 5% (4)/ Short-fall by 10% (3)/ Short-fall by 15% (2)/ Short-fall > 20% (1) 
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                <label>(0</label>@Model.allottedPoints2.ToString()<label>)</label>
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                @Html.TextBoxFor(model => model.Infrastructure2, new {Value = @Model.Infrastructure2 == 0 ? "" : @Model.Infrastructure2.ToString(),  @class = "obtainedPoints", onchange = "CalculateTotalObtainedPoints()" })
                @Html.HiddenFor(model => model.InfrastructureId2)
                @Html.ValidationMessageFor(model => model.Infrastructure2)
            </td>
        </tr>
        <tr>
            <td class="col21" colspan="8">
                <b>3.	Laboratories/Workshops (No. of Labs/Workshops, quality of equipment available): </b>
                <br />
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;No short-fall (5)/ Short-fall by 5% (4)/ Short-fall by 10% (3)/ Short-fall by 15% (2)/ Short-fall > 20% (1)
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                <label>(0</label>@Model.allottedPoints3.ToString()<label>)</label>
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                @Html.TextBoxFor(model => model.Infrastructure3, new { Value = @Model.Infrastructure3 == 0 ? "" : @Model.Infrastructure3.ToString(), @class = "obtainedPoints", onchange = "CalculateTotalObtainedPoints()" })
                @Html.HiddenFor(model => model.InfrastructureId3)
                @Html.ValidationMessageFor(model => model.Infrastructure3)
            </td>
        </tr>
        <tr>
            <td class="col21" colspan="8">
                <b>4.	Computing Facilities/Internet Facilities (Student computer ratio & licensed soft wares available):   </b>
                <br />
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;No short-fall (5)/ Short-fall by 5% (4)/ Short-fall by 10% (3)/ Short-fall by 15% (2)/ Short-fall > 20% (1) 
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                <label>(0</label>@Model.allottedPoints4.ToString()<label>)</label>
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                @Html.TextBoxFor(model => model.Infrastructure4, new { Value = @Model.Infrastructure4 == 0 ? "" : @Model.Infrastructure4.ToString(), @class = "obtainedPoints", onchange = "CalculateTotalObtainedPoints()" })
                @Html.HiddenFor(model => model.InfrastructureId4)
                @Html.ValidationMessageFor(model => model.Infrastructure4)
            </td>
        </tr>
        <tr>
            <td class="col21" colspan="8">
                <b>5.	Availability of Qualified Principal (Qualifications+ age+ ratified + experience + duration of present tenure):</b>
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                <label>(0</label>@Model.allottedPoints5.ToString()<label>)</label>
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                @Html.TextBoxFor(model => model.Infrastructure5, new { Value = @Model.Infrastructure5 == 0 ? "" : @Model.Infrastructure5.ToString(), @class = "obtainedPoints", onchange = "CalculateTotalObtainedPoints()" })
                @Html.HiddenFor(model => model.InfrastructureId5)
                @Html.ValidationMessageFor(model => model.Infrastructure5)
            </td>
        </tr>
        <tr>
            <td class="col21" colspan="8">
                <b>6.	Library (Area/Books/Journals/staff/ Timings ):</b>
                <br />
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;No short-fall (5)/ Short-fall by 5% (4)/ Short-fall by 10% (3)/ Short-fall by 15% (2)/ Short-fall > 20% (1)
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                <label>(0</label>@Model.allottedPoints6.ToString()<label>)</label>
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                @Html.TextBoxFor(model => model.Infrastructure6, new { Value = @Model.Infrastructure6 == 0 ? "" : @Model.Infrastructure6.ToString(), @class = "obtainedPoints", onchange = "CalculateTotalObtainedPoints()" })
                @Html.HiddenFor(model => model.InfrastructureId6)
                @Html.ValidationMessageFor(model => model.Infrastructure6)
            </td>
        </tr>
        <tr>
            <td class="col21" colspan="8">
                <b>7. Faculty Student Ratio for UG 1:15 (PG 1 : 12) available FSR = </b>
                <br />
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;No short-fall (5)/ Short-fall by 5% (4)/ Short-fall by 10% (3)/ Short-fall by 15% (2)/ Short-fall > 20% (1)
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                <label>(0</label>@Model.allottedPoints7.ToString()<label>)</label>
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                @Html.TextBoxFor(model => model.Infrastructure7, new { Value = @Model.Infrastructure7 == 0 ? "" : @Model.Infrastructure7.ToString(), @class = "obtainedPoints", onchange = "CalculateTotalObtainedPoints()" })
                @Html.HiddenFor(model => model.InfrastructureId7)
                @Html.ValidationMessageFor(model => model.Infrastructure7)
            </td>
        </tr>
        <tr>
            <td class="col21" colspan="8">
                <b>8.	Cadre Ratio of Faculty (Prof. : Asso. Prof. : Asst. Prof. :: 1:2:6); (Qualifications & Experience, 
                    <br />&nbsp;&nbsp;&nbsp;&nbsp;as per the norms): </b>
                <br />
                &nbsp;&nbsp;&nbsp;&nbsp;No short-fall (5)/ Short-fall by 5% (4)/ Short-fall by 10% (3)/ Short-fall by 15% (2)/ Short-fall > 20% (1)   
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                <label>(0</label>@Model.allottedPoints8.ToString()<label>)</label>
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                @Html.TextBoxFor(model => model.Infrastructure8, new { Value = @Model.Infrastructure8 == 0 ? "" : @Model.Infrastructure8.ToString(), @class = "obtainedPoints", onchange = "CalculateTotalObtainedPoints()" })
                @Html.HiddenFor(model => model.InfrastructureId8)
                @Html.ValidationMessageFor(model => model.Infrastructure8)
            </td>
        </tr>
        <tr>
            <td class="col21" colspan="8">
                <b>9.	Supporting Staff (Faculty to (Programmers/Lab Assistants/Technicians) is 1: 1.25
                    <br />&nbsp;&nbsp;&nbsp;&nbsp;Qualifications & Experience, competency):</b>
                <br />
                &nbsp;&nbsp;&nbsp;&nbsp;No short-fall (5)/ Short-fall by 5% (4)/ Short-fall by 10% (3)/ Short-fall by 15% (2)/ Short-fall > 20% (1)
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                <label>(0</label>@Model.allottedPoints9.ToString()<label>)</label>
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                @Html.TextBoxFor(model => model.Infrastructure9, new { Value = @Model.Infrastructure9 == 0 ? "" : @Model.Infrastructure9.ToString(), @class = "obtainedPoints", onchange = "CalculateTotalObtainedPoints()" })
                @Html.HiddenFor(model => model.InfrastructureId9)
                @Html.ValidationMessageFor(model => model.Infrastructure9)
            </td>
        </tr>
        <tr>
            <td class="col21" colspan="8">
                <b>10.	Power Generator/Approach Road/College Ambience/Drinking Water/Toilets: </b>
                <br />
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Excellent (5)/ Very Good (4) / Good (3) / Satisfactory (2) /below satisfactory (1)	
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                <label>(0</label>@Model.allottedPoints10.ToString()<label>)</label>
            </td>
            <td class="col21" style="text-align: center; width: 10%">
                @Html.TextBoxFor(model => model.Infrastructure10, new { Value = @Model.Infrastructure10 == 0 ? "" : @Model.Infrastructure10.ToString(), @class = "obtainedPoints", onchange = "CalculateTotalObtainedPoints()" })
                @Html.HiddenFor(model => model.InfrastructureId10)
                @Html.ValidationMessageFor(model => model.Infrastructure10)
            </td>
        </tr>
        <tr>
            <td class="col11" colspan="8">
                <b>TOTAL POINTS OBTAINED FOR INFRASTRUCTURE PARAMETERS    (Y) = </b>
            </td>
            <td class="col11" style="text-align: center; width: 10%">
                @Html.DisplayFor(model => model.totalAllotedPoints)
            </td>
            <td class="col11" style="text-align: center; width: 10%">
                <span class="totalObtainedPoints">
                    @Html.DisplayFor(model => model.totalObtainedPoints)
                </span>
            </td>
        </tr>
    </table>
    <p class="right_buttons">
        <input type="submit" value="Save" />
    </p>
    }
}
<script type="text/javascript">
    $(document).ready(function () {
        CalculateTotalObtainedPoints();
    });
    function CalculateTotalObtainedPoints() {
        totalObtainedPoints = 0;
        $('.obtainedPoints').each(function () {
            var obtainedPoints = $(this).val();
            if (!isNaN(obtainedPoints) && obtainedPoints.length != 0) {
                totalObtainedPoints += parseFloat(obtainedPoints);
            }
        });
        $(".totalObtainedPoints").html(totalObtainedPoints);
    }
</script>
