@model IEnumerable<UAAAS.Models.jntuh_degree_type>

@{
    ViewBag.Title = "Degree Type";
}

<h2>Degree Type</h2>

<p class="create_link_right">
   
     @Html.ActionLink("Add Degree Type", "Create", null, new { @class = "create_button" })
</p>
@*<table class="grid">
    <tr>
        <th  style="width: 50px; text-align: center;">S.No
        </th>
        <th>
            Degree Type
        </th>
        <th>
            Description
        </th>
       <th>
            Status
        </th>
      <th>
            createdOn
        </th>
        <th>
            my_aspnet_users
        </th>
        <th>
            updatedOn
        </th>
        <th>
            my_aspnet_users1
        </th>
        <th></th
        <th style="width: 50px; text-align: center;">Edit</th>
        <th style="width: 50px; text-align: center;">View</th>
    </tr>
 @foreach (var item in Model.Select((item, index) => new { item, index }))
 {
    <tr>
          <td style="text-align: center;">@string.Format("{0}", item.index + 1)</td>
        <td>
            @Html.DisplayFor(modelItem => item.item.degreeType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.item.description)
        </td>
        <td style="text-align: center;">
                @if (item.item.isActive == true)
                { <label>Yes</label>}
                else
                {<label>No</label>}
            </td>
      <td>
            @Html.DisplayFor(modelItem => item.createdOn)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.my_aspnet_users.name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.updatedOn)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.my_aspnet_users1.name)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.id }) |
            @Html.ActionLink("Details", "Details", new { id=item.id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.id })
        </td>
         <td style="width: 50px; text-align: center; vertical-align: middle;">@Html.ActionLink("Edit", "Edit", new { id = item.item.id }, new { @class = "edit_button" })</td>
            <td style="width: 50px; text-align: center; vertical-align: middle;">@Html.ActionLink("Details", "Details", new { id = item.item.id }, new { @class = "view_button" })</td>
    </tr>
}

</table>*@
@{
    var grid = new WebGrid(Model.Select((element, index) => new { Data = element, Index = index }),
        canPage: true,
        rowsPerPage: 10,
        selectionFieldName: "selectedRow",
        ajaxUpdateContainerId: "gridContent"
        );
    grid.Pager(WebGridPagerModes.NextPrevious);
}
<div id="gridContent">
    @grid.GetHtml(tableStyle: "webGrid",
                headerStyle: "gridHeader",
                alternatingRowStyle: "alt",
                selectedRowStyle: "select",
                columns: grid.Columns(
                grid.Column("ID", "S.No.", format: item => item.Index + 1, style: "row_number", canSort: true),
                grid.Column("Data.degreeType", "Degree Type", null, style: "align_left", canSort: true),
                grid.Column("Data.description", "Description", null, style: "align_left", canSort: true),
                grid.Column("Data.isActive", "Status", format: @<text>@if (item.Data.isActive == true)
                                                                      { <img src="@Url.Content("~/Content/images/active.png")" alt="JNTU Hyderabad Logo" />}
                                                                      else
                                                                      {<img src="@Url.Content("~/Content/images/inactive.png")" alt="JNTU Hyderabad Logo" />}</text>, style: "status", canSort: true),
                grid.Column("Edit", "Edit", format: @<text>@Html.ActionLink("Edit", "Edit", new { id = item.Data.id }, new { @class = "edit_button" }) </text>, style: "edit", canSort: true),
                grid.Column("Detail", format: @<text>@Html.ActionLink("Details", "Details", new { id = item.Data.id }, new { @class = "view_button" }) </text>, style: "view", canSort: true)
         ))
</div>
