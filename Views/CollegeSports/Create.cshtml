@model UAAAS.Models.CollegePlayground
@{
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    ViewBag.Title = "College Sports Facilities";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    } 
}

<h2>College Sports Facilities</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {

        var mainUrl = window.location;
        var url;

        $.ajaxSetup({ cache: false });

        var $myDialog = $("#dialog-edit").dialog({
            title: 'Add/Edit Sports',
            autoOpen: false,
            resizable: false,
            height: 180,
            width: 450,
            show: { effect: 'drop', direction: "up" },
            modal: true,
            draggable: true,
            closeOnEscape: true,
            open: function (event, ui) {
                $(this).load(url);
            },
            close: function (event, ui) {
                $(this).dialog("close");
            }
        });

        $("#openDialog").live("click", function (e) {
           
            e.preventDefault();
            $("#dialog-edit").dialog({
                title: 'Add Sports/Games Details'
            });
            url = $("#openDialog").attr('href');

            $myDialog.dialog('open');
            return false;
        });

        $('.webGrid').find('tbody').find('tr').click(function () {
            url = $(this).find(".editDialog").attr('href');
        });

        $(".editDialog").live("click", function (e) {
            e.preventDefault();
            $("#dialog-edit").dialog({
                title: 'Edit Sports/Games Details'
            });
            $myDialog.dialog('open');
            return false;
        });

        $(".confirmDialog").live("click", function (e) {
            var url = $(this).attr('href');
            $("#dialog-confirm").dialog({
                title: 'Delete Sports/Games Details',
                autoOpen: false,
                resizable: false,
                height: 170,
                width: 350,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: true,
                buttons: {
                    "Yes": function () {
                        $(this).dialog("close");
                        window.location = url;
                    },
                    "No": function () {
                        $(this).dialog("close");
                    }
                }
            });
            $("#dialog-confirm").dialog('open');
            return false;
        });

        $(".viewDialog").live("click", function (e) {
            var url = $(this).attr('href');
            $("#dialog-view").dialog({
                title: 'View Sports/Games Details',
                autoOpen: false,
                resizable: false,
                height: 250,
                width: 450,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: true,
                open: function (event, ui) {
                    $(this).load(url);
                },
                buttons: {
                    "Close": function () {
                        $(this).dialog("close");
                    }
                },
                close: function (event, ui) {
                    $(this).dialog('close');
                }
            });
            $("#dialog-view").dialog('open');
            return false;
        });

        $("#btncancel").live("click", function (e) {
            $("#dialog-edit").dialog("close");
        });

        $($myDialog).bind("dialogclose", function () {
            window.location = mainUrl;
        });
    });
</script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)    
    @Html.HiddenFor(model => model.collegeId, new { @Value = Model.collegeId })
    if (TempData["SportsError"] != null)
    {
    <div class="error">
        <p><strong>Error:</strong> @TempData["SportsError"].ToString()</p>
    </div>
    }
    if (TempData["SportsSuccess"] != null)
    {
    <div class="success">
        <p><strong>Success:</strong> @TempData["SportsSuccess"].ToString()</p>
    </div>
    }
    if (ViewBag.NotUpload == true)
    {
    }
    else
    {
    <p class="create_link_right">
        @Html.ActionLink("Add Games (or ) Sports", "AddEditRecord", "CollegeSports", new { collegeId = @ViewBag.collegeId }, new { @id = "openDialog", @class = "create_button" })
    </p>
}
    <div id="gridContent">

        @{            
    var grid = new WebGrid(ViewBag.Games,
                canPage: false,
                //rowsPerPage: 10,
                selectionFieldName: "selectedRow",
                ajaxUpdateContainerId: "gridContent"
                );
   // grid.Pager(WebGridPagerModes.NextPrevious);
    var count = 1; 
        }
        @grid.GetHtml(tableStyle: "webGrid",
                headerStyle: "gridHeader",
                alternatingRowStyle: "alt",
                selectedRowStyle: "select",
                columns: grid.Columns(
                grid.Column("ID", "S.No.", format: p => count++, style: "row_number", canSort: true),
                grid.Column("sportsType", "Sports Type", null, style: "align_left", canSort: true),
                grid.Column("sportsFacility", "Sports Facility", null, style: "align_left", canSort: true),
                grid.Column("Edit", "Edit", format: @<text>@Html.ActionLink("Edit", "AddEditRecord", "CollegeSports", new { id = item.id }, new { @class = "editDialog edit_button" }) </text>, style: "edit", canSort: true),
                grid.Column("Details", "Details", format: @<text>@Html.ActionLink("Details", "Details", "CollegeSports", new { id = item.id }, new { @class = "viewDialog view_button" }) </text>, style: "view", canSort: true),
                grid.Column("Delete", "Delete", format: @<text>@Html.ActionLink("Delete", "DeleteRecord", "CollegeSports", new { id = item.id }, new { @class = "confirmDialog delete_button" }) </text>, style: "view", canSort: true)
         ))
    </div>
    if (ViewBag.Count == 0)
    {
    <div class="warning" style="width: 200px; margin: 0 auto;">
        <p>No records found</p>
    </div>
    }
    <div id="dialog-confirm" style="display: none">
        <p>
            <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
            Are you sure to delete ?
        </p>
    </div>
    <div id="dialog-edit" style="display: none">
    </div>
    <div id="dialog-view" style="display: none">
    </div>
    <br />
    <table class="four_columns">
        <tr>
            <td class="col1">
                <b>Other Desirable Requirements:</b>
            </td>
        </tr>
    </table>
     if (ViewBag.NotUpload == true)
    {
    <span class="notUpload">You can not upload data Please contact Affiliations & Academic Audit if you want to upload</span>
    }
    else
    {
    if (TempData["Error"] != null)
    {
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
    }
    if (TempData["Success"] != null)
    {
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
    }
    <div class="details_table">
        <div class="editor-label" style="width: 30%">
            @Html.LabelFor(model => model.totalPlaygrounds)
        </div>
        <div class="editor-field focus" style="width: 670px">
            @Html.TextBoxFor(model => model.totalPlaygrounds, new { @Value = Model.totalPlaygrounds == 0 ? "" : Model.totalPlaygrounds.ToString() })
            @Html.ValidationMessageFor(model => model.totalPlaygrounds)
        </div>

        <div class="editor-label" style="width: 30%">
            @Html.LabelFor(model => model.PlayGroundTypeId)
        </div>
        <div class="editor-field" style="width: 670px">
            @Html.HiddenFor(model => model.PlayGroundTypeId)
            @foreach (var item in Model.GroundTypes)
            {
                var optionValue = "PlayGroundType_" + item.id;
                var selectValue = item.Checked;
                <input type="checkbox"
                        id="@optionValue"
                        name="PlayGroundTypeId"
                        value="@item.id" />
                <label for="@optionValue" style="padding-right: 10px !important;text-align: left;display: inline-block;" >@item.Name</label>
                <script type="text/javascript">
                    if(@selectValue == 1)
                        $("#@optionValue").attr('checked', 'checked');
                    else
                        $("#@optionValue").attr('checked', null);
                </script>
            }
            @Html.ValidationMessageFor(model => model.PlayGroundTypeId)
        </div>


        <div class="editor-label" style="width: 30%">
            @Html.LabelFor(model => model.modeOfTransportId)
        </div>
        <div class="editor-field" style="width: 670px">
            @Html.HiddenFor(model => model.modeOfTransportId)
            @foreach (var item in Model.TransportModes)
            {
                var optionValue2 = "ModeOfTransport_" + item.id;
                var selectValue = item.Checked;
                <input type="checkbox"
                        id="@optionValue2"
                        name="modeOfTransportId"
                        value="@item.id" />
                <label for="@optionValue2" style="padding-right: 10px !important;text-align: left;display: inline-block;" >@item.Name</label>
                <script type="text/javascript">
                    if(@selectValue == 1)
                        $("#@optionValue2").attr('checked', 'checked');
                    else
                        $("#@optionValue2").attr('checked', null);
                </script>
            }
            @Html.ValidationMessageFor(model => model.modeOfTransportId)
        </div>

        <div class="editor-label" style="width: 30%">
            @Html.LabelFor(model => model.numberOfBus)
        </div>
        <div class="editor-field" style="width: 670px">
            @Html.TextBoxFor(model => model.numberOfBus, new { @Value = Model.numberOfBus == 0 ? "" : Model.numberOfBus.ToString() })
            @Html.ValidationMessageFor(model => model.numberOfBus)
        </div>

        <div class="editor-label" style="width: 30%">
            @Html.LabelFor(model => model.numberOfOtherVehicles)
        </div>
        <div class="editor-field" style="width: 670px">
            @Html.TextBoxFor(model => model.numberOfOtherVehicles, new { @Value = Model.numberOfOtherVehicles == 0 ? "" : Model.numberOfOtherVehicles.ToString() })
            @Html.ValidationMessageFor(model => model.numberOfOtherVehicles)
        </div>

        <div class="editor-label" style="width: 30%">
            @Html.LabelFor(model => model.modeOfPaymentId)
        </div>
        <div class="editor-field" style="width: 670px">
            @Html.HiddenFor(model => model.modeOfPaymentId)
            @foreach (var item in Model.PaymentModes)
            {
                var optionValue3 = "ModeOfPayment_" + item.id;
                var selectValue = item.Checked;
                <input type="checkbox"
                        id="@optionValue3"
                        name="modeOfPaymentId"
                        value="@item.id" />
                <label for="@optionValue3" style="padding-right: 10px !important;text-align: left;display: inline-block;" >@item.Name</label>
                <script type="text/javascript">
                    if(@selectValue == 1)
                        $("#@optionValue3").attr('checked', 'checked');
                    else
                        $("#@optionValue3").attr('checked', null);
                </script>
            }
            @Html.ValidationMessageFor(model => model.modeOfPaymentId)
        </div>

        @Html.HiddenFor(model => model.id)
        @Html.HiddenFor(model => model.collegeId)
        @Html.HiddenFor(model => model.PlaygroundType)
        @Html.HiddenFor(model => model.createdOn)
        @Html.HiddenFor(model => model.createdBy)
    </div>
   
    <p class="right_buttons">
        <input type="submit" value="Save" id="btnSave" name="cmd" />
    </p>
}
}
