@model UAAAS.Models.CollegeComputerLab
@{
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    } 
    ViewBag.Title = "College Computer Lab";
}

<h2>College Computer Lab</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)    
    @Html.HiddenFor(model => model.collegeId, new { @Value = Model.collegeId })
    if (ViewBag.NotUpload == true)
    {
    <span class="notUpload">You can not upload data Please contact Affiliations & Academic Audit if you want to upload</span>
    }
    else
    {
        if (TempData["Error"] != null)
        {
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
        }
        if (TempData["Success"] != null)
        {
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
        }

    <div class="details_table news">

        <div class="editor-label" style="width: 300px">
            @Html.LabelFor(model => model.printersAvailability)
        </div>
        <div class="editor-field" style="width: 660px">
            <label>@Html.RadioButtonFor(model => model.printersAvailability, true) Yes</label>
            <label>@Html.RadioButtonFor(model => model.printersAvailability, false) No</label>
            @Html.ValidationMessageFor(model => model.printersAvailability)
        </div>

        <div class="editor-label" style="width: 300px">
            @Html.LabelFor(model => model.workingHoursofComputerLabFrom)
        </div>
        <div class="editor-field" style="width: 660px">
            @Html.TextBoxFor(model => model.workingHoursofComputerLabFrom)<label>(HH:MM)</label>
            @Html.ValidationMessageFor(model => model.workingHoursofComputerLabFrom)
        </div>

        <div class="editor-label" style="width: 300px">
            @Html.LabelFor(model => model.workingHoursofComputerLabTo)
        </div>
        <div class="editor-field" style="width: 660px">
            @Html.TextBoxFor(model => model.workingHoursofComputerLabTo)<label>(HH:MM)</label>
            @Html.ValidationMessageFor(model => model.workingHoursofComputerLabTo)
        </div>

        <div class="editor-label" style="width: 300px">
            @Html.LabelFor(model => model.internetAccessibilityFrom)
        </div>
        <div class="editor-field" style="width: 660px">
            @Html.TextBoxFor(model => model.internetAccessibilityFrom)<label>(HH:MM)</label>
            @Html.ValidationMessageFor(model => model.internetAccessibilityFrom)
        </div>

        <div class="editor-label" style="width: 300px">
            @Html.LabelFor(model => model.internetAccessibilityTo)
        </div>
        <div class="editor-field" style="width: 660px">
            @Html.TextBoxFor(model => model.internetAccessibilityTo)<label>(HH:MM)</label>
            @Html.ValidationMessageFor(model => model.internetAccessibilityTo)
        </div>
        @Html.HiddenFor(model => model.createdOn)
        @Html.HiddenFor(model => model.createdBy)
        @Html.HiddenFor(model => model.updatedOn)
        @Html.HiddenFor(model => model.updatedBy)
        <p class="right_buttons">
            <input type="submit" value="Save" />
        </p>
    </div>
    }
}