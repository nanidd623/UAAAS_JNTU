@model UAAAS.Models.FacultyComplaints
@using UAAAS.Models;
@{
    ViewBag.Title = "Faculty Complaints";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.plugin.from_html.js")" type="text/javascript"></script>
<h2>Complaints Portal</h2>
<style>
    /*.col2, .col4 {
        width: 10px;
    }*/
    b {
        font-weight: normal;
    }

    .faculty_table {
        width: 100%;
    }

    tbody tr td:nth-child(5).col1 {
        width: 25%;
    }
</style>
@if (TempData["SUCCESS"] != null)
{
    <div class="success">
        <p style="text-align: center;font-weight: bold">@TempData["SUCCESS"].ToString()</p>
    </div>
}
@if (TempData["ERROR"] != null)
{
    <div class="error">
        <p style="text-align: center;font-weight: bold;">@TempData["ERROR"].ToString()</p>
    </div>
}
<br />
<div id="div_print">

    @using (Html.BeginForm("FacultyComplaint", "FacultyComplaints", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true)

        <div>
            <table style="width: 100%">
                <tr>
                    <td style="width: 100%">
                        <table class="faculty_table" id="information">

                            <tr>
                                <td class="col1" style="font-weight: bold">
                                    <span>Registration No.</span>
                                </td>
                                <td class="col2">
                                    @Html.TextBoxFor(model => model.RegistrationNumber)&nbsp;<span id="name" style="color: green;font-weight: bold"></span>
                                </td>
                            </tr>
                        </table>
                    </td>

                </tr>
            </table>

        </div>
        <br />
        @*<table style="width:100%" class="faculty_table"></table>*@
        <table style="width: 100%" class="faculty_table">

            <tr>
                <td class="col1" style="width: 20%">
                    <b><span>Issue Type</span></b>

                </td>
                <td class="col2" style="width: 30%">
                    @Html.DropDownListFor(model => model.complaintid, new SelectList(ViewBag.Complaints as System.Collections.IEnumerable, "id", "complaintType"), "-Select-")
                    <div id="othersdiv"><br /> @Html.TextBoxFor(model => model.otherscomplaint, new { @class = "otherstext" })</div>
                </td>
                <td class="col1" style="width: 20%">
                    <b><span>Submitted Date</span></b>

                </td>
                <td class="col2" style="width: 20%">
                    @Html.TextBoxFor(model => model.Facultycomplaintdate, new { @class = "calendar", @placeholder = "DD/MM/YYYY" })
                </td>


            </tr>
            <tr>
                <td class="col1" style="width: 20%">
                    <b><span>Email</span></b>
                </td>
                <td class="col2" style="width: 30%">
                    @Html.TextBoxFor(model => model.Email)
                </td>
                <td class="col1" style="width: 20%">
                    <b><span>Mobile No.</span></b>
                </td>
                <td class="col2" style="width: 20%">
                    @Html.TextBoxFor(model => model.Moblie, new { @class = ""})
                </td>
            </tr>
            <tr>
                <td class="col1" style="width: 20%">
                    <b><span>Given By</span></b>
                </td>
                <td class="col2" style="width: 30%">
                    @Html.DropDownListFor(model => model.givenById, new SelectList(ViewBag.Complaintsgivenby as System.Collections.IEnumerable, "id", "givenbyName"), "-Select-")
                    <div><br /> @Html.TextBoxFor(model => model.OthergivenBy, new { @class = "othersgiventext" })</div>
                </td>
                <td class="col1">
                    <b><span>Complaint File</span></b>
                </td>
                <td class="col2">
                    @Html.TextBoxFor(model => model.FacultycomplaintFile, new { type = "file", @class = "complaintFile", @style = "vertical-align: top;" }) &nbsp;&nbsp;<span style="color: red;"></span>
                </td>
            </tr>
            <tr>
                <td class="col1">
                    <b><span>Complaint Remarks</span></b>
                </td>
                <td class="col2">
                    @Html.TextBoxFor(model => model.remarks, new { @class = "" })
                </td>
                @*<td class="col1">
                    <b><span>Reply File</span></b>
                </td>
                <td class="col2">
                    @Html.TextBoxFor(model => model.replyFile, new { type = "file", @class = "replyFile", @style = "vertical-align: top;" }) &nbsp;&nbsp;<span style="color: red;"></span>
                </td>*@
            </tr>
            <tr>
                <td>
                    <br />
                </td>
                <td>
                    <br />
                </td>

            </tr>
        </table>
        <table style="width: 100%" class="faculty_table">
            <tr>
                <td colspan="4" style="text-align: right">

                    <input type="submit" value="Save" id="btnSave" name="cmd" class="btnclass" />
                </td>
            </tr>
        </table>
    }
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('#department').val($('#department option:first').val());
        $('#MOdifiedDateofAppointment').val('');
        $("#othersdiv").hide();
        //$("#othersgivendiv").hide();
        $("#othsubcomplaint").hide();
        //$("#subcomplaints").hide();
        @*$('.calendartwo').attr("readonly", "true");
        $('.calendartwo').datepicker({
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            minDate: -5,
            maxDate: "+2M",
            yearRange:'2018:2019',
            showOn: "button",
            buttonImage: "@Url.Content("~/Content/themes/base/images/calendar.gif")",
        buttonImageOnly: true
    });*@

        $(".complaintFile").change(function () {
            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'pdf':
                    case 'PDF':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                alert("You can upload only  PDF files");
                $(this).val('');
                return false;
            } else {
                var size = GetFileSize(file, "complaintFile");
                size = size / 1048576;
                if (size > 1) {
                    alert("Document should not exceed 1 MB in Size");
                    $(this).val('');
                } else {
                    $(".complaintFile > span").text("");
                }
            }
        });

    $(".replyFile").change(function () {
        var file = getNameFromPath($(this).val());
        var flag;
        if (file != null) {
            var extension = file.substr((file.lastIndexOf('.') + 1));
            switch (extension) {
                case 'pdf':
                case 'PDF':
                    flag = true;
                    break;
                default:
                    flag = false;
            }
        }

        if (flag == false) {
            alert("You can upload only  PDF files");
            $(this).val('');
            return false;
        } else {
            var size = GetFileSize(file, "replyFile");
            size = size / 1048576;
            if (size > 1) {
                alert("Document should not exceed 1 MB in Size");
                $(this).val('');
            } else {
                $(".replyFile > span").text("");
            }
        }
    });

    });

    $('#OthergivenBy').autocomplete({
        source: function(request,response) {  
            $.ajax({  
                url: "/FacultyComplaints/Getcollegenames",
                type: "POST",  
                dataType: "json",  
                data: { prefix: request.term },
                success: function (data) {  
                    response($.map(data, function (item) {  
                        return { label: item.Collegename, value: item.Collegename };
                    }))  
  
                }  
            })  
        },  
        messages: {  
            noResults: "", results: ""  
        }  
    });  

    $('#replaystatus').change(function() {
        if (this.checked) {
            $("#replaystatusdate").addClass("required");
            $("#replyFile").addClass("required");
        } else {
            $("#replaystatusdate").removeClass("required");
            $("#replyFile").removeClass("required");
        }
    });
    $('#complaintsdata_4__subcomplaint').change(function () {
        if (this.checked) {
            $("#othsubcomplaint").show();
            $("#complaintsdata_4__othersubcomplaint").addClass("required");
        } else {
            $("#othsubcomplaint").hide();
            $("#complaintsdata_4__othersubcomplaint").removeClass("required");
        }
    });
    //$('#givenById').change(function() {
    //    var name = $("#givenById option:selected").text();
    //    if (name == "Others") {
    //        $("#othersgivendiv").show();
    //        $(".othersgiventext").addClass("required");
    //    } else {
    //        $("#othersgivendiv").hide();
    //        $(".othersgiventext").removeClass("required");
    //    }
    //});
    $('#complaintid').change(function () {
        var cid = $("#complaintid option:selected").val();
        var cname = $("#complaintid option:selected").text();
        var clgid = $("#collegeId").val();
        var aId = '';
        if (cname != "Others") {
            $("#othersdiv").hide();
           
        } else {
            $("#othersdiv").show();
            $("#subcomplaints").hide();
            //window.location = '/CollegeComplaints/CollegeComplaint?collegeid=' + clgid + "&complaintid=" + cid;

        }

    });

    $("input[name=ModifiedPAN]").change(function () {
        var value = $(this).val();
        if (value == 0) {
            $("#ModifiedPANNo").show();
        }
        else {
            $("#ModifiedPANNo").val('');
            $("#ModifiedPANNo").hide();
            $("#ModifiedPANNo>span").text('');
            $("tbody tr td.col4 span.field-validation-error span").hide();
        }

    });

    //get file size
    function GetFileSize(fileid, title) {

        try {
            var fileSize = 0;
            //for IE
            if ($.browser.msie) {
                //before making an object of ActiveXObject,
                //please make sure ActiveX is enabled in your IE browser
                var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                var filePath = $("#" + fileid)[0].value;
                var objFile = objFSO.getFile(filePath);
                var fileSize = objFile.size; //size in kb
                //fileSize = fileSize / 1048576; //size in mb
            }
                //for FF, Safari, Opeara and Others
            else {
                fileSize = $("#" + title)[0].files[0].size; //size in kb
                //fileSize = fileSize / 1048576; //size in mb
            }

            return fileSize;
        } catch (e) {
        }
    }

    //get file path from client system
    function getNameFromPath(strFilepath) {
        var objRE = new RegExp(/([^\/\\]+)$/);
        var strName = objRE.exec(strFilepath);

        if (strName == null) {
            return null;
        }
        else {
            return strName[0];
        }
    }

    $("#RegistrationNumber").blur(function () {
        if ($('#RegistrationNumber').val() != "") {
            $.ajax({
                url: '/FacultyComplaints/GetFacultyName',
                dataType: 'json',
                type: 'post',
                contentType: 'application/json',
                data: JSON.stringify({ "regno": $('#RegistrationNumber').val() }),
                success: function (data, textStatus, jQxhr) {
                    $('#name').text("");
                    console.log(data);
                    if (data.Details != "") {
                        var details = data.Details;
                       
                        $('#name').text(details);
                    }
                },

                error: function (jqXhr, textStatus, errorThrown) {
                    console.log(errorThrown);
                }

            });
        }
        else {
            $('#name').text("Please Enter Registration Number");
            $('#RegistrationNumber').focus();
        }
    });

</script>


