@model UAAAS.Models.Permanent_Affiliation.CollegeSelfAppraisalModel
@{
    ViewBag.Title = "College Self Appraisal";
}

<script src="~/Scripts/jquery-1.7.1.min.js"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/jntuh-styles.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/themes/base/jquery.ui.datepicker.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.20.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $.ajaxSetup({ cache: false });
        $(".Supportingfile").change(function () {
            debugger;
            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'pdf':
                    case 'PDF':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }
            if (flag == false) {
                //alert("You can upload only  PDF files");
                $(".files > span").text("You can upload only PDF files");
                $(this).val('');
                return false;
            } else {
                var size = GetFileSize(file, "Suportingdocument");
                size = size / 1048576;
                if (size > 0.2000000000000000) {
                    $(".files > span").text("Document should not exceed 200 KB in Size");
                    //alert("Document should not exceed 200 KB in Size");
                    $(this).val('');
                } else {
                    $(".files > span").text("");
                }
            }
        });

        //get file size
        function GetFileSize(fileid, title) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    fileSize = objFile.size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#" + title)[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }

                return fileSize;
            } catch (e) {
            }
        }

        //get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            } else {
                return strName[0];
            }
        }
    });

    $("#btnsend").click(function () {
        //alert($('#Selfappraisaltype').val());
        //alert($('[name="Selfappraisaltype"]').is(':checked'));
        if ($('[name="Selfappraisaltype"]').is(':checked') == false) {
            $(".selftype > span").text("Required");
            return false;
        } else {
            $(".selftype > span").text("");
        }
    });
</script>

@using (Ajax.BeginForm("AddCollegeSelfAppraisal", "PA_SelfAppraisal", new AjaxOptions(), new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    if (TempData["Error"] != null)
    {
        <div class="error">
            <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
        </div>
    }
    if (TempData["Success"] != null)
    {
        <div class="success">
            <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
        </div>
    }
    @Html.HiddenFor(model => model.Collegeid, new { @Value = Model.Collegeid })
    @Html.HiddenFor(model => model.Selfappraisalid, new { @Value = Model.Selfappraisalid })
    <fieldset>
        <legend></legend>
        <div class="editor-label" style="width: 250px;">
            <span>Academic Year</span>
        </div>
        <div class="editor-field" style="width: 380px;">
            @Html.DropDownListFor(model => model.AcademicyearId, new SelectList(ViewBag.AcademicYear as System.Collections.IEnumerable, "id", "academicYear"), "------- Select -------", new { @class = "required", style = "width: 70%" })
            @Html.ValidationMessageFor(model => model.AcademicyearId)
        </div>
        <div class="editor-label" style="width: 250px;">
            <span>Type</span>
        </div>
        <div class="editor-field selftype" style="width: 380px;">
            @Html.RadioButtonFor(model => model.Selfappraisaltype, 1) Faculty &nbsp;&nbsp;
            @Html.RadioButtonFor(model => model.Selfappraisaltype, 2) Student
            <span style="color: red;"></span>
        </div>
        <div class="editor-label" style="width: 250px;">
            <span>Registration /Hall Ticket Number</span>
        </div>
        <div class="editor-field" style="width: 380px;">
            @Html.TextBoxFor(model => model.Registrationnumber, new { @maxlength = "25", @class = "required", @placeholder = "Enter Registration /Hall Ticket Number", style = "width: 70%" })
            @Html.ValidationMessageFor(model => model.Registrationnumber)
        </div>
        <div class="editor-label" style="width: 250px;">
            <span>Name</span>
        </div>
        <div class="editor-field" style="width: 380px;">
            @Html.TextBoxFor(model => model.Membername, new { @maxlength = "150", @class = "required", @placeholder = "Enter Faculty/Student Name", style = "width: 70%" })
            @Html.ValidationMessageFor(model => model.Membername)
        </div>
        <div class="editor-label" style="width: 250px;">
            <span>Description</span>
        </div>
        <div class="editor-field" style="width: 380px;">
            @Html.TextBoxFor(model => model.Description, new { @maxlength = "200", @class = "required", @placeholder = "Enter Description", style = "width: 70%" })
            @Html.ValidationMessageFor(model => model.Description)
        </div>
        <div class="editor-label" style="width: 250px;">
            <span>Supporting Document</span>
        </div>
        <div class="editor-field files" style="width: 380px;">
            @Html.TextBoxFor(model => model.Suportingdocument, new { type = "file", @class = "Supportingfile required" })
            <br />
            <span style="color: red;"></span>
        </div>
        <div style="text-align: center">
            <p>
                <input type="submit" value="Submit" id="btnsend" name="cmd" />
            </p>
        </div>
    </fieldset>
}