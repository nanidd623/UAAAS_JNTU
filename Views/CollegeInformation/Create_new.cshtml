@model UAAAS.Models.CollegeInformation
@using UAAAS.Models
@{        
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    }
    ViewBag.Title = "College Information";
    int isSelectedOtherCategory = 1;
}

<h2>College Information</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {

        //if($("#DisableYourControls").val() == 'true')
        //{
        //    $('*','form').attr('disabled','disabled').attr('readonly','readonly');
        //}

        $(".calendar").css("width","75px");

        if($("#state").val() > 0)
        {
            GetDistricts($("#state").val());
        }
        
        $("#state").change(function () {
            var stateID = $(this).val();
            GetDistricts(stateID);
        });

        function GetDistricts(stateID){
            $.getJSON("/CollegeInformation/GetDistrictList", { id: stateID },
                   function (myData) {
                       var select = $("#district");
                       select.empty();
                       select.append($('<option/>', {
                           value: '',
                           text: '-- Select --'
                       }));
                       $.each(myData, function (index, itemData) {
                           select.append($('<option/>', {
                               value: itemData.Value,
                               text: itemData.Text,
                               selected : (itemData.Value == @Model.districtId ? true: false)
                           }));
                       });
                   });}
    });

           function isNumberKey(evt){
               var charCode = (evt.which) ? evt.which : event.keyCode
               if (charCode > 31 && (charCode < 48 || charCode > 57))
               {
                   alert("Allows Only Digits");
                   return false;
               }
               else
               {
                   return true;
               }
           }
</script>

@using (Html.BeginForm())
{
    @Html.Hidden("DisableYourControls", System.Configuration.ConfigurationManager.AppSettings["ShouldFormsBeDisabled"].ToString());
    
    @Html.ValidationSummary(true)
                                                                                                                                  if (ViewBag.NotUpload == true)
                                                                                                                                  {
    <span class="notUpload">You can not upload data Please contact Affiliations & Academic Audit if you want to upload</span>
                                                                                                                                  }
                                                                                                                                  else
                                                                                                                                  {
                                                                                                                                      if (TempData["Error"] != null)
                                                                                                                                      {
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
                                                                                                                                      }
                                                                                                                                      if (TempData["Success"] != null)
                                                                                                                                      {
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
                                                                                                                                      }
                                                                                                                                      if (ViewBag.NotUpload == true)
                                                                                                                                      {
    <span class="notUpload">You can not upload data Please contact Affiliations & Academic Audit if you want to upload</span>
                                                                                                                                      }
                                                                                                                                      else
                                                                                                                                      {
    <table class="four_columns">
        <tr>
            <td class="col1" colspan="4">
                <b>@Html.LabelFor(model => model.collegeAffiliationTypeID)</b>
                @Html.ValidationMessageFor(model => model.collegeAffiliationTypeID)
            </td>
        </tr>
        <tr>
            <td class="col2" colspan="4" style="line-height: 1.2rem;">
                @Html.HiddenFor(model => model.id)
          
                @Html.HiddenFor(model => model.collegeAffiliationTypeID)
                @foreach (var item in Model.collegeAffiliationType)
                {
                    var optionValue = "CAType_" + item.id;
                    if (optionValue == "CAType_11" && item.selected == 1)
                    {
                        isSelectedOtherCategory = isSelectedOtherCategory + 1;
                    }
                    var selectValue = item.selected;
                    <input type="radio"
                           id="@optionValue"
                           name="collegeAffiliationTypeID"
                           value="@item.id" />
    @*<input type="radio"
           id="@optionValue"
           name="collegeAffiliationTypeID"
           value="@item.id" disabled="disabled" />*@
                    <label for="@optionValue">@item.name</label>

                    @*if (selectValue == 1)
                    {
                        <input type="hidden" name="collegeAffiliationTypeID" value="@item.id" id="@optionValue">
                    }*@
                    <script type="text/javascript">
                        if(@selectValue == 1)
                        {
                            $("#@optionValue").attr('checked', 'checked');
                        }
                        @*else
                        {
                            $("#@optionValue").attr('checked', null);
                        }*@

                        $("input[type='radio']").click(function () {
                            var selection=$(this).val();
                            if(selection == 11)
                            {
                                $('.otherCategory').show();
                            }
                            else
                            {
                                $('.txtOtherCategory').val('');
                                $('.otherCategory').hide();
                            }
                        });
                    </script>
                    <br />
                }
                <br />
                <div class="otherCategory">
                    @Html.LabelFor(model => model.otherCategory)&nbsp;
                    @Html.TextBoxFor(model => model.otherCategory, new
               {
                   @class =

                       "txtOtherCategory"
               })
                </div>
                <script type="text/javascript">
                    if(@isSelectedOtherCategory > 1)
                    {
                        $('.otherCategory').show();
                    }
                    else
                    {
                        $('.txtOtherCategory').val('');
                        $('.otherCategory').hide();
                    }
                </script>




                
              

            </td>
        </tr>
    </table>
    <br />
    <table class="four_columns">
        <tr>
            <td class="col1" colspan="4">
                <b>College Information</b>
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.collegeName)
            </td>
            <td class="col2" colspan="3">
                @Html.EditorFor(model => model.collegeName, new { @class="focus"})
                @*@Html.DisplayFor(model => model.collegeName, new { @class = "focus" })*@
                @*@Html.HiddenFor(model => model.collegeName)*@
                @Html.ValidationMessageFor(model => model.collegeName)
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.collegeCode)
            </td>
            <td class="col2">
                @Html.EditorFor(model=>model.collegeCode)
                @*@Html.DisplayFor(model => model.collegeCode)
                @Html.HiddenFor(model => model.collegeCode)*@
                @Html.ValidationMessageFor(model => model.collegeCode)
            </td>
            <td class="col3">
                @Html.LabelFor(model => model.eamcetCode)
            </td>
            <td class="col4">
                @Html.EditorFor(model => model.eamcetCode)
                @*@Html.DisplayFor(model => model.eamcetCode)
                @Html.HiddenFor(model => model.eamcetCode)*@
                @Html.ValidationMessageFor(model => model.eamcetCode)
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.collegeStatusID)
            </td>
            <td class="col2">
                @*@ViewBag.StatusName*@
                @*@Html.HiddenFor(model => model.collegeStatusID)*@
                
                @Html.DropDownListFor(model => model.collegeStatusID,
                                               new SelectList(ViewBag.Status as System.Collections.IEnumerable, "id", "collegeStatus"),
                                               "-- Select --", new { id = "status" })
                @*@ViewBag.StatusName*@
                @Html.ValidationMessageFor(model => model.collegeStatusID)
            </td>

            <td class="col3">
                @Html.LabelFor(model => model.icetCode)
            </td>
            <td class="col4">
                @Html.EditorFor(model => model.icetCode)
                @*@Html.DisplayFor(model => model.icetCode)
                @Html.HiddenFor(model => model.icetCode)*@
                @Html.ValidationMessageFor(model => model.icetCode)
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.address)
            </td>
            <td class="col2" colspan="3">
                @Html.EditorFor(model => model.address)
                @*@Html.DisplayFor(model => model.address)
                @Html.HiddenFor(model => model.address)*@
                @Html.ValidationMessageFor(model => model.address)
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.townOrCity)
            </td>
            <td class="col2">
                @Html.EditorFor(model=>model.townOrCity)
                @*@Html.DisplayFor(model => model.townOrCity)
                @Html.HiddenFor(model => model.townOrCity)*@
                @Html.ValidationMessageFor(model => model.townOrCity)
            </td>
            <td class="col3">
                @Html.LabelFor(model => model.mandal)
            </td>
            <td class="col4">
                @Html.EditorFor(model => model.mandal)
                @Html.ValidationMessageFor(model => model.mandal)
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.stateId)
            </td>
            <td class="col2">
                @Html.DropDownListFor(model => model.stateId,
                                                     new SelectList(ViewBag.State as System.Collections.IEnumerable, "id", "stateName"),
                                                     "-- Select --", new { id = "state" })
                @Html.ValidationMessageFor(model => model.stateId)
            </td>
            <td class="col3">
                @Html.LabelFor(model => model.districtId)
            </td>
            <td class="col4">
                @Html.DropDownListFor(model => model.districtId,
                                                     new SelectList(Enumerable.Empty<SelectListItem>(), "id", "districtName"),
                                                     "-- Select --", new { id = "district" })
                @Html.ValidationMessageFor(model => model.districtId)
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.pincode)
            </td>
            <td class="col2">
                @Html.EditorFor(model=>model.pincode)
                @*@Html.DisplayFor(model => model.pincode, new { @Value = Model.pincode == 0 ? "" : Model.pincode.ToString() })
                @Html.HiddenFor(model => model.pincode)*@
                @Html.ValidationMessageFor(model => model.pincode)
            </td>

            <td class="col3">
                @Html.LabelFor(model => model.fax)
            </td>
            <td class="col4">
                @Html.EditorFor(model=>model.fax)
                @*@Html.DisplayFor(model => model.fax)
                @Html.HiddenFor(model => model.fax)*@
                @Html.ValidationMessageFor(model => model.fax)
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.landline)
            </td>
            <td class="col2">
                @Html.EditorFor(model => model.landline)
                @Html.ValidationMessageFor(model => model.landline)
            </td>
            <td class="col3">
                @Html.LabelFor(model => model.mobile)
            </td>
            <td class="col4">
                @Html.EditorFor(model => model.mobile)
                @Html.ValidationMessageFor(model => model.mobile)
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.email)
            </td>
            <td class="col2">
                @Html.EditorFor(model => model.email)
                @Html.ValidationMessageFor(model => model.email)
            </td>
            <td class="col3">
                @Html.LabelFor(model => model.website)
            </td>
            <td class="col4">
                @Html.EditorFor(model=>model.website)
                @*@Html.DisplayFor(model => model.website)
                @Html.HiddenFor(model => model.website)*@
                @Html.ValidationMessageFor(model => model.website)
            </td>
        </tr>

        @{int rowNo = 1;}
        @foreach (var item in Model.affiliationType)
        {
            var txtFromId = "txtfrom_" + @rowNo;
            var txtToId = "txtto_" + @rowNo;
            var txtDuration = "txtDuration_" + @rowNo;
            var rdoAffilitionId = "rdoAffilitionId_" + @rowNo;
            var lblAffilitionId = "lblAffilitionId_" + @rowNo;
            var fieldAffilitionId = "fieldAffilitionId_" + @rowNo;
            var selectedAffiliation = "affiliationTypeId" + @rowNo;
            var selectedAffiliationNew = "affiliationTypeIdNew" + @rowNo;
            var fromDate = "affiliationFromDate" + @rowNo;
            var toDate = "affiliationToDate" + @rowNo;
            var duration = "affiliationDuration" + @rowNo++;
            
            
            <tr>
                <td class="col1">
                    @item.name
                </td>
                <td class="col2" id="@rdoAffilitionId">
                    @if (@selectedAffiliation == "affiliationTypeId1")
                    {
                        @*<label>@Html.RadioButtonFor(model => model.affiliationSelected1, 1, new { @id = "affiliationSelected1Yes" }) Yes</label>
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected1, 2, new { @id = "affiliationSelected1No"}) No</label>*@
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected1, 1, new { @id = "affiliationSelected1Yes", @disabled = "disabled" }) Yes</label>
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected1, 2, new { @id = "affiliationSelected1No", @disabled = "disabled" }) No</label>
                    }
                    else if (@selectedAffiliation == "affiliationTypeId2")
                    {
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected2, 1, new { @id = "affiliationSelected2Yes" }) Yes</label>
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected2, 2, new { @id = "affiliationSelected2No"}) No</label>
                        @*<label>@Html.RadioButtonFor(model => model.affiliationSelected2, 1, new { @id = "affiliationSelected2Yes", @disabled = "disabled" }) Yes</label>
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected2, 2, new { @id = "affiliationSelected2No", @disabled = "disabled" }) No</label>*@
                    }
                    else if (@selectedAffiliation == "affiliationTypeId3")
                    {
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected3, 1, new { @id = "affiliationSelected3Yes"}) Yes</label>
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected3, 2, new { @id = "affiliationSelected3No"}) No</label>
                        @*<label>@Html.RadioButtonFor(model => model.affiliationSelected3, 1, new { @id = "affiliationSelected3Yes", @disabled = "disabled" }) Yes</label>
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected3, 2, new { @id = "affiliationSelected3No", @disabled = "disabled" }) No</label>*@
                    }
                    else if (@selectedAffiliation == "affiliationTypeId4")
                    {
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected4, 1, new { @id = "affiliationSelected4Conferred"}) Conferred </label>
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected4, 2, new { @id = "affiliationSelected4Applied" }) Applied</label>
                        <br />
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected4, 3, new { @id = "affiliationSelected4NotYetApplied" }) Not Yet Applied</label>
                        @*<label>@Html.RadioButtonFor(model => model.affiliationSelected4, 1, new { @id = "affiliationSelected4Conferred", @disabled = "disabled" }) Conferred </label>
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected4, 2, new { @id = "affiliationSelected4Applied", @disabled = "disabled" }) Applied</label>
                        <br />
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected4, 3, new { @id = "affiliationSelected4NotYetApplied", @disabled = "disabled" }) Not Yet Applied</label>*@
                    }
                    else if (@selectedAffiliation == "affiliationTypeId5")
                    {
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected5, 1, new { @id = "affiliationSelected5Conferred" }) Conferred</label>
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected5, 2, new { @id = "affiliationSelected5Applied" }) Applied</label>
                        <br />
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected5, 3, new { @id = "affiliationSelected5NotYetApplied"}) Not Yet Applied</label>

                        @*<label>@Html.RadioButtonFor(model => model.affiliationSelected5, 1, new { @id = "affiliationSelected5Conferred", @disabled = "disabled" }) Conferred</label>
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected5, 2, new { @id = "affiliationSelected5Applied", @disabled = "disabled" }) Applied</label>
                        <br />
                        <label>@Html.RadioButtonFor(model => model.affiliationSelected5, 3, new { @id = "affiliationSelected5NotYetApplied", @disabled = "disabled" }) Not Yet Applied</label>*@
                    }
                </td>
                <td class="col3" id="@lblAffilitionId" style="width:18%">
                    <table style="width: 100%">
                        <tr>
                            <td>Affiliation Period</td>
                            <td style="height: 25px; text-align: right; width: 55px;">From :</td>
                        </tr>
                        <tr>
                            @if (@item.name != "NBA Status")
                            {
                                <td></td>
                                <td style="height: 25px; text-align: right; width: 60px;">To :</td>
                            }
                        </tr>
                        <tr>
                            <td></td>
                            <td style="height: 25px; text-align: right; width: 60px;">Duration :</td>
                        </tr>
                        @if (@item.name.Contains("NAAC"))
                        {
                            <tr>
                                <td></td>
                                <td style="height: 25px; text-align: right;">
                                    @Html.LabelFor(model => model.affiliationGrade) :
                                </td>
                            </tr>
                            <tr>
                                <td></td>
                                <td style="height: 25px; text-align: right;">
                                    @Html.LabelFor(model => model.affiliationCGPA) :
                                </td>
                            </tr>
                        }
                    </table>
                </td>
                <td class="col4 readonly" id="@fieldAffilitionId">
                    <table style="width: 100%">
                        <tr>
                            <td>
                                @if (@selectedAffiliation == "affiliationTypeId1")
                                {
                                    var value = string.Empty;
                                    if (Model.affiliationFromDate1 != null)
                                    {
                                        if (Model.affiliationFromDate1.First().Equals(string.Empty)) { value = string.Empty; }
                                        else
                                        {
                                            if (Model.affiliationFromDate1.First().Contains(' '))
                                            {
                                                value = Model.affiliationFromDate1.First().Remove(Model.affiliationFromDate1.First().IndexOf(' '));
                                            }
                                            else
                                            {
                                                value = Model.affiliationFromDate1.First();
                                            }
                                        }
                                    }
                                   @Html.DisplayFor(model => model.affiliationFromDate1, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })
                                      @Html.HiddenFor(model => model.affiliationFromDate1, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })
                                   @*<input type="text" id="@txtFromId" name="@fromDate" style = "width: 100px" class="calendar1" onblur="IsValidDate(this,event.keyCode,0,0,1)" 
                                       onkeydown="return IsValidFormat(this,event.keyCode)" value="@value" /><span>(DD/MM/YYYY)</span>*@
                                    @Html.HiddenFor(model => model.affiliationFromDate1)
                                    @Html.HiddenFor(model => model.affiliationTypeId1, new { @Value = item.id })
                                    @Html.HiddenFor(model => model.affiliationFromDate1)
                                    @Html.ValidationMessageFor(model => model.affiliationFromDate1)
                                }
                                else if (@selectedAffiliation == "affiliationTypeId2")
                                {
                                    var value = string.Empty;
                                    if (Model.affiliationFromDate2 != null)
                                    {
                                        if (Model.affiliationFromDate2.First().Equals(string.Empty)) { value = string.Empty; }
                                        else
                                        {
                                            if (Model.affiliationFromDate2.First().Contains(' '))
                                            {
                                                value = Model.affiliationFromDate2.First().Remove(Model.affiliationFromDate2.First().IndexOf(' '));
                                            }
                                            else
                                            {
                                                value = Model.affiliationFromDate2.First();
                                            }
                                        }
                                    }
                                    @*@Html.DisplayFor(model => model.affiliationFromDate2)*@
                                      @Html.DisplayFor(model => model.affiliationFromDate2, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })
                                      @Html.HiddenFor(model => model.affiliationFromDate2, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })

                                    @*<input type="text" id="@txtFromId" name="@fromDate" style = "width: 100px" class="calendar1" onblur="IsValidDate(this,event.keyCode,0,0,1)" 
                                       onkeydown="return IsValidFormat(this,event.keyCode)" value="@value" /><span>(DD/MM/YYYY)</span>*@
                                    @Html.HiddenFor(model => model.affiliationTypeId2, new { @Value = item.id })
                                    @Html.HiddenFor(model => model.affiliationFromDate2)
                                    @Html.ValidationMessageFor(model => model.affiliationFromDate2)
                                }
                                else if (@selectedAffiliation == "affiliationTypeId3")
                                {
                                    var value = string.Empty;
                                    if (Model.affiliationFromDate3 != null)
                                    {
                                        if (Model.affiliationFromDate3.First().Equals(string.Empty)) { value = string.Empty; }
                                        else
                                        {
                                            if (Model.affiliationFromDate3.First().Contains(' '))
                                            {
                                                value = Model.affiliationFromDate3.First().Remove(Model.affiliationFromDate3.First().IndexOf(' '));
                                            }
                                            else
                                            {
                                                value = Model.affiliationFromDate3.First();
                                            }
                                        }
                                    }
                                    @*@Html.DisplayFor(model => model.affiliationFromDate3)*@

                                     @Html.DisplayFor(model => model.affiliationFromDate3, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })
                                    @Html.HiddenFor(model => model.affiliationFromDate3, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })

                           
                                    @*<input type="text" id="@txtFromId" name="@fromDate" style = "width: 100px" class="calendar1" onblur="IsValidDate(this,event.keyCode,0,0,1)" 
                                       onkeydown="return IsValidFormat(this,event.keyCode)" value="@value" /><span>(DD/MM/YYYY)</span>*@      
                                    @Html.HiddenFor(model => model.affiliationTypeId3, new { @Value = item.id })              
                        
                                    @Html.HiddenFor(model => model.affiliationFromDate3)
                                    @Html.ValidationMessageFor(model => model.affiliationFromDate3)
                                }
                                else if (@selectedAffiliation == "affiliationTypeId4")
                                {
                                    var value = string.Empty;
                                    if (Model.affiliationFromDate4 != null)
                                    {
                                        if (Model.affiliationFromDate4.First().Equals(string.Empty)) { value = string.Empty; }
                                        else
                                        {
                                            if (Model.affiliationFromDate4.First().Contains(' '))
                                            {
                                                value = Model.affiliationFromDate4.First().Remove(Model.affiliationFromDate4.First().IndexOf(' '));
                                            }
                                            else
                                            {
                                                value = Model.affiliationFromDate4.First();
                                            }
                                        }
                                    }
                                    @*@Html.HiddenFor(model => model.affiliationFromDate4)*@
                              @Html.DisplayFor(model => model.affiliationFromDate4, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })
                                  @Html.HiddenFor(model => model.affiliationFromDate4, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })

                                    @*<input type="text" id="@txtFromId" name="@fromDate" style = "width: 100px" class="calendar1" onblur="IsValidDate(this,event.keyCode,0,0,1)" 
                                       onkeydown="return IsValidFormat(this,event.keyCode)" value="@value" /><span>(DD/MM/YYYY)</span>*@                                  
                                    @Html.HiddenFor(model => model.affiliationTypeId4, new { @Value = item.id })
                                    @Html.HiddenFor(model => model.affiliationFromDate4)
                                    @Html.ValidationMessageFor(model => model.affiliationFromDate4)
                                }
                                else if (@selectedAffiliation == "affiliationTypeId5")
                                {
                                    var value = string.Empty;
                                    if (Model.affiliationFromDate5 != null)
                                    {
                                        if (Model.affiliationFromDate5.First().Equals(string.Empty)) { value = string.Empty; }
                                        else
                                        {
                                            if (Model.affiliationFromDate5.First().Contains(' '))
                                            {
                                                value = Model.affiliationFromDate5.First().Remove(Model.affiliationFromDate5.First().IndexOf(' '));
                                            }
                                            else
                                            {
                                                value = Model.affiliationFromDate5.First();
                                            }
                                        }
                                    }
                                    @Html.DisplayFor(model => model.affiliationFromDate5, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })
                                    @Html.HiddenFor(model => model.affiliationFromDate5, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })
                                    @*<input type="text" id="@txtFromId" name="@fromDate" style = "width: 100px" class="calendar1" onblur="IsValidDate(this,event.keyCode,0,0,1)" 
                                       onkeydown="return IsValidFormat(this,event.keyCode)" value="@value" /><span>(DD/MM/YYYY)</span>*@                                    
                                    @Html.HiddenFor(model => model.affiliationTypeId5, new { @Value = item.id })
                                    @Html.HiddenFor(model => model.affiliationFromDate5)
                                    @Html.ValidationMessageFor(model => model.affiliationFromDate5)
                                }

@*@if (@selectedAffiliation != "affiliationTypeId4")
                                {
                                    *@<br />
                                <div style="height: 3px;"></div>

                                @if (@selectedAffiliation == "affiliationTypeId1")
                                {
                                    var value = string.Empty;
                                    if (Model.affiliationToDate1 != null)
                                    {
                                        if (Model.affiliationToDate1.First().Equals(string.Empty)) { value = string.Empty; }
                                        else
                                        {
                                            if (Model.affiliationToDate1.First().Contains(' '))
                                            {
                                                value = Model.affiliationToDate1.First().Remove(Model.affiliationToDate1.First().IndexOf(' '));
                                            }
                                            else
                                            {
                                                value = Model.affiliationToDate1.First();
                                            }
                                        }
                                    }
                                    @Html.DisplayFor(model => model.affiliationToDate1, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })
                                    @Html.HiddenFor(model => model.affiliationToDate1, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })

                                    @*<input type="text" id="@txtToId" name="@toDate" style = "width: 100px" class="calendar1" onblur="IsValidDate(this,event.keyCode,0,0,1)" 
                                       onkeydown="return IsValidFormat(this,event.keyCode)" value="@value" /><span>(DD/MM/YYYY)</span>*@

                                    @Html.HiddenFor(model => model.affiliationToDate1)
                                    @Html.ValidationMessageFor(model => model.affiliationToDate1)
                                }
                                else if (@selectedAffiliation == "affiliationTypeId2")
                                {
                                    var value = string.Empty;
                                    if (Model.affiliationToDate2 != null)
                                    {
                                        if (Model.affiliationToDate2.First().Equals(string.Empty)) { value = string.Empty; }
                                        else
                                        {
                                            if (Model.affiliationToDate2.First().Contains(' '))
                                            {
                                                value = Model.affiliationToDate2.First().Remove(Model.affiliationToDate2.First().IndexOf(' '));
                                            }
                                            else
                                            {
                                                value = Model.affiliationToDate2.First();
                                            }
                                        }
                                    }
                                    @Html.DisplayFor(model => model.affiliationToDate2, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })
                                    @Html.HiddenFor(model => model.affiliationToDate2, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })
                                    @*<input type="text" id="@txtToId" name="@toDate" style = "width: 100px" class="calendar1" onblur="IsValidDate(this,event.keyCode,0,0,1)" 
                                       onkeydown="return IsValidFormat(this,event.keyCode)" value="@value" /><span>(DD/MM/YYYY)</span>*@

                                    @Html.HiddenFor(model => model.affiliationToDate2)
                                    @Html.ValidationMessageFor(model => model.affiliationToDate2)
                                }
                                else if (@selectedAffiliation == "affiliationTypeId3")
                                {
                                    var value = string.Empty;
                                    if (Model.affiliationToDate3 != null)
                                    {
                                        if (Model.affiliationToDate3.First().Equals(string.Empty)) { value = string.Empty; }
                                        else
                                        {
                                            if (Model.affiliationToDate3.First().Contains(' '))
                                            {
                                                value = Model.affiliationToDate3.First().Remove(Model.affiliationToDate3.First().IndexOf(' '));
                                            }
                                            else
                                            {
                                                value = Model.affiliationToDate3.First();
                                            }
                                        }
                                    }
                                    @Html.DisplayFor(model => model.affiliationToDate3, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })
                                    @Html.HiddenFor(model => model.affiliationToDate3, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })
                                    @*<input type="text" id="@txtToId" name="@toDate" style = "width: 100px" class="calendar1" onblur="IsValidDate(this,event.keyCode,0,0,1)" 
                                       onkeydown="return IsValidFormat(this,event.keyCode)" value="@value" /><span>(DD/MM/YYYY)</span>*@

                                    @Html.HiddenFor(model => model.affiliationToDate3)
                                    @Html.ValidationMessageFor(model => model.affiliationToDate3)
                                }
                                else if (@selectedAffiliation == "affiliationTypeId4")
                                {
                                    var value = string.Empty;
                                    if (Model.affiliationToDate4 != null)
                                    {
                                        if (Model.affiliationToDate4.First().Equals(string.Empty)) { value = string.Empty; }
                                        else
                                        {
                                            if (Model.affiliationToDate4.First().Contains(' '))
                                            {
                                                value = Model.affiliationToDate4.First().Remove(Model.affiliationToDate4.First().IndexOf(' '));
                                            }
                                            else
                                            {
                                                value = Model.affiliationToDate4.First();
                                            }
                                        }
                                    }
                                    @Html.DisplayFor(model => model.affiliationToDate4, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })
                                    @Html.HiddenFor(model => model.affiliationToDate4, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })
                                    @*<input type="text" id="@txtToId" name="@toDate" style = "width: 100px" class="calendar1" onblur="IsValidDate(this,event.keyCode,0,0,1)" 
                                         onkeydown="return IsValidFormat(this,event.keyCode)" value="@value" /><span>(DD/MM/YYYY)</span>*@

                                    @Html.HiddenFor(model => model.affiliationToDate4)
                                    @Html.ValidationMessageFor(model => model.affiliationToDate4)
                                }
                                else if (@selectedAffiliation == "affiliationTypeId5")
                                {
                                    var value = string.Empty;
                                    if (Model.affiliationToDate5 != null)
                                    {
                                        if (Model.affiliationToDate5.First().Equals(string.Empty)) { value = string.Empty; }
                                        else
                                        {
                                            if (Model.affiliationToDate5.First().Contains(' '))
                                            {
                                                value = Model.affiliationToDate5.First().Remove(Model.affiliationToDate5.First().IndexOf(' '));
                                            }
                                            else
                                            {
                                                value = Model.affiliationToDate5.First();
                                            }
                                        }
                                    }

                                    @Html.DisplayFor(model => model.affiliationToDate5, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })
                                    @Html.HiddenFor(model => model.affiliationToDate5, new { @id = "@txtFromId", @name = "@fromDate", @value = @value })
                                    @*<input type="text" id="@txtToId" name="@toDate" style = "width: 100px" class="calendar1" onblur="IsValidDate(this,event.keyCode,0,0,1)" 
                                       onkeydown="return IsValidFormat(this,event.keyCode)" value="@value" /><span>(DD/MM/YYYY)</span>*@

                                    @Html.HiddenFor(model => model.affiliationToDate5)
                                    @Html.ValidationMessageFor(model => model.affiliationToDate5)
                                }
@* }*@

                                <br />
                                <div style="height: 3px;"></div>
                                @*<input type="text" id="@txtToId" name="@toDate" class="calendar" />*@
                                @if (@selectedAffiliation == "affiliationTypeId1")
                                {
                                    var value = string.Empty;
                                    if (Model.affiliationDuration1 != null)
                                    {
                                        if (Model.affiliationDuration1.First().Equals(string.Empty)) { value = string.Empty; }
                                        else
                                        {
                                            if (Model.affiliationDuration1.First().Contains(' '))
                                            {
                                                value = Model.affiliationDuration1.First().Remove(Model.affiliationDuration1.First().IndexOf(' '));
                                            }
                                            else
                                            {
                                                value = Model.affiliationDuration1.First();
                                            }
                                        }
                                    }
                                    @Html.DisplayFor(model => model.affiliationDuration1, new { @id = "@txtDuration", @name = "@duration", @value = @value })
                                   @Html.HiddenFor(model => model.affiliationDuration1, new { @id = "@txtDuration", @name = "@duration", @value = @value })
                                    @*<input type="text" id="@txtDuration" name="@duration" style="width:100px" onkeypress="return isNumberKey(event)" maxlength="2" value="@value" />*@
                        
                                    @Html.HiddenFor(model => model.affiliationDuration1)
                                    @Html.ValidationMessageFor(model => model.affiliationDuration1)
                                }
                                else if (@selectedAffiliation == "affiliationTypeId2")
                                {
                                    var value = string.Empty;
                                    if (Model.affiliationDuration2 != null)
                                    {
                                        if (Model.affiliationDuration2.First().Equals(string.Empty)) { value = string.Empty; }
                                        else
                                        {
                                            if (Model.affiliationDuration2.First().Contains(' '))
                                            {
                                                value = Model.affiliationDuration2.First().Remove(Model.affiliationDuration2.First().IndexOf(' '));
                                            }
                                            else
                                            {
                                                value = Model.affiliationDuration2.First();
                                            }
                                        }
                                    }

                                    @Html.DisplayFor(model => model.affiliationDuration2, new { @id = "@txtDuration", @name = "@duration", @value = @value })
                                      @Html.HiddenFor(model => model.affiliationDuration2, new { @id = "@txtDuration", @name = "@duration", @value = @value })
                                    @*<input type="text" id="@txtDuration" name="@duration" style="width:100px" onkeypress="return isNumberKey(event)" maxlength="2" value="@value" />*@
                        
                                    @Html.HiddenFor(model => model.affiliationDuration2)
                                    @Html.ValidationMessageFor(model => model.affiliationDuration2)
                                }
                                else if (@selectedAffiliation == "affiliationTypeId3")
                                {
                                    var value = string.Empty;
                                    if (Model.affiliationDuration3 != null)
                                    {
                                        if (Model.affiliationDuration3.First().Equals(string.Empty)) { value = string.Empty; }
                                        else
                                        {
                                            if (Model.affiliationDuration3.First().Contains(' '))
                                            {
                                                value = Model.affiliationDuration3.First().Remove(Model.affiliationDuration3.First().IndexOf(' '));
                                            }
                                            else
                                            {
                                                value = Model.affiliationDuration3.First();
                                            }
                                        }
                                    }
                                    @Html.DisplayFor(model => model.affiliationDuration3, new { @id = "@txtDuration", @name = "@duration", @value = @value })
                                    @Html.HiddenFor(model => model.affiliationDuration3, new { @id = "@txtDuration", @name = "@duration", @value = @value })
                                    @*<input type="text" id="@txtDuration" name="@duration" style="width:100px" onkeypress="return isNumberKey(event)" maxlength="2" value="@value" />*@
                        
                                    @Html.HiddenFor(model => model.affiliationDuration3)
                                    @Html.ValidationMessageFor(model => model.affiliationDuration3)
                                }
                                else if (@selectedAffiliation == "affiliationTypeId4")
                                {
                                    var value = string.Empty;
                                    if (Model.affiliationDuration4 != null)
                                    {
                                        if (Model.affiliationDuration4.First().Equals(string.Empty)) { value = string.Empty; }
                                        else
                                        {
                                            if (Model.affiliationDuration4.First().Contains(' '))
                                            {
                                                value = Model.affiliationDuration4.First().Remove(Model.affiliationDuration4.First().IndexOf(' '));
                                            }
                                            else
                                            {
                                                value = Model.affiliationDuration4.First();
                                            }
                                        }
                                    }
                                    @Html.DisplayFor(model => model.affiliationDuration4, new { @id = "@txtDuration", @name = "@duration", @value = @value })
                                    @Html.HiddenFor(model => model.affiliationDuration4, new { @id = "@txtDuration", @name = "@duration", @value = @value })
                                    @*<input type="text" id="@txtDuration" name="@duration" style="width:100px" onkeypress="return isNumberKey(event)" maxlength="2" value="@value" />*@
                        
                                    @Html.HiddenFor(model => model.affiliationDuration4)
                                    @Html.ValidationMessageFor(model => model.affiliationDuration4)
                                }
                                else if (@selectedAffiliation == "affiliationTypeId5")
                                {
                                    var value = string.Empty;
                                    if (Model.affiliationDuration5 != null)
                                    {
                                        if (Model.affiliationDuration5.First().Equals(string.Empty)) { value = string.Empty; }
                                        else
                                        {
                                            if (Model.affiliationDuration5.First().Contains(' '))
                                            {
                                                value = Model.affiliationDuration5.First().Remove(Model.affiliationDuration5.First().IndexOf(' '));
                                            }
                                            else
                                            {
                                                value = Model.affiliationDuration5.First();
                                            }
                                        }
                                    }
                                    @Html.DisplayFor(model => model.affiliationDuration5, new { @id = "@txtDuration", @name = "@duration", @value = @value })
                                    @Html.HiddenFor(model => model.affiliationDuration5, new { @id = "@txtDuration", @name = "@duration", @value = @value })
                                    @*<input type="text" id="@txtDuration" name="@duration" style="width:100px" onkeypress="return isNumberKey(event)" maxlength="2" value="@value" />*@
                        
                                    @Html.HiddenFor(model => model.affiliationDuration5)
                                    @Html.ValidationMessageFor(model => model.affiliationDuration5)
                                }

                                @if (@item.name.Contains("NAAC"))
                                {
                                    <div style="height: 3px;"></div>
                                    
                                    @Html.DisplayFor(model => model.affiliationGrade, new { style = "width:100px" })
                                    @Html.ValidationMessageFor(model => model.affiliationGrade)

                                    <div style="height: 3px;"></div>
                                    @Html.DisplayFor(model => model.affiliationCGPA, new { style = "width:100px" })
                                    @Html.ValidationMessageFor(model => model.affiliationCGPA)
                                }
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>            
        }
        <script type="text/javascript">
            if(@Model.affiliationSelected1 == 1)
            {
                $("#lblAffilitionId_1 table").attr('style', 'display: block');
                $("#fieldAffilitionId_1 table").attr('style', 'display: block');
            }
            else
            {
                $("#lblAffilitionId_1 table").attr('style', 'display: none');
                $("#fieldAffilitionId_1 table").attr('style', 'display: none');
                $("#txtfrom_1").val(""); 
                $("#txtto_1").val(""); 
                $("#txtDuration_1").val("");  
            }   
            if(@Model.affiliationSelected2 == 1)
            {
                $("#lblAffilitionId_2 table").attr('style', 'display: block');
                $("#fieldAffilitionId_2 table").attr('style', 'display: block');
            }
            else
            {
                $("#lblAffilitionId_2 table").attr('style', 'display: none');
                $("#fieldAffilitionId_2 table").attr('style', 'display: none');
                $("#txtfrom_2").val(""); 
                $("#txtto_2").val(""); 
                $("#txtDuration_2").val(""); 
            }   
            if(@Model.affiliationSelected3 == 1)
            {
                $("#lblAffilitionId_3 table").attr('style', 'display: block');
                $("#fieldAffilitionId_3 table").attr('style', 'display: block');
            }
            else
            {
                $("#lblAffilitionId_3 table").attr('style', 'display: none');
                $("#fieldAffilitionId_3 table").attr('style', 'display: none');
                $("#txtfrom_3").val(""); 
                $("#txtto_3").val(""); 
                $("#txtDuration_3").val("");  
            }
            if(@Model.affiliationSelected4 == 1)
            {
                $("#lblAffilitionId_4 table").attr('style', 'display: block');
                $("#fieldAffilitionId_4 table").attr('style', 'display: block');
            }
            else if(@Model.affiliationSelected4 == 2)
            {
                $("#lblAffilitionId_4 table").attr('style', 'display: none');
                $("#fieldAffilitionId_4 table").attr('style', 'display: none');
                $("#txtfrom_4").val(""); 
                $("#txtto_4").val(""); 
                $("#txtDuration_4").val("");  
            }
            else
            {
                $("#lblAffilitionId_4 table").attr('style', 'display: none');
                $("#fieldAffilitionId_4 table").attr('style', 'display: none');
                $("#txtfrom_4").val(""); 
                $("#txtto_4").val(""); 
                $("#txtDuration_4").val("");  
            }
            if(@Model.affiliationSelected5 == 1)
            {
                $("#lblAffilitionId_5 table").attr('style', 'display: block');
                $("#fieldAffilitionId_5 table").attr('style', 'display: block');
            }
            else if(@Model.affiliationSelected5 == 2)
            {
                $("#lblAffilitionId_5 table").attr('style', 'display: none');
                $("#fieldAffilitionId_5 table").attr('style', 'display: none');
                $("#txtfrom_5").val(""); 
                $("#txtto_5").val(""); 
                $("#txtDuration_5").val("");  
                $("#affiliationGrade").val("");
            }
            else
            {
                $("#lblAffilitionId_5 table").attr('style', 'display: none');
                $("#fieldAffilitionId_5 table").attr('style', 'display: none');
                $("#txtfrom_5").val(""); 
                $("#txtto_5").val(""); 
                $("#txtDuration_5").val("");  
                //$("#affiliationGrade").val("");
            }

            $("#affiliationSelected1Yes").click(function(){
                $("#lblAffilitionId_1 table").attr('style', 'display: block');
                $("#fieldAffilitionId_1 table").attr('style', 'display: block');
            });
            $("#affiliationSelected1No").click(function(){
                $("#lblAffilitionId_1 table").attr('style', 'display: none');
                $("#fieldAffilitionId_1 table").attr('style', 'display: none');
                $("#txtfrom_1").val(""); 
                $("#txtto_1").val(""); 
                $("#txtDuration_1").val("");  
            });
            $("#affiliationSelected2Yes").click(function(){
                $("#lblAffilitionId_2 table").attr('style', 'display: block');
                $("#fieldAffilitionId_2 table").attr('style', 'display: block');
            });
            $("#affiliationSelected2No").click(function(){
                $("#lblAffilitionId_2 table").attr('style', 'display: none');
                $("#fieldAffilitionId_2 table").attr('style', 'display: none');
                $("#txtfrom_2").val(""); 
                $("#txtto_2").val(""); 
                $("#txtDuration_2").val("");  
            });
            $("#affiliationSelected3Yes").click(function(){
                $("#lblAffilitionId_3 table").attr('style', 'display: block');
                $("#fieldAffilitionId_3 table").attr('style', 'display: block');
            });
            $("#affiliationSelected3No").click(function(){
                $("#lblAffilitionId_3 table").attr('style', 'display: none');
                $("#fieldAffilitionId_3 table").attr('style', 'display: none');
                $("#txtfrom_3").val(""); 
                $("#txtto_3").val(""); 
                $("#txtDuration_3").val("");  
            });
            $("#affiliationSelected4Conferred").click(function(){
                $("#lblAffilitionId_4 table").attr('style', 'display: block');
                $("#fieldAffilitionId_4 table").attr('style', 'display: block');
            });
            $("#affiliationSelected4Applied").click(function(){
                $("#lblAffilitionId_4 table").attr('style', 'display: none');
                $("#fieldAffilitionId_4 table").attr('style', 'display: none');
                $("#txtfrom_4").val(""); 
                $("#txtto_4").val(""); 
                $("#txtDuration_4").val("");  
            });
            $("#affiliationSelected4NotYetApplied").click(function(){
                $("#lblAffilitionId_4 table").attr('style', 'display: none');
                $("#fieldAffilitionId_4 table").attr('style', 'display: none');
                $("#txtfrom_4").val(""); 
                $("#txtto_4").val(""); 
                $("#txtDuration_4").val("");  
            });
            $("#affiliationSelected5Conferred").click(function(){
                $("#lblAffilitionId_5 table").attr('style', 'display: block');
                $("#fieldAffilitionId_5 table").attr('style', 'display: block');
            });
            $("#affiliationSelected5Applied").click(function(){
                $("#lblAffilitionId_5 table").attr('style', 'display: none');
                $("#fieldAffilitionId_5 table").attr('style', 'display: none');
                $("#txtfrom_5").val(""); 
                $("#txtto_5").val(""); 
                $("#txtDuration_5").val("");  
                $("#affiliationGrade").val("");
            });
            $("#affiliationSelected5NotYetApplied").click(function(){
                $("#lblAffilitionId_5 table").attr('style', 'display: none');
                $("#fieldAffilitionId_5 table").attr('style', 'display: none');
                $("#txtfrom_5").val(""); 
                $("#txtto_5").val(""); 
                $("#txtDuration_5").val("");  
                $("#affiliationGrade").val("");
            });                             
        </script>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.collegeTypeID)
            </td>
            <td class="col2" colspan="3" style="line-height: 1.2rem;">
                @*@Html.HiddenFor(model => model.collegeTypeID)*@
                @foreach (var item in Model.collegeType)
                {
                    var optionValue = "CType_" + item.id;
                    var selectValue = item.selected;
                    <input type="radio"
                           id="@optionValue"
                           name="collegeTypeID"
                           value="@item.id" />
                    @*<input type="radio"
                           id="@optionValue"
                           name="collegeTypeID"
                           value="@item.id" disabled="disabled" />*@
                    <label for="@optionValue" style="padding-right: 10px !important; text-align: left; display: inline-block;">@item.name</label>
                    @*if (selectValue == 1)
                    {
                        <input type="hidden" name="collegeTypeID" value="@item.id" id="@optionValue">
                    }*@

                    <script type="text/javascript">
                        if(@selectValue == 1)
                        {

                            $("#@optionValue").attr('checked', 'checked');
                        }
                        @*else
                            $("#@optionValue").attr('checked', false);*@
                    </script>
                }
                @Html.ValidationMessageFor(model => model.collegeTypeID)
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.degreeId)
            </td>
            <td class="col2" colspan="3" style="line-height: 1.2rem;">
                @*@Html.HiddenFor(model => model.degreeId)*@
                @foreach (var item in Model.degree)
                {
                    var optionValue = "degree_" + item.id;
                    var selectValue = item.selected;
                    <input type="checkbox"
                           id="@optionValue" 
                           name="degreeId"
                           value="@item.id" />
                    @*<input type="checkbox"
                           id="@optionValue"
                           name="degreeId"
                           value="@item.id" disabled="disabled" />*@
                    <label for="@optionValue" style="padding-right: 10px !important; text-align: left; display: inline-block;">@item.name</label>

                    @*if (selectValue == 1)
                    {
                        <input type="hidden" name="degreeId" value="@item.id" id="@optionValue">
                    }*@

                <script type="text/javascript">
                        if(@selectValue == 1)
                            $("#@optionValue").attr('checked', 'checked');
                        else
                            $("#@optionValue").attr('checked', null);
                    </script>
                }
                @Html.ValidationMessageFor(model => model.degreeId)
            </td>
        </tr>

        <tr>
            <td>
                @Html.HiddenFor(model => model.addressTye, new { Value = "COLLEGE" })
                @Html.HiddenFor(model => model.createdOn, new { Value = DateTime.Now })

            </td>
            <td colspan="3" style="line-height: 1.2rem;" class="right_buttons">
                @* @if (Model.id == 0)
                {
                    <input type="submit" value="Add" />
                    @Html.ActionLink("Next", "Create", "SocietyInformation", null, new { @class = "back_button" })
                }
                else
                { 
                    *@
                <input type="submit" value="Save" onclick="return Validate();" />
                @* @Html.ActionLink("Next", "Create", "SocietyInformation", null, new { @class = "back_button" })*@
                @*}*@
            </td>
        </tr>
    </table>
                                                                                                                                      }
                                                                                                                                  }
}
<script type="text/javascript">
    function Validate(){
        var isValid = true;   
        if ($("#CAType_11").is(":checked")) {
            var selecetedAffiliation = $("#CAType_11").val();
            if(selecetedAffiliation == 11)
            {
                var otherCategory = $.trim($('#otherCategory').val());
                if(otherCategory == '')
                {
                    isValid = false;
                    alert("Please enter Other Category");
                }
                else
                {
                    isValid = true;
                }
            }
            else
            {
                isValid = true;
            }            
        }
        return isValid;
    }
</script>
