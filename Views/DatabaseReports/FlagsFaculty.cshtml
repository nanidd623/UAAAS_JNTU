@model UAAAS.Models.FacultyFlags
@{
    ViewBag.Title = "FlagsFaculty";
}

<h2>FlagsFaculty</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.plugin.from_html.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {

        $("#collegeId").change(function () {
            var collegeId = $(this).val();
            window.location.href = "/DatabaseReports/FlagsFaculty?collegeId=" + collegeId;
        });

        $(".AllItems").click(function () {
            debugger;
            var allitems = $(".AllItems").attr('checked');
            if (allitems == "checked") {
                $('.Item').attr('checked', true); 
            }
            else {
                $('.Item').attr('checked', false);            
            }
        });      
    });
    //var app = angular.module('MyModule', [])
    //                .controller('MyController', function ($scope, $log, $http) {
    //                    debugger;

    //                    var  id = 0;
    //                    $scope.currentcollege = 0;
    //                    $http.get('/FacultyDetails/GetColleges')
    //                    .then(function (response) {
    //                        debugger;
    //                        $scope.Colleges = response.data.response;
    //                        $scope.ChangeCollege = function () {
    //                            debugger;
    //                            id = $scope.currentcollege;
    //                            window.location.href = "/FacultyDetails/Index?collegeId=" + id;
    //                        }
    //                    });
    //                    $scope.currentcollege = id;
    //                });
</script>
<style type="text/css">
    .col1 {
        width: 3%;
    }

    .col2 {
        width: 12%;
    }

    .tdright span {
        font-weight: bold;
    }

    .tdright {
        width: 22%;
        text-align: center;
    }

    .tdcenter {
        width: 10%;
        text-align: center;
    }

    .tdleft {
        width: 70%;
    }

    input[type="checkbox"] {
        width: 15px; /*Desired width*/
        height: 15px; /*Desired height*/
    }
</style>

@using (Html.BeginForm())
{
    <div style="width:50%;border:solid 1px #e6e6e6;border-top:5px solid #F2552C;box-shadow: 0 1px 5px rgba(0, 0, 0, 0.1);margin:auto;">
        <table cellspacing="6px;" width="90%" style="margin:auto;padding:7px;">
            <tr>
                <td class="tdright">
                    <span>Colleges</span>
                </td>
                <td class="tdcenter">:</td>
                <td class="tdleft">
                    @Html.DropDownListFor(model => model.collegeId, new SelectList(ViewBag.Colleges as System.Collections.IEnumerable, "collegeId", "collegeName"), "---Select---", new { @style = "width:80%;", @class = "required" })
                </td>
            </tr>
            <tr>
                <td class="tdright">
                    <span>Check All</span>
                </td>
                <td class="tdcenter">:</td>
                <td class="tdleft">
                    @Html.CheckBoxFor(model => model.AllItems, new { @class = "AllItems" })
                </td>
            </tr>
        </table>
        @*<select  ng-change="ChangeCollege()" ng-model="currentcollege">
                <option value="0">---Select---</option>
                <option ng-repeat="college in Colleges" value="{{college.collegeId}}">{{college.collegeName}}</option>
            </select>
            <br/>
            <span id="Cid" style="display:none;">{{collegeId}}</span>*@
    </div>
    <br /><br />
    @Html.HiddenFor(model => model.collegeId)
    <div style="width:100%;border:solid 1px #e6e6e6;border-bottom:3px solid #F2552C;box-shadow: 0 1px 5px rgba(0, 0, 0, 0.1);margin:auto;">
        <ul style="list-style:none;padding: 0px;margin: 0px;width: 100%;-webkit-column-count: 6;-webkit-column-gap: 25px;font-weight:bold;padding:10px;margin:auto;font-size:15px;">
            <li>@Html.CheckBoxFor(model => model.type, new { @class = "Item" }) Faculty Type</li>
            <li>@Html.CheckBoxFor(model => model.absent, new { @class = "Item" }) Absent</li>
            <li>@Html.CheckBoxFor(model => model.OriginalCertificatesNotShown, new { @class = "Item" }) OriginalCertificatesNotShown </li>
            <li>@Html.CheckBoxFor(model => model.Xeroxcopyofcertificates, new { @class = "Item" }) Xeroxcopyofcertificates</li>
            <li>@Html.CheckBoxFor(model => model.NotQualifiedAsperAICTE, new { @class = "Item" }) NotQualifiedAsperAICTE</li>
            <li>@Html.CheckBoxFor(model => model.NoSCM, new { @class = "Item" }) NoSCM</li>
            <li>@Html.CheckBoxFor(model => model.PANNumber, new { @class = "Item" }) PANNumber</li>
            <li>@Html.CheckBoxFor(model => model.IncompleteCertificates, new { @class = "Item" }) IncompleteCertificates</li>
            <li>@Html.CheckBoxFor(model => model.Blacklistfaculy, new { @class = "Item" }) Blacklistfaculy</li>
            <li>@Html.CheckBoxFor(model => model.NoRelevantUG, new { @class = "Item" }) NoRelevantUG</li>
            <li>@Html.CheckBoxFor(model => model.NoRelevantPG, new { @class = "Item" }) NoRelevantPG</li>
            <li>@Html.CheckBoxFor(model => model.NORelevantPHD, new { @class = "Item" }) NORelevantPHD</li>
            <li>@Html.CheckBoxFor(model => model.InvalidPANNumber, new { @class = "Item" }) InvalidPANNumber</li>
            <li>@Html.CheckBoxFor(model => model.OriginalsVerifiedPHD, new { @class = "Item" }) OriginalsVerifiedPHD</li>
            <li>@Html.CheckBoxFor(model => model.OriginalsVerifiedUG, new { @class = "Item" }) OriginalsVerifiedUG</li>
            <li>@Html.CheckBoxFor(model => model.Invaliddegree, new { @class = "Item" }) Invaliddegree</li>
            <li>@Html.CheckBoxFor(model => model.BAS, new { @class = "Item" }) BAS</li>
            <li>@Html.CheckBoxFor(model => model.InvalidAadhaar, new { @class = "Item" }) InvalidAadhaar</li>
            <li>@Html.CheckBoxFor(model => model.Noclass, new { @class = "Item" }) Noclass</li>
            <li>@Html.CheckBoxFor(model => model.AbsentforVerification, new { @class = "Item" }) AbsentforVerification</li>
            <li>@Html.CheckBoxFor(model => model.NotConsideredPhD, new { @class = "Item"}) NotConsideredPhD</li>
            <li>@Html.CheckBoxFor(model => model.NoPGspecialization, new { @class = "Item" }) NoPGspecialization</li>
            <li>@Html.CheckBoxFor(model => model.Genuinenessnotsubmitted, new { @class = "Item" }) Genuinenessnotsubmitted</li>
            <li>@Html.CheckBoxFor(model => model.NoForm16, new { @class = "Item" }) NoForm16</li>
            <li>@Html.CheckBoxFor(model => model.NoForm26AS, new { @class = "Item" }) NoForm26AS</li>
            <li>@Html.CheckBoxFor(model => model.Covid19, new { @class = "Item" }) Covid-19</li>
            <li>@Html.CheckBoxFor(model => model.Maternity, new { @class = "Item" }) Maternity</li>
        </ul>
    </div>
    <br />
    <div style="float:right;">
        <input type="submit" value="Download" id="btnclink" />
    </div>
}