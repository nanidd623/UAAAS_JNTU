@using UAAAS.Models;
@model List<UAAAS.Models.CollegeEssentialReq>
@{
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    var radiobtnyes_id = string.Empty;
    var radiobtnno_id = string.Empty;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>

    <link href="~/Scripts/Jquerydatatables/jquery.dataTables.min.css" rel="stylesheet" />
    <script src="~/Scripts/Jquerydatatables/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/Jquerydatatables/dataTables.bootstrap.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.8.20.min.js"></script>
    @*<script type="text/javascript" src="http://beneposto.pl/jqueryrotate/js/jQueryRotateCompressed.js"></script>*@
    <script src="~/Scripts/RotateImage.js" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $(".isactivitystatusyes").click(function () {
                var radiobtnyess_id = "#txtFile_" + $(this).attr('id').split('_')[1];
                $(radiobtnyess_id).attr('style', 'display: block');
            });
            $(".isactivitystatusno").click(function () {
                var radiobtnnoo_id = "#txtFile_" + $(this).attr('id').split('_')[1];
                $(radiobtnnoo_id).attr('style', 'display: none');
            });

            $(".Supportingfile").change(function () {
                var rdid = $(this).attr('id').split('_')[1];
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'pdf':
                        case 'PDF':
                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    alert("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetFileSize(file, "Documentfile");
                    size = size / 1048576;
                    if (size > 1) {
                        $(".SupportingfileSpan_" + rdid).text("Document should not exceed 1 MB in Size");
                        $(".SupportingfileSpan_" + rdid).css("color", "red");
                        $(this).val('');
                    } else {
                        $(".SupportingfileSpan_" + rdid).text("");
                    }
                }
            });

            //get file path from client system
            function getNameFromPath(strFilepath) {
                var objRE = new RegExp(/([^\/\\]+)$/);
                var strName = objRE.exec(strFilepath);

                if (strName == null) {
                    return null;
                } else {
                    return strName[0];
                }
            }

            //get file size
            function GetFileSize(fileid, title) {

                try {
                    var fileSize = 0;
                    //for IE
                    if ($.browser.msie) {
                        //before making an object of ActiveXObject,
                        //please make sure ActiveX is enabled in your IE browser
                        var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                        var filePath = $("#" + fileid)[0].value;
                        var objFile = objFSO.getFile(filePath);
                        var fileSize = objFile.size; //size in kb
                        //fileSize = fileSize / 1048576; //size in mb
                    }
                        //for FF, Safari, Opeara and Others
                    else {
                        fileSize = $(".Supportingfile")[0].files[0].size; //size in kb
                        //fileSize = fileSize / 1048576; //size in mb
                    }

                    return fileSize;
                } catch (e) {

                    //alert("Error is : " + e);
                }
            }
        });
    </script>
</head>
<body>
    <h2>College ESSENTIAL REQUIREMENTS</h2>
    <br />
    <br />
    @using (Html.BeginForm("Edit", "CollegeEssentialRequirements", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true)
        if (Model.Count > 0)
        {
            <div>
                @{int rowNo = 0;}
                @for (int i = 0; i < ViewBag.essentialreqs.Count; i++)
                {
                    var sno = @i + 1;
                    var rdoAffilitionId = "rdoAffilitionId_" + @rowNo;
                    var lblAffilitionId = "lblAffilitionId_" + @rowNo;
                    var fieldAffilitionId = "fieldAffilitionId_" + @rowNo;
                    var txtFile = "txtFile" + @rowNo;
                    <table class="faculty_table">
                        @Html.HiddenFor(model => model[i].essentialid, new { @Value = @ViewBag.essentialreqs[i].id })
                        <tr>
                            <td class="col1" style="width:5%">@sno</td>
                            <td class="col1" colspan="3" style="width:50%">
                                @ViewBag.essentialreqs[i].essentialdescription
                            </td>
                            <td class="col4" style="width:18%">
                                <div class="Identified" style="text-align:center;">
                                    <label>@Html.RadioButtonFor(model => model[i].essentialstatus, true, new { @id = "isactivitystatusyes_" + i, @class = "isactivitystatusyes" }) Yes </label>
                                    <label>@Html.RadioButtonFor(model => model[i].essentialstatus, false, new { @id = "isactivitystatusno_" + i, @class = "isactivitystatusno" }) No</label>
                                    @Html.ValidationMessageFor(model => model[i].essentialstatus)
                                </div>
                            </td>
                            @*<td class="col3" id="@lblAffilitionId" style="width:18%">
                                    <table style="width: 100%">
                                        <tr>
                                            <td></td>
                                            <td style="height: 25px; text-align: right; width: 60px;">File :</td>
                                        </tr>
                                    </table>
                                </td>*@
                            <td class="col4 readonly" style="width:30%">
                                @*id="@fieldAffilitionId"*@
                                <table>
                                    <tr>
                                        <td>
                                            @if (Model[i].essentialdocpath != null)
                                            {
                                                @Html.TextBoxFor(model => model[i].essentialdoc, new { type = "file", @id = "txtFile_" + i, @name = "@file", @class = "Supportingfile" }) @*, @disabled = "disabled"*@
                                                <a href="~/Content/Upload/College/EssentialRequirements/@Model[i].essentialdocpath" target="_blank">
                                                    <span style="color: red;"><b>View</b></span>
                                                </a>
                                                <span class="SupportingfileSpan_@i style=" color red;"></span>
                                                //@Html.ValidationMessageFor(model => model.affiliationfile1)
                                                @Html.HiddenFor(model => model[i].essentialdocpath)
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(model => model[i].essentialdoc, new { type = "file", @id = "txtFile_" + i, @name = "@file", @class = "required Supportingfile", @style = "display:none;" }) @*, @disabled = "disabled"*@
                                                <span class="SupportingfileSpan_@i style=" color red;"></span>
                                            }
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                }
                <div style="text-align: right">
                    <p>
                        <input type="submit" value="Submit" id="btnSubmit" name="cmd" class="create_button" />
                        @Html.ActionLink("Cancel", "View", "CollegeEssentialRequirements", new { @class = "create_button" })
                    </p>
                </div>
            </div>
        }

    }
</body>
</html>
