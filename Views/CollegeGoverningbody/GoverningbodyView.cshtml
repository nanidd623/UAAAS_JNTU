@model IList<UAAAS.Models.Governingbody>
@{
    ViewBag.Title = "Goveringbody View";
    int index = 1;
}
<h2>Governingbody</h2>
@if (TempData["Error"] != null)
{
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div><br />
}
@if (TempData["Success"] != null)
{
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div><br />
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function() {
        $(".Supportingfile").change(function() {

            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                case 'pdf':
                case 'PDF':
                    flag = true;
                    break;
                default:
                    flag = false;
                }
            }

            if (flag == false) {
                alert("You can upload only  PDF files");
                $(this).val('');
                return false;
            } else {
                var size = GetFileSize(file, "Documentfile");
                size = size / 1048576;
                if (size > 0.2000000000000000) {
                    alert("Document should not exceed 200 KB in Size");
                    $(this).val('');
                } else {

                }
            }

        });

        //get file size
        function GetFileSize(fileid, title) {

            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject,
                    //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#" + title)[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }

                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            } else {
                return strName[0];
            }
        }


    });
</script>
 @using (Html.BeginForm("Index", "CollegeGoverningmeeting"))
 {
     @*<p class="create_link_right">
    @Html.ActionLink("Upload Governing Body Minutes", "Index", "CollegeGoverningmeeting", new { @class = "create_button" })
</p>*@
      <table style="width: 100%">
            <tr>
                <td></td>
                <td class="create_link_right">
                    @Html.ActionLink("Edit", "GoverningbodyEdit", "CollegeGoverningbody", new { @class = "create_button" })               
                    <a href="/CollegeGoverningmeeting/Index" class="confirmDialog create_button" style="color: white;">
            <span>Upload Governing Body Minutes</span>
        </a>
                </td>              
            </tr>
        </table>
 }

@*<p class="create_link_right">
       @Html.ActionLink("Edit", "GoverningbodyEdit", "CollegeGoverningbody", new { @class = "create_button" })
    </p>*@
@using (Html.BeginForm())
{
    <table width="100%" class="webGrid" style="border: solid 1px red">
        <tr>
            <th  style="width: 3%;text-align: center" class="col11">
                S.No
            </th>
            <th style="width: 20%; text-align: center" class="col11">
                Name of the Governing Body Member
            </th>
            <th style="width: 20%; text-align: center" class="col11">
                Governing Body Member Designation
            </th>
            <th style="width: 20%; text-align: center" class="col11">
                Parent Organization where working
            </th>
            <th style="width: 13%; text-align: center" class="col11">
                Designation of the member where
                working at parent Organization
            </th>
            <th style="width: 7%; text-align: center" class="col11">
                Date of Appointment (MM/DD/YYYY)
            </th>
            <th style="width: 2%; text-align: center" class="col11">
                Appointment Order / Proceedings
            </th>
            <th style="text-align: center; text-align: center" class="col11">
                Photo
            </th>
            <th style="text-align: center; text-align: center" class="col11">
                Term Status
            </th>
        </tr>
        <tbody>
            @if (Model != null)
            {
               
                
                //var didd
                for (int i = 0; i < Model.Count; i++)
                {
                    var bccolor = string.Empty;
                    var currentdate = DateTime.Now;
                    DateTime dateofmember = Convert.ToDateTime(Model[i].DateofappointmentasGoverningBodymember);
                    var differentdays = (currentdate - dateofmember).TotalDays;
                    int remaingdays = 0;
                    
                    //Model[i].GoverningBodyMemberDesignation == "University Nominee"
                    if (Model[i].DateofappointmentasGoverningBodymember!=null)
                    {
                        dateofmember = Convert.ToDateTime(Model[i].DateofappointmentasGoverningBodymember);
                        differentdays=(currentdate - dateofmember).TotalDays;
                        remaingdays =Convert.ToInt32(Math.Round(1095 - Math.Round(differentdays)));
                        if (differentdays > 1095)
                        {
                            bccolor = "yellow";
                        }
                        else
                        {
                            bccolor = string.Empty;
                        }
                    }

                    <tr class="col21" style="background-color: @bccolor">

                        <td>
                            @(index++)
                        </td>
                        <td style="padding: 4px;">
                            @Html.DisplayFor(x => Model[i].NameoftheGoverningBodyMember, new { @class = "required" })
                        </td>
                        <td class="col11" style="font-weight: bold">
                            @Html.DisplayFor(model => Model[i].GoverningBodyMemberDesignation)
                            @Html.HiddenFor(model => Model[i].MemberDesignationId)
                        </td>
                        <td>
                            @Html.DisplayFor(x => Model[i].ParentOrganizationwhereworking, new { @class = "required" })
                        </td>
                        <td>
                            @Html.DisplayFor(x => Model[i].DesignationofthememberwhereworkingatparentOrganization, new { @class = "required" })
                        </td>

                        <td style="text-align: center">

                            @Html.DisplayFor(x => Model[i].DateofappointmentasGoverningBodymember, new { @class = "calendar required" })
                        </td>

                        <td style="text-align: center">
                            @*@Html.DisplayFor(x => Model[i].SupportingDocument, new { type = "file", @class = "Supportingfile required" })*@
                            @if (Model[i].SupportingDocumentfile != null)
                            {
                                <a href="~/Content/Upload/College/GoverningBody/@Model[i].SupportingDocumentfile" target="_blank">
                                    <span style="color: red;"><b>View</b></span>
                                </a>
                            }
                        </td>
                        <td style="text-align: center">
                            @if (Model[i].SupportingDocumentfile1 != null)
                            {
                                <a href="~/Content/Upload/College/GoverningBodypics/@Model[i].SupportingDocumentfile1" target="_blank">
                                    <span style="color: red;"><b>View</b></span>
                                </a>
                            }
                        </td>
                        <td style="text-align: center">
                            @if (Model[i].DateofappointmentasGoverningBodymember != null && Model[i].SupportingDocumentfile!=null)
                            {
                                if (differentdays > 1095)
                                {
                                    <span style="text-align: center;color: red"><b> Expired</b></span>
                                }
                                else
                                {
                                    <span style="text-align: center"><b> Will expire in @remaingdays days</b></span>
                                }
                                
                            }
                            
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

