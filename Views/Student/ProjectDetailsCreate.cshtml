@using UAAAS.Models
@model UAAAS.Models.jntuh_pgstudent_projectdetatails_class

@{
    ViewBag.Title = "ProjectDetailsCreate";
}
<script type="text/javascript">
    $(document).ready(function () {

        $('input[type=radio][name=ProjectEnroll]').click(function () {
        
          
            var enrollval = $(this).val();
            if (enrollval == "True") {

                $("#Resontd").hide();
                $("#Projectdiv").show();
               
            }
            else {
                $("#Resontd").show();
                $("#Projectdiv").hide();
               
            }
        });

        $('input[type=radio][name=ProjectType]').click(function () {
            
           
            var ProjectType = $(this).val();
            if (ProjectType == "1") {

                $("#extrnaldiv").hide();
                $
            }
            else {
                $("#extrnaldiv").show();
            }
        });
        
        $("#InternalGuideRegNumber").blur(function () {

            if ($('#InternalGuideRegNumber').val() != "") {
              
                $.ajax({
                    url: '/Student/facultyDetails',
                    dataType: 'json',
                    type: 'post',
                    contentType: 'application/json',
                    data: JSON.stringify({ "RegNum": $('#InternalGuideRegNumber').val() }),
                    success: function (data, textStatus, jQxhr) {
                        $("label[for='InternalGuideName']").text("");
                        $("input[name='InternalGuideName']").val("");

                        $("label[for='InternalguideEmail']").text("");
                        $("input[name='InternalguideEmail']").val("");

                        $("label[for='InternalguideDepartmentNAME']").text("");
                        $("input[name='InternalguideDepartmentNAME']").val("");

                        $("label[for='InternalguideDepartment']").text("");
                        $("input[name='InternalguideDepartment']").val("");
                        console.log(data);
                        if (data.Details != "") {
                            var details = data.Details;
                            var Alldata = details.split(",");

                            $("label[for='InternalGuideName']").text(Alldata[0]);
                            $("input[name='InternalGuideName']").val(Alldata[0]);

                            $("label[for='InternalguideEmail']").text(Alldata[1]);
                            $("input[name='InternalguideEmail']").val(Alldata[1]);

                            $("label[for='InternalguideDepartmentNAME']").text(Alldata[2]);
                            $("input[name='InternalguideDepartmentNAME']").val(Alldata[2]);

                            $("label[for='InternalguideDepartment']").text(Alldata[3]);
                            $("input[name='InternalguideDepartment']").val(Alldata[3]);


                        }
                    },

                    error: function (jqXhr, textStatus, errorThrown) {
                        console.log(errorThrown);
                    }

                });
            }
            else {
                $("label[for='InternalGuideName']").text("");
                $("input[name='InternalGuideName']").val("");

                $("label[for='InternalguideEmail']").text("");
                $("input[name='InternalguideEmail']").val("");

                $("label[for='InternalguideDepartmentNAME']").text("");
                $("input[name='InternalguideDepartmentNAME']").val("");

                $("label[for='InternalguideDepartment']").text("");
                $("input[name='InternalguideDepartment']").val("");
               // alert("Please Enter Registration Number");
            }

        });

        $('#ExternalGuideDesignation').change(function () {

            var ExternalGuideDesignation = $(this).val();
            //alert(collegeId)

            if ($('#ExternalGuideDesignation').val() != '') {
                return true;
            }
            else {
                return false;
            }
        });

    });

   
</script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.plugin.from_html.js")" type="text/javascript"></script>
<h2>PG Project Details </h2>
@if (TempData["SUCCESS"] != null)
{
    <div class="success" style="background-color: gold; border: 1px solid #f49820;">
        <p style="text-align: center;font-weight: bold"><strong>Success:</strong> @TempData["SUCCESS"].ToString()</p>
    </div>
}
@if (TempData["ERROR"] != null)
{
    <div class="error" style="background-color: red; border: 1px solid #f49820;">
        <p style="text-align: center;font-weight: bold;color:white;"><strong>Error:</strong> @TempData["ERROR"].ToString()</p>
    </div>
}
@using (Html.BeginForm())
{
    <div id="StudentProjectDiv">
        <table class="faculty_table">
            <tr>
                <td class="col1" colspan="4">
                    <b>Student Information</b>
                </td>
            </tr>
            <tr>
                <td class="col1" style="font-weight: bold;">
                    @Html.LabelFor(model => model.StudentsName)
                    @Html.HiddenFor(model => model.StudentsName)
                </td>
                <td class="col2">
                    <span style="text-transform: uppercase; font-weight: bold;">@Html.DisplayFor(model => model.StudentsName)</span>
                </td>
                <td class="col1" style="width: 15% !important; vertical-align: top;">
                    <div>
                        @Html.LabelFor(model => model.HallticketNumber)
                      

                    </div>
                </td>
                <td class="col2 focus" style="width: 90% !important; vertical-align: top;">
                    @Html.DisplayFor(model => model.HallticketNumber)
                    @Html.HiddenFor(model => model.HallticketNumber)
                </td>
            </tr>
        </table>
        <br />
        <table class="faculty_table">
            <tr>
                <td class="col1" colspan="4">
                    <b>Project Information</b>
                </td>
            </tr>
            <tr>
                <td class="col1" colspan="4">
                    <span>Student Registred For Final Year</span>
                    &nbsp;&nbsp;&nbsp;&nbsp;
                    @Html.RadioButtonFor(m => m.ProjectEnroll, true)<b>Yes</b>   &nbsp;&nbsp;&nbsp;&nbsp;
                    @Html.RadioButtonFor(m => m.ProjectEnroll, false, new  { @checked = true  })<b>No</b>
                </td>
            </tr>
            <tr id="Resontd">
                <td class="col1" style="vertical-align: top;">
                    <div class="working">
                        @Html.LabelFor(m=>m.Reason)
                    </div>
                </td>
                <td class="col2" style="vertical-align: top;" colspan="3">
                    @Html.TextAreaFor(m => m.Reason, new { @maxlength = "1000" })
                    @Html.ValidationMessageFor(m => m.Reason)
                </td>
            </tr>


        </table>
        <div id="Projectdiv" style="display:none">
            <table class="faculty_table">
                <tr>
                    <td class="col1" colspan="4">
                        <span>Place Of working For Project</span>
                        &nbsp;&nbsp;&nbsp;&nbsp;
                        @Html.RadioButtonFor(m => m.ProjectType, 1, new { @checked = true })<b>Internal(Within The College)</b>  &nbsp;&nbsp;&nbsp;&nbsp;
                        @Html.RadioButtonFor(m => m.ProjectType, 2)<b>External(Outside the College)</b>
                    </td>
                </tr>
                <tr>
                    <td class="col1">

                    </td>
                    <td class="col2"></td>
                    <td class="col3"></td>
                    <td class="col4"></td>
                </tr>
                <tr>
                    <td class="col1" style="vertical-align: top;">
                        @Html.LabelFor(m => m.ProjectTitle)
                    </td>
                    <td class ="col2" style="vertical-align: top;" colspan="3">
                        @Html.TextAreaFor(m => m.ProjectTitle, new { @maxlength = "500" })
                        @Html.ValidationMessageFor(m => m.ProjectTitle)
                        </td>
                   </tr>
                <tr>
                    <td class="col1" style="vertical-align: top;">
                        @Html.LabelFor(m => m.ProjectDescription)
                    </td>
                    <td class="col2" style="vertical-align: top;" colspan="3">
                        @Html.TextAreaFor(m => m.ProjectDescription, new { @maxlength = "1000" })
                        @Html.ValidationMessageFor(m => m.ProjectDescription)
                    </td>
                </tr>

            </table>
            <br />
            <table class="faculty_table">
                <tr>
                    <td class="col1" colspan="4">
                        <b>Internal Supervisor Information</b>
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.InternalGuideRegNumber) <span class="mandatory">*</span>
                    </td>
                    <td class="col2">
                        @Html.TextBoxFor(model => model.InternalGuideRegNumber, new { @id = "InternalGuideRegNumber", @placeholder = "InternalGuide Registration Numbe", @maxlength = "20", })
                        @Html.ValidationMessageFor(model => model.InternalGuideRegNumber)
                    </td>
                    <td class="col3">
                        <span>Supervisor Name</span><br />
                    </td>
                    <td class="col4">
                        @Html.LabelFor(model => model.InternalGuideName, " ", new { id = "InternalGuideName" })
                        @Html.HiddenFor(model => model.InternalGuideName, new { id = "InternalGuideName" })
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        <span>Supervisor Email</span><br />
                    </td>
                    <td class="col2">
                        @Html.LabelFor(model => model.InternalguideEmail, " ", new { id = "InternalguideEmail" })
                        @Html.HiddenFor(model => model.InternalguideEmail, new { id = "InternalguideEmail" })
                    </td>
                    <td class="col3">
                        <span>Supervisor Department</span><br />
                    </td>
                    <td class="col4">
                      
                        @Html.LabelFor(model => model.InternalguideDepartmentNAME, " ", new { id = "InternalguideDepartmentNAME" })
                        @Html.HiddenFor(model => model.InternalguideDepartment, new { id = "InternalguideDepartment" })
                    </td>
                </tr>
            </table>
            <br />
            <table id="extrnaldiv" class="faculty_table" style="display:none">
                <tr>
                    <td class="col1" colspan="4">
                        <b>External Supervisor Information</b>
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.ExternalGuideName) <span class="mandatory">*</span>
                    </td>
                    <td class="col2">
                        @Html.TextBoxFor(model => model.ExternalGuideName, new { @id = "Regnumber", @placeholder = "ExternalGuideName", @maxlength = "50", })
                        @Html.ValidationMessageFor(model => model.ExternalGuideName)
                    </td>
                    <td class="col3">
                        @Html.LabelFor(model => model.ExternalEmail) <span class="mandatory">*</span>
                    </td>
                    <td class="col4">
                        @Html.TextBoxFor(model => model.ExternalEmail, new { @id = "Regnumber", @placeholder = "ExternalGuideEmail", @maxlength = "100", })
                        @Html.ValidationMessageFor(model => model.ExternalEmail)
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.ExternalGuideDesignation) <span class="mandatory">*</span>
                    </td>
                    <td class="col2">
                       @Html.DropDownList("ExternalGuideDesignation", new SelectList(ViewBag.designation as System.Collections.IEnumerable, "DesignationId", "DesignationName"), "-select-", new { id = "DesignationId" })
                        @Html.ValidationMessageFor(model => model.ExternalGuideDesignation)
                    </td>
                    <td class="col3">
                        @Html.LabelFor(model => model.ExternalQualification) <span class="mandatory">*</span>
                    </td>
                    <td class="col4">
                        @Html.TextBoxFor(model => model.ExternalQualification, new {  @placeholder = "ExternalQualification", @maxlength = "100", })
                        @Html.ValidationMessageFor(model => model.ExternalQualification)
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.ExternalExperience) <span class="mandatory">*</span>
                    </td>
                    <td class="col2">
                        @Html.TextBoxFor(model => model.ExternalExperience, new { @placeholder = "ExternalExperience(In Years)", @maxlength = "50", })
                        @Html.ValidationMessageFor(model => model.ExternalExperience)
                    </td>
                    <td class="col3">
                        @Html.LabelFor(model => model.ExternalOrgName) <span class="mandatory">*</span>
                    </td>
                    <td class="col4">
                        @Html.TextBoxFor(model => model.ExternalOrgName, new {  @placeholder = "External Organization Name", @maxlength = "200", })
                        @Html.ValidationMessageFor(model => model.ExternalOrgName)
                    </td>
                </tr>
                <tr>
                   
                    <td class="col1" style="vertical-align: top;">
                        @Html.LabelFor(m => m.ExternalOrgAddress)
                    </td>
                    <td class="col2" style="vertical-align: top;" colspan="3">
                        @Html.TextAreaFor(m => m.ExternalOrgAddress)
                        @Html.ValidationMessageFor(model => model.ExternalOrgAddress)
                    </td>
                    
                </tr>
            </table>
        </div>
        <div style="line-height: 1.2rem;" class="right_buttons submitButton">
            <input type="submit" id="btnstudent" value="Submit" class="submit" name="Command" />
        </div>
    </div>

}

