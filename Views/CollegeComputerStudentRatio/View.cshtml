@model IList<UAAAS.Models.ComputerStudentRatioDetails>
@using UAAAS.Models
@{
    ViewBag.Title = "Computers";
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    string macfile = string.Empty;
    string premacfile = string.Empty;
}
@if (TempData["Error"] != null)
{
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
}

@if (TempData["Success"] != null)
{
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
}

@if (ViewBag.IsEditable == true)
{
    <h2>Computers</h2>
    <p class="create_link_right">
        @Html.ActionLink("Edit", "Edit", "CollegeLibrary", new { @class = "create_button" /* id=Model.PrimaryKey */ })
    </p>
}
else
{
    @*<p class="create_link_right">
        <input name="btnPrint" type="button" onclick="printdiv('div_print');" value=" Print" class="create_button">
    </p>*@
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $(".view_hide").show();
    });
    function printdiv(printpage) {
        $(".view_hide").hide();
        //Get the HTML of div
        var divElements = document.getElementById(printpage).innerHTML;
        //Get the HTML of whole page
        var oldPage = document.body.innerHTML;

        //Reset the page's HTML with div's HTML only
        document.body.innerHTML =
          "<html><head><title></title></head><body>" +
          divElements.fontsize(1) + "</body>";

        //Print Page
        window.print();

        //Restore orignal HTML
        document.body.innerHTML = oldPage;
        $(".view_hide").show();
        return false;
    }
</script>

<div id="div_print">
    @if (ViewBag.IsEditable == false)
    {
        <h2>Computers</h2>
    }
    @using (Html.BeginForm())
    {

        if (ViewBag.Norecords == true)
        {
        <div class="warning" style="width: 200px; margin: 0 auto;">
            <p>No Data found</p>
        </div>
        }
        else
        {
    
        <table class="four_columns" style="width: 100%;">
            <tr style="font-weight: bold;">
                <td style="text-align: left;" class="col11">Degree</td>
                @*<td style="text-align: center; width: 140px;" class="col11">Total Intake</td>*@
                <td style="text-align: left;" class="col11">No of Computers available </td>
            </tr>

            @for (int i = 0; i < ViewBag.Count; i++)
            {
                <tr>
                    <td style="text-align: left;" class="col21">
                        @Html.LabelFor(m => m[i].degree, Model[i].degree == null ? string.Empty : Model[i].degree.ToString())
                        @Html.HiddenFor(m => m[i].degreeId)
                    </td>
                    @*<td style="text-align: center; width: 15%" class="col21 focus">
                        @Html.LabelFor(m => m[i].totalIntake, Model[i].totalIntake == 0 ? "0" : Model[i].totalIntake.ToString())
                        @Html.HiddenFor(m => m[i].totalIntake)
                    </td>*@
                    @{
                        macfile = Model[i].MacAddressList;
                    }
                    @{
                       premacfile = Model[i].PreviousMacAddresspath;
                    }
                    @if (ViewBag.Update == true)
                    {
                        <td style="text-align: left;" class="col21">
                            @Html.DisplayFor(m => m[i].availableComputers, new { Value = Model[i].availableComputers == 0 ? "0" : Model[i].availableComputers.ToString(), style = "text-align: center;" })
                        </td>
                    }
                    else
                    {
                        <td style="text-align: left;" class="col21">
                            @Html.DisplayFor(m => m[i].availableComputers, new { Value = Model[i].availableComputers == 0 ? string.Empty : Model[i].availableComputers.ToString(), style = "text-align: center;" })
                        </td>
                    }
                </tr>
            }
        </table>
        <br />
         <table class="webGrid" style="width: 100%;">
            <tr>
                 <td style="text-align: left;" class="col1">
                    <span>Upload MAC-ADDRESS LIST:</span>
                </td>
                <td class="col1">              
                 @if (!string.IsNullOrEmpty(macfile))
                 {
                     <span><a href="/Content/Upload/CollegeEnclosures/MAC/@macfile" target="_blank"><span style="font-weight: bold; color: red">View</span></a></span>
                 }
                 else
                 {
                     <span style="font-weight: bold; color: red">MAC-ADDRESS File Not Uploaded</span>
                    if (!string.IsNullOrEmpty(premacfile))
                    {
                        <span><a href="/Content/Upload/CollegeEnclosures/MAC/@premacfile" target="_blank"><span style="font-weight: bold; color: red">&nbsp; &nbsp;&nbsp;&nbsp;Previous MAC File</span></a></span>
                    }
                 }
               </td>
            </tr>
     </table>
                if (ViewBag.Count == 0)
                {
        <div class="warning" style="width: 550px; margin: 0 auto;">
            <p>Please select your courses in "College Information" page before filling up this page.</p>
        </div>
            }

        }

    }
</div>
