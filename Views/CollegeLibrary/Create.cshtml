@model UAAAS.Models.CollegeLibrary
@{
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    } 
    ViewBag.Title = "College Library";
}

<h2>College Library</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    if (ViewBag.NotUpload == true)
    {
        <span class="notUpload">You can not upload data Please contact Affiliations & Academic Audit if you want to upload</span>
    }
    else
    {
  
    <div class="details_table">
        
        @Html.HiddenFor(model => model.collegeId, new { @Value = Model.collegeId })
        <div class="editor-label" style="width: 30%">
            @Html.LabelFor(model => model.librarianName)
        </div>
        <div class="editor-field focus" style="width: 67%">
            @Html.TextBoxFor(model => model.librarianName)
            @Html.ValidationMessageFor(model => model.librarianName)
        </div>

        <div class="editor-label" style="width: 30%">
            @Html.LabelFor(model => model.librarianQualifications)
        </div>
        <div class="editor-field" style="width: 67%">
            @Html.TextBoxFor(model => model.librarianQualifications)
            @Html.ValidationMessageFor(model => model.librarianQualifications)
        </div>

        <div class="editor-label" style="width: 30%">
            @Html.LabelFor(model => model.libraryPhoneNumber)
        </div>
        <div class="editor-field" style="width: 67%">
            @Html.TextBoxFor(model => model.libraryPhoneNumber)
            @Html.ValidationMessageFor(model => model.libraryPhoneNumber)
        </div>

        <div class="editor-label" style="width: 30%">
            @Html.LabelFor(model => model.totalSupportingStaff)
        </div>
        <div class="editor-field" style="width: 67%">
            @Html.TextBoxFor(model => model.totalSupportingStaff, new { @Value = Model.totalSupportingStaff == 0 ? "" : Model.totalSupportingStaff.ToString() })
            @Html.ValidationMessageFor(model => model.totalSupportingStaff)
        </div>

        <div class="editor-label" style="width: 30%">
            @Html.LabelFor(model => model.totalTitles)
        </div>
        <div class="editor-field" style="width: 67%">
            @Html.TextBoxFor(model => model.totalTitles, new { @Value = Model.totalTitles == 0 ? "" : Model.totalTitles.ToString() })
            @*@Html.DisplayFor(model => model.totalTitles, new { @Value = Model.totalTitles == 0 ? "" : Model.totalTitles.ToString() })
            @Html.HiddenFor(model => model.totalTitles)*@
        </div>

        <div class="editor-label" style="width: 30%">
            @Html.LabelFor(model => model.totalVolumes)
        </div>
        <div class="editor-field" style="width: 67%">
            @Html.TextBoxFor(model => model.totalVolumes, new { @Value = Model.totalVolumes == 0 ? "" : Model.totalVolumes.ToString() })
            @*@Html.DisplayFor(model => model.totalVolumes, new {@Value = Model.totalVolumes == 0 ? "" : Model.totalVolumes.ToString()})
            @Html.HiddenFor(model => model.totalVolumes)*@
        </div>

        <div class="editor-label" style="width: 30%">
            @Html.LabelFor(model => model.totalNationalJournals)
        </div>
        <div class="editor-field" style="width: 67%">
            @Html.TextBoxFor(model => model.totalNationalJournals, new { @Value = Model.totalNationalJournals == 0 ? "" : Model.totalNationalJournals.ToString() })
            @*@Html.DisplayFor(model => model.totalNationalJournals, new {@Value = Model.totalNationalJournals == 0 ? "" : Model.totalNationalJournals.ToString()})
            @Html.HiddenFor(model => model.totalNationalJournals)*@
        </div>

        <div class="editor-label" style="width: 30%">
            @Html.LabelFor(model => model.totalInternationalJournals)
        </div>
        <div class="editor-field" style="width: 67%">
            @Html.TextBoxFor(model => model.totalInternationalJournals, new { @Value = Model.totalInternationalJournals == 0 ? "" : Model.totalInternationalJournals.ToString() })
            @*@Html.DisplayFor(model => model.totalInternationalJournals, new {@Value = Model.totalInternationalJournals == 0 ? "" : Model.totalInternationalJournals.ToString()})
            @Html.HiddenFor(model => model.totalInternationalJournals)*@
        </div>

        <div class="editor-label" style="width: 30%">
            @Html.LabelFor(model => model.totalEJournals)
        </div>
        <div class="editor-field" style="width: 67%">
            @Html.TextBoxFor(model => model.totalEJournals, new { @Value = Model.totalEJournals == 0 ? "" : Model.totalEJournals.ToString() })
             @*@Html.HiddenFor(model => model.totalEJournals)*@
        </div>

        <div class="editor-label" style="width: 30%">
            @Html.LabelFor(model => model.librarySeatingCapacity)
        </div>
        <div class="editor-field" style="width: 67%">
            @Html.TextBoxFor(model => model.librarySeatingCapacity, new { @Value = Model.librarySeatingCapacity == 0 ? "" : Model.librarySeatingCapacity.ToString() })
            @Html.ValidationMessageFor(model => model.librarySeatingCapacity)
        </div>

        <div class="editor-label" style="width: 30%">
            @Html.LabelFor(model => model.libraryWorkingHoursFrom)
        </div>
        <div class="editor-field" style="width: 67%">
            @Html.TextBoxFor(model => model.libraryWorkingHoursFrom, new { @Value = Model.libraryWorkingHoursFrom == 0 ? "" : Model.libraryWorkingHoursFrom.ToString(), style = "width:60px" })
            @Html.ValidationMessageFor(model => model.libraryWorkingHoursFrom)

            @Html.LabelFor(model => model.libraryWorkingHoursTo)

            @Html.TextBoxFor(model => model.libraryWorkingHoursTo, new { @Value = Model.libraryWorkingHoursTo == 0 ? "" : Model.libraryWorkingHoursTo.ToString(), style = "width:60px" })
            @Html.ValidationMessageFor(model => model.libraryWorkingHoursTo)
        </div>

        @Html.HiddenFor(model => model.createdBy)
        @Html.HiddenFor(model => model.createdOn)
        <p class="right_buttons">
            <input type="submit" value="Save" />
        </p>
    </div>
}

}