@model UAAAS.Models.Lab
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@{
    ViewBag.Title = "LaboratoriesData";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    } 
}

<h2>Add Laboratories</h2>


@using (Ajax.BeginForm("AddEditRecord", "Labs", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "LaboratoriesDialog" }))
{
       @Html.ValidationSummary(true)
    if (TempData["Error"] != null)
    {
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
    }
    if (TempData["Success"] != null)
    {
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
    }
    if (ViewBag.Count == 0)
    {
    <div class="warning" style="width: 550px; margin: 0 auto;">
        <p>Please select your courses in "College Information" page before filling up this page.</p>
    </div>
    }
    <div class="details_table">
        @if (ViewBag.IsUpdate == true)
        {
            @Html.HiddenFor(model => model.id)
            @Html.HiddenFor(model => model.createdBy)
            @Html.HiddenFor(model => model.createdOn)           
        }
        @Html.HiddenFor(model => model.collegeId, new { @Value = Model.collegeId })
        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.degreeId)
        </div>
        <div class="editor-field" style="width: 420px">
            @Html.DisplayFor(model => model.degree)
            @Html.ValidationMessageFor(model => model.degreeId)
        </div>
        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.departmentId)
        </div>
        <div class="editor-field" style="width: 420px">
            @Html.DisplayFor(model => model.department)
        </div>

        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.specializationId)
        </div>
        <div class="editor-field" style="width: 420px">
            @Html.DisplayFor(model => model.specializationName)
        </div>
        @if (Model.degree == "B.Tech" || Model.degree == "B.Pharmacy")
        {  
            <div class="editor-label" style="width: 250px">
                @Html.LabelFor(model => model.yearInDegreeId)
            </div>
            <div class="editor-field" style="width: 420px">
                @Html.DisplayFor(model => model.year)
            </div>
            <div class="editor-label" style="width: 250px">
                @Html.LabelFor(model => model.Semester)
            </div>
            <div class="editor-field" style="width: 420px">
                @Html.DisplayFor(model => model.Semester)
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.year)
            @Html.HiddenFor(model => model.Semester)           
        }

        @* <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.Labcode)
        </div>
        <div class="editor-field" style="width: 420px">
            @Html.DisplayFor(model => model.Labcode)
        </div>*@

        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.LabName)
        </div>
        <div class="editor-field" style="width: 420px">
            @Html.DisplayFor(model => model.LabName)
            @Html.HiddenFor(model => model.LabName)
        </div>
        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.AvailableArea)
        </div>
        <div class="editor-field" style="width: 420px">
            @Html.TextBoxFor(model => model.AvailableArea, new { @placeholder = "Foor Area" })
            @Html.ValidationMessageFor(model => model.AvailableArea)
        </div>
        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.RoomNumber)
        </div>
        <div class="editor-field" style="width: 420px">
            @Html.TextBoxFor(model => model.RoomNumber, new { @placeholder = "Room No1", @maxlength = "25" })
            @Html.ValidationMessageFor(model => model.RoomNumber)
        </div>
        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.EquipmentID)
        </div>
        <div class="editor-field" style="width: 420px">
            @if (Model.degree == "B.Tech" || Model.degree == "B.Pharmacy")
            {
                @Html.DisplayFor(model => model.EquipmentName)           
                @Html.HiddenFor(model => model.EquipmentName)              
            }
            else
            {
                @Html.TextBoxFor(model => model.EquipmentName, new { @Value = Model.LabEquipmentName, @placeholder = "Equipment Name", @maxlength = "50", @class = "required", @id = "eqpname", @title = "We do not have Equipment Names for the selected Lab, please specify your own 'Name of the Equipment' in the textbox shown" })                  
            }
            @*@Html.DisplayFor(model => model.EquipmentNo)  *@
            @Html.HiddenFor(model => model.EquipmentNo)
            @Html.HiddenFor(model => model.EquipmentID)
        </div>
        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.Make)
        </div>
        <div class="editor-field" style="width: 420px">
            @Html.TextBoxFor(model => model.Make, new { @placeholder = "Make", @maxlength = "50" })
            @Html.ValidationMessageFor(model => model.Make)
        </div>
        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.Model)
        </div>
        <div class="editor-field" style="width: 420px">
            @Html.TextBoxFor(model => model.Model, new { @placeholder = "Model", @maxlength = "50" })
            @Html.ValidationMessageFor(model => model.Model)
        </div>
        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.EquipmentUniqueID)
        </div>
        <div class="editor-field" style="width: 420px">
            @Html.TextBoxFor(model => model.EquipmentUniqueID, new { @placeholder = "Unique ID", @maxlength = "50" })
            @Html.ValidationMessageFor(model => model.EquipmentUniqueID)
        </div>
        <div class="editor-label" style="width: 250px">
            @Html.LabelFor(model => model.AvailableUnits)
        </div>
        <div class="editor-field" style="width: 420px">
            @Html.TextBoxFor(model => model.AvailableUnits, new { @placeholder = "AvailableUnits" })
            @Html.ValidationMessageFor(model => model.AvailableUnits)
        </div>


        @Html.HiddenFor(model => model.createdOn)
        @Html.HiddenFor(model => model.createdBy)
        <div style="text-align: center">
            <p>
                @if (ViewBag.IsUpdate == true)
                {
                    <input type="submit" value="Update" id="btnUpdate" name="cmd" class="submit" />                   
                }
                else
                {
                    <input type="submit" value="Save" id="btnSave" name="cmd" class="submit" />
                }
            </p>
        </div>
    </div>
 
}

<script type="text/javascript">
    $(document).ready(function () {
        GetSpecialization(@Model.departmentId);
        $(".calendar, .year").css("width", "75px");
        if ($("#degreeId").val() > 0) {
            GetDepartments($("#degreeId").val());
        }
        
        
        $("#degreeId").change(function () {
            var DegreeID = $(this).val();
            GetDepartments(DegreeID);
        });
        if ($("#departmentId").val() > 0)
        {
            GetSpecialization($("#departmentId").val());
        }
        $("#departmentId").change(function () {
            var DepartmentID = $(this).val();
            GetSpecialization(DepartmentID);
        });

        function GetDepartments(DegreeID) {
            $.getJSON("/Laboratories/GetDepartments",{ id : DegreeID},
                function(DepartmentsData){
                    var select = $("#departmentId");
                    select.empty();
                    select.append($('<option/>',{
                        value: '',
                        text: '-- Select --'
                    }));
                    $.each(DepartmentsData,function(index, itemdata){
                        select.append($('<option/>',{
                            value: itemdata.Value,
                            text: itemdata.Text,
                            selected: (itemdata.Value == @Model.departmentId ? true : false)
                        }));
                    });
                });
            }

        function GetSpecialization(DepartmantID){
            $.getJSON("/Laboratories/GetSpecialization", { id: DepartmantID },
                function(Specializationdata){
                    var select = $("#Specialization");
                    select.empty();
                    select.append($('<option/>',{
                        value: '',
                        text: '-- Select --'
                    }));
                    $.each(Specializationdata,function(index, itemdata){
                        select.append($('<option/>',{
                            value: itemdata.Value,
                            text: itemdata.Text,
                            selected: (itemdata.Value == @Model.specializationId ? true : false)
                        }));
                    });
                });
            }
    });

</script>
