@model UAAAS.Models.Admin.FacultyNews
@{
    ViewBag.Title = "FacultyNewsEdit";
}

<h2>FacultyNewsEdit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.plugin.from_html.js")" type="text/javascript"></script>
@*<script src="~/Scripts/jquery-1.7.1.min.js"></script>*@

<script type="text/javascript">
    $(document).ready(function () {

        //$("#RegistartionNumber").addClass('required');
        //RegistrationNumber Required
        $('.News').change(function () {
            debugger;
            var chekced = $(this).val();
            if (chekced == "False") {
                $("#RegistartionNumber").addClass('required');
            }
            else {
                $("#RegistartionNumber").removeClass();
            }
        });
    });

    function Validate() {
        debugger;
       
        var isValidUrl = true;
        var isValidTitle = true;
        var isValidDate = true;
        var uploadedFile = $("#uploadFile").val();
        var navigationUrl = $("#navigateURL").val();
        if (uploadedFile != '' && navigationUrl != '') {
            alert("Please Select Either Navigation Url Or Uploaded file");
            isValidUrl = false;
        }
        else {
            isValidUrl = true;
        }
        var title = $("#title").val();
        if (title == '') {
           // alert("Please Select Title");
            isValidTitle = false;
        }
        else {
            isValidTitle = true;
        }


        return isValidTitle && isValidUrl && isValidDate;
    }

    //get file size
    function GetFileSize(fileid) {
        try {

            var fileSize = 0;
            //for IE
            if ($.browser.msie) {

                //before making an object of ActiveXObject,
                //please make sure ActiveX is enabled in your IE browser
                var objFSO = new ActiveXObject("Scripting.FileSystemObject"); var filePath = $("#uploadFile")[0].value;
                var objFile = objFSO.getFile(filePath);
                var fileSize = objFile.size; //size in kb
                fileSize = fileSize / 1048576; //size in mb
            }
                //for FF, Safari, Opeara and Others
            else {
                fileSize = $("#uploadFile")[0].files[0].size //size in kb
                fileSize = fileSize / 1048576; //size in mb
                // alert('GetFileSize False');
            }
            // alert(fileSize);
            return fileSize;

        }
        catch (e) {
            alert(e);
            //alert("Error is : " + e);
        }
    }

    //get file path from client system
    function getNameFromPath(strFilepath) {

        var objRE = new RegExp(/([^\/\\]+)$/);
        var strName = objRE.exec(strFilepath);

        if (strName == null) {
            return null;
        }
        else {
            return strName[0];
        }
    }

    $(function () {
        $(".file").change(function () {

            var file = getNameFromPath($(this).val());

            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));

                switch (extension) {
                    case 'xls':
                    case 'XLS':
                    case 'xlsx':
                    case 'XLSX':
                    case 'doc':
                    case 'DOC':
                    case 'docx':
                    case 'DOCX':
                    case 'pdf':
                    case 'PDF':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                alert('GetFileSize');
                $(".files > span").text("You can upload only Word documents, Excel Sheets, Pdf files");
                return false;
            }
            else {

                var size = GetFileSize(file);
                if (size > 3) {
                    $(".files > span").text("You can upload file up to 3 MB");
                }
                else {
                    $(".files > span").text("");
                }
            }
        });


    });
</script>

@using (Html.BeginForm("FacultyNewsEdit", "NewOnlineRegistration", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    if (TempData["Error"] != null)
    {
        <div class="error">
            <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
        </div>
    }
    if (TempData["Success"] != null)
    {
        <div class="success">
            <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
        </div>
    }
    <div class="details_table news">

        @Html.HiddenFor(model => model.id, new { @Value = Model.id })
        @*@Html.HiddenFor(model => model.FacultyId, new { @Value = Model.FacultyId })*@
        @Html.HiddenFor(model => model.createdBy, new { @Value = Model.createdBy })
        @Html.HiddenFor(model => model.createdOn, new { @Value = Model.createdOn })

        <div class="editor-label">
            @Html.LabelFor(model => model.isNews)
        </div>
        <div class="editor-field">
            @*<input type="radio" name="IsNews" checked="checked" value="@Model.isNews" />Individual Faculty
                <input type="radio" name="IsNews" value="@Model.isNews" />All Faculty*@
            <label>@Html.RadioButtonFor(model => model.isNews, false, new { @class = "News" }) Individual Faculty</label>
            <label>@Html.RadioButtonFor(model => model.isNews, true, new { @class = "News" }) All Faculty</label>
            @Html.ValidationMessageFor(model => model.isNews)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.RegistartionNumber)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.RegistartionNumber, new { @id = "RegistartionNumber" })
            @*@Html.ValidationMessageFor(model => model.RegistartionNumber)*@
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.title)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.title)
            @Html.ValidationMessageFor(model => model.title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.navigateURL)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.navigateURL)
            @Html.ValidationMessageFor(model => model.navigateURL)
        </div>

        <div class="editor-label">
            <label>Upload File</label>
        </div>
        <div class="editor-field files">
            @Html.TextBoxFor(model => model.uploadFile, new { type = "file", @class = "file" })<span style="color: red;"></span><br />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.isActive)
        </div>
        <div class="editor-field">
            <label>@Html.RadioButtonFor(model => model.isActive, true) Active</label>
            <label>@Html.RadioButtonFor(model => model.isActive, false) Inactive</label>
            @Html.ValidationMessageFor(model => model.isActive)
        </div>

        <div class="editor-label last-row">
            &nbsp;
        </div>
        <div class="editor-field last-row">
            <p>
                @Html.ActionLink("Back", "FacultyNewsIndex", "NewOnlineRegistration", new { @class = "back_button" })
                <input type="submit" value="Add" onclick="return Validate();" />
            </p>
        </div>
    </div>
}
