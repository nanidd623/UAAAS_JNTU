@model UAAAS.Models.FacultyRegistration
@{
    ViewBag.Title = "FacultyEducationDetails";
    //string[] Degrees = new string[] {"B.E","B.Tech","M.E","M.Tech","MBA","MCA","BCA","Pharm.D","B.Pharmacy","M.Pharmacy","B.Com","M.Com","BSC","MSC","M.A","B.A","BZC","M.Phil","Ph.D"}
}

<h2>Faculty EducationDetails</h2>


<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.plugin.from_html.js")" type="text/javascript"></script>

<script type="text/javascript">

    $(document).ready(function () {

        var ugspecializations = @Html.Raw(Json.Encode(Model.ug_specializations.Distinct()));
        var pgspecializations = @Html.Raw(Json.Encode(Model.pg_specializations.Distinct()));
        var universitys = @Html.Raw(Json.Encode(Model.universitys.Distinct()));
        var places = @Html.Raw(Json.Encode(Model.places.Distinct()));
        var Courses = @Html.Raw(Json.Encode(Model.Courses.Distinct()));

        //get file size
        function GetFileSize(fileid, title) {
          
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject,
                    //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#" + title)[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }

                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            }
            else {
                return strName[0];
            }
        }

        //get file size
        function GetCertificateSize(fileid) {

            try {
                var fileSize = 0;
                //for IE

                if ($.browser.msie) {
                    //before making an object of ActiveXObject,
                    //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#" + fileid)[0].files[0].size //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }

                return fileSize;
            }
            catch (e) {

                //alert("Error is : " + e);
            }
        }

        //get pdf file size
        function GetIncomeTaxFileSize(fileid) {
          
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#IncomeTaxFileUpload")[0].files[0].size; //size in kb

                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        $(".All_Certificates").change(function () {
           
            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'pdf':
                    case 'PDF':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                alert("You can upload only  PDF files");
                //$(".IncomeTaxFileUploads > span").text("You can upload only  PDF files");
                $(this).val('');
                return false;
            } else {
                var size = GetFileSize(file, "All_Certificates");
                size = size / 1048576;
                if (size > 2) {
                    alert("Document should not exceed 2 MB in Size");
                    //$(".IncomeTaxFileUploads > span").text("Document should not exceed 1 MB in Size");
                    $(this).val('');
                } else {
                    $(".All_Certificates > span").text("");
                }
            }

        });

        $("#SSC_university, #UG_university, #PG_university, #MPhil_university, #PhD_university").on("keydown", function (event) {
           

            if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete("instance").menu.active) {
                
                event.preventDefault();
            }
            else if (event.keyCode == 188) {
             
                return false;
            }
        })
        .autocomplete({
            minLength: 0,
            source: function (request, response) {
                // delegate back to autocomplete, but extract the last term
                var results = $.ui.autocomplete.filter(universitys, extractLast(request.term));
                response(results);
            },
            focus: function () {
                // prevent value inserted on focus
                return false;
            },
            select: function (event, ui) {
                
                var CurrentUniversity = $(this).val();
                var terms = split(this.value);
                if (terms.length <= 1) {
                    // remove the current input
                    terms.pop();
                    // add the selected item
                    terms.push(ui.item.value);
                    // add placeholder to get the comma-and-space at the end
                    terms.push("");
                    this.value = terms.join("");
                    //this.value = terms;
                    $('#' + CurrentUniversity).focus();

                    return false;
                }
                else {
                    var last = terms.pop();
                    $(this).val(this.value.substr(0, this.value.length - last.length - 2)); // removes text from input
                    $(this).effect("highlight", {}, 1000);
                    $(this).addClass("red");
                    $("#warnings").html("<span style='color:red;'>Max people reached</span>");
                    return false;
                }
            }
        });

        $("#SSC_place, #UG_place, #PG_place, #MPhil_place, #PhD_place").on("keydown", function (event) {
          

            if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete("instance").menu.active) {
               
                event.preventDefault();
            }
            else if (event.keyCode == 188) {
               
                return false;
            }
        })
        .autocomplete({
            minLength: 0,
            source: function (request, response) {
                // delegate back to autocomplete, but extract the last term
                var results = $.ui.autocomplete.filter(places, extractLast(request.term));
                response(results);
            },
            focus: function () {
                // prevent value inserted on focus
                return false;
            },
            select: function (event, ui) {
                
                var CurrentPlace = $(this).val();
                var terms = split(this.value);
                if (terms.length <= 1) {
                    // remove the current input
                    terms.pop();
                    // add the selected item
                    terms.push(ui.item.value);
                    // add placeholder to get the comma-and-space at the end
                    terms.push("");
                    this.value = terms.join("");
                    //this.value = terms;
                    $('#' + CurrentPlace).focus();

                    return false;
                }
                else {
                    var last = terms.pop();
                    $(this).val(this.value.substr(0, this.value.length - last.length - 2)); // removes text from input
                    $(this).effect("highlight", {}, 1000);
                    $(this).addClass("red");
                    $("#warnings").html("<span style='color:red;'>Max people reached</span>");
                    return false;
                }
            }
        });

        $("#SSC_specialization, #UG_specialization").on("keydown", function (event) {
          

            if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete("instance").menu.active) {
               
                event.preventDefault();
            }
            else if (event.keyCode == 188) {
               
                return false;
            }
        })
   .autocomplete({
       minLength: 0,
       source: function (request, response) {
           // delegate back to autocomplete, but extract the last term
           var results = $.ui.autocomplete.filter(ugspecializations, extractLast(request.term));
           response(results);
       },
       focus: function () {
           // prevent value inserted on focus
           return false;
       },
       select: function (event, ui) {
         
           var CurrentPlace = $(this).val();
           var terms = split(this.value);
           if (terms.length <= 1) {
               // remove the current input
               terms.pop();
               // add the selected item
               terms.push(ui.item.value);
               // add placeholder to get the comma-and-space at the end
               terms.push("");
               this.value = terms.join("");
               //this.value = terms;
               $('#' + CurrentPlace).focus();

               return false;
           }
           else {
               var last = terms.pop();
               $(this).val(this.value.substr(0, this.value.length - last.length - 2)); // removes text from input
               $(this).effect("highlight", {}, 1000);
               $(this).addClass("red");
               $("#warnings").html("<span style='color:red;'>Max people reached</span>");
               return false;
           }
       }
   });

        $("#PG_specialization, #MPhil_specialization, #PhD_specialization").on("keydown", function (event) {
           

            if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete("instance").menu.active) {
               
                event.preventDefault();
            }
            else if (event.keyCode == 188) {
              
                return false;
            }
        })
  .autocomplete({
      minLength: 0,
      source: function (request, response) {
          // delegate back to autocomplete, but extract the last term
          var results = $.ui.autocomplete.filter(pgspecializations, extractLast(request.term));
          response(results);
      },
      focus: function () {
          // prevent value inserted on focus
          return false;
      },
      select: function (event, ui) {
        
          var CurrentPlace = $(this).val();
          var terms = split(this.value);
          if (terms.length <= 1) {
              // remove the current input
              terms.pop();
              // add the selected item
              terms.push(ui.item.value);
              // add placeholder to get the comma-and-space at the end
              terms.push("");
              this.value = terms.join("");
              //this.value = terms;
              $('#' + CurrentPlace).focus();

              return false;
          }
          else {
              var last = terms.pop();
              $(this).val(this.value.substr(0, this.value.length - last.length - 2)); // removes text from input
              $(this).effect("highlight", {}, 1000);
              $(this).addClass("red");
              $("#warnings").html("<span style='color:red;'>Max people reached</span>");
              return false;
          }
      }
  });

        $("#UG_studiedEducation, #PG_studiedEducation, #MPhil_studiedEducation, #PhD_studiedEducation").on("keydown", function (event) {
          

            if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete("instance").menu.active) {
              
                event.preventDefault();
            }
            else if (event.keyCode == 188) {
           
                return false;
            }
        })
 .autocomplete({
     minLength: 0,
     source: function (request, response) {
         // delegate back to autocomplete, but extract the last term
         var results = $.ui.autocomplete.filter(Courses, extractLast(request.term));
         response(results);
     },
     focus: function () {
         // prevent value inserted on focus
         return false;
     },
     select: function (event, ui) {
       
         var CurrentPlace = $(this).val();
         var terms = split(this.value);
         if (terms.length <= 1) {
             // remove the current input
             terms.pop();
             // add the selected item
             terms.push(ui.item.value);
             // add placeholder to get the comma-and-space at the end
             terms.push("");
             this.value = terms.join("");
             //this.value = terms;
             $('#' + CurrentPlace).focus();

             return false;
         }
         else {
             var last = terms.pop();
             $(this).val(this.value.substr(0, this.value.length - last.length - 2)); // removes text from input
             $(this).effect("highlight", {}, 1000);
             $(this).addClass("red");
             $("#warnings").html("<span style='color:red;'>Max people reached</span>");
             return false;
         }
     }
 });

        function split(val) {
         
            return val.split(/,\s*/);
        }
        function extractLast(term) {
        
            return split(term).pop();
        }

        //$("#btnsubmit").click(function(){

        //    var ssceducationId = $("#FacultyEducation_0__educationId").val();
        //    var ssccertificate = $("#FacultyEducation_0__facultyCertificate").val();
        //    if (ssceducationId !== '') {
        //        if (ssccertificate !== '') {
        //            // $("#FacultyEducation_0__facultyCertificate").removeClass('required');
        //        } else {
        //            $("." + ssceducationId + "-certificate").addClass('required');
        //        }
        //    }

        //    var beeducationId = $("#FacultyEducation_1__educationId").val();
        //    var becertificate = $("#FacultyEducation_1__facultyCertificate").val();

        //    if (beeducationId !== '') {
        //        if (becertificate !== '') {
        //            // $("#FacultyEducation_0__facultyCertificate").removeClass('required');
        //        } else {
        //            $("." + beeducationId + "-certificate").addClass('required');
        //        }
        //    }

        //    var meeducationId = $("#FacultyEducation_2__educationId").val();
        //    var mecertificate = $("#FacultyEducation_2__facultyCertificate").val();
        //    if (meeducationId !== '') {
        //        if (mecertificate !== '') {
        //            // $("#FacultyEducation_0__facultyCertificate").removeClass('required');
        //        } else {
        //            $("." + meeducationId + "-certificate").addClass('required');
        //        }
        //    }
        //    var phdeducationId = $("#FacultyEducation_4__educationId").val();
        //    var phdcertificate = $("#FacultyEducation_4__facultyCertificate").val();
        //    var mphildata = $("#MPhil_studiedEducation").val();
        //    if (mphildata !== '') {
        //        $("#MPhil_specialization").addClass('required');
        //        $("#MPhil_passedYear").addClass('required');
        //        $("#MPhil_percentage").addClass('required');
        //        $("#MPhil_division").addClass('required');
        //        $("#MPhil_university").addClass('required');
        //        $("#MPhil_place").addClass('required');
        //        if ($("#MPhil_facultyCertificate").val() == '') {
        //            $("#MPhil_certificate").addClass('required');
        //        }
        //        else {
        //            $("#MPhil_certificate").removeClass('required');
        //        }

        //    }
        //    else {
        //        $("#MPhil_specialization").removeClass('required');
        //        $("#MPhil_passedYear").removeClass('required');
        //        $("#MPhil_percentage").removeClass('required');
        //        $("#MPhil_division").removeClass('required');
        //        $("#MPhil_university").removeClass('required');
        //        $("#MPhil_place").removeClass('required');
        //        $("#MPhil_certificate").removeClass('required');
        //    }
        //    var phddata = $("#PhD_studiedEducation").val();
        //    if (phddata !== '') {
        //        $("#PhD_specialization").addClass('required');
        //        $("#PhD_passedYear").addClass('required');
        //        $("#PhD_percentage").addClass('required');
        //        $("#PhD_division").addClass('required');
        //        $("#PhD_university").addClass('required');
        //        $("#PhD_place").addClass('required');
        //        if ($("#PhD_facultyCertificate").val() == '') {
        //            $("#PhD_certificate").addClass('required');
        //        }
        //        else {
        //            $("#PhD_certificate").removeClass('required');
        //        }
        //    }
        //    else {
        //        $("#PhD_specialization").removeClass('required');
        //        $("#PhD_passedYear").removeClass('required');
        //        $("#PhD_percentage").removeClass('required');
        //        $("#PhD_division").removeClass('required');
        //        $("#PhD_university").removeClass('required');
        //        $("#PhD_place").removeClass('required');
        //        $("#PhD_certificate").removeClass('required');
        //    }
        //})


    });

    function isNumberKey(evt) {
      
        var len = $('.txtPercentage').val().length;
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57 || len > 6) && charCode != 46)
            return false;
        else if(len >=3)
        {
            return true;
        }
        else {

            var index = $('.txtPercentage').val().indexOf('.');

            if (index > 0 && charCode == 46) {
                return false;
            }
            if (index > 0) {
                var CharAfterdot = (len + 1) - index;
                if (CharAfterdot > 3 && charCode != 8) {
                    return false;
                }
            }

        }
        return true;
    }

    function checkSpcialChar(event) {
        
        var e = window.event || event
        var keyunicode = e.charCode || e.keyCode
        //Allow alphabetical keys, plus BACKSPACE and SPACE
        return ((keyunicode >= 65 && keyunicode <= 122) || (keyunicode >= 48 && keyunicode <= 57) || keyunicode == 8 || keyunicode == 32) ? true : false
        return;
        event.returnValue = true;
    }

    function isNumeric(evt) {
     
        var len = $('#GrossSalary').val().length;
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57 || len > 7) && charCode != 46)
            return false;
        else
            return true;
    }

</script>

<style>
        #rotate90 {
        -webkit-transform: rotate(90deg);
        -moz-transform: rotate(90deg);
        -o-transform: rotate(90deg);
        -ms-transform: rotate(90deg);
        transform: rotate(90deg);
    }
            .ui-autocomplete {
            height:260px;
            overflow: scroll;
        }
        /*.row{
            background-color : whitesmoke;
        }
        .alt_row{
            background-color : aliceblue;
        }*/

</style>

@if (TempData["SUCCESS"] != null)
{
    <div class="success">
        <p style="text-align: center;font-weight: bold"><strong>Success:</strong> @TempData["SUCCESS"].ToString()</p>
    </div>
}
@if (TempData["ERROR"] != null)
{
    <div class="error">
        <p style="text-align: center;font-weight: bold;"><strong>Error:</strong> @TempData["ERROR"].ToString()</p>
    </div>
}
<br />

@using (Html.BeginForm("FacultyEducationDetails", "NewOnlineRegistration", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div>
        <div>
            <table class="faculty_table" style="padding-left:259px;">
                <tr>
                    <td class="col1" style="width:20%;">
                        @Html.LabelFor(model => model.RegistrationNumber)
                    </td>
                    <td class="col2" style="width:30%;">
                        @Html.DisplayFor(model => model.RegistrationNumber)
                        @Html.HiddenFor(model => model.RegistrationNumber)
                    </td>
                    <td class="col3" style="width:20%;">
                        FacultyName
                    </td>
                    <td class="col4" style="width:30%;">
                        @Html.DisplayFor(model => model.FirstName)
                        @Html.DisplayFor(model => model.MiddleName)
                        @Html.DisplayFor(model => model.LastName)
                        @Html.HiddenFor(model => model.FirstName)
                        @Html.HiddenFor(model => model.MiddleName)
                        @Html.HiddenFor(model => model.LastName)
                    </td>
                </tr>
            </table>
        </div>
        <br /><br />
        <table class="faculty_table education" id="tblQualification" style="border: solid 1px #ccc;">
            <thead>
                <tr>
                    <td class="row" colspan="10">
                        <b>Educational Qualifications</b>
                    </td>
                </tr>
                <tr>
                    <td class="row" style="text-align: center; width: 100px;"></td>
                    <td class="row" style="text-align: center; width: 125px;">HallTicket /Roll Number</td>
                    <td class="row" style="text-align: center; width: 125px;">Course Studied</td>
                    <td class="row" style="text-align: center; width: 125px;">Branch / Specialization</td>
                    <td class="row" style="text-align: center; width: 100px;">Year of Passing (YYYY)</td>
                    <td class="row" style="text-align: center; width: 80px;">
                        % of
                        <br />
                        Marks / CGPA
                    </td>
                    <td class="row" style="text-align: center; width: 80px;">Division</td>
                    <td class="row" style="text-align: center;">Board/University</td>
                    <td class="row" style="text-align: center; width: 180px;">Place</td>
                    <td class="row" style="text-align: center; width: 200px !important;">
                        Scanned Certificate
                        &nbsp;&nbsp;<img id="CeritificateMessage" src="../Content/images/question-mark-1750942_1280.png" />
                    </td>
                </tr>
            </thead>
            <tbody>
                @for (int i = 1; i < 7; i++)
                {
                    var style = "alt_row";
                    var year = "yr_" + i;
                    var divs = "division_" + i;

                    //SSC Details
                    if (i == 1)
                    {
                        if (Model.isView == true)
                        {
                            <tr>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <span>10th / Equivalent</span>
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.SSC_HallticketNo, new { })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.HiddenFor(model => model.SSC_studiedEducation, new {@Value = "SSC"})
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.HiddenFor(model => model.SSC_specialization, new {@Value = "SSC"})
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.SSC_passedYear)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.SSC_percentage)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.SSC_division)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.SSC_university)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.SSC_place)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: middle;" rowspan="4">
                                    <div>
                                        <span><b style="color:red;">NOTE :</b> Faculty has to upload original scanned copies of all UG,PG,PhD certificates along with marks memos as single PDF and upload here.</span><br /><br />
                                        <img src="~/Content/images/New Hand Point.gif" class="hand" id="rotate90" style="width:50px;">
                                    </div>
                                </td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <span>10th / Equivalent</span>
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.SSC_HallticketNo, new { style = "width: 95%;text-transform:uppercase", @maxlength = "50", @class = "required", @placeholder = "SSC HallTicketNo" })
                                    @*@Html.ValidationMessageFor(model => model.SSC_HallticketNo)*@
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.HiddenFor(model => model.SSC_studiedEducation, new { @Value = "SSC" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.HiddenFor(model => model.SSC_specialization, new { @Value = "SSC" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.SSC_passedYear,
                                new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                "-- Select --", new { id = year, style = "width: 100%;", @class = "required" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.SSC_percentage, new { style = "width: 85%; text-align: center;", @class = "txtPercentage required", @onkeypress = "return isNumberKey(event)", @placeholder = "% of Marks / CGPA" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.SSC_division,
                                new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                "-- Select --", new { id = divs, style = "width: 100%;", @class = "required" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.SSC_university, new { style = "width: 95%", @maxlength = "50", @class = "required", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.SSC_place, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: middle;" rowspan="4">
                                    <div>
                                        <span><b style="color:red;">NOTE :</b> Faculty has to upload original scanned copies of all UG,PG,PhD certificates along with marks memos as single PDF and upload here.</span><br /><br />
                                        <img src="~/Content/images/New Hand Point.gif" class="hand" id="rotate90" style="width:50px;">
                                    </div>
                                </td>
                            </tr>
                        }

                    }
                    //UG Details
                    else if (i == 2)
                    {
                        if (Model.isView == true)
                        {
                            <tr>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <span>UG</span>
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.UG_HallticketNo, new { })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.UG_studiedEducation)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.UG_specialization)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.UG_passedYear)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.UG_percentage)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.UG_division)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.UG_university)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.UG_place)
                                </td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <span>UG</span>
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.UG_HallticketNo, new { style = "width: 95%;text-transform:uppercase", @maxlength = "50", @class = "required", @placeholder = "UG HallTicketNo" })
                                    @*@Html.ValidationMessageFor(model => model.UG_HallticketNo)*@
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.UG_studiedEducation, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.UG_specialization, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.UG_passedYear,
                                new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                "-- Select --", new { id = year, style = "width: 100%;", @class = "required" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.UG_percentage, new { style = "width: 85%; text-align: center;", @class = "txtPercentage required", @onkeypress = "return isNumberKey(event)", @placeholder = "% of Marks / CGPA" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.UG_division,
                                new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                "-- Select --", new { id = divs, style = "width: 100%;", @class = "required" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.UG_university, new { style = "width: 95%", @maxlength = "50", @class = "required", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.UG_place, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>

                                </td>

                            </tr>
                        }

                    }
                    //PG Details
                    else if (i == 3)
                    {
                        if (Model.isView == true)
                        {
                            <tr>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <span>PG</span>
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PG_HallticketNo, new { })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PG_studiedEducation)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PG_specialization)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PG_passedYear)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PG_percentage)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PG_division)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PG_university)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PG_place)
                                </td>

                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <span>PG</span>
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.PG_HallticketNo, new { style = "width: 95%;text-transform:uppercase", @maxlength = "50", @class = "required", @placeholder = "PG HallTicketNo" })
                                    @*@Html.ValidationMessageFor(model => model.PG_HallticketNo)*@
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.PG_studiedEducation, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.PG_specialization, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.PG_passedYear,
                                new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                "-- Select --", new { id = year, style = "width: 100%;", @class = "required" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.PG_percentage, new { style = "width: 85%; text-align: center;", @class = "txtPercentage required", @onkeypress = "return isNumberKey(event)", @placeholder = "% of Marks / CGPA" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.PG_division,
                                new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                "-- Select --", new { id = divs, style = "width: 100%;", @class = "required" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.PG_university, new { style = "width: 95%", @maxlength = "50", @class = "required", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.PG_place, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>

                                </td>

                            </tr>
                        }

                    }
                    //MPhil Details
                    else if (i == 4)
                    {
                        if (Model.isView == true)
                        {
                            <tr>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <span>M.Phil / Other PG Degree</span>
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.MPhil_HallticketNo, new { })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.MPhil_studiedEducation)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.MPhil_specialization)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.MPhil_passedYear)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.MPhil_percentage)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.MPhil_division)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.MPhil_university)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.MPhil_place)
                                </td>

                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <span>M.Phil / Other PG Degree</span>
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.MPhil_HallticketNo, new { style = "width: 95%;text-transform:uppercase", @maxlength = "50", @class = "", @placeholder = "MPhil HallTicketNo" })
                                    @Html.ValidationMessageFor(model => model.MPhil_HallticketNo)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.MPhil_studiedEducation, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.MPhil_specialization, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.MPhil_passedYear,
                                new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                "-- Select --", new { id = year, style = "width: 100%;", @class = "" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.MPhil_percentage, new { style = "width: 85%; text-align: center;", @class = "txtPercentage", @onkeypress = "return isNumberKey(event)", @placeholder = "% of Marks / CGPA" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.MPhil_division,
                                new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                "-- Select --", new { id = divs, style = "width: 100%;", @class = "" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.MPhil_university, new { style = "width: 95%", @maxlength = "50", @class = "", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.MPhil_place, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>

                                </td>

                            </tr>
                        }

                    }
                    //Ph.D Details
                    else if (i == 5)
                    {
                        if (Model.isView == true)
                        {
                            <tr>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <span>Ph.D</span>
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PhD_HallticketNo, new { })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PhD_studiedEducation)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PhD_specialization)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PhD_passedYear)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PhD_percentage)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PhD_division)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PhD_university)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PhD_place)
                                </td>
                                <td class="@style certificates" style="text-align: center; vertical-align: middle;" rowspan="2">
                                    @if (Model.faculty_AllCertificates != null)
                                    {
                                        <a href="~/Content/Upload/Faculty/Certificates/CertificatesPDF/@Model.faculty_AllCertificates" target="_blank">
                                            <span style="color: red;"><b>View</b></span>
                                        </a>
                                        @Html.HiddenFor(model => model.faculty_AllCertificates)
                                    }
                                </td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <span>Ph.D</span>
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.PhD_HallticketNo, new { style = "width: 95%;text-transform:uppercase", @maxlength = "50", @class = "", @placeholder = "PhD HallTicketNo" })
                                    @Html.ValidationMessageFor(model => model.PhD_HallticketNo)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.PhD_studiedEducation, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.PhD_specialization, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.PhD_passedYear,
                                new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                "-- Select --", new { id = year, style = "width: 100%;", @class = "" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.PhD_percentage, new { style = "width: 85%; text-align: center;", @class = "txtPercentage", @onkeypress = "return isNumberKey(event)", @placeholder = "% of Marks / CGPA" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.PhD_division,
                                new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                "-- Select --", new { id = divs, style = "width: 100%;", @class = "" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.PhD_university, new { style = "width: 95%", @maxlength = "50", @class = "", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    <div class="slider">
                                        @Html.TextBoxFor(model => model.PhD_place, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                    </div>

                                </td>
                                <td class="@style certificates" style="text-align: center; vertical-align: middle;" rowspan="2">
                                    @if (Model.faculty_AllCertificates != null)
                                    {
                                        <a href="~/Content/Upload/Faculty/Certificates/CertificatesPDF/@Model.faculty_AllCertificates" target="_blank">
                                            <span style="color: red;"><b>View</b></span>
                                        </a>
                                        @*@Html.TextBoxFor(model => model.All_Certificates, new { type = "file", @style = "width: 180px;", @class = "All_Certificates", @id = "All_Certificates" })*@
                                        @Html.HiddenFor(model => model.faculty_AllCertificates)
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.All_Certificates, new { type = "file", @style = "width: 180px;", @class = "All_Certificates required", @id = "All_Certificates" })
                                    }

                                </td>
                            </tr>
                        }

                    }
                    //All Certificates Details
                    else if (i == 6)
                    {
                        <tr>
                            <td class="@style" style="text-align: center; vertical-align: top;">
                                <span>Others</span>
                            </td>
                            <td class="@style" style="text-align: center; vertical-align: top;" colspan="8"></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        @if (Model.isView == false)
        {
            <div style="float:right;">
                <input type="submit" value="Submit" id="btnsubmit" />
            </div>
        }

        <br /><br />
    </div>


}



