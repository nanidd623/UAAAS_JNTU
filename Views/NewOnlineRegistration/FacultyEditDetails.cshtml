@using System.Collections.Concurrent
@using System.Web.Configuration
@model UAAAS.Models.EditFacultyRegistration
@{
    ViewBag.Title = "FacultyEditDetails";

}

<style type="text/css">
    .ui-autocomplete {
        overflow: scroll;
        height: 260px;
    }
</style>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.plugin.from_html.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {

        var ugspecializations = @Html.Raw(Json.Encode(Model.ug_specializations.Distinct()));
        var pgspecializations = @Html.Raw(Json.Encode(Model.pg_specializations.Distinct()));
        var universitys = @Html.Raw(Json.Encode(Model.universitys.Distinct()));
        var places = @Html.Raw(Json.Encode(Model.places.Distinct()));
        var Courses = @Html.Raw(Json.Encode(Model.Courses.Distinct()));

        $('.clsPanNumber').attr("style", "text-transform:uppercase");

        $('.clsPanNumber').keyup(function (event) {

            $(this).val($(this).val().replace(/([a-z])/, function (s) { return s.toUpperCase() }));

        });

        $('.clsPanNumber').blur(function (event) {

            $(this).val(($(this).val()).toUpperCase());

        });

        $("#Mobile").blur(function () {
            var MobileNo = $(this).val();
            if (MobileNo != "") {
                $.ajax({
                    url: '/NewOnlineRegistration/EditCheckMobileNumber',
                    dataType: 'json',
                    type: 'post',
                    contentType: 'application/json',
                    data: JSON.stringify({ "MobileNo": MobileNo }),
                    success: function (data, textStatus, jQxhr) {

                        console.log(data);
                        if (data.MobileStatus !== false) {
                            $("#Mobile > span").text("Your Mobile Number Already Exist");
                            $("#Mobile > span").show();
                            $("#Mobile > span").css('color', 'red');
                        } else {
                            $("#Mobile span").text(" ");
                            $("#Mobile span").hide();
                            // $("#Mobile span").css('color', 'red');
                        }
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        console.log(errorThrown);
                    }
                });
            } else {
                $("#Mobile span").text("Please Enter Mobile Number");
            }
        });

        $("#PANNumber").blur(function () {
            var PANNumber = $(this).val();
            var RegistrationNumber = $("#RegistrationNumber").val();
            if (PANNumber != "" && RegistrationNumber != "") {
                $.ajax({
                    url: '/OnlineRegistration/EditCheckPanNumber',
                    dataType: 'json',
                    type: 'post',
                    contentType: 'application/json',
                    data: JSON.stringify({ "EditPANNumber": PANNumber, "RegistrationNumber": RegistrationNumber }),
                    success: function (data, textStatus, jQxhr) {

                        console.log(data);
                        if (data != true) {

                            $("#PANNumber").val("");
                            alert(data);
                            $("#PANNumber").focus();
                        }

                    }

                });
            }
        });

        $("#PANNumber").blur(function () {

            if ($('#PANNumber').val() != "") {
                $.ajax({
                    url: '/OnlineRegistration/GetDetailsBasedonPANNumber',
                    dataType: 'json',
                    type: 'post',
                    contentType: 'application/json',
                    data: JSON.stringify({ "PANNo": $('#PANNumber').val() }),
                    success: function (data, textStatus, jQxhr) {
                        $("label[for='FirstName']").text("");
                        $("input[name='FirstName']").val("");

                        $("label[for='MiddleName']").text("");
                        $("input[name='MiddleName']").val("");

                        $("label[for='LastName']").text("");
                        $("input[name='LastName']").val("");


                        console.log(data);
                        if (data.Details != "") {
                            var details = data.Details;
                            var Alldata = details.split(",");
                            // $("#FirstName").val(Alldata[3]);
                            $("label[for='FirstName']").text(Alldata[2]);
                            $("input[name='FirstName']").val(Alldata[2]);

                            $("label[for='MiddleName']").text(Alldata[4]);
                            $("input[name='MiddleName']").val(Alldata[4]);

                            $("label[for='LastName']").text(Alldata[3]);
                            $("input[name='LastName']").val(Alldata[3]);

                            if (Alldata[2] == "" || Alldata[2] == null) {
                                $("label[for='FirstName']").text(Alldata[3]);
                                $("input[name='FirstName']").val(Alldata[3]);
                            }
                            if (Alldata[3] == "" || Alldata[3] == null) {
                                $("label[for='LastName']").text(Alldata[2]);
                                $("input[name='LastName']").val(Alldata[2]);
                            }
                        }
                    },

                    error: function (jqXhr, textStatus, errorThrown) {
                        console.log(errorThrown);
                    }

                });
            } else {
                $("label[for='FirstName']").text("");
                $("input[name='FirstName']").val("");

                $("label[for='MiddleName']").text("");
                $("input[name='MiddleName']").val("");

                $("label[for='LastName']").text("");
                $("input[name='LastName']").val("");
                // alert("Please Enter PAN Number");
            }

        });

        if ($('#department').val() == 60) {
            $("#OtherDepartment").addClass('required');
        } else {
            $("#OtherDepartment").removeClass('required');
        }

        if ($('#designation').val() == 4) {
            $("#OtherDesignation").addClass('required');
        } else {
            $("#OtherDesignation").removeClass('required');
        }

        if ($("#PGSpecialization option:selected").val() == '154') {
            $("#OthersPGSpecilizationName").show();
        } else {
            $("#OthersPGSpecilizationName").hide();
        }

        $('#department').change(function () {

            //Others id=62
            if ($('#department').val() == 60) {
                $('#divDept1').show();
                $("#OtherDepartment").addClass('required');
            } else {
                $('#divDept').hide();
                $('#divDept1').hide();
                $("#OtherDepartment").removeClass('required');
            }
        });

        $('#designation').change(function () {

            //Other id=4
            if ($('#designation').val() == 4) {
                $('#divDesig1').show();
                $("#OtherDesignation").addClass('required');
            } else {
                $('#divDesig').hide();
                $('#divDesig1').hide();
                $("#OtherDesignation").removeClass('required');
            }
        });

        $('#PGSpecialization').change(function () {
            if ($("#PGSpecialization option:selected").val() == '154') {
                $("#OthersPGSpecilizationName").addClass('required');
                $("#OthersPGSpecilizationName").show();
            } else {
                $("#OthersPGSpecilizationName").hide();
                $("#OthersPGSpecilizationName").removeClass('required');
            }
        });

        $(".IncomeTaxFileUpload").change(function () {

            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'pdf':
                    case 'PDF':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                alert("You can upload only  PDF files");
                //$(".IncomeTaxFileUploads > span").text("You can upload only  PDF files");
                $(this).val('');
                return false;
            } else {
                var size = GetFileSize(file, "IncomeTaxFileUpload");
                size = size / 1048576;
                if (size > 1) {
                    alert("Document should not exceed 1 MB in Size");
                    //$(".IncomeTaxFileUploads > span").text("Document should not exceed 1 MB in Size");
                    $(this).val('');
                } else {
                    $(".IncomeTaxFileUploads > span").text("");
                }
            }

        });

        $(".All_Certificates").change(function () {

            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'pdf':
                    case 'PDF':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                alert("You can upload only  PDF files");
                //$(".IncomeTaxFileUploads > span").text("You can upload only  PDF files");
                $(this).val('');
                return false;
            } else {
                var size = GetFileSize(file, "All_Certificates");
                size = size / 1048576;
                if (size > 1) {
                    alert("Document should not exceed 1 MB in Size");
                    //$(".IncomeTaxFileUploads > span").text("Document should not exceed 1 MB in Size");
                    $(this).val('');
                } else {
                    $(".All_Certificates > span").text("");
                }
            }

        });

        $(".SelectionCommitteeProceedingsDocument").change(function () {

            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {

                    case 'pdf':
                    case 'PDF':

                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                alert("You can upload only  PDF files");
                //$(".SelectionCommitteeProceedingsDocument > span").text("You can upload only  PDF files");
                $(this).val('');
                return false;
            } else {
                var size = GetFileSize(file, "SelectionCommitteeProceedingsDocument");
                size = size / 1048576;
                if (size > 1) {
                    alert("Document should not exceed 1 MB in Size");
                    //$(".SelectionCommitteeProceedingsDocument > span").text("Document should not exceed 1 MB in Size");
                    $(this).val('');
                } else {

                    $(".SelectionCommitteeProceedingsDocument > span").text("");
                }
            }

        });

        $(".PhdUndertakingfile").change(function () {

            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {

                    case 'pdf':
                    case 'PDF':

                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                $(".PhdUndertakingfiles > span").text("You can upload only  PDF files");
                $(this).val('');
                return false;
            } else {
                var size = GetFileSize(file, "PhdUndertakingfile");
                size = size / 1048576;
                if (size > 1) {
                    $(".PhdUndertakingfiles > span").text("Document should not exceed 1 MB in Size");
                    $(this).val('');
                } else {

                    $(".PhdUndertakingfiles > span").text("");
                }
            }

        });

        $("#PhotoPreview").css("display", "none");

        $(".Photo").change(function (e) {

            if (this.disabled) return alert('File upload not supported!');
            var F = this.files;
            if (F && F[0]) for (var i = 0; i < F.length; i++) readPhoto(F[i]);
        });

        function readPhoto(file) {

            var reader = new FileReader();
            var image = new Image();
            var showImage = 1;

            reader.readAsDataURL(file);
            reader.onload = function (_file) {
                image.src = _file.target.result; // url.createObjectURL(file);
                image.onload = function () {

                    var w = this.width,
                        h = this.height,
                        t = file.type, // ext only: // file.type.split('/')[1],
                        n = file.name,
                        s = ~~(file.size / 1024) + 'KB';

                    if (w > 200 || w < 150 || h < 150 || h > 230 || s > 50) {
                        alert('Photo should be Minimum - 150x150 pixels, Maximum - 200x230 pixels and less than 50 KB size');
                        showImage = 0;
                        $("#PhotoPreview").css("display", "none");
                        $("#PhotoPreview").css("background-image", "none");
                        var filephoto = $('.Photo');
                        file.replaceWith(filephoto.val('').clone(true));
                        return false;
                    }

                    if (t != 'image/jpeg') {
                        alert("Photo should be in JPEG/JPG format only");
                        showImage = 0;
                        $("#PhotoPreview").css("display", "none");
                        $("#PhotoPreview").css("background-image", "none");
                        var filephoto = $('.Photo');
                        file.replaceWith(filephoto.val('').clone(true));
                        return false;
                    }
                };
                image.onerror = function () {

                    // alert('Invalid file type: ' + file.type);
                    alert("Photo should be in JPEG/JPG format only");
                    showImage = 0;
                    $("#PhotoPreview").css("display", "none");
                    $("#PhotoPreview").css("background-image", "none");
                    var filephoto = $('.Photo');
                    file.replaceWith(filephoto.val('').clone(true));
                    return false;
                };
            };
            reader.onloadend = function () { // set image data as background of div

                if (showImage == 1) {
                    $("#PhotoPreview").css("display", "block");
                    $("#PhotoPreview").css("background-image", "url(" + this.result + ")");
                } else {
                    $("#PhotoPreview").css("display", "none");
                    $("#PhotoPreview").css("background-image", "none");
                }
            }
        }

        $(".panfile").change(function (e) {

            if (this.disabled) return alert('File upload not supported!');
            var F = this.files;
            if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '300x250', '100', 'PAN Card Document');

        });
        $(".aadhaarfile").change(function (e) {

            if (this.disabled) return alert('File upload not supported!');
            var F = this.files;
            if (F && F[0])
                for (var i = 0; i < F.length; i++)
                    readDocument(F[i], '200x200', '100', 'Aadhaar Card Document');

        });

        $("#SSC_certificate").change(function (e) {
            debugger;
            if (this.disabled) return alert('File upload not supported!');
            var F = this.files;
            if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', '10th Or Equivalent Document');

        });
        $("#UG_certificate").change(function (e) {

            if (this.disabled) return alert('File upload not supported!');
            var F = this.files;
            if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'UG Document');

        });
        $("#PG_certificate").change(function (e) {

            if (this.disabled) return alert('File upload not supported!');
            var F = this.files;
            if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'PG Document');

        });
        $("#NET_certificate").change(function (e) {

            if (this.disabled) return alert('File upload not supported!');
            var F = this.files;
            if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'NET Document');

        });
        $("#MPhil_certificate").change(function (e) {

            if (this.disabled) return alert('File upload not supported!');
            var F = this.files;
            if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'M.Phil Document');

        });
        $("#PhD_certificate").change(function (e) {

            if (this.disabled) return alert('File upload not supported!');
            var F = this.files;
            if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'Ph.D Document');

        });

        $("#PhotoMessage").hover(function () {

            $("#PhotoMessage").attr("title", "Latest self colour photo with Minimum - 150x150 pixels, Maximum - 200x230 pixels and less than 50 KB size");
        });

        $("#DOBMessage").hover(function () {

            $("#DOBMessage").attr("title", "As Per SSC Certificate");
        });

        $("#AadhaarMessage").hover(function () {

            $("#AadhaarMessage").attr("title", "Minimum 200x200 pixels and less than 100 KB size");
        });

        $("#PANMessage").hover(function () {

            $("#PANMessage").attr("title", "Minimum 300x250 pixels and less than 100 KB size");
        });

        $("#Form16Message").hover(function () {

            $("#Form16Message").attr("title", "PDF should be less than 1MB size");
        });

        $("#SCMMessage").hover(function () {

            $("#SCMMessage").attr("title", "Enter all appointment proceedings in a single PDF File.The PDF should be less than 1MB size");
        });

        $("#CeritificateMessage").hover(function () {

            $("#CeritificateMessage").attr("title", "Minimum 600x800 pixels and less than 100 KB size");
        });

        $("#PhotoPreview").hover(
          function () {

              $(this).animate({ width: "250px", height: "250px" }, "500");
          },
            function () {

                $(this).animate({ width: "50px", height: "50px" }, "500");
            }
        );

        $("#PANPreview").hover(
          function () {

              $(this).animate({ width: "250px", height: "250px" }, "500");
          },
            function () {

                $(this).animate({ width: "80px", height: "50px" }, "500");
            }
        );
        $("#AadhaarPreview").hover(
         function () {

             $(this).animate({ width: "250px", height: "250px" }, "500");
         },
           function () {

               $(this).animate({ width: "48px", height: "50px" }, "500");
           }
       );

        $("#SCMPreview").hover(
       function () {

           $(this).animate({ width: "250px", height: "250px" }, "500");
       },
         function () {

             $(this).animate({ width: "48px", height: "50px" }, "500");
         }
     );
        $('#btnUpdate').click(function (e) {

            var collegeId = $("#CollegeName option:selected").val();
            if (collegeId == "") {
                $("#CollegeName").addClass("required");
            }

            var departmentId = $("#department option:selected").val();
            if (departmentId == "") {
                $("#department").addClass("required");
            }

            if ($('#AadhaarNumber').val() == '') {
                $('.aadhaarfile').addClass("required");
                $('#AadhaarNumber').addClass("required");
            } else {
            }


            if ($("#TotalExperience").val() == '') {
                $("#TotalExperience").addClass("required");
            }

            if ($("#EditMobile").val() == '') {
                $("#EditMobile").addClass("required");
            }

            var pandocument = $("#facultyPANCardDocument").val();
            if (pandocument != '') {
                $("input[name=PANCardDocument]").attr("required", false);
            } else {
                $("input[name=PANCardDocument]").addClass("required");
                $("input[name=PANCardDocument]").attr("required", true);
            }

            var scmdocument = $("#SelectionCommitteeProcedings").val();

            var photodata = $("#facultyPhoto").val();
            if (photodata != '') {
                $("input[name=Photo]").attr("required", false);
            } else {
                $("input[name=Photo]").addClass("required");
                $("input[name=Photo]").attr("required", true);
            }

            //var incomtaxdocument = $("#IncomeTaxFileview").val();
            //if (incomtaxdocument != '') {
            //    $("input[name=IncomeTaxFileUpload]").attr("required", false);
            //} else {
            //    $("input[name=IncomeTaxFileUpload]").addClass("required");
            //    $("input[name=IncomeTaxFileUpload]").attr("required", true);
            //}


            var ssceducationId = $("#FacultyEducation_0__educationId").val();
            var ssccertificate = $("#FacultyEducation_0__facultyCertificate").val();
            if (ssceducationId !== '') {
                if (ssccertificate !== '') {
                    // $("#FacultyEducation_0__facultyCertificate").removeClass('required');
                } else {
                    $("." + ssceducationId + "-certificate").addClass('required');
                }
            }

            var beeducationId = $("#FacultyEducation_1__educationId").val();
            var becertificate = $("#FacultyEducation_1__facultyCertificate").val();

            if (beeducationId !== '') {
                if (becertificate !== '') {
                    // $("#FacultyEducation_0__facultyCertificate").removeClass('required');
                } else {
                    $("." + beeducationId + "-certificate").addClass('required');
                }
            }

            var meeducationId = $("#FacultyEducation_2__educationId").val();
            var mecertificate = $("#FacultyEducation_2__facultyCertificate").val();
            if (meeducationId !== '') {
                if (mecertificate !== '') {
                    // $("#FacultyEducation_0__facultyCertificate").removeClass('required');
                } else {
                    $("." + meeducationId + "-certificate").addClass('required');
                }
            }
            var phdeducationId = $("#FacultyEducation_4__educationId").val();
            var phdcertificate = $("#FacultyEducation_4__facultyCertificate").val();
            var mphildata = $("#MPhil_studiedEducation").val();
            if (mphildata !== '') {
                $("#MPhil_specialization").addClass('required');
                $("#MPhil_passedYear").addClass('required');
                $("#MPhil_percentage").addClass('required');
                $("#MPhil_division").addClass('required');
                $("#MPhil_university").addClass('required');
                $("#MPhil_place").addClass('required');
                if ($("#MPhil_facultyCertificate").val() == '') {
                    $("#MPhil_certificate").addClass('required');
                }
                else {
                    $("#MPhil_certificate").removeClass('required');
                }

            }
            else {
                $("#MPhil_specialization").removeClass('required');
                $("#MPhil_passedYear").removeClass('required');
                $("#MPhil_percentage").removeClass('required');
                $("#MPhil_division").removeClass('required');
                $("#MPhil_university").removeClass('required');
                $("#MPhil_place").removeClass('required');
                $("#MPhil_certificate").removeClass('required');
            }
            var phddata = $("#PhD_studiedEducation").val();
            if (phddata !== '') {
                $("#PhD_specialization").addClass('required');
                $("#PhD_passedYear").addClass('required');
                $("#PhD_percentage").addClass('required');
                $("#PhD_division").addClass('required');
                $("#PhD_university").addClass('required');
                $("#PhD_place").addClass('required');
                if ($("#PhD_facultyCertificate").val() == '') {
                    $("#PhD_certificate").addClass('required');
                }
                else {
                    $("#PhD_certificate").removeClass('required');
                }
            }
            else {
                $("#PhD_specialization").removeClass('required');
                $("#PhD_passedYear").removeClass('required');
                $("#PhD_percentage").removeClass('required');
                $("#PhD_division").removeClass('required');
                $("#PhD_university").removeClass('required');
                $("#PhD_place").removeClass('required');
                $("#PhD_certificate").removeClass('required');
            }
        });

        $("#SSC_university, #UG_university, #PG_university, #MPhil_university, #PhD_university,#NET_university").on("keydown", function (event) {

            if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete("instance").menu.active) {
                event.preventDefault();
            }
            else if (event.keyCode == 188) {
                return false;
            }
        }).autocomplete({
            minLength: 0,
            source: function (request, response) {
                // delegate back to autocomplete, but extract the last term
                var results = $.ui.autocomplete.filter(universitys, extractLast(request.term));
                response(results);
            },
            scroll : true,
            focus: function () {
                // prevent value inserted on focus
                return false;
            },
            select: function (event, ui) {
                var CurrentUniversity = $(this).val();
                var terms = split(this.value);
                if (terms.length <= 1) {
                    // remove the current input
                    terms.pop();
                    // add the selected item
                    terms.push(ui.item.value);
                    // add placeholder to get the comma-and-space at the end
                    terms.push("");
                    this.value = terms.join("");
                    //this.value = terms;
                    $('#' + CurrentUniversity).focus();

                    return false;
                }
                else {
                    var last = terms.pop();
                    $(this).val(this.value.substr(0, this.value.length - last.length - 2)); // removes text from input
                    $(this).effect("highlight", {}, 1000);
                    $(this).addClass("red");
                    $("#warnings").html("<span style='color:red;'>Max people reached</span>");
                    return false;
                }
            }
        });

        $("#SSC_place, #UG_place, #PG_place, #MPhil_place, #PhD_place,#NET_place").on("keydown", function (event) {
            if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete("instance").menu.active) {
                event.preventDefault();
            }
            else if (event.keyCode == 188) {
                return false;
            }
        }).autocomplete({
            minLength: 0,
            source: function (request, response) {
                // delegate back to autocomplete, but extract the last term
                var results = $.ui.autocomplete.filter(places, extractLast(request.term));
                response(results);
            },
            focus: function () {
                // prevent value inserted on focus
                return false;
            },
            select: function (event, ui) {

                var CurrentPlace = $(this).val();
                var terms = split(this.value);
                if (terms.length <= 1) {
                    // remove the current input
                    terms.pop();
                    // add the selected item
                    terms.push(ui.item.value);
                    // add placeholder to get the comma-and-space at the end
                    terms.push("");
                    this.value = terms.join("");
                    //this.value = terms;
                    $('#' + CurrentPlace).focus();

                    return false;
                }
                else {
                    var last = terms.pop();
                    $(this).val(this.value.substr(0, this.value.length - last.length - 2)); // removes text from input
                    $(this).effect("highlight", {}, 1000);
                    $(this).addClass("red");
                    $("#warnings").html("<span style='color:red;'>Max people reached</span>");
                    return false;
                }
            }
        });

        $("#SSC_specialization, #UG_specialization").on("keydown", function (event) {
            if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete("instance").menu.active) {

                event.preventDefault();
            }
            else if (event.keyCode == 188) {
                return false;
            }
        }).autocomplete({
            minLength: 0,
            source: function (request, response) {
                // delegate back to autocomplete, but extract the last term
                var results = $.ui.autocomplete.filter(ugspecializations, extractLast(request.term));
                response(results);
            },
            focus: function () {
                // prevent value inserted on focus
                return false;
            },
            select: function (event, ui) {

                var CurrentPlace = $(this).val();
                var terms = split(this.value);
                if (terms.length <= 1) {
                    // remove the current input
                    terms.pop();
                    // add the selected item
                    terms.push(ui.item.value);
                    // add placeholder to get the comma-and-space at the end
                    terms.push("");
                    this.value = terms.join("");
                    //this.value = terms;
                    $('#' + CurrentPlace).focus();
                    return false;
                }
                else {
                    var last = terms.pop();
                    $(this).val(this.value.substr(0, this.value.length - last.length - 2)); // removes text from input
                    $(this).effect("highlight", {}, 1000);
                    $(this).addClass("red");
                    $("#warnings").html("<span style='color:red;'>Max people reached</span>");
                    return false;
                }
            }
        });

        $("#PG_specialization, #MPhil_specialization, #PhD_specialization,#NET_specialization").on("keydown", function (event) {
            if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete("instance").menu.active) {

                event.preventDefault();
            }
            else if (event.keyCode == 188) {
                return false;
            }
        }).autocomplete({
            minLength: 0,
            source: function (request, response) {
                // delegate back to autocomplete, but extract the last term
                var results = $.ui.autocomplete.filter(pgspecializations, extractLast(request.term));
                response(results);
            },
            focus: function () {
                // prevent value inserted on focus
                return false;
            },
            select: function (event, ui) {
                var CurrentPlace = $(this).val();
                var terms = split(this.value);
                if (terms.length <= 1) {
                    // remove the current input
                    terms.pop();
                    // add the selected item
                    terms.push(ui.item.value);
                    // add placeholder to get the comma-and-space at the end
                    terms.push("");
                    this.value = terms.join("");
                    //this.value = terms;
                    $('#' + CurrentPlace).focus();

                    return false;
                }
                else {
                    var last = terms.pop();
                    $(this).val(this.value.substr(0, this.value.length - last.length - 2)); // removes text from input
                    $(this).effect("highlight", {}, 1000);
                    $(this).addClass("red");
                    $("#warnings").html("<span style='color:red;'>Max people reached</span>");
                    return false;
                }
            }
        });

        $("#UG_studiedEducation, #PG_studiedEducation, #MPhil_studiedEducation, #PhD_studiedEducation,#NET_studiedEducation").on("keydown", function (event) {
            if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete("instance").menu.active) {
                event.preventDefault();
            }
            else if (event.keyCode == 188) {
                return false;
            }
        }).autocomplete({
            minLength: 0,
            source: function (request, response) {
                // delegate back to autocomplete, but extract the last term
                var results = $.ui.autocomplete.filter(Courses, extractLast(request.term));
                response(results);
            },
            focus: function () {
                // prevent value inserted on focus
                return false;
            },
            select: function (event, ui) {

                var CurrentPlace = $(this).val();
                var terms = split(this.value);
                if (terms.length <= 1) {
                    // remove the current input
                    terms.pop();
                    // add the selected item
                    terms.push(ui.item.value);
                    // add placeholder to get the comma-and-space at the end
                    terms.push("");
                    this.value = terms.join("");
                    //this.value = terms;
                    $('#' + CurrentPlace).focus();

                    return false;
                }
                else {
                    var last = terms.pop();
                    $(this).val(this.value.substr(0, this.value.length - last.length - 2)); // removes text from input
                    $(this).effect("highlight", {}, 1000);
                    $(this).addClass("red");
                    $("#warnings").html("<span style='color:red;'>Max people reached</span>");
                    return false;
                }
            }
        });

        function split(val) {
            return val.split(/,\s*/);
        }
        function extractLast(term) {
            return split(term).pop();
        }

    });

    function readDocument(file, minimum, fsize, title) {

        var reader = new FileReader();
        var image = new Image();

        reader.readAsDataURL(file);
        reader.onload = function (_file) {
            image.src = _file.target.result; // url.createObjectURL(file);
            image.onload = function () {

                var w = this.width,
                    h = this.height,
                    t = file.type, // ext only: // file.type.split('/')[1],
                    n = file.name,
                    s = ~~(file.size / 1024); //s = ~~(file.size/1024) +'KB';

                if (w < minimum.split('x')[0] || h < minimum.split('x')[1] || s > fsize) {
                    alert(title + " should be Minimum - " + minimum + " pixels and less than " + fsize + " KB size");

                    var filephoto;

                    if (title == 'PAN Card Document') {
                        filephoto = $('.panfile');
                    }

                    if (title == 'Aadhaar Card Document') {
                        filephoto = $('.aadhaarfile');
                    }

                    if (title == 'Proceedings Document') {
                        filephoto = $('.SelectionCommitteeProceedingsDocument');
                    }

                    if (title == '10th Or Equivalent Document') {
                        filephoto = $('#SSC_certificate');
                    }

                    if (title == 'UG Document') {
                        filephoto = $('#UG_certificate');
                    }

                    if (title == 'PG Document') {
                        filephoto = $('#PG_certificate');
                    }

                    if (title == 'M.Phil Document') {
                        filephoto = $('#MPhil_certificate');
                    }

                    if (title == 'Ph.D Document') {
                        filephoto = $('#PhD_certificate');
                    }
                    if (title == 'NET Document') {
                        filephoto = $('#NET_certificate');
                    }
                    file.replaceWith(filephoto.val('').clone(true));
                    return false;
                }

                if (t != 'image/jpeg') {
                    alert(title + " should be in JPEG/JPG format only");

                    var filephoto;

                    if (title == 'PAN Card Document') {
                        filephoto = $('.panfile');
                    }

                    if (title == 'Aadhaar Card Document') {
                        filephoto = $('.aadhaarfile');
                    }

                    if (title == 'Proceedings Document') {
                        filephoto = $('.SelectionCommitteeProceedingsDocument');
                    }

                    if (title == '10th Or Equivalent Document') {
                        filephoto = $('#SSC_certificate');
                    }

                    if (title == 'UG Document') {
                        filephoto = $('#UG_certificate');
                    }

                    if (title == 'PG Document') {
                        filephoto = $('#PG_certificate');
                    }

                    if (title == 'M.Phil Document') {
                        filephoto = $('#MPhil_certificate');
                    }

                    if (title == 'Ph.D Document') {
                        filephoto = $('#PhD_certificate');
                    }
                    if (title == 'NET Document') {
                        filephoto = $('#NET_certificate');
                    }
                    file.replaceWith(filephoto.val('').clone(true));
                    return false;
                }
            };
            image.onerror = function () {

                //alert('Invalid file type: ' + file.type);
                alert(title + " should be in JPEG/JPG format only");

                var filephoto;

                if (title == 'PAN Card Document') {
                    filephoto = $('.panfile');
                }

                if (title == 'Aadhaar Card Document') {
                    filephoto = $('.aadhaarfile');
                }

                if (title == 'Proceedings Document') {
                    filephoto = $('.SelectionCommitteeProceedingsDocument');
                }

                if (title == '10th Or Equivalent Document') {
                    filephoto = $('#SSC_certificate');
                }

                if (title == 'UG Document') {
                    filephoto = $('#UG_certificate');
                }

                if (title == 'PG Document') {
                    filephoto = $('#PG_certificate');
                }

                if (title == 'M.Phil Document') {
                    filephoto = $('#MPhil_certificate');
                }

                if (title == 'Ph.D Document') {
                    filephoto = $('#PhD_certificate');
                }
                if (title == 'NET Document') {
                    filephoto = $('#NET_certificate');
                }

                file.replaceWith(filephoto.val('').clone(true));
                return false;
            };
        };
    }

    //get file size
    function GetFileSize(fileid, title) {

        try {
            var fileSize = 0;
            //for IE
            if ($.browser.msie) {
                //before making an object of ActiveXObject,
                //please make sure ActiveX is enabled in your IE browser
                var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                var filePath = $("#" + fileid)[0].value;
                var objFile = objFSO.getFile(filePath);
                var fileSize = objFile.size; //size in kb
                //fileSize = fileSize / 1048576; //size in mb
            }
                //for FF, Safari, Opeara and Others
            else {
                fileSize = $("#" + title)[0].files[0].size; //size in kb
                //fileSize = fileSize / 1048576; //size in mb
            }

            return fileSize;
        } catch (e) {

            //alert("Error is : " + e);
        }
    }

    //get file path from client system
    function getNameFromPath(strFilepath) {
        var objRE = new RegExp(/([^\/\\]+)$/);
        var strName = objRE.exec(strFilepath);

        if (strName == null) {
            return null;
        } else {
            return strName[0];
        }
    }

    function isNumberKeyForPercentage(evt) {

        var len = $('.txtPercentage').val().length;
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57 || len > 6) && charCode != 46)
            return false;
        else if (len >= 3) {
            return true;
        }
        else {

            var index = $('.txtPercentage').val().indexOf('.');

            if (index > 0 && charCode == 46) {
                return false;
            }
            if (index > 0) {
                var CharAfterdot = (len + 1) - index;
                if (CharAfterdot > 3 && charCode != 8) {
                    return false;
                }
            }

        }
        return true;
    }

    function checkSpcialChar(event) {
        var e = window.event || event
        var keyunicode = e.charCode || e.keyCode
        //Allow alphabetical keys, plus BACKSPACE and SPACE
        return ((keyunicode >= 65 && keyunicode <= 122) || (keyunicode >= 48 && keyunicode <= 57) || keyunicode == 8 || keyunicode == 32) ? true : false
        return;
        event.returnValue = true;
    }

</script>
<br />
@if (TempData["SUCCESS"] != null)
{
    <div class="success" style="background-color: gold; border: 1px solid #f49820;">
        <p style="text-align: center;font-weight: bold"><strong>Success:</strong> @TempData["SUCCESS"].ToString()</p>
    </div>
}
@if (TempData["ERROR"] != null)
{
    <div class="error" style="background-color: red; border: 1px solid #f49820;">
        <p style="text-align: center;font-weight: bold;color:white;"><strong>Error:</strong> @TempData["ERROR"].ToString()</p>
    </div>
}
<form method="post" enctype="multipart/form-data" action="@Url.Action("FacultyEditDetails", "NewOnlineRegistration", new { fid = UAAAS.Models.Utilities.EncryptString(Model.id.ToString(), WebConfigurationManager.AppSettings["CryptoKey"]) })">
    @Html.ValidationSummary(true)

    <table class="faculty_table" style="text-align: center; width: 100%;display:none">
        <tr>
            <td class="col1" style="font-weight: bold; width: 15%;">
                <span>Faculty Type</span>
            </td>
            <td class="col2" style="width: 85%;">
                <label title="Presently WORKING in any of the Technical Colleges affiliated to JNTUH">@Html.RadioButtonFor(model => model.Type, "ExistFaculty", new { @name = "fType", @class = "ifNeworExist ifExist" }) Existing Faculty</label>
                - (Working in any Affiliated College of JNTUH)
                <br />
                <label title="Presently NOT WORKING in any of the Technical Colleges affiliated to JNTUH but wish to work in future">@Html.RadioButtonFor(model => model.Type, "NewFaculty", new { @name = "fType", @class = "ifNeworExist ifNew" }) New Faculty </label>
                - (Not working with any College but wish to apply for in future)
                lty
                @Html.HiddenFor(model => model.Type)
            </td>
        </tr>
    </table>
    <div id="divNewFaculty">
        <table class="faculty_table">
            @if (Model.id > 0)
            {
                @Html.HiddenFor(model => model.id)
                @Html.HiddenFor(model => model.createdOn)
                @Html.HiddenFor(model => model.createdBy)
                <tr>
                    <td class="col1" colspan="4">
                        <b>Registration Information</b>
                    </td>
                </tr>
                <tr>
                    <td class="col1" style="font-weight: bold;">
                        @Html.LabelFor(model => model.RegistrationNumber)
                    </td>
                    <td class="col2">
                        <span style="text-transform: uppercase; font-weight: bold;">
                            @Html.DisplayFor(model => model.RegistrationNumber)
                            @Html.HiddenFor(model => model.RegistrationNumber)
                        </span>
                    </td>

                    <td class="col1" style="width: 15% !important; vertical-align: top;">
                        @Html.LabelFor(model => model.EditEmail)
                        <span style="color: blue;">(Login ID)</span> <span class="mandatory">*</span>
                    </td>
                    <td class="col2 focus" style="width: 90% !important; vertical-align: top;">
                        @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "Email").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                        {
                            @Html.TextBoxFor(model => model.EditEmail, new { style = "width: 60%;", @placeholder = "Enter your Email ID", @maxlength = "50", @class = "required" })
                            @Html.ValidationMessageFor(model => model.EditEmail)
                        }
                        else
                        {
                            @Html.DisplayFor(model => model.EditEmail)
                            @Html.HiddenFor(model => model.EditEmail)
                        }
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td class="col1" colspan="2">
                        <b>Login Information</b>
                    </td>
                </tr>
            }

            @if (@Model.Type == "adjunct")
            {
                <tr>
                    <td class="col1" style="width: 10% !important; vertical-align: top;">
                        <span>Working Type</span>
                    </td>
                    <td class="col2" style="width: 90% !important; vertical-align: top;">
                        @Html.DisplayFor(model => model.WorkingType)
                    </td>
                </tr>
            }
        </table>
        &nbsp;&nbsp;&nbsp;
        <table class="faculty_table">
            <tr>
                <td class="col1" colspan="4">
                    <b>Faculty Information</b>
                </td>
            </tr>
            <tr>
                <td class="col1">
                    @Html.LabelFor(model => model.EditPANNumber) <span class="mandatory">*</span>
                </td>
                <td class="col2">
                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "PANNumber").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                    {
                        if (@Model.PanStatus != "E" || String.IsNullOrEmpty(@Model.EditPANNumber))
                        {
                            @Html.TextBoxFor(model => model.EditPANNumber, new { @id = "PANNumber", @placeholder = "Enter PAN Number", @maxlength = "10", @class = "clsPanNumber required" })
                            @Html.ValidationMessageFor(model => model.EditPANNumber)
                        }
                        else
                        {
                            @Html.DisplayFor(model => model.EditPANNumber, new { @id = "PANNumber", @placeholder = "Enter PAN Number", @maxlength = "10", @class = "clsPanNumber" })
                            @Html.HiddenFor(model => model.EditPANNumber)
                        }
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.EditPANNumber, new { @id = "PANNumber", @placeholder = "Enter PAN Number", @maxlength = "10", @class = "clsPanNumber" })
                        @Html.HiddenFor(model => model.EditPANNumber)
                    }
                    @Html.HiddenFor(model => model.PanStatus)
                </td>
                <td class="col3">
                    <span>First Name</span>
                </td>
                <td class="col4">
                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "FirstName").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                    {
                        @Html.TextBoxFor(model => model.FirstName, new { @placeholder = "Enter your First Name", @maxlengeh = "25", @onkeypress = "return checkSpcialChar(event)", @class = "required" })
                        @Html.ValidationMessageFor(model => model.FirstName)
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.FirstName)
                        @Html.HiddenFor(model => model.FirstName)
                    }
                </td>
            </tr>
            <tr>
                <td class="col1">
                    <span>Middle Name</span>
                </td>
                <td class="col2">
                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "MiddleName").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                    {
                        @Html.TextBoxFor(model => model.MiddleName, new { @placeholder = "Enter your Middle Name", @maxlengeh = "25", @onkeypress = "return checkSpcialChar(event)", @class = "required" })
                        @Html.ValidationMessageFor(model => model.MiddleName)
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.MiddleName)
                        @Html.HiddenFor(model => model.MiddleName)
                    }
                </td>
                <td class="col3">
                    <span>Last Name</span>
                </td>
                <td class="col4">
                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "LastName").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                    {
                        @Html.TextBoxFor(model => model.LastName, new { @placeholder = "Enter your Last Name", @maxlengeh = "25", @onkeypress = "return checkSpcialChar(event)", @class = "required" })
                        @Html.ValidationMessageFor(model => model.LastName)
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.LastName)
                        @Html.HiddenFor(model => model.LastName)
                    }
                </td>
            </tr>
            <tr>
                <td class="col1">
                    <span>Father's Name / Husband's Name</span> <span class="mandatory">*</span>
                </td>
                <td class="col2">
                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "Father's/Husband's Name").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                    {
                        @Html.TextBoxFor(model => model.FatherOrhusbandName, new { @placeholder = "Enter your Father's / Husband's Name", @maxlengeh = "50", @onkeypress = "return checkSpcialChar(event)", @class = "required" })
                        @Html.ValidationMessageFor(model => model.FatherOrhusbandName)
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.FatherOrhusbandName)
                        @Html.HiddenFor(model => model.FatherOrhusbandName)
                    }
                </td>
                <td class="col3">
                    @Html.LabelFor(model => model.MotherName) <span class="mandatory">*</span>
                </td>
                <td class="col4">
                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "Mother's Name").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                    {
                        @Html.TextBoxFor(model => model.MotherName, new { @placeholder = "Enter your Mother's Name", @maxlengeh = "25", @onkeypress = "return checkSpcialChar(event)", @class = "required" })
                        @Html.ValidationMessageFor(model => model.MotherName)
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.MotherName)
                        @Html.HiddenFor(model => model.MotherName)
                    }
                </td>
            </tr>
            <tr>
                <td class="col1">
                    @Html.LabelFor(model => model.GenderId) <span class="mandatory">*</span>
                </td>
                <td class="col2">
                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "Gender").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                    {
                        <label>@Html.RadioButtonFor(model => model.GenderId, 1) Male </label>
                        <label>@Html.RadioButtonFor(model => model.GenderId, 0) Female </label>
                        @Html.ValidationMessageFor(model => model.GenderId)
                    }
                    else
                    {
                        if (@Model.GenderId == 1)
                        {
                            <span>Male</span>
                        }
                        else if (@Model.GenderId == 0)
                        {
                            <span>Female</span>
                        }
                        @Html.HiddenFor(model => model.GenderId)
                    }
                </td>
                <td class="col3">
                    @Html.LabelFor(model => model.DateOfBirth) <span class="mandatory">* &nbsp;&nbsp;<img id="DOBMessage" src="../Content/images/question-mark-1750942_1280.png" /></span><br />
                </td>
                <td class="col4">
                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "Dateofbirth").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                    {
                        @Html.TextBoxFor(model => model.facultyDateOfBirth, new { @class = "calendar required", style = "", @onblur = "IsValidDate(this,event.keyCode,0,0,0)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Select Date of Birth" })
                        @Html.ValidationMessageFor(model => model.facultyDateOfBirth)

                    }
                    else
                    {
                        @Html.DisplayFor(model => model.facultyDateOfBirth)
                        @Html.HiddenFor(model => model.facultyDateOfBirth)
                    }
                </td>
            </tr>

            <tr>
                <td class="col1" style="vertical-align: top;">
                    @Html.LabelFor(model => model.EditMobile) <span class="mandatory">*</span>
                </td>
                <td class="col2" style="vertical-align: top;">
                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "Mobile").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                    {
                        @Html.TextBoxFor(model => model.EditMobile, new { @placeholder = "Enter 10 digit Mobile Number", @maxlength = "10", @class = "required", @onkeypress = "return isNumeric(event)" })
                        @Html.ValidationMessageFor(model => model.EditMobile)
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.EditMobile)
                        @Html.HiddenFor(model => model.EditMobile)
                    }
                </td>
                <td class="col3" style="vertical-align: top;">
                    <span>Photo</span> <span class="mandatory">*&nbsp;&nbsp;<img id="PhotoMessage" src="../Content/images/question-mark-1750942_1280.png" /></span>
                </td>
                <td class="col4 files" style="vertical-align: top;">
                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "Photo").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                    {
                        if (!String.IsNullOrEmpty(@Model.facultyPhoto))
                        {
                            <a href="../Content/Upload/Faculty/Photos/@Model.facultyPhoto.Replace("~", "")" target="_blank">
                                @*<img src="../Content/Upload/Faculty/Photos/@Model.facultyPhoto.Replace("~", "")" style="height: 60px;" />*@
                                <span style="font-weight:bold;color:red">View</span>&nbsp; &nbsp; &nbsp;
                            </a>
                            @Html.TextBoxFor(model => model.Photo, new { type = "file", @class = "Photo", @style = "vertical-align: top;" })
                            <div id="PhotoPreview" style="width:50px;height:50px;"></div>
                            @*@Html.DisplayFor(model => model.Photo, new { type = "file", @class = "Photo" })
                                @Html.HiddenFor(model => model.Photo, new { @Value = Model.Photo })*@
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.Photo, new { type = "file", @class = "Photo required" })<br />
                            @Html.ValidationMessageFor(model => model.Photo)
                        }
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.Photo, new { type = "file", @class = "Photo" })
                        <a href="../Content/Upload/Faculty/Photos/@Model.facultyPhoto.Replace("~", "")" target="_blank">
                            <span style="font-weight:bold;color:red">View</span>&nbsp; &nbsp; &nbsp;
                        </a>
                        @Html.HiddenFor(model => model.Photo, new { @Value = Model.Photo })
                    }


                    @Html.HiddenFor(model => model.facultyPhoto)

                    <div id="PhotoPreview"></div>
                </td>
            </tr>
            <tr>
                <td class="col1">
                    @Html.LabelFor(model => model.EditAadhaarNumber) <span class="mandatory">*</span>
                </td>
                <td class="col2">
                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "AadhaarNumber").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                    {
                        @Html.TextBoxFor(model => model.EditAadhaarNumber, new { @id = "AadhaarNumber", @placeholder = "Enter Aadhaar Number", @maxlength = "12", @class = "required", @onkeypress = "return isNumeric(event)" })
                        @Html.ValidationMessageFor(model => model.EditAadhaarNumber)
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.EditAadhaarNumber, new { @id = "AadhaarNumber", @placeholder = "Enter Aadhaar Number", @maxlength = "12" })
                        @Html.HiddenFor(model => model.EditAadhaarNumber)
                    }
                    @*@Html.DisplayFor(model => model.EditAadhaarNumber, new { @id = "AadhaarNumber", @placeholder = "Enter Aadhaar Number", @maxlength = "12" })
                        @Html.HiddenFor(model => model.EditAadhaarNumber)*@
                </td>
                <td class="col3" style="vertical-align: top;">
                    <span>Aadhaar Card Document </span><span class="mandatory">*&nbsp;&nbsp;<img id="AadhaarMessage" src="../Content/images/question-mark-1750942_1280.png" /></span>
                </td>
                <td class="col4 aadhaarfiles" style="vertical-align: top;">

                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "AadhaarDocument").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                    {
                        if (!String.IsNullOrEmpty(@Model.facultyAadhaarCardDocument))
                        {
                            <a href="../Content/Upload/Faculty/AADHAARCARDS/@Model.facultyAadhaarCardDocument.Replace("~", "")" target="_blank">

                                <span style="font-weight:bold;color:red">View</span>&nbsp; &nbsp; &nbsp;
                            </a>
                            @Html.TextBoxFor(model => model.AadhaarCardDocument, new { type = "file", @class = "aadhaarfile" })

                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.AadhaarCardDocument, new { type = "file", @class = "aadhaarfile required" })
                            @Html.ValidationMessageFor(model => model.AadhaarCardDocument)

                        }
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.AadhaarCardDocument, new { type = "file", @class = "aadhaarfile" })
                        <a href="../Content/Upload/Faculty/AADHAARCARDS/@Model.facultyAadhaarCardDocument.Replace("~", "")" target="_blank">

                            <span style="font-weight:bold;color:red">View</span>&nbsp; &nbsp; &nbsp;
                        </a>
                        @Html.HiddenFor(model => model.AadhaarCardDocument)
                    }

                    @*@if (!String.IsNullOrEmpty(@Model.facultyAadhaarCardDocument))
                        {
                            <a href="../Content/Upload/Faculty/AADHAARCARDS/@Model.facultyAadhaarCardDocument.Replace("~", "")" target="_blank">

                                <span style="font-weight:bold;color:red">View</span>&nbsp; &nbsp; &nbsp;
                            </a>
                        }*@
                    @Html.HiddenFor(model => model.facultyAadhaarCardDocument)
                </td>
            </tr>
            <tr>
                <td class="col1" style="vertical-align: top;">
                    <span>PAN Card Document</span> <span class="mandatory">* &nbsp;&nbsp;<img id="PANMessage" src="../Content/images/question-mark-1750942_1280.png" /></span>
                </td>
                <td class="col2 panfiles" style="vertical-align: top;">
                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "PANDocument").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                    {
                        if (!String.IsNullOrEmpty(@Model.facultyPANCardDocument))
                        {
                            <a href="../Content/Upload/Faculty/PANCARDS/@Model.facultyPANCardDocument.Replace("~", "")" target="_blank">

                                <span style="font-weight:bold;color:red">View</span>&nbsp; &nbsp; &nbsp;
                            </a>
                            @Html.TextBoxFor(model => model.PANCardDocument, new { type = "file", @class = "panfile" })

                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.PANCardDocument, new { type = "file", @class = "panfile required" })
                            @Html.ValidationMessageFor(model => model.PANCardDocument)

                        }
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.PANCardDocument, new { type = "file", @class = "aadhaarfile" })
                        <a href="../Content/Upload/Faculty/PANCARDS/@Model.facultyPANCardDocument.Replace("~", "")" tar target="_blank">

                            <span style="font-weight:bold;color:red">View</span>&nbsp; &nbsp; &nbsp;
                        </a>
                        @Html.HiddenFor(model => model.PANCardDocument)
                    }
                    @*@if (!string.IsNullOrEmpty(@Model.facultyPANCardDocument))
                        {
                            <a href="../Content/Upload/Faculty/PANCARDS/@Model.facultyPANCardDocument.Replace("~", "")" target="_blank">
                                <span style="font-weight:bold;color:red">View</span>
                                @Html.HiddenFor(model => model.facultyPANCardDocument)
                            </a>

                        }*@
                    @Html.HiddenFor(model => model.facultyPANCardDocument)
                </td>
                <td class="col3" style="vertical-align: top;">
                    <span>Category</span>

                </td>
                <td class="col4 IncomeTaxFileUploads" style="vertical-align: top;">
                    @*@Html.DisplayFor(model => model.facultyCategory, new { })*@
                    @*@Html.HiddenFor(model => model.facultyCategory)*@
                    @Html.DropDownListFor(model => model.facultyCategory, new List<SelectListItem>
                        {
                               //new SelectListItem{ Text="--Select--", Value = "0" },
                               new SelectListItem{ Text="OC", Value = "OC" },
                               new SelectListItem{ Text="BC-A", Value = "BC-A" },
                               new SelectListItem{ Text="BC-B", Value = "BC-B" },
                                new SelectListItem{ Text="BC-C", Value = "BC-C" },
                                new SelectListItem{ Text="BC-D", Value = "BC-D" },
                                new SelectListItem{ Text="BC-E", Value = "BC-E" },
                                new SelectListItem{ Text="SC", Value = "SC" },
                                new SelectListItem{ Text="ST", Value = "ST" },
                                new SelectListItem{ Text="Minority", Value = "Minority" }
                        }, "-- Select --", new { id = "category", style = "", @class = "required" })
                    @Html.ValidationMessageFor(model => model.facultyCategory)


                </td>
            </tr>
        </table>

        <div id="divOrganization" style="width: 100%">
            <table class="faculty_table" style="width: 100%;display:none;">
                <tr>
                    <td class="col1" style="vertical-align: top; width: 15%;">
                        <div class="working">
                            @Html.Label("Organization Name")
                        </div>
                    </td>
                    <td class="col2" style="vertical-align: top; width: 85%;">
                        @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "FirstName").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                        {
                            @Html.DisplayFor(model => model.OrganizationName)
                            @Html.HiddenFor(model => model.OrganizationName)
                        }
                        else
                        {
                            @Html.DisplayFor(model => model.OrganizationName, new { @id = "OrganizationName", @style = "width: 98%", @placeholder = "Enter Organisation Name you have last worked / presently working in (if any)" })
                        }
                        @Html.HiddenFor(model => model.OrganizationName)
                    </td>
                </tr>
            </table>
        </div>

        <div id="divExistFaculty" style="width: 100%">
            <div id="divWorking">
                <table class="faculty_table" style="width: 100%">
                    <tr>
                        <td class="col1" colspan="4">
                            <b>Faculty Professional Information <span style="color: red">(Automatically taken from College Portal Where Presently Working)</span></b>
                        </td>
                    </tr>
                    <tr>
                        <td class="col1" style="vertical-align: top;">
                            <div class="working">
                                @Html.Label("Name of the Institution presently working in") <span class="mandatory">*</span>
                            </div>
                        </td>
                        <td class="col2" style="vertical-align: top;" colspan="3">
                            @if (!String.IsNullOrEmpty(@Model.CollegeName))
                            {
                                @Html.DisplayFor(model => model.CollegeName)<br />
                            }
                            else
                            {
                                <span>Not Working</span><br />
                            }

                            @Html.HiddenFor(model => model.CollegeId, new { @Value = Model.CollegeId })
                        </td>

                    </tr>
                    <tr>
                        <td class="col1">
                            @Html.LabelFor(model => model.DepartmentId) <span class="mandatory">*</span>
                        </td>
                        <td class="col2">
                            @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "Department").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                            {
                                @Html.DropDownListFor(model => model.DepartmentId,
                                        new SelectList(ViewBag.department as System.Collections.IEnumerable, "id", "departmentName"),
                                        "-- Select --", new { id = "department", style = "" })
                                @Html.ValidationMessageFor(model => model.DepartmentId)

                                if (Model.department == "Others")
                                {
                                    <div id="divDept">
                                        <br />
                                        @Html.TextBoxFor(model => model.OtherDepartment, new { @id = "OtherDepartment", @placeholder = "Specify your department name" })
                                    </div>
                                }
                            }
                            else
                            {
                                @Html.DisplayFor(model => model.department)
                                @Html.HiddenFor(model => model.DepartmentId)
                                @Html.HiddenFor(model => model.department)
                                if (Model.department == "Others")
                                {
                                    <br />
                                    @Html.DisplayFor(model => model.OtherDepartment, new { @placeholder = "Specify your department name" })
                                }
                            }
                        </td>
                        <td class="col3">
                            @Html.LabelFor(model => model.DesignationId) <span class="mandatory">*</span>
                        </td>
                        <td class="col4">
                            @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "Designation").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                            {
                                @Html.DropDownListFor(model => model.DesignationId,
                                        new SelectList(ViewBag.designation as System.Collections.IEnumerable, "id", "designation"),
                                        "-- Select --", new { id = "designation", style = "" })
                                @Html.ValidationMessageFor(model => model.DesignationId)

                                if (Model.designation == "Others")
                                {
                                    <div id="divDesig">
                                        <br />
                                        @Html.TextBoxFor(model => model.OtherDesignation, new { @placeholder = "Specify your designation name" })
                                    </div>
                                }
                            }
                            else
                            {
                                @Html.DisplayFor(model => model.designation)
                                @Html.HiddenFor(model => model.DesignationId)
                                @Html.HiddenFor(model => model.designation)

                                if (Model.designation == "Others")
                                {
                                    <br />@Html.DisplayFor(model => model.OtherDesignation)
                                    @Html.HiddenFor(model => model.OtherDesignation)
                                }
                            }
                        </td>
                    </tr>
                    <tr>
                        <td class="col1">
                            @Html.LabelFor(model => model.DateOfAppointment) <span>in the present Institution</span> <span class="mandatory">*</span>
                        </td>
                        <td class="col2">
                            @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "DateofAppointment").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                            {
                                @Html.TextBoxFor(model => model.facultyDateOfAppointment, new { @class = "calendar", style = "width: 247px;", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Enter Date of Appointment" })
                                @Html.ValidationMessageFor(model => model.facultyDateOfAppointment)
                            }
                            else
                            {
                                @Html.DisplayFor(model => model.facultyDateOfAppointment, new { @class = "calendar required", style = "width: 247px;", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Enter Date of Appointment" })
                                @Html.HiddenFor(model => model.facultyDateOfAppointment)
                            }
                        </td>
                        <td class="col3">Experience in the present Institution (years) <span class="mandatory">*</span></td>
                        <td class="col4">
                            @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "TotalExperiencePresentCollege").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                            {
                                @*@Html.DropDownListFor(model => model.TotalExperiencePresentCollege,
                                                new SelectList(ViewBag.prevExperience as System.Collections.IEnumerable, "value", "text"),
                                                "-- Select --", new { id = "TotalExperiencePresentCollege", @class = "required", style = "" })
                                    @Html.ValidationMessageFor(model => model.TotalExperiencePresentCollege)*@
                                @Html.DisplayFor(model => model.showPresentCollegeExperiance)
                                @Html.HiddenFor(model => model.TotalExperiencePresentCollege)
                            }
                            else
                            {
                                @Html.DisplayFor(model => model.showPresentCollegeExperiance)
                                @Html.HiddenFor(model => model.TotalExperiencePresentCollege)
                            }
                        </td>
                    </tr>
                    <tr>
                        <td class="col3">@Html.LabelFor(model => model.TotalExperience) (years) <span class="mandatory">*</span></td>
                        <td class="col4">
                            @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "TotalExperience").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                            {
                                @*@Html.DropDownListFor(model => model.TotalExperience, new SelectList(ViewBag.prevExperience as System.Collections.IEnumerable, "value", "text"), "-- Select --", new { id = "TotalExperience", style = "" })
                                    @Html.ValidationMessageFor(model => model.TotalExperience)*@
                                @Html.DisplayFor(model => model.showTotalExperience)
                                @Html.HiddenFor(model => model.TotalExperience)
                            }
                            else
                            {
                                @Html.DisplayFor(model => model.showTotalExperience)
                                @Html.HiddenFor(model => model.TotalExperience)
                            }
                        </td>

                        <td class="col3">
                            <div class="ratifed">
                                College Appointment Letter @*&nbsp;&nbsp;<img id="SCMMessage" src="../Content/images/question-mark-1750942_1280.png" />*@
                            </div>
                        </td>
                        <td class="col4">
                            <div class="ratifed">
                                @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "Proceedings Number").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                                {
                                    @*@Html.TextBoxFor(model => model.ProceedingsNo, new { @placeholder = "Enter Proceedings Number", style = "width: 250px;" })
                                        @Html.ValidationMessageFor(model => model.ProceedingsNo)*@
                                }
                                else
                                {
                                    @*@Html.DisplayFor(model => model.ProceedingsNo)
                                        @Html.HiddenFor(model => model.ProceedingsNo)*@
                                }
                            </div>
                            @if (!String.IsNullOrEmpty(Model.facultyAppointmentLetter))
                            {
                                <a href="../Content/Upload/College/Faculty/AppointmentLetters/@Model.facultyAppointmentLetter.Replace("~", "")" target="_blank">
                                    <span style="font-weight:bold;color:red">View</span>

                                </a>

                            }
                            @Html.HiddenFor(model => model.SelectionCommitteeProcedings)
                        </td>
                    </tr>
                    <tr>
                        <td class="col1">
                            <div class="ratifed">
                                @Html.LabelFor(model => model.AICTEFacultyId)
                            </div>
                        </td>
                        <td class="col2">
                            <div class="ratifed">
                                @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "AICTE FacultyID").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                                {
                                    @Html.TextBoxFor(model => model.AICTEFacultyId, new { @placeholder = "Enter AICTE faculty Id" })
                                    @Html.ValidationMessageFor(model => model.AICTEFacultyId)
                                }
                                else
                                {
                                    @Html.DisplayFor(model => model.AICTEFacultyId, new { @placeholder = "Enter AICTE faculty Id" })
                                    @Html.ValidationMessageFor(model => model.AICTEFacultyId)
                                }
                            </div>
                        </td>
                        <td class="col3">Payscale</td>
                        <td class="col4">

                            @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "GrossSalary").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                            {
                                @Html.TextBoxFor(model => model.GrossSalary, new { @maxlength = "7", @placeholder = "Enter Gross Salary Last Drawn", @style = "width: 250px;", @onkeypress = "return isNumeric(event)" })
                                @Html.ValidationMessageFor(model => model.GrossSalary)
                            }
                            else
                            {
                                @Html.DisplayFor(model => model.GrossSalary, new { @maxlength = "7", @placeholder = "Enter Gross Salary Last Drawn", @style = "width: 250px;", @onkeypress = "return isNumeric(event)" })
                                @Html.ValidationMessageFor(model => model.GrossSalary)
                            }
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <br />

        <table class="faculty_table education" id="tblQualification" style="border: solid 1px #ccc;">
            <thead>
                <tr>
                    <td class="row" colspan="10">
                        <b>Educational Qualifications</b>
                    </td>
                </tr>
                <tr>
                    <td class="row" style="text-align: center; width: 100px;"></td>
                    <td class="row" style="text-align: center; width: 125px;">Registration Number</td>
                    <td class="row" style="text-align: center; width: 125px;">Course Studied</td>
                    <td class="row" style="text-align: center; width: 125px;">Branch / Specialization</td>
                    <td class="row" style="text-align: center; width: 100px;">Year of Passing (YYYY)</td>
                    <td class="row" style="text-align: center; width: 80px;">
                        % of
                        <br />
                        Marks / CGPA
                    </td>
                    <td class="row" style="text-align: center; width: 80px;">Division</td>
                    <td class="row" style="text-align: center;">Board/University</td>
                    <td class="row" style="text-align: center; width: 180px;">Place</td>
                    <td class="row" style="text-align: center; width: 200px !important;">
                        Scanned Certificate<br />
                        &nbsp;&nbsp;<img id="CeritificateMessage" src="../Content/images/question-mark-1750942_1280.png" />
                    </td>
                </tr>
            </thead>
            <tbody>
                @for (int i = 1; i <= 8; i++)
                {
                    var style = "alt_row";

                    //SSC Details
                    if (i == 1)
                    {
                        <tr>
                            <td class="@style" style="text-align: center; vertical-align: top;">
                                <span>10th / Equivalent</span>
                            </td>
                            @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "SSC").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                            {
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.SSC_HallticketNo, new { style = "width: 95%;text-transform:uppercase", @maxlength = "50", @placeholder = "SSC HallTicketNo" })@*, @class = "required"*@
                                    @*@Html.ValidationMessageFor(model => model.SSC_HallticketNo)*@
                                </td>
                            }
                            else
                            {
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.SSC_HallticketNo, new { style = "width: 95%;text-transform:uppercase", @maxlength = "50", @placeholder = "SSC HallTicketNo" })@*, @class = "required"*@
                                </td>
                            }
                            <td class="@style" style="text-align: center; vertical-align: top;">
                                @Html.HiddenFor(model => model.SSC_studiedEducation, new { @Value = "SSC" })
                            </td>
                            <td class="@style" style="text-align: center; vertical-align: top;">
                                @Html.HiddenFor(model => model.SSC_specialization, new { @Value = "SSC" })
                            </td>
                            @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "SSC").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                            {
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.SSC_passedYear,
                                    new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                     "-- Select --", new { id = "year", style = "width: 100%;", @class = "required" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.SSC_percentage, new { style = "width: 85%; text-align: center;", @class = "txtPercentage required", @onkeypress = "return isNumberKeyForPercentage(event)", @placeholder = "% of Marks / CGPA" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.SSC_division,
                                    new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                     "-- Select --", new { id = "divs", style = "width: 100%;", @class = "required" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.SSC_university, new { style = "width: 95%", @maxlength = "50", @class = "required", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.SSC_place, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style certificates" style="text-align: left; vertical-align: top;">
                                    @if (@Model.SSC_facultyCertificate != null)
                                    {
                                        @Html.TextBoxFor(model => model.SSC_certificate, new { type = "file", @style = "width: 180px;", @class = "" })

                                        <a href="../Content/Upload/Faculty/Certificates/@Model.SSC_facultyCertificate.Replace(" ~", "")" target="_blank">
                                            @*<img src="../Content/Upload/Faculty/Certificates/@Model.SSC_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="SSCPreview" />*@
                                            <span style="color:red;"><b>View</b></span>
                                        </a>
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.SSC_certificate, new { type = "file", @style = "width: 180px;", @class = " required" })
                                    }
                                    @Html.HiddenFor(model => model.SSC_facultyCertificate)
                                </td>
                            }
                            else
                            {
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.SSC_passedYear)

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.SSC_percentage)

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.SSC_division)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.SSC_university)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.SSC_place)
                                </td>
                                <td class="@style certificates" style="text-align: left; vertical-align: top;">

                                    @*@if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "certificate").Select(a => a.IsFieldEditable).FirstOrDefault() == true && Model.SSC_studiedEducation != null)
                                        {
                                            if (@Model.SSC_facultyCertificate != null)
                                            {
                                                @Html.TextBoxFor(model => model.SSC_certificate, new { type = "file", @style = "width: 180px;", @class = "" })

                                                <a href="../Content/Upload/Faculty/Certificates/@Model.SSC_facultyCertificate.Replace(" ~", "")" target="_blank">
                                                    <span style="color: red;"><b>View</b></span>
                                                </a>
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(model => model.SSC_certificate, new { type = "file", @style = "width: 180px;", @class = " required" })
                                            }
                                            @Html.HiddenFor(model => model.SSC_facultyCertificate)
                                        }
                                        else
                                        {
                                            if (@Model.SSC_facultyCertificate != null)
                                            {
                                                <a href="../Content/Upload/Faculty/Certificates/@Model.SSC_facultyCertificate.Replace(" ~", "")" target="_blank">
                                                    <img src="../Content/Upload/Faculty/Certificates/@Model.SSC_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="SSCPreview" />
                                                </a>
                                            }
                                            @Html.HiddenFor(model => model.SSC_facultyCertificate)
                                        }*@
                                    @if (@Model.SSC_facultyCertificate != null)
                                    {
                                        <a href="../Content/Upload/Faculty/Certificates/@Model.SSC_facultyCertificate.Replace(" ~", "")" target="_blank">
                                            <img src="../Content/Upload/Faculty/Certificates/@Model.SSC_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="SSCPreview" />
                                        </a>
                                    }
                                    @Html.HiddenFor(model => model.SSC_facultyCertificate)

                                </td>
                            }
                        </tr>
                    }
                    else if (i == 3)
                    {
                        <tr>
                            <td class="@style" style="text-align: center; vertical-align: top;">
                                <span>UG</span>
                            </td>
                            @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "UG").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                            {
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.UG_HallticketNo, new { style = "width: 95%;text-transform:uppercase", @maxlength = "50", @class = "required", @placeholder = "UG HallTicketNo" })

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.UG_studiedEducation, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.UG_specialization, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.UG_passedYear,
                                new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                 "-- Select --", new { id = "year", style = "width: 100%;", @class = "required" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.UG_percentage, new { style = "width: 85%; text-align: center;", @class = "txtPercentage required", @onkeypress = "return isNumberKeyForPercentage(event)", @placeholder = "% of Marks / CGPA" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.UG_division,
                                new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                 "-- Select --", new { id = "divs", style = "width: 100%;", @class = "required" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.UG_university, new { style = "width: 95%", @maxlength = "50", @class = "required", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.UG_place, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style certificates" style="text-align: left; vertical-align: top;">
                                    @if (@Model.UG_facultyCertificate != null)
                                    {
                                        @Html.TextBoxFor(model => model.UG_certificate, new { type = "file", @style = "width: 180px;", @class = "" })

                                        <a href="../Content/Upload/Faculty/Certificates/@Model.UG_facultyCertificate.Replace(" ~", "")" target="_blank">
                                            @*<img src="../Content/Upload/Faculty/Certificates/@Model.UG_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="UGPreview" />*@
                                            <span style="color:red;"><b>View</b></span>
                                        </a>
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.UG_certificate, new { type = "file", @style = "width: 180px;", @class = " required" })
                                    }
                                    @Html.HiddenFor(model => model.UG_facultyCertificate)
                                </td>
                            }
                            else
                            {
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.UG_HallticketNo, new { style = "width: 95%;text-transform:uppercase", @maxlength = "50", @class = "required", @placeholder = "UG HallTicketNo" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.UG_studiedEducation)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.UG_specialization)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.UG_passedYear)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.UG_percentage)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.UG_division)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.UG_university)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.UG_place)
                                </td>
                                <td class="@style certificates" style="text-align: left; vertical-align: top;">
                                    @*@if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "certificate").Select(a => a.IsFieldEditable).FirstOrDefault() == true && Model.UG_studiedEducation != null)
                                        {
                                            if (@Model.UG_facultyCertificate != null)
                                            {
                                                @Html.TextBoxFor(model => model.UG_certificate, new { type = "file", @style = "width: 180px;", @class = "" })

                                                <a href="../Content/Upload/Faculty/Certificates/@Model.UG_facultyCertificate.Replace(" ~", "")" target="_blank">
                                                    <span style="color:red;"><b>View</b></span>
                                                </a>
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(model => model.UG_certificate, new { type = "file", @style = "width: 180px;", @class = " required" })
                                            }
                                            @Html.HiddenFor(model => model.UG_facultyCertificate)
                                        }
                                        else
                                        {
                                            if (@Model.UG_facultyCertificate != null)
                                            {
                                                <a href="../Content/Upload/Faculty/Certificates/@Model.UG_facultyCertificate.Replace(" ~", "")" target="_blank">
                                                    <img src="../Content/Upload/Faculty/Certificates/@Model.UG_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="UGPreview" />

                                                </a>
                                            }
                                            @Html.HiddenFor(model => model.UG_facultyCertificate)
                                        }*@

                                    @if (@Model.UG_facultyCertificate != null)
                                    {
                                        <a href="../Content/Upload/Faculty/Certificates/@Model.UG_facultyCertificate.Replace(" ~", "")" target="_blank">
                                            <img src="../Content/Upload/Faculty/Certificates/@Model.UG_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="UGPreview" />

                                        </a>
                                    }
                                    @Html.HiddenFor(model => model.UG_facultyCertificate)
                                    @Html.HiddenFor(model => model.UG_HallticketNo)
                                </td>
                            }
                        </tr>
                    }
                    else if (i == 4)
                    {
                        <tr>
                            <td class="@style" style="text-align: center; vertical-align: top;">
                                <span>PG</span>
                            </td>
                            @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "PG").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                            {
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.PG_HallticketNo, new { style = "width: 95%;text-transform:uppercase", @maxlength = "50", @class = "required", @placeholder = "PG HallTicketNo" })
                                    @*@Html.ValidationMessageFor(model => model.SSC_HallticketNo)*@
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.PG_studiedEducation, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.PG_specialization, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.PG_passedYear,
                                new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                 "-- Select --", new { id = "year", style = "width: 100%;", @class = "required" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.PG_percentage, new { style = "width: 85%; text-align: center;", @class = "txtPercentage required", @onkeypress = "return isNumberKeyForPercentage(event)", @placeholder = "% of Marks / CGPA" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.PG_division,
                                new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                 "-- Select --", new { id = "divs", style = "width: 100%;", @class = "required" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.PG_university, new { style = "width: 95%", @maxlength = "50", @class = "required", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.PG_place, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style certificates" style="text-align: left; vertical-align: top;">
                                    @if (@Model.PG_facultyCertificate != null)
                                    {
                                        @Html.TextBoxFor(model => model.PG_certificate, new { type = "file", @style = "width: 180px;", @class = "" })

                                        <a href="../Content/Upload/Faculty/Certificates/@Model.PG_facultyCertificate.Replace(" ~", "")" target="_blank">
                                            <span style="color:red;"><b>View</b></span>
                                        </a>
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.PG_certificate, new { type = "file", @style = "width: 180px;", @class = " required" })
                                    }
                                    @Html.HiddenFor(model => model.PG_facultyCertificate)
                                </td>
                            }
                            else
                            {
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PG_HallticketNo, new { style = "width: 95%;text-transform:uppercase", @maxlength = "50", @class = "required", @placeholder = "PG HallTicketNo" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PG_studiedEducation)
                                    @*@if (@Model.PG_studiedEducation == null)
                                        {
                                            @Html.TextBoxFor(model => model.PG_studiedEducation, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(model => model.PG_studiedEducation)
                                        }*@
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PG_specialization)
                                    @*@if (@Model.PG_studiedEducation == null)
                                        {
                                            @Html.TextBoxFor(model => model.PG_specialization, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)" })
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(model => model.PG_specialization)
                                        }*@
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PG_passedYear)
                                    @*@if (@Model.PG_studiedEducation == null)
                                            {
                                                @Html.DropDownListFor(model => model.PG_passedYear,
                                        new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                         "-- Select --", new { id = "year", style = "width: 100%;", @class = "required" })
                                            }
                                            else
                                            {
                                                @Html.DisplayFor(model => model.PG_passedYear)
                                            }*@
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PG_percentage)
                                    @*@if (@Model.PG_studiedEducation == null)
                                        {
                                            @Html.TextBoxFor(model => model.PG_percentage, new { style = "width: 85%; text-align: center;", @class = "txtPercentage required", @onkeypress = "return isNumberKeyForPercentage(event)", @placeholder = "% of Marks / CGPA" })
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(model => model.PG_percentage)
                                        }*@
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PG_division)
                                    @*@if (@Model.PG_studiedEducation == null)
                                            {
                                                @Html.DropDownListFor(model => model.PG_division,
                                        new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                         "-- Select --", new { id = "divs", style = "width: 100%;", @class = "required" })
                                            }
                                            else
                                            {
                                                @Html.DisplayFor(model => model.PG_division)
                                            }*@
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PG_university)
                                    @*@if (@Model.PG_studiedEducation == null)
                                        {
                                            @Html.TextBoxFor(model => model.PG_university, new { style = "width: 95%", @maxlength = "50", @class = "required", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(model => model.PG_university)
                                        }*@
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PG_place)
                                    @*@if (@Model.PG_studiedEducation == null)
                                        {
                                            @Html.TextBoxFor(model => model.PG_place, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(model => model.PG_place)
                                        }*@
                                </td>
                                <td class="@style certificates" style="text-align: left; vertical-align: top;">
                                    @*@if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "certificate").Select(a => a.IsFieldEditable).FirstOrDefault() == true && Model.PG_studiedEducation != null)
                                        {
                                            if (@Model.PG_facultyCertificate != null)
                                            {
                                                @Html.TextBoxFor(model => model.PG_certificate, new { type = "file", @style = "width: 180px;", @class = "" })

                                                <a href="../Content/Upload/Faculty/Certificates/@Model.PG_facultyCertificate.Replace(" ~", "")" target="_blank">
                                                    <span style="color:red;"><b>View</b></span>
                                                </a>
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(model => model.PG_certificate, new { type = "file", @style = "width: 180px;", @class = " required" })
                                            }
                                            @Html.HiddenFor(model => model.PG_facultyCertificate)
                                        }*@
                                    @*else
                                        {*@
                                    @*@if (@Model.PG_facultyCertificate != null)
                                        {
                                            <a href="../Content/Upload/Faculty/Certificates/@Model.PG_facultyCertificate.Replace(" ~", "")" target="_blank">
                                                <img src="../Content/Upload/Faculty/Certificates/@Model.PG_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="PGPreview" />
                                            </a>
                                            @Html.HiddenFor(model => model.PG_facultyCertificate)
                                        }*@

                                    @*}*@


                                    @*@if (@Model.PG_facultyCertificate == null)
                                        {
                                            @Html.TextBoxFor(model => model.PG_certificate, new { type = "file", @style = "width: 180px;", @class = " required" })
                                        }
                                        else if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "certificate").Select(a => a.IsFieldEditable).FirstOrDefault() == true && @Model.PG_studiedEducation != null)
                                        {
                                            if (@Model.PG_facultyCertificate != null)
                                            {
                                                <a href="../Content/Upload/Faculty/Certificates/@Model.PG_facultyCertificate.Replace(" ~", "")" target="_blank">
                                                    <img src="../Content/Upload/Faculty/Certificates/@Model.PG_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="PGPreview" />
                                                </a>
                                            }
                                            @Html.HiddenFor(model => model.PG_facultyCertificate)
                                        }
                                        else
                                        {
                                            if (@Model.PG_facultyCertificate != null)
                                            {
                                                <a href="../Content/Upload/Faculty/Certificates/@Model.PG_facultyCertificate.Replace(" ~", "")" target="_blank">
                                                    <img src="../Content/Upload/Faculty/Certificates/@Model.PG_facultyCertificate.Replace(" ~", "")"  style="height: 60px;" id="PGPreview" />
                                                </a>
                                            }
                                            @Html.HiddenFor(model => model.PG_facultyCertificate)
                                        }*@

                                    @if (@Model.PG_facultyCertificate != null)
                                    {
                                        <a href="../Content/Upload/Faculty/Certificates/@Model.PG_facultyCertificate.Replace(" ~", "")" target="_blank">
                                            <img src="../Content/Upload/Faculty/Certificates/@Model.PG_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="PGPreview" />
                                        </a>
                                    }
                                    @Html.HiddenFor(model => model.PG_facultyCertificate)
                                    @Html.HiddenFor(model => model.PG_HallticketNo)
                                </td>
                            }

                        </tr>
                    }
                    else if (i == 5)
                    {
                        <tr>
                            <td class="@style" style="text-align: center; vertical-align: top;">
                                <span>M.Phil / Other PG Degree</span>
                            </td>
                            @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "MPhil").Select(a => a.IsFieldEditable).FirstOrDefault() == true)// && @Model.MPhil_studiedEducation != null
                            {
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.MPhil_HallticketNo, new { style = "width: 95%;text-transform:uppercase", @maxlength = "50", @class = "", @placeholder = "MPhil HallTicketNo" })
                                    @*@Html.ValidationMessageFor(model => model.SSC_HallticketNo)*@
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.MPhil_studiedEducation, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.MPhil_specialization, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.MPhil_passedYear,
                                new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                  "-- Select --", new { id = "MPhil_passedYear", style = "width: 100%;", @class = "" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.MPhil_percentage, new { style = "width: 85%; text-align: center;", @class = "txtPercentage", @onkeypress = "return isNumberKeyForPercentage(event)", @placeholder = "% of Marks / CGPA" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.MPhil_division,
                                new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                  "-- Select --", new { id = "MPhil_division", style = "width: 100%;", @class = "" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.MPhil_university, new { style = "width: 95%", @maxlength = "50", @class = "", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.MPhil_place, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style certificates" style="text-align: left; vertical-align: top;">
                                    @if (@Model.MPhil_facultyCertificate != null)
                                    {
                                        @Html.TextBoxFor(model => model.MPhil_certificate, new { type = "file", @style = "width: 180px;", @class = "" })

                                        <a href="../Content/Upload/Faculty/Certificates/@Model.MPhil_facultyCertificate.Replace(" ~", "")" target="_blank">
                                            @*<img src="../Content/Upload/Faculty/Certificates/@Model.MPhil_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="MPhilPreview" />*@
                                            <span style="color: red;"><b>View</b></span>
                                        </a>
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.MPhil_certificate, new { type = "file", @style = "width: 180px;", @class = "" })
                                    }
                                    @Html.HiddenFor(model => model.MPhil_facultyCertificate)
                                </td>
                            }
                            else
                            {
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.MPhil_HallticketNo)
                                    @*@if (@Model.MPhil_studiedEducation == null)
                                        {
                                            @Html.TextBoxFor(model => model.MPhil_HallticketNo, new { style = "width: 95%;text-transform:uppercase", @maxlength = "50", @class = "", @placeholder = "MPhil HallTicketNo" })
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(model => model.MPhil_HallticketNo)
                                        }*@

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.MPhil_studiedEducation)
                                    @*@if (@Model.MPhil_studiedEducation == null)
                                        {
                                            @Html.TextBoxFor(model => model.MPhil_studiedEducation, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(model => model.MPhil_studiedEducation)
                                        }*@

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.MPhil_specialization)
                                    @*@if (@Model.MPhil_studiedEducation == null)
                                        {
                                            @Html.TextBoxFor(model => model.MPhil_specialization, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)" })
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(model => model.MPhil_specialization)
                                        }*@

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.MPhil_passedYear)
                                    @*@if (@Model.MPhil_studiedEducation == null)
                                            {
                                                @Html.DropDownListFor(model => model.MPhil_passedYear,
                                        new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                          "-- Select --", new { id = "MPhil_passedYear", style = "width: 100%;", @class = "" })
                                            }
                                            else
                                            {
                                                @Html.DisplayFor(model => model.MPhil_passedYear)
                                            }*@

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.MPhil_percentage)
                                    @*@if (@Model.MPhil_studiedEducation == null)
                                        {
                                            @Html.TextBoxFor(model => model.MPhil_percentage, new { style = "width: 85%; text-align: center;", @class = "txtPercentage", @onkeypress = "return isNumberKeyForPercentage(event)", @placeholder = "% of Marks / CGPA" })
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(model => model.MPhil_percentage)
                                        }*@

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.MPhil_division)
                                    @*@if (@Model.MPhil_studiedEducation == null)
                                            {
                                                @Html.DropDownListFor(model => model.MPhil_division,
                                        new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                          "-- Select --", new { id = "MPhil_division", style = "width: 100%;", @class = "" })
                                            }
                                            else
                                            {
                                                @Html.DisplayFor(model => model.MPhil_division)
                                            }*@

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.MPhil_university)
                                    @*@if (@Model.MPhil_studiedEducation == null)
                                        {
                                            @Html.TextBoxFor(model => model.MPhil_university, new { style = "width: 95%", @maxlength = "50", @class = "", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(model => model.MPhil_university)
                                        }*@

                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.MPhil_place)
                                    @*@if (@Model.MPhil_studiedEducation == null)
                                        {
                                            @Html.TextBoxFor(model => model.MPhil_place, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(model => model.MPhil_place)
                                        }*@

                                </td>
                                <td class="@style certificates" style="text-align: left; vertical-align: top;">
                                    @*@if (@Model.MPhil_studiedEducation == null)
                                        {
                                            @Html.TextBoxFor(model => model.MPhil_certificate, new { type = "file", @style = "width: 180px;", @class = "" })
                                        }
                                        else if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "certificate").Select(a => a.IsFieldEditable).FirstOrDefault() == true && @Model.MPhil_studiedEducation != null)
                                        {
                                            if (@Model.MPhil_facultyCertificate != null)
                                            {
                                                <a href="../Content/Upload/Faculty/Certificates/@Model.MPhil_facultyCertificate.Replace(" ~", "")" target="_blank">
                                                    <img src="../Content/Upload/Faculty/Certificates/@Model.MPhil_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="MPhilPreview" />
                                                </a>
                                            }
                                            @Html.HiddenFor(model => model.MPhil_facultyCertificate)
                                        }
                                        else
                                        {
                                            if (@Model.MPhil_facultyCertificate != null)
                                            {
                                                <a href="../Content/Upload/Faculty/Certificates/@Model.MPhil_facultyCertificate.Replace(" ~", "")" target="_blank">
                                                    <img src="../Content/Upload/Faculty/Certificates/@Model.MPhil_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="MPhilPreview" />
                                                </a>
                                            }
                                            @Html.HiddenFor(model => model.MPhil_facultyCertificate)
                                        }*@
                                    @if (@Model.MPhil_facultyCertificate != null)
                                    {
                                        <a href="../Content/Upload/Faculty/Certificates/@Model.MPhil_facultyCertificate.Replace(" ~", "")" target="_blank">
                                            <img src="../Content/Upload/Faculty/Certificates/@Model.MPhil_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="MPhilPreview" />
                                        </a>
                                    }
                                    @Html.HiddenFor(model => model.MPhil_facultyCertificate)
                                </td>
                            }
                        </tr>
                    }
                    else if (i == 6)
                    {
                        <tr>
                            <td class="@style" style="text-align: center; vertical-align: top;">
                                <span>Ph.D</span>
                            </td>
                            @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "PhD").Select(a => a.IsFieldEditable).FirstOrDefault() == true)//&& @Model.PhD_studiedEducation != null
                            {
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.PhD_HallticketNo, new { style = "width: 95%;text-transform:uppercase", @maxlength = "50", @class = "", @placeholder = "PhD HallTicketNo" })
                                    @*@Html.ValidationMessageFor(model => model.SSC_HallticketNo)*@
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.PhD_studiedEducation, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.PhD_specialization, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.PhD_passedYear,
                                new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                  "-- Select --", new { id = "PhD_passedYear", style = "width: 100%;", @class = "" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.PhD_percentage, new { style = "width: 85%; text-align: center;", @class = "txtPercentage", @onkeypress = "return isNumberKeyForPercentage(event)", @placeholder = "% of Marks / CGPA" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.PhD_division,
                                new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                  "-- Select --", new { id = "PhD_division", style = "width: 100%;", @class = "" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.PhD_university, new { style = "width: 95%", @maxlength = "50", @class = "", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.PhD_place, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style certificates" style="text-align: left; vertical-align: top;">
                                    @if (@Model.PhD_facultyCertificate != null)
                                    {
                                        @Html.TextBoxFor(model => model.PhD_certificate, new { type = "file", @style = "width: 180px;", @class = "" })

                                        <a href="../Content/Upload/Faculty/Certificates/@Model.PhD_facultyCertificate.Replace(" ~", "")" target="_blank">
                                            @*<img src="../Content/Upload/Faculty/Certificates/@Model.PhD_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="PHDPreview" />*@
                                            <span style="color:red;"><b>View</b></span>
                                        </a>
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.PhD_certificate, new { type = "file", @style = "width: 180px;", @class = "" })
                                    }
                                    @Html.HiddenFor(model => model.PhD_facultyCertificate)
                                </td>
                            }
                            else
                            {
                                @*<td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PhD_HallticketNo)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PhD_studiedEducation)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PhD_specialization)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PhD_passedYear)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PhD_percentage)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PhD_division)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PhD_university)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.PhD_place)
                                </td>*@
                                <td class="@style certificates" style="text-align: left; vertical-align: top;display:none;">
                                    @*@if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "certificate").Select(a => a.IsFieldEditable).FirstOrDefault() == true && @Model.PhD_studiedEducation != null)
                                        {
                                            if (@Model.PhD_facultyCertificate != null)
                                            {
                                                @Html.TextBoxFor(model => model.PhD_certificate, new { type = "file", @style = "width: 180px;", @class = "" })

                                                <a href="../Content/Upload/Faculty/Certificates/@Model.PhD_facultyCertificate.Replace(" ~", "")" target="_blank">
                                                    <span style="color:red;"><b>View</b></span>
                                                </a>
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(model => model.PhD_certificate, new { type = "file", @style = "width: 180px;", @class = "" })
                                            }
                                            @Html.HiddenFor(model => model.PhD_facultyCertificate)
                                        }
                                        else
                                        {
                                            if (@Model.PhD_facultyCertificate != null)
                                            {
                                                <a href="../Content/Upload/Faculty/Certificates/@Model.PhD_facultyCertificate.Replace(" ~", "")" target="_blank">
                                                    <img src="../Content/Upload/Faculty/Certificates/@Model.PhD_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="PHDPreview" />
                                                </a>
                                            }
                                            @Html.HiddenFor(model => model.PhD_facultyCertificate)
                                        }*@
                                    @if (@Model.PhD_facultyCertificate != null)
                                    {
                                        <a href="../Content/Upload/Faculty/Certificates/@Model.PhD_facultyCertificate.Replace(" ~", "")" target="_blank">
                                            <img src="../Content/Upload/Faculty/Certificates/@Model.PhD_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="PHDPreview" />
                                        </a>
                                    }
                                    @Html.HiddenFor(model => model.PhD_facultyCertificate)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;" colspan="9">
                                    @Html.ActionLink("PHD Details", "FacultyphdDetails", "NewOnlineRegistration", new { @fid = UAAAS.Models.Utilities.EncryptString(Model.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]) }, new { @target = "_blank", @class = "create_button" })
                                </td>
                            }
                        </tr>
                    }

                    //
                    else if (i == 7)
                    {
                        <tr>
                            <td class="@style" style="text-align: center; vertical-align: top;">
                                <span>NET/SLET</span>
                            </td>
                            @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "NET/SLET").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                            {
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.NET_HallticketNo, new { style = "width: 95%;text-transform:uppercase", @maxlength = "50", @class = "", @placeholder = "NET HallTicketNo" })
                                    @*@Html.ValidationMessageFor(model => model.SSC_HallticketNo)*@
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.NET_studiedEducation, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.NET_specialization, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DropDownListFor(model => model.NET_passedYear,
                                new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                               "-- Select --", new { id = "NET_passedYear", style = "width: 100%;", @class = "" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @*@Html.TextBoxFor(model => model.NET_percentage, new { style = "width: 85%; text-align: center;", @class = "txtPercentage", @onkeypress = "return isNumberKeyForPercentage(event)", @placeholder = "% of Marks / CGPA" })*@
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @*@Html.DropDownListFor(model => model.NET_division,
                                        new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                          "-- Select --", new { id = "PhD_division", style = "width: 100%;", @class = "" })*@
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.NET_university, new { style = "width: 95%", @maxlength = "50", @class = "", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.TextBoxFor(model => model.NET_place, new { style = "width: 90%", @maxlength = "50", @class = "", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                </td>
                                <td class="@style certificates" style="text-align: left; vertical-align: top;">
                                    @if (@Model.NET_facultyCertificate != null)
                                    {
                                        @Html.TextBoxFor(model => model.NET_certificate, new { type = "file", @style = "width: 180px;", @class = "" })

                                        <a href="../Content/Upload/Faculty/Certificates/@Model.NET_facultyCertificate.Replace(" ~", "")" target="_blank">
                                            @*<img src="../Content/Upload/Faculty/Certificates/@Model.PhD_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="PHDPreview" />*@
                                            <span style="color:red;"><b>View</b></span>
                                        </a>
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.NET_certificate, new { type = "file", @style = "width: 180px;", @class = "" })
                                    }
                                    @Html.HiddenFor(model => model.NET_facultyCertificate)
                                </td>
                            }
                            else
                            {
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.NET_HallticketNo)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.NET_studiedEducation)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.NET_specialization)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.NET_passedYear)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;"></td>
                                <td class="@style" style="text-align: center; vertical-align: top;"></td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.NET_university)
                                </td>
                                <td class="@style" style="text-align: center; vertical-align: top;">
                                    @Html.DisplayFor(model => model.NET_place)
                                </td>
                                <td class="@style certificates" style="text-align: left; vertical-align: top;">
                                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "certificate").Select(a => a.IsFieldEditable).FirstOrDefault() == true && @Model.NET_studiedEducation != null)
                                    {
                                        if (@Model.NET_facultyCertificate != null)
                                        {
                                            @Html.TextBoxFor(model => model.NET_certificate, new { type = "file", @style = "width: 180px;", @class = "" })

                                            <a href="../Content/Upload/Faculty/Certificates/@Model.NET_facultyCertificate.Replace(" ~", "")" target="_blank">

                                                <span style="color:red;"><b>View</b></span>
                                            </a>
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(model => model.NET_certificate, new { type = "file", @style = "width: 180px;", @class = "" })
                                        }
                                        @Html.HiddenFor(model => model.NET_facultyCertificate)
                                    }
                                    else
                                    {
                                        if (@Model.NET_facultyCertificate != null)
                                        {
                                            <a href="../Content/Upload/Faculty/Certificates/@Model.NET_facultyCertificate.Replace(" ~", "")" target="_blank">
                                                <img src="../Content/Upload/Faculty/Certificates/@Model.NET_facultyCertificate.Replace(" ~", "")" style="height: 60px;" id="PHDPreview" />
                                            </a>
                                        }
                                        @Html.HiddenFor(model => model.NET_facultyCertificate)
                                    }
                                </td>
                            }
                        </tr>
                    }

                    else if (i == 8)
                    {
                        <tr>
                            <td class="@style" style="text-align: center; vertical-align: top;">

                                Others &nbsp;&nbsp;@*<img id="All_Certificates" src="../Content/images/question-mark-1750942_1280.png" />*@

                            </td>
                            <td class="@style" style="text-align: center; vertical-align: top;" colspan="8"></td>
                            <td class="@style" style="text-align: left; vertical-align: top;">

                                @if (!String.IsNullOrEmpty(Model.faculty_AllCertificates))
                                {
                                    @*@Html.TextBoxFor(model => model.All_Certificates, new { type = "file", @class = "All_Certificates", @id = "All_Certificates" })*@
                                    <a href="../Content/Upload/Faculty/Certificates/CertificatesPDF/@Model.faculty_AllCertificates.Replace(" ~", "" )" target="_blank">
                                        <span style="font-weight:bold;color:red">View</span>
                                        &nbsp;&nbsp;&nbsp;
                                    </a>
                                }
                                else
                                {
                                    @*@Html.TextBoxFor(model => model.All_Certificates, new { type = "file", @class = "All_Certificates", @id = "All_Certificates" })*@
                                    @Html.ValidationMessageFor(model => model.All_Certificates)
                                }
                                @Html.HiddenFor(model => model.faculty_AllCertificates)


                            </td>

                        </tr>
                    }
                }
            </tbody>
        </table>

        <table class="faculty_table">
            <tr>
                <td class="col1" colspan="2">
                    <b>Publications</b>
                </td>
            </tr>
            <tr>
                <td class="col1" style="width: 10% !important; vertical-align: top;">
                    @Html.LabelFor(model => model.National)
                </td>
                <td class="col2" style="width: 90% !important; vertical-align: top;">
                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "National").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                    {
                        @Html.TextAreaFor(model => model.National, new { style = "width: 99%; resize:none;", @placeholder = "National", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)" })
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.National)
                        @Html.HiddenFor(model => model.National)
                    }
                </td>
            </tr>
            <tr>
                <td class="col1" style="vertical-align: top;">
                    @Html.LabelFor(model => model.InterNational)
                </td>
                <td class="col2" style="vertical-align: top;">
                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "International").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                    {
                        @Html.TextAreaFor(model => model.InterNational, new { style = "width: 99%; resize:none;", @placeholder = "InterNational", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)" })
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.InterNational)
                        @Html.HiddenFor(model => model.InterNational)
                    }
                </td>
            </tr>

            <tr>
                <td class="col1" style="vertical-align: top;">
                    @Html.LabelFor(model => model.Citation)
                </td>
                <td class="col2" style="vertical-align: top;">
                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "citation").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                    {
                        @Html.TextAreaFor(model => model.Citation, new { style = "width: 99%; resize:none;", @placeholder = "Citation", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)" })
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.Citation)
                        @Html.HiddenFor(model => model.Citation)
                    }
                </td>
            </tr>
            <tr>
                <td class="col1" style="vertical-align: top;">
                    @Html.LabelFor(model => model.Awards)
                </td>
                <td class="col2" style="vertical-align: top;">
                    @if (@Model.jntuh_registered_faculty_edit_fields.Where(e => e.fieldName == "Awards").Select(a => a.IsFieldEditable).FirstOrDefault() == true)
                    {
                        @Html.TextAreaFor(model => model.Awards, new { style = "width: 99%; resize:none;", @placeholder = "Awards", @maxlength = "500" })
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.Awards)
                        @Html.HiddenFor(model => model.Awards)
                    }
                </td>
            </tr>
        </table>
        <div id="divloading" style="line-height: 1.2rem;text-align: right;color: blue;padding-top: 8px;display:none">
            <p>Please Wait While Updating your details....</p>
        </div>

        <div style="line-height: 1.2rem;" class="right_buttons submitButton">
            @if (Model.isView != null)
            {
                <input type="submit" id="btnUpdate" value="Update" class="submit" name="Command" style="height:22px;" />
                @Html.ActionLink("Cancel", "ViewFacultyDetails", "NewOnlineRegistration", new { fid = UAAAS.Models.Utilities.EncryptString(Model.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]) }, new { @class = "create_button", @style = "width:21px;" })
            }
        </div>
    </div>

</form>
<script type="text/javascript">

    $(document).ready(function () {



    });
    @*function SaveFacultyDetails() {
        if ($('.input-validation-error').length > 0) {
            return;
        }
        else {
            var actionUrl = '@Url.Action("EditFacultyDetails", "NewOnlineRegistration", new { Command="Update",fid=ViewBag.fid  })';
            $("form").attr("enctype", "multipart/form-data");
            if (document.forms[0].checkValidity()) {
                document.forms[0].action = actionUrl;
                document.forms[0].submit();
            }
        }
    }*@
</script>
