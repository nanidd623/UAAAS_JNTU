@model UAAAS.Models.FacultyphdDetails
@{
    ViewBag.Title = "View Faculty PH.D. Details";
}
<h2>Faculty ph.D Details</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.plugin.from_html.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function() {
        var universitys = @Html.Raw(Json.Encode(Model.Universitys.Distinct()));
        var places = @Html.Raw(Json.Encode(Model.Places.Distinct()));
        var depts = @Html.Raw(Json.Encode(Model.PhdDepts.Distinct()));
        var specs = @Html.Raw(Json.Encode(Model.PhdSpecs.Distinct()));
        $("#PlaceofUniversity").on("keydown", function(event) {
            if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete("instance").menu.active) {
                event.preventDefault();
            } else if (event.keyCode == 188) {
                return false;
            }
        }).autocomplete({
            minLength: 0,
            source: function(request, response) {
                // delegate back to autocomplete, but extract the last term
                var results = $.ui.autocomplete.filter(places, extractLast(request.term));
                response(results);
            },
            focus: function() {
                // prevent value inserted on focus
                return false;
            },
            select: function(event, ui) {

                var CurrentPlace = $(this).val();
                var terms = split(this.value);
                if (terms.length <= 1) {
                    // remove the current input
                    terms.pop();
                    // add the selected item
                    terms.push(ui.item.value);
                    // add placeholder to get the comma-and-space at the end
                    terms.push("");
                    this.value = terms.join("");
                    //this.value = terms;
                    $('#' + CurrentPlace).focus();

                    return false;
                } else {
                    var last = terms.pop();
                    $(this).val(this.value.substr(0, this.value.length - last.length - 2)); // removes text from input
                    $(this).effect("highlight", {}, 1000);
                    $(this).addClass("red");
                    $("#warnings").html("<span style='color:red;'>Max people reached</span>");
                    return false;
                }
            }
        });

        $("#University").on("keydown", function(event) {
            debugger;
            if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete("instance").menu.active) {
                event.preventDefault();
            } else if (event.keyCode == 188) {
                return false;
            }
        }).autocomplete({
            minLength: 0,
            source: function(request, response) {
                // delegate back to autocomplete, but extract the last term
                var results = $.ui.autocomplete.filter(universitys, extractLast(request.term));
                response(results);
            },
            scroll: true,
            focus: function() {
                // prevent value inserted on focus
                return false;
            },
            select: function(event, ui) {
                var CurrentUniversity = $(this).val();
                var terms = split(this.value);
                if (terms.length <= 1) {
                    // remove the current input
                    terms.pop();
                    // add the selected item
                    terms.push(ui.item.value);
                    // add placeholder to get the comma-and-space at the end
                    terms.push("");
                    this.value = terms.join("");
                    //this.value = terms;
                    $('#' + CurrentUniversity).focus();

                    return false;
                } else {
                    var last = terms.pop();
                    $(this).val(this.value.substr(0, this.value.length - last.length - 2)); // removes text from input
                    $(this).effect("highlight", {}, 1000);
                    $(this).addClass("red");
                    $("#warnings").html("<span style='color:red;'>Max people reached</span>");
                    return false;
                }
            }
        });

        $("#PhdofferingDepartment").on("keydown", function(event) {
            debugger;
            if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete("instance").menu.active) {
                event.preventDefault();
            } else if (event.keyCode == 188) {
                return false;
            }
        }).autocomplete({
            minLength: 0,
            source: function(request, response) {
                // delegate back to autocomplete, but extract the last term
                var results = $.ui.autocomplete.filter(depts, extractLast(request.term));
                response(results);
            },
            scroll: true,
            focus: function() {
                // prevent value inserted on focus
                return false;
            },
            select: function(event, ui) {
                var CurrentDept = $(this).val();
                var terms = split(this.value);
                if (terms.length <= 1) {
                    // remove the current input
                    terms.pop();
                    // add the selected item
                    terms.push(ui.item.value);
                    // add placeholder to get the comma-and-space at the end
                    terms.push("");
                    this.value = terms.join("");
                    //this.value = terms;
                    $('#' + CurrentDept).focus();

                    return false;
                } else {
                    var last = terms.pop();
                    $(this).val(this.value.substr(0, this.value.length - last.length - 2)); // removes text from input
                    $(this).effect("highlight", {}, 1000);
                    $(this).addClass("red");
                    $("#warnings").html("<span style='color:red;'>Max people reached</span>");
                    return false;
                }
            }
        });

        $("#PhdSpecialization").on("keydown", function(event) {
            debugger;
            if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete("instance").menu.active) {
                event.preventDefault();
            } else if (event.keyCode == 188) {
                return false;
            }
        }).autocomplete({
            minLength: 0,
            source: function(request, response) {
                // delegate back to autocomplete, but extract the last term
                var results = $.ui.autocomplete.filter(specs, extractLast(request.term));
                response(results);
            },
            scroll: true,
            focus: function() {
                // prevent value inserted on focus
                return false;
            },
            select: function(event, ui) {
                var CurrentSpec = $(this).val();
                var terms = split(this.value);
                if (terms.length <= 1) {
                    // remove the current input
                    terms.pop();
                    // add the selected item
                    terms.push(ui.item.value);
                    // add placeholder to get the comma-and-space at the end
                    terms.push("");
                    this.value = terms.join("");
                    //this.value = terms;
                    $('#' + CurrentSpec).focus();

                    return false;
                } else {
                    var last = terms.pop();
                    $(this).val(this.value.substr(0, this.value.length - last.length - 2)); // removes text from input
                    $(this).effect("highlight", {}, 1000);
                    $(this).addClass("red");
                    $("#warnings").html("<span style='color:red;'>Max people reached</span>");
                    return false;
                }
            }
        });

        function split(val) {
            return val.split(/,\s*/);
        }

        function extractLast(term) {
            return split(term).pop();
        }

        function checkSpcialChar(event) {

            var e = window.event || event
            var keyunicode = e.charCode || e.keyCode
            //Allow alphabetical keys, plus BACKSPACE and SPACE
            return ((keyunicode >= 65 && keyunicode <= 122) || (keyunicode >= 48 && keyunicode <= 57) || keyunicode == 8 || keyunicode == 32) ? true : false
            return;
            event.returnValue = true;
        }

        //get pdf file size
        function GetNotificationFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $(".admissionletterfile")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }


        //get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            } else {
                return strName[0];
            }
        }


        //Admission Letter pdf doc
        $(function() {
            $(".admissionletterfile").change(function() {
                $("#admissionletterid").text("");
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'pdf':
                        case 'PDF':
                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    $("#admissionletterid").text("You can upload only  PDF files");
                    alert("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetNotificationFileSize(file);
                    size = size / 1048576;
                    if (size > 1) {
                        $("#admissionletterid").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $("#admissionletterid").text("");
                    }
                }

            });
        });

        //Pre-Ph.D Letter pdf Doc
        $(function() {
            $(".PrephdLetterfile").change(function() {
                $("#PrephdLetterid").text("");
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'pdf':
                        case 'PDF':

                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    $("#PrephdLetterid").text("You can upload only  PDF files");
                    alert("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetNotificationFileSize(file);
                    size = size / 1048576;
                    if (size > 1) {
                        $("#PrephdLetterid").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $("#PrephdLetterid").text("");
                    }
                }

            });
        });

        //Genuineness Letter pdf Doc
        $(function() {
            $(".GenuinenessLetterfile").change(function() {
                $("#GenuinenessLetterid").text("");
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'pdf':
                        case 'PDF':

                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    $("#GenuinenessLetterid").text("You can upload only  PDF files");
                    alert("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetNotificationFileSize(file);
                    size = size / 1048576;
                    if (size > 1) {
                        $("#GenuinenessLetterid").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $("#GenuinenessLetterid").text("");
                    }
                }

            });
        });

        //College Authentication Letter pdf Doc
        $(function() {
            $(".CollegeAuthenticationLetterfile").change(function() {
                $("#CollegeAuthenticationLetterid").text("");
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'pdf':
                        case 'PDF':

                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    $("#CollegeAuthenticationLetterid").text("You can upload only  PDF files");
                    alert("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetNotificationFileSize(file);
                    size = size / 1048576;
                    if (size > 1) {
                        $("#CollegeAuthenticationLetterid").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $("#CollegeAuthenticationLetterid").text("");
                    }
                }

            });
        });

        //Thesis Cover Page pdf Doc
        $(function() {
            $(".ThesiscoverPagefile").change(function() {
                $("#ThesiscoverPageid").text("");
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'pdf':
                        case 'PDF':

                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    $("#ThesiscoverPageid").text("You can upload only  PDF files");
                    alert("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetNotificationFileSize(file);
                    size = size / 1048576;
                    if (size > 1) {
                        $("#ThesiscoverPageid").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $("#ThesiscoverPageid").text("");
                    }
                }

            });
        });

        //OtherLetter pdf Doc
        $(function() {
            $(".OtherLetterfile").change(function() {
                $("#OtherLetterid").text("");
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'pdf':
                        case 'PDF':

                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    $("#OtherLetterid").text("You can upload only  PDF files");
                    alert("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetNotificationFileSize(file);
                    size = size / 1048576;
                    if (size > 1) {
                        $("#OtherLetterid").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $("#OtherLetterid").text("");
                    }
                }

            });
        });

        //Ph.D OD pdf Doc
        $(function() {
            $(".Phdodfile").change(function() {
                $("#Phdodid").text("");
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'pdf':
                        case 'PDF':

                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    $("#Phdodid").text("You can upload only  PDF files");
                    alert("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetNotificationFileSize(file);
                    size = size / 1048576;
                    if (size > 1) {
                        $("#Phdodid").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $("#Phdodid").text("");
                    }
                }

            });
        });

        //NOC Letter  pdf doc
        $(function() {
            $(".NoCletter").change(function() {
                $("#NoCformthecollegeid").text("");
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'pdf':
                        case 'PDF':

                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    $("#NoCformthecollegeid").text("You can upload only  PDF files");
                    alert("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetNotificationFileSize(file);
                    size = size / 1048576;
                    if (size > 1) {
                        $("#NoCformthecollegeid").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $("#NoCformthecollegeid").text("");
                    }
                }

            });
        });

        //get International Journals pdf file size
        function GetInterntJrnlsFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $(".interntjrnlsletterfile")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //International Journals Letter pdf doc
        $(function() {
            $(".interntjrnlsletterfile").change(function() {
                $("#interntjrnlsletterid").text("");
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'pdf':
                        case 'PDF':
                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    $("#interntjrnlsletterid").text("You can upload only PDF files");
                    alert("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetInterntJrnlsFileSize(file);
                    //alert(size);
                    size = size / 1048576;
                    if (size > 1) {
                        $("#interntjrnlsletterid").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $("#interntjrnlsletterid").text("");
                    }
                }
            });
        });

        //get National Journals pdf file size
        function GetNatJrnlsFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $(".natjrnlsletterfile")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //National Journals Letter pdf doc
        $(function() {
            $(".natjrnlsletterfile").change(function() {
                $("#natjrnlsletterid").text("");
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'pdf':
                        case 'PDF':
                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    $("#natjrnlsletterid").text("You can upload only PDF files");
                    alert("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetNatJrnlsFileSize(file);
                    //alert(size);
                    size = size / 1048576;
                    if (size > 1) {
                        $("#natjrnlsletterid").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $("#natjrnlsletterid").text("");
                    }
                }
            });
        });

        //get International Conferences pdf file size
        function GetInterntCnfsFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $(".intnatcnfsletterfile")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //International Conferences Letter pdf doc
        $(function() {
            $(".intnatcnfsletterfile").change(function() {
                $("#intnatcnfsletterid").text("");
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'pdf':
                        case 'PDF':
                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    $("#intnatcnfsletterid").text("You can upload only PDF files");
                    alert("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetInterntCnfsFileSize(file);
                    //alert(size);
                    size = size / 1048576;
                    if (size > 1) {
                        $("#intnatcnfsletterid").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $("#intnatcnfsletterid").text("");
                    }
                }
            });
        });

        //get National Conferences pdf file size
        function GetNatConferencesFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $(".natcnfsletterfile")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //National Conferences Letter pdf doc
        $(function() {
            $(".natcnfsletterfile").change(function() {
                $("#natcnfsletterid").text("");
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'pdf':
                        case 'PDF':
                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    $("#natcnfsletterid").text("You can upload only PDF files");
                    alert("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetNatConferencesFileSize(file);
                    //alert(size);
                    size = size / 1048576;
                    if (size > 1) {
                        $("#natcnfsletterid").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $("#natcnfsletterid").text("");
                    }
                }
            });
        });

        $(".viewDialog").live("click", function(e) {
            var url = $(this).attr('href');
            $("#dialog-view").dialog({
                title: 'View Existing Intake',
                autoOpen: false,
                resizable: false,
                height: 600,
                width: 700,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: true,
                open: function(event, ui) {
                    $(this).load(url);

                },
                buttons: {
                    "Close": function() {
                        $(this).dialog("close");

                    }
                },
                close: function(event, ui) {
                    $(this).dialog('close');
                }
            });

            $("#dialog-view").dialog('open');
            return false;
        });

        //$('form').submit(function (e) {
        //    e.preventDefault();
        //    if (!$(this).valid()) {
        //        //$("#dialog-view").dialog('open');
        //        //return false;
        //    }
        //});

        $(".Terms").click(function() {

            if ($(this).val() == "True") {
                $(".submitButton").show();
                $(".rbtn").css("background-color", "#E8EFF3");
            } else {
                $(".submitButton").hide();
            }
        });

        $('#btnsend').click(function() {
            var terms = $('input[name=Terms]:checked').val();
            if (terms == undefined) {
                var terms = $('input[name=Terms]:checked').val();

                if (terms == undefined) {
                    // alert('You must agree Terms & Conditions before Register');
                    $(".rbtn").css("background-color", "red");
                    return false;
                } else {
                    $(".rbtn").css("background-color", "#E8EFF3");
                }
            }
        });

        $(function() {
            $('#NationalJrnls').on('change', function(event) {
                //alert($(this).val());
                if ($(this).val() > 1)
                    $("#natjrnls").attr('style', 'display: block');
                else
                    $("#natjrnls").attr('style', 'display: none');
            });
        });

        $(function() {
            $('#InterNationalJrnls').on('change', function(event) {
                //alert($(this).val());
                if ($(this).val() > 1)
                    $("#interntjrnls").attr('style', 'display: block');
                else
                    $("#interntjrnls").attr('style', 'display: none');
            });
        });

        $(function() {
            $('#NationalCnfrs').on('change', function(event) {
                //alert($(this).val());
                if ($(this).val() > 1)
                    $("#natcnfs").attr('style', 'display: block');
                else
                    $("#natcnfs").attr('style', 'display: none');
            });
        });

        $(function() {
            $('#InterNationalCnfrs').on('change', function(event) {
                //alert($(this).val());
                if ($(this).val() > 1)
                    $("#intnatcnfs").attr('style', 'display: block');
                else
                    $("#intnatcnfs").attr('style', 'display: none');
            });
        });

        $(".editdilog1").live("click", function(e) {
            var url = $(this).attr("href");
            debugger;

            $("#dialog-edit").dialog({
                title: 'DECLARATION',
                autoOpen: false,
                resizable: false,
                height: 200,
                width: 850,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: true,
                closeOnEscape: true,
                open: function(event, ui) {
                    $(this).load(url);
                },
                close: function(event, ui) {
                    location.reload();
                }
            });
            $("#dialog-edit").dialog('open');
            return false;
        });
    });
</script>

<div id="dialog-edit" style="display: none">
</div>

<div class="alerttext" style="background-color: #864949; border: 1px solid #f49820; color: white; display: none;">
    <p>
        <b>Note:&nbsp;The details once submitted here, with regard to Ph.D. are not editable at later stage. Hence, the faculty member is advised to be very cautious while submitting the details.</b>
    </p>
</div>
@if (@ViewBag.ShowEditButton == true)
{
    <div style="text-align: right;">
        <p class="create_link_right">
            @Html.ActionLink("Edit PH.D", "EditFacultyphdDetails", "NewOnlineRegistration", new { @fid = ViewBag.fid }, new { @class = "create_button" })
        </p>
    </div>
}

<div id="phd-submit" style="display: none;">
    @if (@ViewBag.isPhdSubmit == true)
    {
    <div style="text-align: right;">
        <p class="create_link_right">
            @Html.ActionLink("Edit", "EditFacultyphdDetails", "NewOnlineRegistration", new { @fid = ViewBag.fid }, new { @class = "create_button" })
            <a href="/NewOnlineRegistration/SubmitPhd?facultyId=@Model.FacultyId" class=" editdilog1 create_button">
                <span>Submit PH.D</span>
            </a>
        </p>
    </div>
    }
    else
    {
    <div class="success" style="background-color: gold; border: 1px solid #f49820;">
        <p style="text-align: center; font-weight: bold">
            <strong>Success:</strong> Successfully Submitted PH.D Details
        </p>
    </div><br />
    <div style="text-align: right;">
        <p class="create_link_right">
            @Html.ActionLink("Print", "PhdFacultyDetails", "NewOnlineRegistration", new { strphdfacultyId = UAAAS.Models.Utilities.EncryptString(Model.FacultyId.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]), reg = Model.RegistrationNumber }, new { @class = "create_button" })
        </p>
    </div>
    }
</div>
@if (User.IsInRole("Admin"))
{
    <div style="text-align: right;">
        <p class="create_link_right">
            @Html.ActionLink("Print", "PhdFacultyDetails", "NewOnlineRegistration", new { strphdfacultyId = UAAAS.Models.Utilities.EncryptString(Model.FacultyId.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]), reg = Model.RegistrationNumber }, new { @class = "create_button" })
        </p>
    </div>
}
else
{
    @*<br />*@
}
@if (TempData["SUCCESS"] != null)
{
    <div class="success" style="background-color: gold; border: 1px solid #f49820;">
        <p style="text-align: center;font-weight: bold"><strong>Success:</strong> @TempData["SUCCESS"].ToString()</p>
    </div><br />
}
@if (TempData["ERROR"] != null)
{
    <div class="error" style="background-color: red; border: 1px solid #f49820;">
        <p style="text-align: center;font-weight: bold;color:white;"><strong>Error:</strong> @TempData["ERROR"].ToString()</p>
    </div><br />
}

@using (Html.BeginForm("FacultyphdDetails", "NewOnlineRegistration", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div>
        <table class="faculty_table" style="text-align: center; width: 100%">
            <tr>
                <td class="col1">
                    <span>Faculty Registration Numner</span>
                </td>
                <td class="col2">
                    @Html.DisplayFor(model => model.RegistrationNumber)
                    @Html.HiddenFor(model => model.FacultyId)
                    @Html.HiddenFor(model => model.RegistrationNumber)
                </td>
                <td class="col3">
                    <span>Name of the Faculty</span>
                </td>
                <td class="col4">
                    @Html.DisplayFor(model => model.FirstName)
                    @Html.DisplayFor(model => model.MiddleName)
                    @Html.DisplayFor(model => model.LastName)
                    @Html.HiddenFor(model => model.FirstName)
                    @Html.HiddenFor(model => model.MiddleName)
                    @Html.HiddenFor(model => model.LastName)

                </td>
            </tr>
            <tr>
                <td class="col1">College Name</td>
                <td class="col2" colspan="3">
                    <span style="color: blueviolet">@Html.DisplayFor(model => model.CollegeName) - (@Html.DisplayFor(model => model.CollegeCode))</span>
                </td>
            </tr>
        </table>
    </div>
    <br />
    <div>
        <table class="faculty_table" style="text-align: center; width: 100%">
            <tr>
                <td class="col1">
                    <span style="font-weight: bold;">1. </span><span>Course Type</span>
                </td>
                <td class="col2">
                    @*@Html.DropDownListFor(model => model.PhdType,
                                              new SelectList(ViewBag.phdtype as System.Collections.IEnumerable, "value", "text"),
                        "-- Select --", new { id = "PhdType", style = "width: 95%", @class = "required" })*@
                    @Html.DisplayFor(model => model.PhdTypeid)
                </td>
                <td class="col3" style="vertical-align: top;">
                    <span style="font-weight: bold">2. </span><span>Year of Admission</span>
                </td>
                <td class="col4" style="vertical-align: top;">
                    @*@Html.DropDownListFor(model => model.PhdAdmissionYear,
                                              new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                        "-- Select --", new { id = "PhdAdmissionYear", style = "width: 95%", @class = "required" })*@
                    @Html.DisplayFor(model => model.PhdAdmissionYear)
                </td>
            </tr>
            <tr>
                <td class="col1" style="vertical-align: top;">
                    <span style="font-weight: bold">3. </span><span>Name of the University/ Institute from where Ph.D. obtained (Don't Mention short forms)</span>
                </td>
                <td class="col2" style="vertical-align: top;">
                    @Html.DisplayFor(model => model.University)@*, @onkeypress = "return checkSpcialChar(event)"*@
                </td>
                <td class="col3" style="vertical-align: top;">
                    <span style="font-weight: bold">4. </span><span>University Address</span>
                </td>
                <td class="col4" style="vertical-align: top;">
                    @Html.DisplayFor(model => model.UniversityAddress)@*, @onkeypress = "return checkSpcialChar(event)"*@
                </td>
            </tr>
            <tr>
                <td class="col3" style="vertical-align: top;">
                    <span style="font-weight: bold">5. </span><span>University Website</span>
                </td>
                <td class="col4" style="vertical-align: top;">
                    @Html.DisplayFor(model => model.UniversityWebsite)@*, @onkeypress = "return checkSpcialChar(event)"*@
                </td>
                <td class="col3" style="vertical-align: top;">
                    <span style="font-weight: bold">6. </span><span>Place of University</span>
                </td>
                <td class="col4" style="vertical-align: top;">
                    @Html.DisplayFor(model => model.PlaceofUniversity)@*, @onkeypress = "return checkSpcialChar(event)"*@
                </td>
            </tr>
            <tr>
                <td class="col1">
                    <span style="font-weight: bold">7. </span><span>Department Offering Ph.D.</span>
                </td>
                <td class="col2">
                    @*@Html.DropDownListFor(model => model.PhdofferingDepartment,
                        new SelectList(ViewBag.phdofferingDepartmentsList as System.Collections.IEnumerable, "text", "text"),
                                                  "-- Select --", new { style = "", @class = "required" })*@
                    @Html.DisplayFor(model => model.PhdofferingDepartment)@*, @onkeypress = "return checkSpcialChar(event)"*@
                </td>
                <td class="col3" style="vertical-align: top;">
                    <span style="font-weight: bold">8. </span><span>Ph.D. Specialization</span>
                </td>
                <td class="col4" style="vertical-align: top;">
                    @*@Html.DropDownListFor(model => model.PhdSpecialization,
                        new SelectList(ViewBag.phdofferingSpecList as System.Collections.IEnumerable, "text", "text"),
                                                    "-- Select --", new { style = "", @class = "required" })*@
                    @Html.DisplayFor(model => model.PhdSpecialization)@*, @onkeypress = "return checkSpcialChar(event)"*@
                </td>
            </tr>
            <tr>
                <td class="col3" style="vertical-align: top;">
                    <span style="font-weight: bold">9. </span><span>Thesis Title</span>
                </td>
                <td class="col4" colspan="3" style="vertical-align: top;">
                    @Html.DisplayFor(model => model.PhdTitle)@*, @onkeypress = "return checkSpcialChar(event)"*@
                </td>
            </tr>
            <tr>
                <td class="col1">
                    <span style="font-weight: bold">10. </span><span>University/Institute Type from which Ph.D. Degree is awarded  </span>
                </td>
                <td class="col2">
                    @*@Html.DropDownListFor(model => model.UniversityType,
                                              new SelectList(ViewBag.universitytype as System.Collections.IEnumerable, "value", "text"),
                        "-- Select --", new { id = "UniversityType", style = "width: 95%", @class = "required" })*@
                    @Html.DisplayFor(model => model.UniversityTypeTxt)
                </td>
                <td class="col3" style="vertical-align: top;">
                    <span style="font-weight: bold">11. </span><span>Year of Award of Degree</span>
                </td>
                <td class="col4" style="vertical-align: top;">
                    @*@Html.DropDownListFor(model => model.PhdawardYear,
                                              new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                        "-- Select --", new { id = "PhdawardYear", style = "width: 95%", @class = "required" })*@
                    @Html.DisplayFor(model => model.PhdawardYear)
                </td>
            </tr>
            <tr>
                <td class="col1">
                    <span style="font-weight: bold">12. </span><span>Supervisor Name1</span>
                </td>
                <td class="col2">
                    @Html.DisplayFor(model => model.SupervisorName1)
                </td>
                <td class="col3" style="vertical-align: top;">
                    <span style="font-weight: bold">13. </span><span>Supervisor Name2</span>
                </td>
                <td class="col4" style="vertical-align: top;">
                    @Html.DisplayFor(model => model.SupervisorName2)
                </td>
            </tr>
            <tr>
                <td class="col1">
                    <span style="font-weight: bold">14. </span><span>Supervisor Name3</span>
                </td>
                <td class="col2">
                    @Html.DisplayFor(model => model.SupervisorName3)
                </td>
                <td class="col1">
                    <span style="font-weight: bold">15. </span><span>Ph.D. Notification Issued</span>
                </td>
                <td class="col2">
                    @Html.DisplayFor(model => model.PhdnotificationIssuedTxt)
                </td>

            </tr>
            <tr>
                <td class="col1" style="vertical-align: top;">
                    <span style="font-weight: bold">16. </span><span>Ph.D. Registration Number/ Hall Ticket Number</span>
                </td>
                <td class="col2" style="vertical-align: top;">
                    @Html.DisplayFor(model => model.RegistrationNumberOrHallticketNo)
                </td>
                <td class="col3">
                    <span style="font-weight: bold">17. </span><span>Admission Letter,ID Card & Hall Ticket</span>
                </td>
                <td class="col4">
                    @if (@Model.AdmissionLetterpath != null)
                    {
                        <a href="../Content/Upload/Faculty/PHDDetails/AdmissionLetters/@Model.AdmissionLetterpath.Replace("~", "")" target="_blank">
                            @*<img src="@Url.Content("../../Content/images/pdf.png")" alt="" height="18">*@
                            <span style="font-weight:bold;color:red">View</span>
                        </a>
                    }
                </td>
            </tr>
            <tr>
                <td class="col1">
                    <span style="font-weight: bold">18. </span><span>How Many Review meetings Attended</span>
                </td>
                <td class="col2" colspan="3">
                    @Html.DisplayFor(model => model.HowmanyreviewsRRMattended)
                </td>
            </tr>
            <tr>
                <td class="col1" style="vertical-align: top;">
                    <span style="font-weight: bold">19. </span><span>Number of International Publications</span>
                </td>
                <td class="col2" style="vertical-align: top;">
                    @Html.DisplayFor(model => model.InterNationalJrnls)
                </td>
                <td class="col4" colspan="2">
                    <div id="interntjrnls">
                        @if (@Model.InterNationalJrnlspath != null)
                        {
                            <a href="../Content/Upload/Faculty/PHDDetails/InternationalJournalLetters/@Model.InterNationalJrnlspath.Replace("~", "")" target="_blank">
                                @*<img src="@Url.Content("../../Content/images/pdf.png")" alt="" height="18">*@
                                <span style="font-weight:bold;color:red">View</span>
                            </a>
                        }
                    </div>
                </td>
            </tr>
            <tr>
                <td class="col1" style="vertical-align: top;">
                    <span style="font-weight: bold">20. </span><span>Number of National  Publications </span>
                </td>
                <td class="col2" style="vertical-align: top;">
                    @Html.DisplayFor(model => model.NationalJrnls)
                </td>
                <td class="col4" colspan="2">
                    <div id="natjrnls">
                        @if (@Model.NationalJrnlspath != null)
                        {
                            <a href="../Content/Upload/Faculty/PHDDetails/NationalJournalLetters/@Model.NationalJrnlspath.Replace("~", "")" target="_blank">
                                @*<img src="@Url.Content("../../Content/images/pdf.png")" alt="" height="18">*@
                                <span style="font-weight:bold;color:red">View</span>
                            </a>
                        }
                    </div>
                </td>
            </tr>
            <tr>
                <td class="col1" style="vertical-align: top;">
                    <span style="font-weight: bold">21. </span><span>Number of papers presented at International Conferences</span>
                </td>
                <td class="col2" style="vertical-align: top;">
                    @Html.DisplayFor(model => model.InterNationalCnfrs, new { style = "width: 95%", @class = "required", @required = "true", @maxlength = "5", @placeholder = "Enter International Conferences" })
                </td>
                <td class="col4" colspan="2">
                    <div id="intnatcnfs">
                        @if (@Model.InterNationalCnfrspath != null)
                        {
                            <a href="../Content/Upload/Faculty/PHDDetails/InternationalConferenceLetters/@Model.InterNationalCnfrspath.Replace("~", "")" target="_blank">
                                @*<img src="@Url.Content("../../Content/images/pdf.png")" alt="" height="18">*@
                                <span style="font-weight:bold;color:red">View</span>
                            </a>
                        }
                    </div>
                </td>
            </tr>
            <tr>
                <td class="col1" style="vertical-align: top;">
                    <span style="font-weight: bold">22. </span><span>Number of papers presented at National Conferences</span>
                </td>
                <td class="col2" style="vertical-align: top;">
                    @Html.DisplayFor(model => model.NationalCnfrs, new { style = "width: 95%", @class = "required", @required = "true", @maxlength = "5", @placeholder = "Enter National Conferences" })
                </td>
                <td class="col4" colspan="2">
                    <div id="natcnfs">
                        @if (@Model.NationalCnfrspath != null)
                        {
                            <a href="../Content/Upload/Faculty/PHDDetails/NationalConferenceLetters/@Model.NationalCnfrspath.Replace("~", "")" target="_blank">
                                @*<img src="@Url.Content("../../Content/images/pdf.png")" alt="" height="18">*@
                                <span style="font-weight:bold;color:red">View</span>
                            </a>
                        }
                    </div>
                </td>
            </tr>
            <tr>
                <td class="col1">
                    <span style="font-weight: bold">23. </span><span>How many Papers Published During PhD Work</span>
                </td>
                <td class="col2">
                    @Html.DisplayFor(model => model.HowmanypapersPublishedduringPhdWork)
                </td>
                <td class="col3" style="vertical-align: top;">
                    <span style="font-weight: bold">24. </span><span>Name of the External Examiner during thesis defence</span>
                </td>
                <td class="col4" style="vertical-align: top;">
                    @Html.DisplayFor(model => model.Externalexamineratthetimeofdefense, new { style = "width: 95%", @class = "required", @required = "true", @maxlength = "50", @placeholder = "Enter Name of the External Examiner during thesis defence" })
                </td>
            </tr>
            <tr>
                <td class="col1">
                    <span style="font-weight: bold">25. </span><span>Exact Date of Final viva</span>
                </td>
                <td class="col2">
                    @Html.DisplayFor(model => model.DateofVivaTxt)
                </td>
                <td class="col3" style="vertical-align: top;">
                    <span style="font-weight: bold">26. </span><span>Name of the BOS Chairperson at the time of Thesis Submission</span>
                </td>
                <td class="col4" style="vertical-align: top;">
                    @Html.DisplayFor(model => model.BOSChairpersonatthetimeofThesisSubmission)
                </td>
            </tr>
            <tr>
                <td class="col1">
                    <span style="font-weight: bold">27. </span><span>Date of Ph.D. Notification of the University</span>
                </td>
                <td class="col2">
                    @Html.DisplayFor(model => model.PressnotDateTxt)
                </td>
                <td class="col3" style="vertical-align: top;">
                    <span style="font-weight: bold">28. </span><span>Whether attended Convocation in person</span>
                </td>
                <td class="col4" style="vertical-align: top;">
                    @Html.DisplayFor(model => model.HaveyouattendConvocationTxt)
                </td>
            </tr>
            <tr>
                <td class="col1">
                    <span style="font-weight: bold">29. </span><span>NOC from the college to pursue Ph.D.</span>
                </td>
                <td class="col2" style="vertical-align: top;">
                    @if (@Model.NoCformthecollegepath != null)
                    {
                        <a href="../Content/Upload/Faculty/PHDDetails/NOCfromCollege/@Model.NoCformthecollegepath.Replace("~", "")" target=" _blank">
                            @*<img src="@Url.Content("../../Content/images/pdf.png")" alt="" height="18">*@
                            <span style="font-weight:bold;color:red">View</span>
                        </a>
                    }
                </td>
                <td class="col3" style="vertical-align: top;">
                    <span style="font-weight: bold">30. </span><span>Pre-Ph.D exam/equivalent result proof</span>
                </td>
                <td class="col4" style="vertical-align: top;">
                    @if (@Model.PrephdLetterpath != null)
                    {
                        <a href="../Content/Upload/Faculty/PHDDetails/PrePHDs/@Model.PrephdLetterpath.Replace("~", "")" target="_blank">
                            @*<img src="@Url.Content("../../Content/images/pdf.png")" alt="" height="18">*@
                            <span style="font-weight:bold;color:red">View</span>
                        </a>
                    }
                    else
                    {
                        @Html.Label("No")
                    }
                </td>
            </tr>
            <tr>
                <td class="col1" style="vertical-align: top;">
                    <span style="font-weight: bold">31. </span><span>Original Degree Certificate</span>
                </td>
                <td class="col2" style="vertical-align: top;">
                    @if (@Model.Phdodpath != null)
                    {
                        <a href="../Content/Upload/Faculty/PHDDetails/PHDODs/@Model.Phdodpath.Replace("~", "")" target=" _blank">
                            @*<img src="@Url.Content("../../Content/images/pdf.png")" alt="" height="18">*@
                            <span style="font-weight:bold;color:red">View</span>
                        </a>
                    }
                </td>
                <td class="col3">
                    <span style="font-weight: bold">32. </span><span>Genuineness Letter (obtain through proper channel)</span>
                </td>
                <td class="col4">
                    @if (@Model.GenuinenessLetterpath != null)
                    {
                        <a href="../Content/Upload/Faculty/PHDDetails/GenuinenessLetters/@Model.GenuinenessLetterpath.Replace("~", "")" target="_blank">
                            @*<img src="@Url.Content("../../Content/images/pdf.png")" alt="" height="18">*@
                            <span style="font-weight:bold;color:red">View</span>
                        </a>
                    }
                </td>

            </tr>
            <tr>
                <td class="col1" style="vertical-align: top;">
                    <span style="font-weight: bold">33. </span><span>College Certified Letter(Duly Signed by Principal)</span>
                </td>
                <td class="col2" style="vertical-align: top;">
                    @if (@Model.CollegeAuthenticationLetterpath != null)
                    {
                        <a href="../Content/Upload/Faculty/PHDDetails/CollegeAuthenticationLetters/@Model.CollegeAuthenticationLetterpath.Replace("~", "")" ta target="_blank">
                            @*<img src="@Url.Content("../../Content/images/pdf.png")" alt="" height="18">*@
                            <span style="font-weight:bold;color:red">View</span>
                        </a>
                    }
                </td>
                <td class="col3" style="vertical-align: top;">
                    <span style="font-weight: bold">34. </span><span>Thesis Cover Pages(including Examiner Signed Certificates)</span>
                </td>
                <td class="col4" style="vertical-align: top;">
                    @if (@Model.ThesiscoverPagepath != null)
                    {
                        <a href="../Content/Upload/Faculty/PHDDetails/ThesisPages/@Model.ThesiscoverPagepath.Replace("~", "")" target=" _blank">
                            @*<img src="@Url.Content("../../Content/images/pdf.png")" alt="" height="18">*@
                            <span style="font-weight:bold;color:red">View</span>
                        </a>
                    }
                </td>

            </tr>
            <tr>
                <td class="col1">
                    <span style="font-weight: bold">35. </span><span>Other Supporting Documents(Optional)</span>
                </td>
                <td class="col2">
                    @if (@Model.OtherLetterpath != null)
                    {
                        <a href="../Content/Upload/Faculty/PHDDetails/OtherLetters/@Model.OtherLetterpath.Replace("~", "")" target=" _blank">
                            @*<img src="@Url.Content("../../Content/images/pdf.png")" alt="" height="18">*@
                            <span style="font-weight:bold;color:red">View</span>
                        </a>
                    }
                </td>
                @*<td class="col3">
                        <span>Other Letter (Optional)</span>
                    </td>
                    <td class="col4">
                        @Html.TextBoxFor(model => model.OtherLetter, new { type = "file", @class = "OtherLetterfile" })
                    </td>*@
            </tr>
        </table>
    </div>
}
