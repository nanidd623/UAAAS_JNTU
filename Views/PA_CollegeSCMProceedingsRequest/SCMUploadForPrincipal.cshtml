
@model UAAAS.Controllers.College.SCMUploadForPrincipal
@{
    Layout = "~/Views/Shared/_PALayoutLeftMenu.cshtml";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    }
    ViewBag.Title = "SCM Upload For Principal";
    int sno = 1;
    string SCMDATEFormat = string.Empty;
}

<h2>SCM Upload For Principal</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.plugin.from_html.js")" type="text/javascript"></script>


@if (TempData["Error"] != null)
{
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
}
@if (TempData["Success"] != null)
{
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
}
<br/>
<div style="border: 1px solid orange; background: white; color: darkred;text-align: left">
    @*<span style="font-family: 'Times New Roman'; font-size: 14px;"><b>&nbsp;&nbsp;&nbsp;NOTE1 :</b><b>You are Required to upload the SCM/Ratification Documents of all the Faculty Associated with your college, in the college SCM portal.<img src="../Content/images/latest.gif" alt="latest" /></b></span><br/>*@
    <span style="font-family: 'Times New Roman'; font-size: 14px;"><b>&nbsp;&nbsp;&nbsp;NOTE :</b><b>All SCM Documents (University/Renewal) of a Principal are to be made as a single pdf and shall be uploaded against the Principal SCM Document.<img src="../Content/images/latest.gif" alt="latest" /></b></span><br />
    @*<span style="font-family: 'Times New Roman'; font-size: 14px;text-align: center"><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Designation is not Editable as on Now.</b></span>*@
</div>
<p style="text-align: right; font-style: italic; color: red; padding-right: 5px;">
    * - marked fields are mandatory
</p>
<br/>
@using (Html.BeginForm("SCMUploadForPrincipal", "PA_CollegeSCMProceedingsRequest", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div>
        <table class="faculty_table" style="text-align: center; width: 100%">
            <tr>
                <td class="col1" style="font-weight: bold; width: 30%;">
                    <span>Registation Number *</span>
                </td>
                <td class="col2" colspan="2" style="width: 70%;">
                    @Html.TextBoxFor(model => model.RegistrationNo, new { @maxlength = "25", @placeholder = "Enter Faculty Registration Number", style = "width: 40%;", @required = true })
                </td>
            </tr>
            <tr>
                <td class="col1" style="font-weight: bold; width: 30%;">
                    <span>SCM Date *</span>
                </td>
                <td class="col2" colspan="2" style="width: 70%;">
                    @Html.TextBoxFor(model => model.ScmDate, new {style = "width:200px", @class = "calendar", @placeholder = "DD/MM/YYYY", @required = true})
                </td>
            </tr>
            <tr>
                <td class="col1" style="font-weight: bold; width: 30%; vertical-align: middle">
                    <span>Principal SCM Document *</span>
                    <br/>
                    <span style="color: blue;">(PDF should be less than 1MB size)</span>
                </td>
                <td class="col2" colspan="2" style="width: 70%;">
                    <div class="editor-field PrincipalDocuments">
                        @Html.TextBoxFor(model => model.PrincipalDocument, new {type = "file", @class = "PrincipalDocument required", @id = "PrincipalDocument"})
                        <br/>
                        <span style="color: red;"></span>
                    </div>

                </td>
            </tr>

        </table>    
        <div style="text-align: right">
            <p style="text-align: right">
                <input type="submit" value="Submit" id="btnsend" name="cmd" />
            </p>
        </div>
    </div>
}

@using (Html.BeginForm("", "", FormMethod.Post, new { }))
{
    if (ViewBag.SCMUPLOADEDDATA.Count != 0)
    {
        <div style="margin-top: 20px;">

            <h2>Principal SCM Uploaded List</h2><br />

            <table id="example" class="display" style="width: 100%">
                <thead>
                    <tr>
                        <th>S.No.</th>
                        <th>Registration Number</th>
                        <th>SCM Date</th>
                        <th style="text-align: center">Principal</th>
                        <th style="text-align: center">Delete</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ViewBag.SCMUPLOADEDDATA)
                    {
                        SCMDATEFormat = "";
                        if (@item.ScmDateView != null)
                        {
                            SCMDATEFormat = UAAAS.Models.Utilities.MMDDYY2DDMMYY(@item.ScmDateView.ToString());
                        }

                        <tr>
                            <td>
                                @(sno++)
                                @Html.HiddenFor(m => m.CollegeId)
                                @Html.HiddenFor(m => m.SpecializationId)
                                @Html.HiddenFor(m => m.DegreeId)
                                @Html.HiddenFor(m => m.DepartmentId)
                            </td>
                            <td>@item.RegistrationNo</td>
                            <td>@SCMDATEFormat</td>
                            <td style="text-align: center">
                                @if (!string.IsNullOrEmpty(item.PrincipalDocumentView))
                                {
                                    <a href="../Content/Upload/SCMUploads/@item.PrincipalDocumentView" target="_blank" class="">
                                        <img src="@Url.Content("../../Content/images/pdf.png")" alt="Professor" height="18">
                                    </a>
                                }
                                else
                                {
                                    <span>---</span>
                                }

                            </td>
                            <td style="text-align: center">
                                @Html.ActionLink("Delete", "DeleteSCMUploadForPrincipal", new { Id = @item.Id }, new { @class = "delete_button confirrm" })
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <th>
                            <input type="text" id="i-0" style="width: 90%; text-align: left; display: none;" class="search_init">
                        </th>
                        <th>
                            <input type="text" id="i-1" style="width: 60%; text-align: left;" class="search_init">
                        </th>
                        <th>
                            <input type="text" id="i-2" style="width: 60%; text-align: left;" class="search_init">
                        </th>
                        <th>
                            <input type="text" id="i-3" style="width: 60%; text-align: left;" class="search_init">
                        </th>
                        <th>
                            <input type="text" id="i-4" style="width: 90%; text-align: left; display: none;" class="search_init">
                        </th>
                    </tr>
                </tfoot>
            </table>
        </div>
    }
}
<div id="dialog-confirm" style="display:none">Are you sure to delete this Registraton SCM?</div>






<script type="text/javascript">
    var asInitVals = new Array();
    $(document).ready(function () {

        /* Initialize table and make first column non-sortable*/
        var oTable = $('#example').dataTable({
            "bJQueryUI": true,
            "iDisplayLength": 5000,
            "bStateSave": false,
            "sDom": '<"top"lfip>rt<"bottom"ip<"clear">',
            //"sPaginationType": "full_numbers",
            "oLanguage": {
                "sSearch": "Search all columns:",
                "oPaginate": {
                    "sFirst": "",
                    "sLast": "",
                    "sNext": "",
                    "sPrevious": ""
                }
            },
            "fnInitComplete": function () {
                var oSettings = $('#example').dataTable().fnSettings();
                for (var i = 0; i < oSettings.aoPreSearchCols.length; i++) {
                    if (oSettings.aoPreSearchCols[i].sSearch.length > 0) {
                        $("tfoot input")[i].value = oSettings.aoPreSearchCols[i].sSearch;
                        $("tfoot input")[i].className = "";
                    }
                }
            },
            "aoColumns": [{ "bSortable": true, "bSearchable": true }, null, null,null,null],
            //"aoColumns": [{ type: "select", values: ['Gecko', 'Trident', 'KHTML', 'Misc', 'Presto', 'Webkit', 'Tasman'] },{ type: "text" },null,{ type: "number" },{ type: "select" }]
        });
        /*
         * Support functions to provide a little bit of 'user friendlyness' to the textboxes in
         * the footer
         */
        $("tfoot input").each(function (i) {
            asInitVals[i] = this.value;
        });
        $("tfoot input").focus(function () {
            if (this.className == "search_init") {
                this.className = "";
                this.value = "";
            }
        });
        $("tfoot input").blur(function (i) {
            if (this.value == "") {
                this.className = "search_init";
                this.value = asInitVals[$("tfoot input").index(this)];
            }
        });

        $("tfoot input").keyup(function () {
            /* Filter on the column (the index) of this element */
            oTable.fnFilter(this.value, $("tfoot input").index(this));
        });


        //get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            } else {
                return strName[0];
            }
        }


        //get Professor pdf file size
        function GetNotificationFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#PrincipalDocument")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //change function for Professor pdf doc
        $(".PrincipalDocument").change(function () {
            debugger;
            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {

                    case 'pdf':
                    case 'PDF':

                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                $(".PrincipalDocuments > span").text("You can upload only  PDF files");
                $(this).val('');
                return false;
            } else {
                var size = GetNotificationFileSize(file);
                size = size / 1048576;
                if (size > 1) {
                    $(".PrincipalDocuments > span").text("Document should not exceed 1 MB in Size");
                    $(this).val('');
                } else {

                    $(".PrincipalDocuments > span").text("");
                }
            }

        });


        $(".confirrm").live("click", function (e) {
            var url = $(this).attr("href");
            // var mid = $(this).attr("mid");
            //var url = '/Admin/DeleteAuditor?Id=' +500;
            $("#dialog-confirm").dialog({
                title: 'Delete SCM',
                autoOpen: false,
                resizable: false,
                height: 170,
                width: 350,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: true,
                buttons: {
                    "Yes": function () {
                        $(this).dialog("close");
                        window.location = url;

                    },
                    "No": function () {
                        $(this).dialog("close");

                    }
                }
            });

            $("#dialog-confirm").dialog('open');
            return false;
        });

    });
</script>