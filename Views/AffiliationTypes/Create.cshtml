@model UAAAS.Models.CollegeInformation
@using UAAAS.Models
@{
    Layout = "~/Views/Shared/_PALayoutLeftMenu.cshtml";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    }
    ViewBag.Title = "Affiliation Information";
    int isSelectedOtherCategory = 1;
}
<style type="text/css">
    .tableformat{
        font-size:20px;
    }

</style>

<h2>Accreditation Status of College</h2><br />

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $(".calendar, .year").css("width", "75px");

        //debugger;
        $(".collegestatustr").attr('style', 'display: none');
        var csid = $("#status :selected").val();
        if (csid==1) {
            $(".collegestatustr").attr('style', 'display: block');

        } else {
            $(".collegestatustr").attr('style', 'display: none');
        }
        //$("#collegestatustr").attr('style', 'display: none');
        //College Status
        $("#status").change(function() {
            //debugger;
            var status = $(this).val();
            if (status==1) {
                $(".collegestatustr").attr('style', 'display: block');
                $("#status_edit").attr('style', 'display: block');
                $("#status_edit").attr('style', 'float: right');
                $("#status :selected").val("1");

            } else {
                $(".collegestatustr").attr('style', 'display: none');
                $("#status_edit").attr('style', 'display: none');
                $("#status :selected").val("2");
            }
        });


        $(".calendarnew").css("width","160px");

        $('.calendarnew').attr("readonly", "true");
        $('.calendarnew').datepicker({
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            minDate:"-180M",
            maxDate: "+180M",
            yearRange:'2000:2050',
            showOn: "button",
            buttonImage: "@Url.Content("~/Content/themes/base/images/calendar.gif")",
            buttonImageOnly: true
        });

        if($("#state").val() > 0)
        {
            GetDistricts($("#state").val());
        }

        @*$("#state").change(function () {
            var stateID = $(this).val();
            GetDistricts(stateID);
        });

        function GetDistricts(stateID){
            $.getJSON("/PA_CollegeInformation/GetDistrictList", { id: stateID },
                function (myData) {
                    var select = $("#district");
                    select.empty();
                    select.append($('<option/>', {
                        value: '',
                        text: '-- Select --'
                    }));
                    $.each(myData, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.Value,
                            text: itemData.Text,
                            selected : (itemData.Value == @Model.districtId ? true: false)
                        }));
                    });
                });}*@

        $(".Supportingfile").change(function () {

            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'pdf':
                    case 'PDF':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                alert("You can upload only  PDF files");
                $(this).val('');
                return false;
            } else {
                var size = GetFileSize(file, "Documentfile");
                size = size / 1048576;
                if (size > 0.2000000000000000) {
                    alert("Document should not exceed 200 KB in Size");
                    $(this).val('');
                } else {

                }
            }

        });

        //get file size
        function GetFileSize(fileid, title) {

            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject,
                    //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#" + title)[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }

                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            } else {
                return strName[0];
            }
        }

        $.ajaxSetup({ cache: false });

        var $myDialog = $("#dialog-edit").dialog({
            title: '',
            autoOpen: false,
            resizable: false,
            height: 500,
            //height: 550,
            //width: 820,
            width: 720,
            show: { effect: 'drop', direction: "up" },
            modal: true,
            draggable: true,
            closeOnEscape: true,
            open: function (event, ui) {
                $(this).load(url);
            },
            close: function (event, ui) {
                $(this).dialog("close");
            }
        });

        $(".confirmDialog_UGC").live("click", function (e) {

            var url = $(this).attr('href');
            //debugger;
            var UGC_value=  $("#hdn_UGC").val();
            $("#dialog-confirm").dialog({
                title: 'Delete Affiliation',
                autoOpen: false,
                resizable: false,
                height: 170,
                width: 400,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: true,
                buttons: {
                    "Yes": function () {
                        $.ajax({
                            type: "POST",
                            url: "/UGC/DeleteStatus",
                            data: '{affiliationId: '+UGC_value+' }',
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (response) {
                                //debugger
                                if(response.success)
                                {
                                    window.location.reload();
                                }
                                //window.location = "/AffiliationTypes/Create";
                            }
                            //failure: function (response) {
                            //    alert(response.responseText);
                            //},
                            //error: function (response) {
                            //    alert(response.responseText);
                            //}
                        });
                        $(this).dialog("close");
                        //window.location = "/AffiliationTypes/Create";
                        //window.location = url;
                    },
                    "No": function () {
                        $(this).dialog("close");

                    }
                }
            });
            $("#dialog-confirm").dialog('open');
            return false;
        });

        $(".confirmDialog_NAAC").live("click", function (e) {

            var url = $(this).attr('href');
            debugger;
            var NAAC_value=  $("#hdn_NAAC").val();
            $("#dialog-confirm").dialog({
                title: 'Delete Affiliation',
                autoOpen: false,
                resizable: false,
                height: 170,
                width: 400,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: true,
                buttons: {
                    "Yes": function () {
                        $.ajax({
                            type: "POST",
                            url: "/NAAC/DeleteStatus",
                            data: '{affiliationId: '+NAAC_value+' }',
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (response) {
                                debugger
                                if(response.success)
                                {
                                    window.location.reload();
                                }
                                //window.location = "/AffiliationTypes/Create";
                            }
                            //failure: function (response) {
                            //    alert(response.responseText);
                            //},
                            //error: function (response) {
                            //    alert(response.responseText);
                            //}
                        });
                        $(this).dialog("close");
                        //window.location = "/AffiliationTypes/Create";
                        //window.location = url;
                    },
                    "No": function () {
                        $(this).dialog("close");

                    }
                }
            });
            $("#dialog-confirm").dialog('open');
            return false;
        });

        $(".confirmDialog_PA").live("click", function (e) {

            var url = $(this).attr('href');
            //debugger;
            var PA_value=  $("#hdn_PA").val();
            $("#dialog-confirm").dialog({
                title: 'Delete Affiliation',
                autoOpen: false,
                resizable: false,
                height: 170,
                width: 400,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: true,
                buttons: {
                    "Yes": function () {
                        $.ajax({
                            type: "POST",
                            url: "/PermanentAffiliation/DeleteStatus",
                            data: '{affiliationId: '+PA_value+' }',
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (response) {
                                //debugger
                                if(response.success)
                                {
                                    window.location.reload();
                                }
                                //window.location = "/AffiliationTypes/Create";
                            }
                            //failure: function (response) {
                            //    alert(response.responseText);
                            //},
                            //error: function (response) {
                            //    alert(response.responseText);
                            //}
                        });
                        $(this).dialog("close");
                        //window.location = "/AffiliationTypes/Create";
                        //window.location = url;
                    },
                    "No": function () {
                        $(this).dialog("close");

                    }
                }
            });
            $("#dialog-confirm").dialog('open');
            return false;
        });
    });

    function isNumberKey(evt){
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
        {
            alert("Allows Only Digits");
            return false;
        }
        else
        {
            return true;
        }
    }
</script>

@using (Html.BeginForm("Edit", "AffiliationTypes", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.Hidden("DisableYourControls", System.Configuration.ConfigurationManager.AppSettings["ShouldFormsBeDisabled"].ToString());

    @Html.ValidationSummary(true)
    if (ViewBag.NotUpload == true)
    {
        <span class="notUpload">You can not upload data Please contact Affiliations & Academic Audit if you want to upload</span>
    }
    else
    {
        if (TempData["Error"] != null)
        {
            <div class="error">
                <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
            </div>
            <br />
        }
        if (TempData["Success"] != null)
        {
            <div class="success">
                <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
            </div>
            <br />
        }
        if (ViewBag.NotUpload == true)
        {
            <span class="notUpload">You can not upload data Please contact Affiliations & Academic Audit if you want to upload</span>
        }
        else
        {
            <table class="four_columns">
                <tr>
                    <td class="col1" colspan="4">
                        <b>Affiliation Information</b>
                    </td>
                </tr>

                @*<tr>
                        <td class="col1">
                            @Html.LabelFor(model => model.collegeStatusID)
                            <span class="collegestatustr">
                                <br />Minority Status
                            </span>
                        </td>
                        <td class="col2">
                            @Html.DropDownListFor(model => model.collegeStatusID,
                            new SelectList(ViewBag.Status as System.Collections.IEnumerable, "id", "collegeStatus"),
                            "-- Select --", new { id = "status" })
                            <span class="collegestatustr">
                                @Html.HiddenFor(model => model.minortyid)
                                <br />@Html.DropDownListFor(model => model.collegesubstatusId,
                                      new SelectList(ViewBag.SubStatus as System.Collections.IEnumerable, "id", "collegeStatus"),
                                      "-- Select --", new { id = "substatus" })
                            </span>

                            @Html.ValidationMessageFor(model => model.collegesubstatusId)
                        </td>
                        <td class="col1">
                            <table style="width: 100%" class="collegestatustr">
                                <tr>
                                    <td style="height: 25px; text-align: left;">From:</td>
                                </tr>
                                <tr>
                                    <td style="height: 25px; text-align: left;">To:</td>
                                </tr>
                                <tr>
                                    <td style="height: 25px; text-align: left;">Supporting Document:</td>
                                </tr>
                            </table>
                        </td>
                        <td class="col21">
                            <table style="width: 100%" class="collegestatustr">
                                <tr>
                                    <td>
                                        @Html.DisplayFor(model => model.collegestatusfromdate, new { @id = "collegestatusfrom", @class = "calendarnew", style = "width=200px" })
                                        @Html.ValidationMessageFor(model => model.collegestatusfromdate)
                                    </td>
                                </tr>
                                <tr>
                                    <td style="height: 25px; width: 120px;">
                                        @Html.DisplayFor(model => model.collegestatustodate, new { @id = "collegestatuto", @class = "calendarnew required" })
                                        @Html.ValidationMessageFor(model => model.collegestatusfromdate)
                                    </td>
                                </tr>
                                <tr>
                                    <td style="height: 25px; width: 55px;">
                                        @if (@Model.collegestatusfilepath == null)
                                        {
                                            @Html.DisplayFor(model => model.collegestatusfile, new { @type = "file", @class = "required Supportingfile" })
                                            @Html.ValidationMessageFor(model => model.collegestatusfile)
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(model => model.collegestatusfile, new { @type = "file", @class = "Supportingfile" })
                                            <a href="~/Content/Upload/College/CollegeStatus/@Model.collegestatusfilepath" target="_blank">
                                                <span style="color: red;"><b>View</b></span>
                                            </a>
                                            @Html.HiddenFor(model => model.collegestatusfilepath)
                                        }
                                    </td>
                                </tr>
                            </table>
                        @Html.ActionLink("View Previous Statuses", "View", "Minority", new { collegeStatus = Model.collegeStatus }, new {@id="status_edit", @class = "create_button", @style = "float:right;", @target = "_blank" })
                    </td>

                    </tr>*@



                @{int rowNo = 1;}
                @foreach (var item in Model.affiliationType)
                {
                    var txtFromId = "txtfrom_" + @rowNo;
                    var txtToId = "txtto_" + @rowNo;
                    var txtDuration = "txtDuration_" + @rowNo;
                    var rdoAffilitionId = "rdoAffilitionId_" + @rowNo;
                    var lblAffilitionId = "lblAffilitionId_" + @rowNo;
                    var fieldAffilitionId = "fieldAffilitionId_" + @rowNo;
                    var selectedAffiliation = "affiliationTypeId" + @rowNo;
                    var selectedAffiliationNew = "affiliationTypeIdNew" + @rowNo;
                    var fromDate = "affiliationFromDate" + @rowNo;
                    var toDate = "affiliationToDate" + @rowNo;
                    var duration = "affiliationDuration" + @rowNo++;
                    var txtFile = "txtFile" + @rowNo;
                    var file = "affiliationfile" + @rowNo++;


                    <tr>
                        <td class="col1">
                            @item.name
                        </td>
                        
                        <td class="col2" id="@rdoAffilitionId">
                        
                            @if (Model.affiliationId1 != null)
                            {
                                @Html.HiddenFor(model => model.affiliationId1, new { @id = "hdn_UGC", @Value = "'" + Utilities.EncryptString(Model.affiliationId1.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]).ToString() + "'" })

                            }
                            @if (Model.affiliationId3 != null)
                            {
                                @Html.HiddenFor(model => model.affiliationId3, new { @id = "hdn_NAAC", @Value = "'" + Utilities.EncryptString(Model.affiliationId3.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]).ToString() + "'" })
                            }
                            @if (Model.affiliationId5 != null)
                            {
                                @Html.HiddenFor(model => model.affiliationId5, new { @id = "hdn_PA", @Value = "'" + Utilities.EncryptString(Model.affiliationId5.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]).ToString() + "'" })
                            }

                            @if (@selectedAffiliation == "affiliationTypeId1")
                            {
                                //string id = Utilities.EncryptString(@item.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]).ToString();
                                <label>@Html.RadioButtonFor(model => model.affiliationSelected1, 1, new { @id = "affiliationSelected1Yes", @onclick = "func_UGC(" + "'" + Utilities.EncryptString(@item.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]).ToString() + "'" + ")" }) Yes</label>
                                <label>@Html.RadioButtonFor(model => model.affiliationSelected1, 2, new { @id = "affiliationSelected1No", @class = "confirmDialog_UGC" }) No</label>
                                @*@Html.ActionLink("Edit Previous Statuses", "Edit", "UGC", new { affiliationTypeId = Utilities.EncryptString(item.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]).ToString() }, new { @id = "ugc_edit", @class = "create_button", @style = "float:bottom-right;" })*@
                            }
                            else if (@selectedAffiliation == "affiliationTypeId2")
                            {
                                <label>@Html.RadioButtonFor(model => model.affiliationSelected2, 1, new { @id = "affiliationSelected2Yes" }) Yes</label>
                                <label>@Html.RadioButtonFor(model => model.affiliationSelected2, 2, new { @id = "affiliationSelected2No" }) No</label>
                            }
                            else if (@selectedAffiliation == "affiliationTypeId3")
                            {
                                <label>@Html.RadioButtonFor(model => model.affiliationSelected3, 1, new { @id = "affiliationSelected3Yes", @onclick = "func_NAAC(" + "'" + Utilities.EncryptString(@item.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]).ToString() + "'" + ")" }) Yes</label>
                                <label>@Html.RadioButtonFor(model => model.affiliationSelected3, 2, new { @id = "affiliationSelected3No", @class = "confirmDialog_NAAC" }) No</label>
                            }
                            else if (@selectedAffiliation == "affiliationTypeId5")
                            {
                                <label>@Html.RadioButtonFor(model => model.affiliationSelected5, 1, new { @id = "affiliationSelected5Yes", @onclick = "func_PA(" + "'" + Utilities.EncryptString(@item.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]).ToString() + "'" + ")" }) Yes</label>
                                <label>@Html.RadioButtonFor(model => model.affiliationSelected5, 2, new { @id = "affiliationSelected5No", @class = "confirmDialog_PA" }) No</label>
                            }

                        </td>
                        <td class="col3" id="@lblAffilitionId" style="width:28%">
                            <table style="width: 90%;">
                                <tr>
                                    @if (@item.name.Contains("NAAC"))
                                    {
                                        <td>Validity of NAAC Accreditation</td>
                                    }
                                    else if (@item.name.Contains("Permanent"))
                                    {
                                        <td>Validity of Permanent Affiliation</td>
                                    }
                                    else
                                    {
                                        <td>Validity of Autonomous Status</td>
                                    }

                                    <td style="height: 25px; text-align: right; width: 55px;" colspan="2">From :</td>
                                </tr>
                                <tr>
                                    @if (@item.name != "NBA Status")
                                    {
                                        <td></td>
                                        <td style="height: 25px; text-align: right; width: 60px;" colspan="2">To :</td>
                                    }
                                </tr>
                                <tr>
                                    <td></td>
                                    <td style="height: 25px; text-align: right; width: 60px;">Duration :</td>
                                </tr>
                                <tr>
                                    @*<td></td>*@
                                    <td style="height: 25px; text-align: right; width: 60px;" colspan="2">Supporting Document:</td>
                                </tr>
                                @if (@item.name.Contains("NAAC"))
                                {
                                    <tr>
                                        <td>
                                        </td>
                                        <td style="height: 25px; text-align: right;">
                                            @Html.LabelFor(model => model.affiliationGrade) :
                                        </td>
                                    </tr>
                                    <tr>
                                        <td></td>
                                        <td style="height: 25px; text-align: right;">
                                            @Html.LabelFor(model => model.affiliationCGPA) :
                                        </td>
                                    </tr>
                                }
                            </table>
                        </td>
                        <td class="col4 readonly" id="@fieldAffilitionId">
                            <table style="width: 100%">
                                <tbody></tbody>
                                <tr>
                                   
                                    <td colspan="2">
                                        @if (@selectedAffiliation == "affiliationTypeId1")
                                        {
                                            var value = string.Empty;
                                            @Html.HiddenFor(model => model.affiliationTypeId1, new { @Value = item.id })
                                            <span>
                                                
                                                @Html.DisplayFor(model => model.affiliationFromDate1, new { @id = "fromDate1", @name = "@fromDate", @class = "calendarnew" })
                                            </span>
                                            
                                            @Html.ValidationMessageFor(model => model.affiliationFromDate1)
                                        }
                                        else if (@selectedAffiliation == "affiliationTypeId3")
                                        {
                                            @Html.HiddenFor(model => model.affiliationTypeId3, new { @Value = item.id })
                                            <span>
                                                @Html.DisplayFor(model => model.affiliationFromDate3, new { @id = "fromDate3", @name = "@fromDate", @class = "calendarnew" })
                                            </span>
                                            
                                            @Html.ValidationMessageFor(model => model.affiliationFromDate3)
                                        }
                                        else if (@selectedAffiliation == "affiliationTypeId5")
                                        {
                                            @Html.HiddenFor(model => model.affiliationTypeId5, new { @Value = item.id })
                                            @Html.DisplayFor(model => model.pa_affiliationFromDate5, new { @id = "fromDate5", @name = "@fromDate", @class = "calendarnew" })
                                            @Html.ValidationMessageFor(model => model.pa_affiliationFromDate5)
                                        }

                                        <br />
                                        <div style="height: 10px;"></div>

                                        @if (@selectedAffiliation == "affiliationTypeId1")
                                        {
                                            <span>
                                               
                                                @Html.DisplayFor(model => model.affiliationToDate1, new { @id = "toDate1", @name = "@fromDate", @class = "calendarnew" })
                                            </span>
                                            
                                            @Html.ValidationMessageFor(model => model.affiliationToDate1)
                                        }
                                        else if (@selectedAffiliation == "affiliationTypeId3")
                                        {
                                            @Html.DisplayFor(model => model.affiliationToDate3, new { @id = "toDat3e", @name = "@fromDate", @class = "calendarnew" })
                                            @Html.ValidationMessageFor(model => model.affiliationToDate3)
                                        }
                                        else if (@selectedAffiliation == "affiliationTypeId5")
                                        {
                                            @Html.DisplayFor(model => model.pa_affiliationToDate5, new { @id = "toDat3e", @name = "@fromDate", @class = "calendarnew" })
                                            @Html.ValidationMessageFor(model => model.pa_affiliationToDate5)
                                        }

                                        <br />
                                        <div style="height: 6px;"></div>

                                        @if (@selectedAffiliation == "affiliationTypeId1")
                                        {
                                         
                                            @Html.DisplayFor(model => model.affiliationDuration1, new { @id = "@txtDuration", @name = "@duration" })
                                            @Html.ValidationMessageFor(model => model.affiliationDuration1)
                                        }
                                        else if (@selectedAffiliation == "affiliationTypeId3")
                                        {
                                            @Html.DisplayFor(model => model.affiliationDuration3, new { @id = "@txtDuration", @name = "@duration" })
                                            @Html.ValidationMessageFor(model => model.affiliationDuration3)
                                        }
                                        else if (@selectedAffiliation == "affiliationTypeId5")
                                        {
                                            @Html.DisplayFor(model => model.pa_affiliationDuration5, new { @id = "@txtDuration", @name = "@duration" })
                                            @Html.ValidationMessageFor(model => model.pa_affiliationDuration5)
                                        }
                                        <br />
                                        <div style="height: 10px;"></div>
                                        @if (@selectedAffiliation == "affiliationTypeId1")
                                        {
                                            if (Model.affiliationfilepath1 != null)
                                            {
                                                
                                               
                                                @Html.DisplayFor(model => model.affiliationfile1, new { type = "file", @id = "@txtFile", @name = "@file" })
                                                <a href="~/Content/Upload/College/UGC/@Model.affiliationfilepath1" target="_blank">
                                                    <span style="color: red;"><b>View</b></span>
                                                </a>
                                                @Html.ValidationMessageFor(model => model.affiliationfile1)
                                                @Html.HiddenFor(model => model.affiliationfilepath1)
                                            }
                                            else
                                            {
                                                @Html.DisplayFor(model => model.affiliationfile1, new { type = "file", @id = "@txtFile", @name = "@file", @class = "required" })
                                            }

                                        }
                                        else if (@selectedAffiliation == "affiliationTypeId3")
                                        {
                                            if (Model.affiliationfilepath3 != null)
                                            {
                                                @Html.DisplayFor(model => model.affiliationfile3, new { type = "file", @id = "@txtFile", @name = "@file", @class = "Supportingfile" })
                                                <a href="~/Content/Upload/College/NAAC/@Model.affiliationfilepath3" target="_blank">
                                                    <span style="color: red;"><b>View</b></span>
                                                </a>
                                                @Html.ValidationMessageFor(model => model.affiliationfile3)
                                                @Html.HiddenFor(model => model.affiliationfilepath3)
                                            }
                                            else
                                            {
                                                @Html.DisplayFor(model => model.affiliationfile3, new { type = "file", @id = "@txtFile", @name = "@file", @class = "required Supportingfile" })
                                            }
                                        }
                                        else if (@selectedAffiliation == "affiliationTypeId5")
                                        {
                                            if (Model.pa_affiliationfilepath5 != null)
                                            {
                                                @Html.DisplayFor(model => model.pa_affiliationfile5, new { type = "file", @id = "@txtFile", @name = "@file", @class = "Supportingfile" })
                                                <a href="~/Content/Upload/College/PA/@Model.pa_affiliationfilepath5" target="_blank">
                                                    <span style="color: red;"><b>View</b></span>
                                                </a>
                                                @Html.ValidationMessageFor(model => model.pa_affiliationfile5)
                                                @Html.HiddenFor(model => model.pa_affiliationfilepath5)
                                            }
                                            else
                                            {
                                                @Html.DisplayFor(model => model.pa_affiliationfile5, new { type = "file", @id = "@txtFile", @name = "@file", @class = "required Supportingfile" })
                                            }
                                        }

                                        @if (@item.name.Contains("NAAC"))
                                        {
                                            <div style="height: 3px;"></div>
                                           
                                            @Html.DisplayFor(model => model.affiliationGrade, new { style = "width:100px" })
                                            @Html.ValidationMessageFor(model => model.affiliationGrade)

                                            <div style="height: 3px;"></div>
                                            @Html.DisplayFor(model => model.affiliationCGPA, new { style = "width:100px" })
                                            @Html.ValidationMessageFor(model => model.affiliationCGPA)
                                        }
                                    </td>
                                </tr>
                            </table>
                            @if (@item.name.Contains("UGC") && Model.affiliationId1 != null)
                            {
                                @Html.ActionLink("Edit", "Edit", "UGC", new { affiliationTypeId = Utilities.EncryptString(item.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]).ToString() }, new { @id = "ugc_edit", @class = "create_button", @style = "float:right;" })
                            }
                            @if (@item.name.Contains("NAAC") && Model.affiliationId3 != null)
                            {
                                @Html.ActionLink("Edit", "Edit", "NAAC", new { affiliationTypeId = Utilities.EncryptString(item.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]).ToString() }, new { @id = "naac_edit", @class = "create_button", @style = "float:right;" })
                            }
                            @if (@item.name.Contains("Permanent") && Model.affiliationId5 != null)
                            {
                                @Html.ActionLink("Edit", "Edit", "PermanentAffiliation", new { affiliationTypeId = Utilities.EncryptString(item.id.ToString(), System.Web.Configuration.WebConfigurationManager.AppSettings["CryptoKey"]).ToString() }, new { @id = "pa_edit", @class = "create_button", @style = "float:right;" })
                            }
                        </td>

                    </tr>
                }
                @*<tr class="right_buttons">
                        <td style="line-height: 1.2rem;" colspan="4">
                            <input type="submit" value="Save" onclick="return Validate();" />
                        </td>
                    </tr>*@
                <script type="text/javascript">
                    if(@Model.affiliationSelected1 == 1)
                    {
                        $("#lblAffilitionId_1 table").attr('style', 'display: block;margin-top: -13px');
                        $("#fieldAffilitionId_1 table").attr('style', 'display: block');
                        $("#ugc_edit").attr('style', 'display: block');
                        $("#ugc_edit").attr('style', 'float: right');
                    }
                    else
                    {
                        $("#lblAffilitionId_1 table").attr('style', 'display: none');
                        $("#fieldAffilitionId_1 table").attr('style', 'display: none');
                        $("#ugc_edit").attr('style', 'display: none');
                        $("#txtfrom_1").val("");
                        $("#txtto_1").val("");
                        $("#txtDuration_1").val("");
                    }
                    if(@Model.affiliationSelected2 == 1)
                    {
                        $("#lblAffilitionId_2 table").attr('style', 'display: block;margin-top: -26px');
                        $("#fieldAffilitionId_2 table").attr('style', 'display: block');
                    }
                    else
                    {
                        $("#lblAffilitionId_2 table").attr('style', 'display: none');
                        $("#fieldAffilitionId_2 table").attr('style', 'display: none');
                        $("#txtfrom_2").val("");
                        $("#txtto_2").val("");
                        $("#txtDuration_2").val("");
                    }
                    if(@Model.affiliationSelected3 == 1)
                    {
                        $("#lblAffilitionId_3 table").attr('style', 'display: block;margin-top: -26px');
                        $("#fieldAffilitionId_3 table").attr('style', 'display: block');
                        $("#naac_edit").attr('style', 'display: block');
                        $("#naac_edit").attr('style', 'float: right');
                    }
                    else
                    {
                        $("#lblAffilitionId_3 table").attr('style', 'display: none');
                        $("#fieldAffilitionId_3 table").attr('style', 'display: none');
                        $("#naac_edit").attr('style', 'display: none');
                        $("#txtfrom_3").val("");
                        $("#txtto_3").val("");
                        $("#txtDuration_3").val("");
                    }
                    if(@Model.affiliationSelected4 == 1)
                    {
                        $("#lblAffilitionId_4 table").attr('style', 'display: block');
                        $("#fieldAffilitionId_4 table").attr('style', 'display: block');
                    }
                    else if(@Model.affiliationSelected4 == 2)
                    {
                        $("#lblAffilitionId_4 table").attr('style', 'display: none');
                        $("#fieldAffilitionId_4 table").attr('style', 'display: none');
                        $("#txtfrom_4").val("");
                        $("#txtto_4").val("");
                        $("#txtDuration_4").val("");
                    }
                    else
                    {
                        $("#lblAffilitionId_4 table").attr('style', 'display: none');
                        $("#fieldAffilitionId_4 table").attr('style', 'display: none');
                        $("#txtfrom_4").val("");
                        $("#txtto_4").val("");
                        $("#txtDuration_4").val("");
                    }
                    if(@Model.affiliationSelected5 == 1)
                    {
                        $("#lblAffilitionId_5 table").attr('style', 'display: block;block;margin-top: -30px');
                        $("#fieldAffilitionId_5 table").attr('style', 'display: block');
                        $("#pa_edit").attr('style', 'display: block');
                        $("#pa_edit").attr('style', 'float: right');
                    }
                        @*else if(@Model.affiliationSelected5 == 2)
                    {
                        $("#lblAffilitionId_5 table").attr('style', 'display: none');
                        $("#fieldAffilitionId_5 table").attr('style', 'display: none');
                        $("#txtfrom_5").val("");
                        $("#txtto_5").val("");
                        $("#txtDuration_5").val("");
                        $("#affiliationGrade").val("");
                    }*@
                    else
                    {
                        $("#lblAffilitionId_5 table").attr('style', 'display: none');
                        $("#fieldAffilitionId_5 table").attr('style', 'display: none');
                        $("#pa_edit").attr('style', 'display: none');
                        $("#txtfrom_5").val("");
                        $("#txtto_5").val("");
                        $("#txtDuration_5").val("");
                        //$("#affiliationGrade").val("");
                    }

                    //$("#affiliationSelected1Yes").click(function() {
                    //    debugger;
                    //    $("#lblAffilitionId_1 table").attr('style', 'display: block');
                    //    $("#fieldAffilitionId_1 table").attr('style', 'display: block');
                    //    $("#ugc_edit").attr('style', 'display: block');
                    //    $("#ugc_edit").attr('style', 'float: right');
                    //});
                    //$("#affiliationSelected1No").click(function(){
                    //    $("#lblAffilitionId_1 table").attr('style', 'display: none');
                    //    $("#fieldAffilitionId_1 table").attr('style', 'display: none');
                    //    $("#ugc_edit").attr('style', 'display: none');
                    //    $("#txtfrom_1").val("");
                    //    $("#txtto_1").val("");
                    //    $("#txtDuration_1").val("");
                    //});

                    $("#affiliationSelected2Yes").click(function(){
                        $("#lblAffilitionId_2 table").attr('style', 'display: block');
                        $("#fieldAffilitionId_2 table").attr('style', 'display: block');
                    });
                    $("#affiliationSelected2No").click(function(){
                        $("#lblAffilitionId_2 table").attr('style', 'display: none');
                        $("#fieldAffilitionId_2 table").attr('style', 'display: none');
                        $("#txtfrom_2").val("");
                        $("#txtto_2").val("");
                        $("#txtDuration_2").val("");
                    });

                    //$("#affiliationSelected3Yes").click(function(){
                    //    $("#lblAffilitionId_3 table").attr('style', 'display: block');
                    //    $("#fieldAffilitionId_3 table").attr('style', 'display: block');
                    //    $("#naac_edit").attr('style', 'display: block');
                    //    $("#naac_edit").attr('style', 'float: right');
                    //});
                    //$("#affiliationSelected3No").click(function(){
                    //    debugger;
                    //    $("#lblAffilitionId_3 table").attr('style', 'display: none');
                    //    $("#fieldAffilitionId_3 table").attr('style', 'display: none');
                    //    $("#naac_edit").attr('style', 'display: none');
                    //    $("#txtfrom_3").val("");
                    //    $("#txtto_3").val("");
                    //    $("#txtDuration_3").val("");
                    //    $("#affiliationGrade").val("");
                    //    $("#affiliationCGPA").val("");
                    //});

                    $("#affiliationSelected4Conferred").click(function(){
                        $("#lblAffilitionId_4 table").attr('style', 'display: block');
                        $("#fieldAffilitionId_4 table").attr('style', 'display: block');
                    });
                    $("#affiliationSelected4Applied").click(function(){
                        $("#lblAffilitionId_4 table").attr('style', 'display: none');
                        $("#fieldAffilitionId_4 table").attr('style', 'display: none');
                        $("#txtfrom_4").val("");
                        $("#txtto_4").val("");
                        $("#txtDuration_4").val("");
                    });
                    $("#affiliationSelected4NotYetApplied").click(function(){
                        $("#lblAffilitionId_4 table").attr('style', 'display: none');
                        $("#fieldAffilitionId_4 table").attr('style', 'display: none');
                        $("#txtfrom_4").val("");
                        $("#txtto_4").val("");
                        $("#txtDuration_4").val("");
                    });

                    //$("#affiliationSelected5Yes").click(function(){
                    //    $("#lblAffilitionId_5 table").attr('style', 'display: block');
                    //    $("#fieldAffilitionId_5 table").attr('style', 'display: block');
                    //    $("#pa_edit").attr('style', 'display: block');
                    //    $("#pa_edit").attr('style', 'float: right');
                    //});
                    //$("#affiliationSelected5No").click(function(){
                    //    debugger;
                    //    $("#lblAffilitionId_5 table").attr('style', 'display: none');
                    //    $("#fieldAffilitionId_5 table").attr('style', 'display: none');
                    //    $("#pa_edit").attr('style', 'display: none');
                    //    //$("#txtfrom_5").val("");
                    //    //$("#txtto_5").val("");
                    //    //$("#txtDuration_5").val("");
                    //    //$("#affiliationGrade").val("");
                    //    //$("#affiliationCGPA").val("");
                    //});

                    //$("#affiliationSelected5Conferred").click(function(){
                    //    $("#lblAffilitionId_5 table").attr('style', 'display: block');
                    //    $("#fieldAffilitionId_5 table").attr('style', 'display: block');
                    //});
                    //$("#affiliationSelected5Applied").click(function(){
                    //    $("#lblAffilitionId_5 table").attr('style', 'display: none');
                    //    $("#fieldAffilitionId_5 table").attr('style', 'display: none');
                    //    $("#txtfrom_5").val("");
                    //    $("#txtto_5").val("");
                    //    $("#txtDuration_5").val("");
                    //    $("#affiliationGrade").val("");
                    //    $("#affiliationCGPA").val("");

                    //});
                    //$("#affiliationSelected5NotYetApplied").click(function(){
                    //    $("#lblAffilitionId_5 table").attr('style', 'display: none');
                    //    $("#fieldAffilitionId_5 table").attr('style', 'display: none');
                    //    $("#txtfrom_5").val("");
                    //    $("#txtto_5").val("");
                    //    $("#txtDuration_5").val("");
                    //    $("#affiliationGrade").val("");
                    //});
                    //$("#affiliationSelected5Yes").click(function(){
                    //    debugger;

                    //});
                    function func_UGC(id) {
                        window.location.href = '/UGC/Add/?affiliationTypeId=' + id;
                    }
                    function func_NAAC(id) {
                        window.location.href = '/NAAC/Add/?affiliationTypeId=' + id;
                    }
                    function func_PA(id) {
                        window.location.href = '/PermanentAffiliation/Add/?affiliationTypeId=' + id;
                    }
                </script>
            </table>
        }
    }
}
<div id="dialog-confirm" style="display: none">
    <p>
        <span class="ui-icon ui-icon-alert"></span>
        Are you sure to delete this particular Affiliation ?
    </p>
</div>
<script type="text/javascript">
    function Validate() {
        //debugger;
        var isValid = true;
        var UGCfrmDt = $("#txtfrom_2").val();
        var UGCtoDt = $("#txtto_2").val();
        var frmDt = $("#txtfrom_3").val();
        var toDt = $("#txtto_3").val();
        if (UGCfrmDt!=""&UGCtoDt!="") {
            var UGCfromDate = UGCfrmDt.substr(6, 4) + UGCfrmDt.substr(3, 2) + UGCfrmDt.substr(0, 2);
            var UGCtoDate = UGCtoDt.substr(6, 4) + UGCtoDt.substr(3, 2) + UGCtoDt.substr(0, 2);
            if (UGCtoDate < UGCfromDate) {
                alert("from date should be less than to date.");
                $("#txtfrom_2").val("");
                $("#txtfrom_2").focus();
                return false;
            }
        }
        if (frmDt!=""&toDt!="") {
            var fromDate = frmDt.substr(6, 4) + frmDt.substr(3, 2) + frmDt.substr(0, 2);
            var toDate = toDt.substr(6, 4) + toDt.substr(3, 2) + toDt.substr(0, 2);
            if (toDate < fromDate) {
                alert("from date should be less than to date.");
                $("#txtfrom_3").val("");
                $("#txtfrom_3").focus();
                return false;
            }
        }
        //if ($("#CAType_11").is(":checked")) {
        //    var selecetedAffiliation = $("#CAType_11").val();
        //    if(selecetedAffiliation == 11)
        //    {
        //        var otherCategory = $.trim($('#otherCategory').val());
        //        if(otherCategory == '')
        //        {
        //            isValid = false;
        //            alert("Please enter Other Category");
        //        }
        //        else
        //        {
        //            isValid = true;
        //        }
        //    }
        //    else
        //    {
        //        isValid = true;
        //    }
        //}
        return isValid;
    }
</script>
