@model Tuple<UAAAS.Models.PrincipalDirector, UAAAS.Models.CollgeDirector>
@{
    ViewBag.Title = "Principal & Director Details";
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    }
    UAAAS.Models.PrincipalDirector datafff = new UAAAS.Models.PrincipalDirector();
}

<h2>Principal & Director</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>

@using (Html.BeginForm("Edit", "PrincipalDirector", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    if (ViewBag.NotUpload == true)
    {
        <span class="notUpload">You can not upload data Please contact Academic auit cell if you want to upload</span>
    }
    else
    {
        <label id="lblMessage" style="color: red; font-size: 15px"></label>
        if (TempData["Error"] != null)
        {
            <div class="error">
                <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
            </div>
        }
        if (TempData["Success"] != null)
        {
            <div class="success">
                <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
            </div>
        }


        @Html.HiddenFor(model => model.Item1.type, new {Value = "PRINCIPAL"})
        <table class="four_columns">
            <tr>
                <td class="col1" colspan="4">
                    <b>Principal Details</b>&nbsp; &nbsp;
                    @Html.CheckBoxFor(model => model.Item1.IsPrincipleChecked, new {@class = "IsPrincipleChecked"})
                </td>
            </tr>
            <tr>
                <td class="col1" style="width: 20%;">
                    Faculty Registration Number
                </td>
                <td class="col2 focus" colspan="3" style="width: 80%;">
                    @Html.TextBoxFor(model => model.Item1.RegistrationNumber, new {@id="RegistrationNumber",@class = "PrincipalDetails"})
                    @Html.HiddenFor(model => model.Item1.collegeId)
                    @Html.ValidationMessageFor(model => model.Item1.RegistrationNumber)
                </td>
                @*<td class="col3">
                @Html.LabelFor(model => model.Item1.lastName)
            </td>
            <td class="col4">
                @Html.TextBoxFor(model => model.Item1.lastName, new { @class = "PrincipalDetails" })
                @Html.ValidationMessageFor(model => model.Item1.lastName)
            </td>*@
            </tr>
          <tr>
              <td class="col1" style="width: 20%;">
                  <span>AadharNumber</span>
              </td>
    
                  
              <td class="col2 focus" colspan="3" style="width: 80%;">


                  @Html.TextBoxFor(model => model.Item1.PrincipalAadhaarNumber, new { @id = "PrincipalAadhaarNumber", maxlength = "12", onkeypress = "return isNumberKey(event)", @placeholder = "Enter AadhaarNumber", @class = "PrincipalDetails required" })
                  @datafff.PrincipalAadhaarNumber
                  <span id="spannew" style="display:none;color:red;"></span>
                  @Html.ValidationMessageFor(model => model.Item1.PrincipalAadhaarNumber)
                  


              </td>
          </tr>
            <tr>
                <td class="col1" style="width: 20%;">

                    <span>AadharDocument</span>

                </td>
                <td class="col2 focus" colspan="3" style="width: 80%;">
                                        @if (@Model.Item1.PrincipalAadharDocument != null)
                                        {
                                            <a href="../Content/Upload/Faculty/AADHAARCARDS/CollegePrincipalAadhaar/@Model.Item1.PrincipalAadharDocument.Replace("~", "")" target="_blank">
                                                <span style="font-weight: bold; color: red;">View</span>
                                            </a>
                        @*<a href="../Content/Upload/Faculty/AADHAARCARDS/CollegePrincipalAadhaar/@Model.Item1.PrincipalAadharDocument.Replace("~", "")" targer="_blank">
                            @*<img src="../Content/Upload/Faculty/AADHAARCARDS/@Model.facultyAadharDocument.Replace("~","")" />
                            <span style="font-weight: bold; color: red;">View</span>
                           
                        </a>*@
                        if (@Model.Item1.PrincipalAadharDocument != null)
                        {
                            @Html.TextBoxFor(model => model.Item1.PrincipalAadharPhotoDocument, new { type = "file", @class = "aadhaarfile1" })
                            @Html.HiddenFor(model => model.Item1.PrincipalAadharDocument)
                        }
                        @*else
                        {
                            @Html.TextBoxFor(model => model.Item1.PrincipalAadharPhotoDocument, new { type = "file", @class = "aadhaarfile1 PrincipalDetails required" })
                        }*@
                    }

                    else
                    {
                        @Html.TextBoxFor(model => model.Item1.PrincipalAadharPhotoDocument, new { type = "file", @class = "aadhaarfile1 PrincipalDetails required" })
                    }



                </td>

            </tr>

            <tr style="display: none;">
                <td class="col1">
                    @Html.LabelFor(model => model.Item1.firstName)
                </td>
                <td class="col2 focus">
                    @Html.TextBoxFor(model => model.Item1.firstName, new {@class = "PrincipalDetails ValidPrincipal"})
                    @Html.HiddenFor(model => model.Item1.collegeId)
                    @Html.ValidationMessageFor(model => model.Item1.firstName)
                </td>
                <td class="col3">
                    @Html.LabelFor(model => model.Item1.lastName)
                </td>
                <td class="col4">
                    @Html.TextBoxFor(model => model.Item1.lastName, new {@class = "PrincipalDetails"})
                    @Html.ValidationMessageFor(model => model.Item1.lastName)
                </td>
            </tr>

            <tr style="display: none;">
                <td class="col1">
                    @Html.LabelFor(model => model.Item1.surname)
                </td>
                <td class="col2">
                    @Html.TextBoxFor(model => model.Item1.surname, new {@class = "PrincipalDetails ValidPrincipal"})
                    @Html.ValidationMessageFor(model => model.Item1.surname)
                </td>

                <td class="col3">
                    @Html.LabelFor(model => model.Item1.qualificationId)
                </td>
                <td class="col4">
                    <label>@Html.RadioButtonFor(model => model.Item1.qualificationId, 1, new {@class = "PrincipalDetails PrincipalQualificationtrue"})Doctorate </label>
                    <label>@Html.RadioButtonFor(model => model.Item1.qualificationId, 2, new {@class = "PrincipalDetails PrincipalQualificationfalse"}) Non-Doctorate</label>
                    @Html.ValidationMessageFor(model => model.Item1.qualificationId)
                </td>
            </tr>

            <tr style="display: none;">
                <td class="col1">@Html.LabelFor(model => model.Item1.phdId)</td>
                <td class="col2">@Html.DropDownListFor(model => model.Item1.phdId,
                                     new SelectList(ViewBag.phd as System.Collections.IEnumerable, "id", "phdSubjectName"),
                                     "-- Select --", new {id = "phd", @class = "PrincipalDetails"})
                    @Html.ValidationMessageFor(model => model.Item1.phdId)</td>
                <td class="col3"></td>
                <td class="col4"></td>
            </tr>

            <tr style="display: none;">
                <td class="col1">@Html.LabelFor(model => model.Item1.phdFromUniversity)</td>
                <td class="col2">@Html.TextBoxFor(model => model.Item1.phdFromUniversity, new {@class = "PrincipalDetails"})
                    @Html.ValidationMessageFor(model => model.Item1.phdFromUniversity)</td>
                <td class="col3">@Html.LabelFor(model => model.Item1.phdYear)</td>
                <td class="col4">@Html.TextBoxFor(model => model.Item1.phdYear, new {Value = Model.Item1.phdYear == 0 ? string.Empty : Model.Item1.phdYear.ToString(), @class = "PrincipalDetails"})
                    @Html.ValidationMessageFor(model => model.Item1.phdYear)</td>

            </tr>

            <tr style="display: none;">
                <td class="col1">@Html.LabelFor(model => model.Item1.departmentId)</td>
                <td class="col2">
                    @Html.DropDownListFor(model => model.Item1.departmentId,
                        new SelectList(ViewBag.department as System.Collections.IEnumerable, "id", "departmentName"),
                        "-- Select --", new {id = "department", @class = "PrincipalDetails"})
                    @Html.ValidationMessageFor(model => model.Item1.departmentId)
                </td>
                <td class="col3">@Html.LabelFor(model => model.Item1.dateOfAppointment)</td>
                <td class="col4">
                    @Html.TextBoxFor(model => model.Item1.dateOfAppointment, new {@class = "calendar1 PrincipalDetails ValidPrincipal", style = "width: 80px", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)"}) <span>(DD/MM/YYYY)</span>
                    @Html.ValidationMessageFor(model => model.Item1.dateOfAppointment)
                </td>
            </tr>

            <tr style="display: none;">
                <td class="col1">@Html.LabelFor(model => model.Item1.isRatified)</td>
                <td class="col2">
                    <label>@Html.RadioButtonFor(model => model.Item1.isRatified, true, new {@class = "PrincipalDetails PrincipalRatifiedTrue"}) Yes </label>
                    <label>@Html.RadioButtonFor(model => model.Item1.isRatified, false, new {@class = "PrincipalDetails PrincipalRatifiedFalse"}) No</label>
                    @Html.ValidationMessageFor(model => model.Item1.dateOfAppointment)
                </td>
                <td class="col3 ">
                    <div class="ratifed">@Html.LabelFor(model => model.Item1.ratificationPeriodFrom)
                        @Html.LabelFor(model => model.Item1.ratificationPeriodTo)
                    </div>
                </td>
                <td class="col4 ">
                    <div class="ratifed">@Html.TextBoxFor(model => model.Item1.ratificationPeriodFrom, new {@class = "calendar1 PrincipalDetails", style = "width: 80px", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)"}) <span>(DD/MM/YYYY)</span>
                        &nbsp; To &nbsp;
                        @Html.TextBoxFor(model => model.Item1.ratificationPeriodTo, new {@class = "calendar1 PrincipalDetails", style = "width: 80px", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)"}) <span>(DD/MM/YYYY)</span>
                        @Html.ValidationMessageFor(model => model.Item1.ratificationPeriodFrom)
                        @Html.ValidationMessageFor(model => model.Item1.ratificationPeriodTo)
                    </div>
                </td>
            </tr>

            <tr style="display: none;">
                <td class="col1">@Html.LabelFor(model => model.Item1.dateOfBirth)</td>
                <td class="col2">
                    @Html.TextBoxFor(model => model.Item1.dateOfBirth, new {@class = "calendar1 PrincipalDetails ValidPrincipal", style = "width: 80px", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)"}) <span>(DD/MM/YYYY)</span>
                    @Html.ValidationMessageFor(model => model.Item1.dateOfBirth)
                </td>
                <td class="col3">@Html.LabelFor(model => model.Item1.fax)</td>
                <td class="col4">
                    @Html.TextBoxFor(model => model.Item1.fax, new {@class = "PrincipalDetails ValidPrincipal"})
                    @Html.ValidationMessageFor(model => model.Item1.fax)
                </td>
            </tr>

            <tr style="display: none;">
                <td class="col1">@Html.LabelFor(model => model.Item1.landline)</td>
                <td class="col2">
                    @Html.TextBoxFor(model => model.Item1.landline, new {@class = "PrincipalDetails ValidPrincipal"})
                    @Html.ValidationMessageFor(model => model.Item1.landline)
                </td>
                <td class="col3">@Html.LabelFor(model => model.Item1.mobile)</td>
                <td class="col4">
                    @Html.TextBoxFor(model => model.Item1.mobile, new {@class = "PrincipalDetails ValidPrincipal"})
                    @Html.ValidationMessageFor(model => model.Item1.mobile)
                </td>
            </tr>

            <tr style="display: none;">
                <td class="col1">@Html.LabelFor(model => model.Item1.email)</td>
                <td class="col2">
                    @Html.TextBoxFor(model => model.Item1.email, new {@class = "PrincipalDetails ValidPrincipal"})
                    @Html.ValidationMessageFor(model => model.Item1.email)
                </td>
                <td class="col3">
                    @Html.LabelFor(model => model.Item1.PrincipalPhotoDocument) <span class="mandatory">*</span>
                    <br/>
                    <span style="color: blue;">
            (Latest self colour photo with Minimum - 150x150 pixels, Maximum - 200x230 pixels<br />
            and less than 50 KB size)
        </span>
                </td>
                <td class="col4">
                    @Html.TextBoxFor(model => model.Item1.PrincipalPhotoDocument, new {type = "file", @class = "Pfile"})
                    @Html.HiddenFor(model => model.Item1.PrincipalPhoto)<br/>

                    @if (@Model.Item1.PrincipalPhoto != null)
                    {
                        <a href="../Content/Upload/PrincipalDirectorPhotos/@Model.Item1.PrincipalPhoto.Replace("~", "")" target="_blank">
                            <img src="../Content/Upload/PrincipalDirectorPhotos/@Model.Item1.PrincipalPhoto.Replace("~", "")" style="height: 60px;"/>
                        </a>

                    }
                </td>
            </tr>



            @Html.HiddenFor(model => model.Item1.createdOn, new {Value = DateTime.Now})
            @Html.HiddenFor(model => model.Item1.createdBy, new {Value = Convert.ToInt32(Membership.GetUser(HttpContext.Current.User.Identity.Name).ProviderUserKey)})
        </table>

        <br/>
@*@Html.HiddenFor(model => model.Item2.collegeId, new { Value = 7 })*@
        @Html.HiddenFor(model => model.Item2.type, new {Value = "DIRECTOR"})
        <label id="lblDirectorMessage" style="color: red; font-size: 15px"></label>
        if (TempData["DirectorEdit"] != null)
        {
        
        <table class="four_columns">
            <tr>
                <td class="col1" colspan="4">
                    <b>Director Details</b> &nbsp; &nbsp;
                    @Html.CheckBoxFor(model => model.Item2.IsDirectorChecked, new {@class = "IsDirectorChecked"})
                </td>
            </tr>
            <tr>
                <td class="col1">
                    @Html.LabelFor(model => model.Item2.firstName)
                </td>
                <td class="col2">
                    @Html.TextBoxFor(model => model.Item2.firstName, new {@class = "IsValidDirector DirectorDetails"})
                    @Html.HiddenFor(model => model.Item2.collegeId)
                    @Html.ValidationMessageFor(model => model.Item2.firstName)
                </td>
                <td class="col3">
                    @Html.LabelFor(model => model.Item2.lastName)
                </td>
                <td class="col4">
                    @Html.TextBoxFor(model => model.Item2.lastName, new {@class = "DirectorDetails"})
                    @Html.ValidationMessageFor(model => model.Item2.lastName)
                </td>
            </tr>
            <tr>
                <td class="col1">
                    @Html.LabelFor(model => model.Item2.surname)
                </td>
                <td class="col2">
                    @Html.TextBoxFor(model => model.Item2.surname, new {@class = "IsValidDirector DirectorDetails"})
                    @Html.ValidationMessageFor(model => model.Item2.surname)
                </td>
                <td class="col3">
                    @Html.LabelFor(model => model.Item2.qualificationId)
                </td>
                <td class="col4">
                    <label>@Html.RadioButtonFor(model => model.Item2.qualificationId, 1, new {@class = "IsValidDirectorQualificationTrue DirectorDetails"})Doctorate </label>
                    <label>@Html.RadioButtonFor(model => model.Item2.qualificationId, 2, new {@class = "IsValidDirectorQualificationFalse DirectorDetails"}) Non-Doctorate</label>
                </td>
            </tr>

            <tr>
                <td class="col1">@Html.LabelFor(model => model.Item2.phdId)</td>
                <td class="col2">@Html.DropDownListFor(model => model.Item2.phdId,
                                     new SelectList(ViewBag.phd as System.Collections.IEnumerable, "id", "phdSubjectName"),
                                     "-- Select --", new {id = "phd", @class = "DirectorDetails var IsValidPrincipalDepartment"})
                    @Html.ValidationMessageFor(model => model.Item2.phdId)</td>

                <td class="col3">@Html.LabelFor(model => model.Item2.phdFromUniversity)</td>
                <td class="col4">@Html.TextBoxFor(model => model.Item2.phdFromUniversity, new {@class = "DirectorDetails"})
                    @Html.ValidationMessageFor(model => model.Item2.phdFromUniversity)</td>
            </tr>

            <tr>
                <td class="col1">@Html.LabelFor(model => model.Item2.phdYear)</td>
                <td class="col2">@Html.TextBoxFor(model => model.Item2.phdYear, new {Value = Model.Item2.phdYear == 0 ? string.Empty : Model.Item2.phdYear.ToString(), @class = "DirectorDetails"})
                </td>

                <td class="col3">@Html.LabelFor(model => model.Item2.departmentId)</td>
                <td class="col4">@Html.DropDownListFor(model => model.Item2.departmentId,
                                     new SelectList(ViewBag.department as System.Collections.IEnumerable, "id", "departmentName"),
                                     "-- Select --", new {id = "DirectorDepartment", @class = "DirectorDetails IsValidDirectorDepartment"})
                    @Html.ValidationMessageFor(model => model.Item2.departmentId)</td>

            </tr>
            <tr>
                <td class="col1">
                    @Html.LabelFor(model => model.Item2.dateOfAppointment)
                </td>
                <td class="col2">
                    @Html.TextBoxFor(model => model.Item2.dateOfAppointment, new {@class = "IsValidDirector DirectorDetails", style = "width: 80px", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)"}) <span>(DD/MM/YYYY)</span>
                    @Html.ValidationMessageFor(model => model.Item2.dateOfAppointment)
                </td>
                <td class="col3">
                    @Html.LabelFor(model => model.Item2.dateOfBirth)
                </td>
                <td class="col4">
                    @Html.TextBoxFor(model => model.Item2.dateOfBirth, new {@class = "IsValidDirector DirectorDetails", style = "width: 80px", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)"}) <span>(DD/MM/YYYY)</span>
                    @Html.ValidationMessageFor(model => model.Item2.dateOfBirth)
                </td>
            </tr>
            <tr>
                <td class="col1">
                    @Html.LabelFor(model => model.Item2.fax)
                </td>
                <td class="col2">
                    @Html.TextBoxFor(model => model.Item2.fax, new {@class = "IsValidDirector DirectorDetails"})
                    @Html.ValidationMessageFor(model => model.Item2.fax)
                </td>
                <td class="col3">
                    @Html.LabelFor(model => model.Item2.landline)
                </td>
                <td class="col4">
                    @Html.TextBoxFor(model => model.Item2.landline, new {@class = "IsValidDirector DirectorDetails"})
                    @Html.ValidationMessageFor(model => model.Item2.landline)
                </td>
            </tr>
            <tr>
                <td class="col1">
                    @Html.LabelFor(model => model.Item2.mobile)
                </td>
                <td class="col2">
                    @Html.TextBoxFor(model => model.Item2.mobile, new {@class = "IsValidDirector DirectorDetails"})
                    @Html.ValidationMessageFor(model => model.Item2.mobile)
                </td>
                <td class="col3">
                    @Html.LabelFor(model => model.Item2.email)
                </td>
                <td class="col4">
                    @Html.TextBoxFor(model => model.Item2.email, new {@class = "IsValidDirector DirectorDetails"})
                    @Html.ValidationMessageFor(model => model.Item2.email)
                </td>
            </tr>
            <tr>
                <td class="col1">@Html.LabelFor(model => model.Item2.DirectorPhotoDocument) <span class="mandatory">*</span>
                    <br/>
                    <span style="color: blue;">(Latest self colour photo with Minimum - 150x150 pixels, Maximum - 200x230 pixels<br />
                    and less than 50 KB size)</span></td>
                <td class="col2">
                    @Html.TextBoxFor(model => model.Item2.DirectorPhotoDocument, new {type = "file", @class = "Dfile"})
                    @Html.HiddenFor(model => model.Item2.DirectorPhoto)<br/>


                    @if (@Model.Item2.DirectorPhoto != null)
                    {
                        <a href="../Content/Upload/PrincipalDirectorPhotos/@Model.Item2.DirectorPhoto.Replace("~", "")" target="_blank">
                            <img src="../Content/Upload/PrincipalDirectorPhotos/@Model.Item2.DirectorPhoto.Replace("~", "")" style="height: 60px;"/></a>

                    }
                </td>
            </tr>
        </table>
        }
    <table>
        <tr>
            <td>
                @Html.HiddenFor(model => model.Item2.phdYear, new { Value = 1234 })
                @Html.HiddenFor(model => model.Item2.isRatified, new { Value = false })
                @Html.HiddenFor(model => model.Item2.createdOn, new { Value = DateTime.Now })
                @Html.HiddenFor(model => model.Item2.createdBy, new { Value = Convert.ToInt32(Membership.GetUser(HttpContext.Current.User.Identity.Name).ProviderUserKey) })
            </td>
            <td colspan="3" style="line-height: 1.2rem;" class="right_buttons">

                @* @Html.ActionLink("Back", "Create", "SocietyInformation", null, new { @class = "back_button" })*@
                <input type="submit" value="Save" class="submit" onclick="return ValidateDirector();" />
                @* @Html.ActionLink("Next", "Create", "ChairPerson", null, new { @class = "back_button" })*@

            </td>
        </tr>
    </table>
    @Html.Hidden("IsRatified", (string)ViewBag.IsRatified, new { id = "IsRatified" })
    }
}
<script type="text/javascript">
    var val = @Model.Item2.qualificationId
    $(document).ready(function () {
        if ($('#Item1_RegistrationNumber').val() != '') {
            $('.IsPrincipleChecked').attr('checked', 'checked');
            $('.PrincipalDetails').each(function () {
                $(this).removeAttr('disabled');
            });
        }
        else {
            $('.IsPrincipleChecked').removeAttr('checked');
            $('.PrincipalDetails').each(function () {
                $(this).attr('disabled', 'disabled');
            });

        }
        if ($('#Item2_firstName').val() != '') {
            $('.IsDirectorChecked').attr('checked', 'checked');
            $('.DirectorDetails').each(function () {
                $(this).removeAttr('disabled');
            });
        }
        else {
            $('.IsDirectorChecked').removeAttr('checked');
            $('.DirectorDetails').each(function () {
                $('#Item2_phdYear').val('');
                $(this).attr('disabled', 'disabled');
            });
        }
        if (val == 0) {
            //alert(val);
            $(".qualificationfalse").prop('checked', true);
        }
        $(".ratifed").hide();
        if ($('#IsRatified').val() == 'IsRatified') {
            $(".ratifed").show();
        }
        $("#Item1_isRatified").live("click", function () {
            var selectedValue = $(this).val();
            if (selectedValue == 'True') {
                $(".ratifed").show();
            }
            else { $(".ratifed").hide(); }
        });
        $('.submit').click(function (e) {
            if ($('.IsPrincipleChecked').is(":checked")) {
                if ($('#Item1_RegistrationNumber').val() == '') {
                    alert("Enter Faculty Registration Number for Principal");
                    return false;
                }

                //checkDateDifference($('#Item1_dateOfAppointment').val(), $('#Item1_dateOfResignation').val(), "Principal Date of Appointment should not be grater than (or) equal to Date Of Resignation");
                //checkDateDifference($('#Item2_dateOfAppointment').val(), $('#Item2_dateOfResignation').val(), "Director Date of Appointment should not be grater than (or) equal to Date Of Resignation");
            }

        });

        $('.IsPrincipleChecked').change(function () {
            if ($(this).is(":checked")) {
                $('.PrincipalDetails').each(function () {
                    $(this).removeAttr('disabled');
                });
            }
            else {
                $('.PrincipalDetails').each(function () {
                    $(this).attr('disabled', 'disabled');
                });
            }
        });
        $('.IsDirectorChecked').change(function () {
            if ($(this).is(":checked")) {
                $('.DirectorDetails').each(function () {
                    $(this).removeAttr('disabled');
                });
            }
            else {
                $('.DirectorDetails').each(function () {
                    $(this).attr('disabled', 'disabled');
                });
            }
        });
        $("#PrincipalAadhaarNumber").blur(function () {
                debugger;
                var aadharno = $(this).val();
                var Regno = $("#RegistrationNumber").val();
                if ((Regno != null && Regno != "") && (aadharno != null && aadharno != ""))
                {
                    $.ajax({
                        url: "/PrincipalDirector/CheckAadharNumber?PrincipalAadhaarNumber=" + aadharno + "&RegistrationNumber=" + Regno,
                        type: "post",
                        datatype: 'json',
                        contentType:'application/json',
                       
                        success: function (data) {
                            debugger;
                            if (data !=null)
                            {
                                if (data == true)
                                {
                                    var aadhar = $("#PrincipalAadhaarNumber").val();
                                    $("#spannew").css('display', 'none');
                                    $("#PrincipalAadhaarNumber").css('background-color', 'white').val(aadhar);
                                }
                                else
                                {
                                    $("#spannew").css('display', 'block');
                                    $("#spannew").html(data);
                                    $("#PrincipalAadhaarNumber").val(null).css('background-color', 'white');
                                }
                               
                               // $("#PrincipalAadhaarNumber").css('background-color','red');
                            }
                            else
                            {
                                return false;
                            }
                            //else {
                            //    alert("We don't have your AadhaarNumber");
                            //}
                        },
                        error: function (datanew) {
                            debugger;

                        }

                    });
                }
        });
        ////
        $(".aadhaarfile1").change(function () {

            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'jpg':
                    case 'JPG':
                    case 'jpeg':
                    case 'JPEG':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                alert("Aadhaar Card document should be in JPEG format only");
                $(this).val('');
                return false;
            }
            else {
                var size = GetCertificateSize(this.id);

                if (size > 102400) {
                    alert("Aadhaar Card document size should not exceed 100 KB in Size");
                    $(this).val('');
                }
                else {
                    //$(".certificates > span").text("");
                }
            }
        });
        //get file size
        function GetFileSizePrincipal(fileid) {
            try {
                var fileSize = 0;
                //for IE

                if ($.browser.msie) {
                    //before making an object of ActiveXObject, 
                    //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb 
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $(".Pfile")[0].files[0].size //size in kb
                    //fileSize = fileSize / 1048576; //size in mb 
                }

                return fileSize;
            }
            catch (e) {

                //alert("Error is : " + e);
            }
        }

        function GetCertificateSize(fileid) {
            debugger;
            try {
                var fileSize = 0;
                //for IE

                if ($.browser.msie) {
                    //before making an object of ActiveXObject, 
                    //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb 
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#" + fileid)[0].files[0].size //size in kb
                    //fileSize = fileSize / 1048576; //size in mb 
                }

                return fileSize;
            }
            catch (e) {

                //alert("Error is : " + e);
            }
        }
        //get file size
        function GetFileSizeDrector(fileid) {
            try {
                var fileSize = 0;
                //for IE

                if ($.browser.msie) {
                    //before making an object of ActiveXObject, 
                    //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb 
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $(".Dfile")[0].files[0].size //size in kb
                    //fileSize = fileSize / 1048576; //size in mb 
                }

                return fileSize;
            }
            catch (e) {

                //alert("Error is : " + e);
            }
        }

        //get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            }
            else {
                return strName[0];
            }
        }


        //debugger;
        $(".Pfile").change(function () {
            //alert('a');
            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'jpg':
                    case 'JPG':
                    case 'jpeg':
                    case 'JPEG':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }
            else {
                alert('Please select principal photo');
                return false;
            }

            if (flag == false) {
                alert("Photo should be in JPEG format only");
                $(this).val('');
                return false;
            }
            else {

                var size = GetFileSizePrincipal(file);
                if (size > 51200) {
                    alert("Photo should not exceed 50 KB in Size");
                    $(this).val('');
                }
                else {
                    $(".files > span").text("");
                }

            }
        });


        $(".Dfile").change(function () {

            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'jpg':
                    case 'JPG':
                    case 'jpeg':
                    case 'JPEG':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }
            else {
                alert('Please select director photo');
                return false;
            }

            if (flag == false) {
                alert("Photo should be in JPEG format only");
                $(this).val('');
                return false;
            }
            else {

                var size = GetFileSizeDrector(file);
                if (size > 51200) {
                    alert("Photo should not exceed 50 KB in Size");
                    $(this).val('');
                }
                else {
                    $(".files > span").text("");
                }

            }
        });

    });

    function checkDateDifference(startDate, endDate, alertString) {

        if ((startDate != null && startDate != '') && (endDate != null && endDate != '')) {
            startDate = $.datepicker.parseDate('dd/mm/yy', startDate);
            endDate = $.datepicker.parseDate('dd/mm/yy', endDate);
            var difference = (endDate - startDate) / (86400000);
            if (difference < 0) {
                alert(alertString);
                dateFlag = 0;
                return false;
            }
            else {
                dateFlag = 1;
                return true;
            }
        }
        else {
            dateFlag = 1;
            return true;
        }

    }

    function ValidateDirector() {
        var IsValidDirector = true;
        var IsValidDirectorCount = 0;
        var IsValidDirectorDepartment = true;
        var IsValidDirectorQualification = true;
        var IsValidPrincipal = true;
        var IsValidPrincipalCount = 0;
        var IsValidPrincipalDepartment = true;
        var IsValidPrincipalQualification = true;
        var IsValidPrincipalRatification = true;

        if ($('.IsPrincipleChecked').is(":checked")) {
            ////31/03/2015
            //var Pfile = $(".Pfile").val();
            //var photo = $('#Item1_PrincipalPhoto').val();
            ////alert(photo);
            //// alert(a);
            //if (Pfile == '' && photo == '') {

            //    $('.Pfile').css({
            //        "background": "#FC6A6C"
            //    });
            //    return false;
            //} else {
            //    $('.Pfile').css({
            //        "background": "#FFFFFF"
            //    });
            //}
            ////
            //$('.ValidPrincipal').each(function () {
            //    if ($(this).val() == '') {
            //        $(this).css({
            //            "background": "#FC6A6C"
            //        });
            //        IsValidPrincipalCount += 1;
            //    }
            //    else {
            //        $(this).css({
            //            "background": "#FFFFFF"
            //        });
            //    }
            //});
            //if (IsValidPrincipalCount == 0) {
            //    $('#lblMessage').text('');
            //    IsValidPrincipal = true;
            //    var IsValidPrincipalDepartment = $('#department').val();
            //    if (IsValidPrincipalDepartment == undefined || IsValidPrincipalDepartment == '') {
            //        $('#department').css({
            //            "background": "#FC6A6C"
            //        });
            //        IsValidPrincipalDepartment = false;
            //        $('#lblMessage').text("Please enter Department in Principal details");
            //    }
            //    else {
            //        $('#department').css({
            //            "background": "#FFFFFF"
            //        });
            //        IsValidPrincipalDepartment = true;
            //        $('#lblMessage').text('');
            //    }
            //    if (IsValidPrincipalDepartment == true) {
            //        var PrincipalQualificationtrue = $(".PrincipalQualificationtrue").is(':checked');
            //        var PrincipalQualificationfalse = $(".PrincipalQualificationfalse").is(':checked');
            //        if (PrincipalQualificationtrue == true || PrincipalQualificationfalse == true) {
            //            IsValidPrincipalQualification = true;
            //            $('#lblMessage').text('');
            //        }
            //        else {
            //            IsValidPrincipalQualification = false;
            //            $('#lblMessage').text("Please Select Qualification in Principal details");
            //        }
            //        if (IsValidPrincipalQualification == true) {
            //            var PrincipalRatifiedTrue = $(".PrincipalRatifiedTrue").is(':checked');
            //            var PrincipalRatifiedFalse = $(".PrincipalRatifiedFalse").is(':checked');
            //            if (PrincipalRatifiedTrue == true || PrincipalRatifiedFalse == true) {
            //                IsValidPrincipalRatification = true;
            //                $('#lblMessage').text('');
            //            }
            //            else {
            //                IsValidPrincipalRatification = false;
            //                $('#lblMessage').text("Please Select Ratification By JNTUH in Principal details");
            //            }
            //        }
            //    }
            //}
            //else {
            //    $('#lblMessage').text("Please enter Principal details");
            //    IsValidPrincipal = false;
            //}
            $('.ValidPrincipal').each(function () {
                $(this).css({
                    "background": "#FFFFFF"
                });
            });
            $('#lblMessage').text('');
            $('#department').css({
                "background": "#FFFFFF"
            });
            IsValidPrincipal = true;
            IsValidPrincipalDepartment = true;
            IsValidPrincipalQualification = true;
            IsValidPrincipalRatification = true;
        }
        else {
            $('.ValidPrincipal').each(function () {
                $(this).css({
                    "background": "#FFFFFF"
                });
            });
            $('#lblMessage').text('');
            $('#department').css({
                "background": "#FFFFFF"
            });
            IsValidPrincipal = true;
            IsValidPrincipalDepartment = true;
            IsValidPrincipalQualification = true;
            IsValidPrincipalRatification = true;
        }
        if ($('.IsDirectorChecked').is(":checked")) {

            //31/03/2015
            var Dfile = $(".Dfile").val();
            var photo = $('#Item2_DirectorPhoto').val();
            // alert(photo);
            // alert(a);
            if (Dfile == '' && photo == '') {

                $('.Dfile').css({
                    "background": "#FC6A6C"
                });
                return false;
            } else {
                $('.Dfile').css({
                    "background": "#FFFFFF"
                });
            }
            //


            $('.IsValidDirector').each(function () {
                if ($(this).val() == '') {
                    $(this).css({
                        "background": "#FC6A6C"
                    });
                    IsValidDirectorCount += 1;
                }
                else {
                    $(this).css({
                        "background": "#FFFFFF"
                    });
                }
            });
            if (IsValidDirectorCount == 0) {
                $('#lblDirectorMessage').text('');
                IsValidDirector = true;
                var IsvalidDirectorDept = $('#DirectorDepartment').val();
                if (IsvalidDirectorDept == undefined || IsvalidDirectorDept == '') {
                    $('#DirectorDepartment').css({
                        "background": "#FC6A6C"
                    });
                    IsValidDirectorDepartment = false;
                    $('#lblDirectorMessage').text("Please enter Department in Director details");
                }
                else {
                    $('#DirectorDepartment').css({
                        "background": "#FFFFFF"
                    });
                    IsValidDirectorDepartment = true;
                    $('#lblDirectorMessage').text('');
                }
                if (IsValidDirectorDepartment == true) {
                    var IsValidDirectorQualificationTrue = $(".IsValidDirectorQualificationTrue").is(':checked');
                    var IsValidDirectorQualificationFalse = $(".IsValidDirectorQualificationFalse").is(':checked');
                    if (IsValidDirectorQualificationTrue == true || IsValidDirectorQualificationFalse == true) {
                        IsValidDirectorQualification = true;
                        $('#lblDirectorMessage').text('');
                    }
                    else {
                        IsValidDirectorQualification = false;
                        $('#lblDirectorMessage').text("Please Select Qualification in Director details");
                    }
                }
            }
            else {
                $('#lblDirectorMessage').text("Please enter Director details");
                IsValidDirector = false;
            }
        }
        else {
            $('.IsValidDirector').each(function () {
                $(this).css({
                    "background": "#FFFFFF"
                });
            });
            $('#lblDirectorMessage').text('');
            $('#DirectorDepartment').css({
                "background": "#FFFFFF"
            });
            IsValidDirector = true;
            IsValidDirectorDepartment = true;
            IsValidDirectorQualification = true;
        }
        return IsValidPrincipal && IsValidPrincipalDepartment && IsValidPrincipalQualification && IsValidPrincipalRatification &&
               IsValidDirector && IsValidDirectorDepartment && IsValidDirectorQualification;
    }
</script>

