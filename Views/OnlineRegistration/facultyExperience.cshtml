@using System.Collections.Concurrent

@model UAAAS.Models.facultyExperience
@{
    ViewBag.Title = "facultyExperience";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@*<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jspdf.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jspdf.plugin.from_html.js")" type="text/javascript"></script>*@

@using (Html.BeginForm("facultyExperience", "OnlineRegistration", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div id="divNewFaculty">
        <table class="details_table news">
            @if (Model.id > 0)
            {
                <tr>
                    <td class="col1" colspan="2">
                        <b>Experience Details</b>
                    </td>
                </tr>
                <tr>
                    <td class="col1" style="font-weight: bold;">
                        @Html.LabelFor(model => model.RegistrationNumber)
                    </td>
                    <td class="col2">
                        @Html.DisplayFor(model => model.RegistrationNumber)
                        @Html.HiddenFor(model => model.RegistrationNumber)
                        @Html.HiddenFor(model => model.FirstName)
                        @Html.HiddenFor(model => model.LastName)
                    </td>
                </tr>
                <tr>
                    <td class="col1" style="font-weight: bold;">
                        @Html.LabelFor(model => model.CollegeName)
                    </td>
                    <td class="col2">
                        @Html.DisplayFor(model => model.CollegeName)
                        @Html.HiddenFor(model => model.CollegeName)
                    </td>
                </tr>
                <tr>
                    <td class="col1" style="font-weight: bold;">
                        @Html.LabelFor(model => model.DateofJoining)
                    </td>
                    <td class="col2">
                        @Html.DisplayFor(model => model.DateofJoining)
                        @Html.HiddenFor(model => model.DateofJoining)
                    </td>
                </tr>
                <tr>
                    <td class="col1" style="font-weight: bold;">
                        @Html.LabelFor(model => model.facultyDesignation)
                    </td>
                    <td class="col2">
                        @Html.DisplayFor(model => model.facultyDesignation)
                        @Html.HiddenFor(model => model.facultyDesignation)
                    </td>
                </tr>
                <tr>
                    <td class="col1" style="font-weight: bold;">
                        @Html.LabelFor(model => model.department)
                    </td>
                    <td class="col2">
                        @Html.DisplayFor(model => model.department)
                        @Html.HiddenFor(model => model.department)
                        @*@Html.TextBoxFor(model => model.department, new { @class = "calendar", style = "", @onblur = "IsValidDate(this,event.keyCode,0,0,0)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Select Date of Birth" })*@


                    </td>
                </tr>

            }
            <tr>
                <td class="col3">

                    @Html.LabelFor(model => model.facultyDateOfResignation) <span class="mandatory">*</span>

                </td>
                <td class="col2">

                    @Html.TextBoxFor(model => model.facultyDateOfResignation1, new { @class = "newsEventsCalendar required" })
                    @*@Html.ValidationMessageFor(model => model.MiddleName)*@

                </td>
            </tr>
            <tr>

                <td class="col1" style="vertical-align: top;">
                  

                        @Html.Label("Upload Relieving Letter ")
                        <span style="color: blue;">
                            (Minimum 600x800 pixels
                            <br />
                            and less than 1 MB size)
                        </span>

                   
                </td>
                <td class="col2 files" style="vertical-align: top;">

                    @*@Html.TextBoxFor(model => model.facultyRelievingLetter, new { type = "file", @class = "file" })*@
                    @Html.TextBoxFor(model => model.facultyRelievingLetter, new { type = "file", @class = "file required" })<span style="color: red;"></span><br />

                </td>
            </tr>
            <tr>

                <td class="col1" style="vertical-align: top;">

                    @Html.LabelFor(model => model.PresentcollegeId)
                    @*@Html.Label("College presently working in")*@ @*<span class="mandatory">*</span>*@
                    @*@Html.HiddenFor(model => model.PresentcollegeId, new { @Value = Model.PresentCollegeName })*@



                </td>
                <td class="col2" style="vertical-align: top;">

                    @*@Html.DropDownListFor(model => model.PresentcollegeId, new SelectList(ViewBag.Institutions as System.Collections.IEnumerable, "CollegeId", "CollegeName"),
                        "--Select--", new { id = "CollegeName", style = "" })*@

                    @Html.DropDownListFor(model => model.PresentcollegeId,
       new SelectList(ViewBag.Institutions as System.Collections.IEnumerable, "PresentcollegeId", "PresentCollegeName"),
               "-- Select --", new { @class = "required", id = "PresentCollegeName", style = "" })
                    @Html.ValidationMessageFor(model => model.PresentcollegeId)



                </td>
            </tr>
            <tr>
                <td class="col3">
                    <span style="text-transform: uppercase; ">
                        @Html.LabelFor(model => model.facultyDateOfAppointment) <span class="mandatory">*</span>
                    </span>
                </td>
                <td class="col4">

                    @Html.TextBoxFor(model => model.facultyDateOfAppointment1, new { @class = "newsEventsCalendar required" })
                    @Html.ValidationMessageFor(model => model.facultyDateOfAppointment1)

                </td>
            </tr>

            <tr>

                <td class="col1" style="vertical-align: top;">

                    <span style="text-transform: uppercase;">
                            @Html.Label("Appointment Order ")
                            <span style="color: blue;">
                                (Minimum 600x800 pixels
                                <br />
                                and less than 1 MB size)
                            </span>
                        </span>
                   
                </td>
                <td class="col2 files" style="vertical-align: top;" colspan="3">

                    @*@Html.TextBoxFor(model => model.facultyJoiningOrder, new { type = "file", @class = "SelectionCommitteeProceedingsDocument" })*@

                    @Html.TextBoxFor(model => model.facultyJoiningOrder, new {type = "file", @class = "file1 required"})<span style="color: red;"></span><br/>

                </td>
            </tr>
            <tr>
                <td class="col1" style="vertical-align: top;">

                    <span style="text-transform: uppercase;">
                        @Html.Label("SCM ")
                        <span style="color: blue;">
                            (Minimum 600x800 pixels
                            <br />
                            and less than 1 MB size)
                        </span>
                    </span>

                </td>
                <td class="col2 facultySCMDocuments" style="vertical-align: top;" colspan="3">

                    @*@Html.TextBoxFor(model => model.facultyJoiningOrder, new { type = "file", @class = "SelectionCommitteeProceedingsDocument" })*@

                    @Html.TextBoxFor(model => model.facultySCMDocument, new { type = "file", @class = "facultySCMDocument required" })<span style="color: red;"></span><br />

                </td>
            </tr>
            <tr>
                <td class="col1" >
                    @Html.LabelFor(model => model.facultyNewDesignation) <span class="mandatory">*</span><br />
                </td>
                <td class="col2">
                    @Html.DropDownListFor(model => model.facultyNewDesignationId,
                        new SelectList(ViewBag.designation as System.Collections.IEnumerable, "id", "designation"),
                     "-- Select --", new { @class = "required", id = "designation", style = "" })
                    @Html.ValidationMessageFor(model => model.facultyNewDesignationId)
                </td>
            </tr>

            <tr>
                <td class="col1">
                    @Html.LabelFor(model => model.facultySalary) <span class="mandatory">*</span><br />
                </td>
                <td class="col2">
                    @Html.TextBoxFor(model => model.facultySalary, new { style = "width: 22%;", @class = "required", @placeholder = "Enter your Gross Salary", @maxlength = "10" })
                    @Html.ValidationMessageFor(model => model.facultySalary)
                </td>
            </tr>
        </table>
    </div>
    <div style="line-height: 1.2rem;" class="right_buttons submitButton">

        <input type="submit" id="btnRegister" value="Save" class="submit" name="Command" onclick="return Validate();" />

    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        $('.newsEventsCalendar').datepicker({
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            showOn: "button",
            buttonImage: "@Url.Content("~/Content/themes/base/images/calendar.gif")",
            buttonImageOnly: true
        });
    });



    function Validate() {
        debugger;
        var isValidUrl = true;
        var isValidTitle = true;

        var startDate = $("#facultyDateOfResignation1").val();
        var endDate = $("#facultyDateOfAppointment1").val();
        if (startDate != " " && endDate != " ") {
            var fromDate = startDate.substr(6, 4) + startDate.substr(3, 2) + startDate.substr(0, 2);
            var toDate = endDate.substr(6, 4) + endDate.substr(3, 2) + endDate.substr(0, 2);
            if (toDate <= fromDate) {
                alert("Date of joining Should Be Gretaer Than  Date of relieving");
                isValidDate = false;
            }
            else {
                isValidDate = true;
            }
        }



        return isValidDate;
    }
    $(".file").change(function () {
      
        var file = getNameFromPath($(this).val());
       
        var flag;
        if (file != null) {
            var extension = file.substr((file.lastIndexOf('.') + 1));
            switch (extension) {
                case 'JPEG':
                case 'JPG':
                case 'jpeg':
                case 'jpg':
                case 'pdf':
                case 'PDF':
                case 'JPEG':
                    flag = true;
                    break;
                default:
                    flag = false;
            }
        }
       
        if (flag == false) {
            alert("You can upload only JPG,JPEG, Pdf files");
            $(this).val('');
            return false;
        }
        else {

            var size = GetFileSize(file);
            if (size > 1) {
                alert("You can upload Relieving Letter  up to 1 MB");
                $(this).val('');
            }
            else {
                $(".files > span").text("");
            }

        }
    });
    $(".file1").change(function () {
      
        var file = getNameFromPath($(this).val());
        var flag;
        if (file != null) {
            var extension = file.substr((file.lastIndexOf('.') + 1));
            switch (extension) {
                case 'JPEG':
                case 'JPG':
                case 'jpeg':
                case 'jpg':
                case 'pdf':
                case 'PDF':
                case 'JPEG':
                    flag = true;
                    break;
                default:
                    flag = false;
            }
        }

        if (flag == false) {
            alert("You can upload only JPG,JPEG, Pdf files");
            $(this).val('');
            return false;
        }
        else {

            var size = GetFileSize1(file);
            if (size > 1) {
                alert("You can upload JoiningOrder up to 1 MB");
                $(this).val('');
            }
            else {
                $(".files > span").text("");
            }

        }
    });


   
    $(".facultySCMDocument").change(function () {

        var file = getNameFromPath($(this).val());
        var flag;
        if (file != null) {
            var extension = file.substr((file.lastIndexOf('.') + 1));
            switch (extension) {
                case 'JPEG':
                case 'JPG':
                case 'jpeg':
                case 'jpg':
                case 'pdf':
                case 'PDF':
                case 'JPEG':
                    flag = true;
                    break;
                default:
                    flag = false;
            }
        }

        if (flag == false) {
            alert("You can upload only JPG,JPEG, Pdf files");
            $(this).val('');
            return false;
        }
        else {

            var size = SCMDocumentGetFileSize(file);
            if (size > 1) {
                alert("You can upload SCM Document up to 1 MB");
                $(this).val('');
            }
            else {
                $(".facultySCMDocuments > span").text("");
            }

        }
    });




    //get file size
    function GetFileSize(fileid) {
        try {
           
            var fileSize = 0;
            //for IE

            if ($.browser.msie) {
                //before making an object of ActiveXObject, 
                //please make sure ActiveX is enabled in your IE browser
                var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                var filePath = $("#" + fileid)[0].value;
                var objFile = objFSO.getFile(filePath);
                var fileSize = objFile.size; //size in kb
                fileSize = fileSize / 1048576; //size in mb 
            }
                //for FF, Safari, Opeara and Others
            else {
                fileSize = $("#facultyRelievingLetter")[0].files[0].size //size in kb
                fileSize = fileSize / 1048576;   // Size In MB

              
                //fileSize = fileSize / 1048576; //size in mb 
            }

            return fileSize;
        }
        catch (e) {

            //alert("Error is : " + e);
        }
    }

    function GetFileSize1(fileid) {
        try {

            var fileSize = 0;
            //for IE

            if ($.browser.msie) {
                //before making an object of ActiveXObject, 
                //please make sure ActiveX is enabled in your IE browser
                var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                var filePath = $("#" + fileid)[0].value;
                var objFile = objFSO.getFile(filePath);
                var fileSize = objFile.size; //size in kb
                fileSize = fileSize / 1048576; //size in mb 
            }
                //for FF, Safari, Opeara and Others
            else {
                fileSize = $("#facultyJoiningOrder")[0].files[0].size //size in kb
                fileSize = fileSize / 1048576; // Size In MB
               
                //fileSize = fileSize / 1048576; //size in mb 
            }

            return fileSize;
        }
        catch (e) {

            //alert("Error is : " + e);
        }
    }


    //Get File Size of SCM Document
    function SCMDocumentGetFileSize(fileid) {
        try {

            var fileSize = 0;
            //for IE

            if ($.browser.msie) {
                //before making an object of ActiveXObject, 
                //please make sure ActiveX is enabled in your IE browser
                var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                var filePath = $("#" + fileid)[0].value;
                var objFile = objFSO.getFile(filePath);
                var fileSize = objFile.size; //size in kb
                fileSize = fileSize / 1048576; //size in mb 
            }
                //for FF, Safari, Opeara and Others
            else {
                fileSize = $("#facultySCMDocument")[0].files[0].size; //size in kb
                fileSize = fileSize / 1048576; // Size In MB

                //fileSize = fileSize / 1048576; //size in mb 
            }

            return fileSize;
        }
        catch (e) {

            //alert("Error is : " + e);
        }
    }


    function getNameFromPath(strFilepath) {

        var objRE = new RegExp(/([^\/\\]+)$/);
        var strName = objRE.exec(strFilepath);

        if (strName == null) {
            return null;
        }
        else {
            return strName[0];
        }
    }



</script>


