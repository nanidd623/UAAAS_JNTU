@using System.Collections.Concurrent

@model UAAAS.Models.FacultyRegistration

@{
    ViewBag.Title = "EditFacultyDetails";
    var FacultyPhddata = Model.FacultyEducation.Where(e => e.educationId == 6).Select(e => e).FirstOrDefault();
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.plugin.from_html.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function() {

        if ($('#department').val() == 60) {
            $("#OtherDepartment").addClass('required');
        } else {
            
            $("#OtherDepartment").removeClass('required');
        }
        if ($('#designation').val() == 4) {
            
            $("#OtherDesignation").addClass('required');
        } else {
           
            $("#OtherDesignation").removeClass('required');
        }
        if ($("#PGSpecialization option:selected").val() == '154') {
            $("#OthersPGSpecilizationName").show();
        } else {
            $("#OthersPGSpecilizationName").hide();
        }
        $(".Terms").click(function() {
            if ($(this).val() == "True") {
                $(".submitButton").show();
                $(".rbtn").css("background-color", "#E8EFF3");
            } else {
                $(".submitButton").hide();
            }
        });

        if ($(".ifNeworExist").is(':checked')) {

            $(".ifNeworExist").prop("disabled", true);

            var checkval = $(".ifNeworExist").prop("checked");

            if (checkval == true) {

                $('#divNewFaculty').show();
                $('#divOrganization').hide();
                $('#divExistFaculty').show();
            } else {

                $('#divNewFaculty').show();
                $('#divOrganization').hide();
                //$('#divOrganization').show();
                // $('#divExistFaculty').hide();
            }
        } else {
            $(".ifNeworExist").prop("disabled", false);
            $('#divNewFaculty').show();
            // $('#divOrganization').hide();
            //$('#divExistFaculty').hide();
        }

        $(".ifNeworExist").click(function() {

            ClearFields();

            if ($(this).val() == "NewFaculty") {

                $('#divNewFaculty').show();
                $('#divOrganization').show();
                // $('#divExistFaculty').hide();
                $(".ifWorking").prop("checked", false);
            } else if ($(this).val() == "ExistFaculty") {

                $('#divNewFaculty').show();
                $('#divOrganization').hide();
                $('#divExistFaculty').show();
                $('#divWorking').show();
                $(".ifWorking").prop("checked", true);
            }
        });

        $('.WorkingStatus').click(function() {

            $("#CollegeName").removeClass("required");
            $("#department").removeClass("required");
            $("#OtherDepartment").removeClass("required");
            $("#designation").removeClass("required");
            $("#facultyDateOfAppointment").removeClass("required");
            $("#TotalExperiencePresentCollege").removeClass("required");
            $("#facultyDateOfRatification").removeClass('required');

            if ($(this).val() == "True") {

                $(".FacultyRatifiedByJNTU").addClass("required");
                $('#divWorking').show();
                $('#divRatified').hide();
                $('#divDOR').hide();
            } else {

                $(".FacultyRatifiedByJNTU").removeClass("required");
                //  $('#divWorking').hide();
            }
        });

        $(".FacultyRatifiedByJNTU").click(function() {

            if ($(this).val() === "True") {

                $('.divRatified').show();
                $('#divDOR').show();
                $("#facultyDateOfRatification").addClass("required");

            } else {

                // $('#divRatified').hide();
                $('.divRatified').hide();
                $('#divDOR').hide();
                $("#facultyDateOfRatification").removeClass("required");
            }
        });

        $('#department').change(function() {
            debugger;
            //Others id=62
            if ($('#department').val() == 60) {
                $('#divDept1').show();
                $("#OtherDepartment").addClass('required');
            } else {
                $('#divDept').hide();
                $('#divDept1').hide();
                $("#OtherDepartment").removeClass('required');
            }
        });

        $('#designation').change(function() {
            debugger;
            //Other id=4
            if ($('#designation').val() == 4) {
                $('#divDesig1').show();
                $("#OtherDesignation").addClass('required');
            } else {
                $('#divDesig').hide();
                $('#divDesig1').hide();
                $("#OtherDesignation").removeClass('required');
            }
        });

        $('#PGSpecialization').change(function() {
            if ($("#PGSpecialization option:selected").val() == '154') {
                $("#OthersPGSpecilizationName").addClass('required');
                $("#OthersPGSpecilizationName").show();
            } else {
                $("#OthersPGSpecilizationName").hide();
                $("#OthersPGSpecilizationName").removeClass('required');
            }
        });

      




        //get pdf file size
        function GetIncomeTaxFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#IncomeTaxFileUpload")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //change function for pdf doc
        $(function() {
            $(".IncomeTaxFileUpload").change(function() {

                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {

                    case 'pdf':
                    case 'PDF':

                        flag = true;
                        break;
                    default:
                        flag = false;
                    }
                }

                if (flag == false) {
                    alert("You can upload only  PDF files");
                    //$(".IncomeTaxFileUploads > span").text("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetIncomeTaxFileSize(file);
                    size = size / 1048576;
                    if (size > 1) {
                        alert("Document should not exceed 1 MB in Size");
                        //$(".IncomeTaxFileUploads > span").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $(".IncomeTaxFileUploads > span").text("");
                    }
                }

            });
        });

        //SCM Pdf Uploading
        $(function() {
            $(".SelectionCommitteeProceedingsDocument").change(function() {
                debugger;
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {

                        case 'pdf':
                        case 'PDF':

                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    alert("You can upload only  PDF files");
                    //$(".SelectionCommitteeProceedingsDocument > span").text("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetSCMFileSize(file);
                    size = size / 1048576;
                    if (size > 1) {
                        alert("Document should not exceed 1 MB in Size");
                        //$(".SelectionCommitteeProceedingsDocument > span").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $(".SelectionCommitteeProceedingsDocument > span").text("");
                    }
                }

            });
        });
        function GetSCMFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#SelectionCommitteeProceedingsDocument")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }
//get pdf file size of Phd Undertaking
        function GetPhdUndertakingFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#PHDUndertakingDocument")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //change function for pdf Phd Undertaking Document
        $(function() {
            $(".PhdUndertakingfile").change(function() {

                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {

                    case 'pdf':
                    case 'PDF':

                        flag = true;
                        break;
                    default:
                        flag = false;
                    }
                }

                if (flag == false) {
                    $(".PhdUndertakingfiles > span").text("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetPhdUndertakingFileSize(file);
                    size = size / 1048576;
                    if (size > 1) {
                        $(".PhdUndertakingfiles > span").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $(".PhdUndertakingfiles > span").text("");
                    }
                }

            });
        });


//get file size
        function GetFileSize(fileid) {

            try {
                var fileSize = 0;
                //for IE

                if ($.browser.msie) {
                    //before making an object of ActiveXObject,
                    //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#Photo1")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }

                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            } else {
                return strName[0];
            }
        }

        //get file size
        function GetCertificateSize(fileid) {

            try {
                var fileSize = 0;
                //for IE

                if ($.browser.msie) {
                    //before making an object of ActiveXObject,
                    //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#" + fileid)[0].files[0].size //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }

                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        $(function() {

            $("#PhotoPreview").css("display", "none");

            $("#Photo").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readPhoto(F[i]);
            });

            function readPhoto(file) {

                var reader = new FileReader();
                var image = new Image();
                var showImage = 1;

                reader.readAsDataURL(file);
                reader.onload = function(_file) {
                    image.src = _file.target.result; // url.createObjectURL(file);
                    image.onload = function() {
                        var w = this.width,
                            h = this.height,
                            t = file.type, // ext only: // file.type.split('/')[1],
                            n = file.name,
                            s = ~~(file.size / 1024) + 'KB';

                        //alert(w+'x'+h+' '+s+' '+t+' '+n);

                        if (w > 200 || w < 150 || h < 150 || h > 230 || s > 50) {
                            alert('Photo should be Minimum - 150x150 pixels, Maximum - 200x230 pixels and less than 50 KB size');
                            showImage = 0;
                            $("#PhotoPreview").css("display", "none");
                            $("#PhotoPreview").css("background-image", "none");
                            var filephoto = $('#Photo');
                            file.replaceWith(filephoto.val('').clone(true));
                            return false;
                        }

                        if (t != 'image/jpeg') {
                            alert("Photo should be in JPEG/JPG format only");
                            showImage = 0;
                            $("#PhotoPreview").css("display", "none");
                            $("#PhotoPreview").css("background-image", "none");
                            var filephoto = $('#Photo');
                            file.replaceWith(filephoto.val('').clone(true));
                            return false;
                        }
                    };
                    image.onerror = function() {
                        alert('Invalid file type: ' + file.type);
                    };
                };
                reader.onloadend = function() { // set image data as background of div
                    if (showImage == 1) {
                        $("#PhotoPreview").css("display", "block");
                        $("#PhotoPreview").css("background-image", "url(" + this.result + ")");
                    } else {
                        $("#PhotoPreview").css("display", "none");
                        $("#PhotoPreview").css("background-image", "none");
                    }
                }
            }

            $(".panfile1").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '300x250', '100', 'PAN Card Document');

            });
            $(".aadhaarfile").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0])
                    for (var i = 0; i < F.length; i++)
                        readDocument(F[i], '200x200', '100', 'Aadhaar Card Document');

            });
            //Comment By Narayana
            //$(".SelectionCommitteeProceedingsDocument").change(function(e) {
               
            //    if (this.disabled) return alert('File upload not supported!');
            //    var F = this.files;
            //    if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'Proceedings Document');

            //});
            $(".1-certificate").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', '10th Or Equivalent Document');

            });
            $(".3-certificate").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'UG Document');

            });
            $(".4-certificate").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'PG Document');

            });
            $(".5-certificate").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'M.Phil Document');

            });
            $(".6-certificate").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'Ph.D Document');

            });

            function readDocument(file, minimum, fsize, title) {

                var reader = new FileReader();
                var image = new Image();

                reader.readAsDataURL(file);
                reader.onload = function(_file) {
                    image.src = _file.target.result; // url.createObjectURL(file);
                    image.onload = function() {
                        var w = this.width,
                            h = this.height,
                            t = file.type, // ext only: // file.type.split('/')[1],
                            n = file.name,
                            s = ~~(file.size / 1024); //s = ~~(file.size/1024) +'KB';

                        //alert(w+'x'+h+' '+s+' '+t+' '+n);
                        //alert(w+'-'+minimum.split('x')[0]);alert(h+'-'+minimum.split('x')[1]);
                        //if(w<minimum.split('x')[0])
                        //{alert('width-notok');}else{alert('width-ok');}
                        //if(h<minimum.split('x')[1])
                        //{alert('height-notok');}else{alert('height-ok');}
                        //if(s>fsize)
                        //{alert('size-notok');}else{alert('size-ok');}
                        if (w < minimum.split('x')[0] || h < minimum.split('x')[1] || s > fsize) {
                            alert(title + " should be Minimum - " + minimum + " pixels and less than " + fsize + " KB size");

                            var filephoto;

                            if (title == 'PAN Card Document') {
                                filephoto = $('.panfile1');
                            }

                            if (title == 'Aadhaar Card Document') {
                                filephoto = $('.aadhaarfile');
                            }

                            if (title == 'Proceedings Document') {
                                filephoto = $('.SelectionCommitteeProceedingsDocument');
                            }

                            if (title == '10th Or Equivalent Document') {
                                filephoto = $('.1-certificate');
                            }

                            if (title == 'UG Document') {
                                filephoto = $('.3-certificate');
                            }

                            if (title == 'PG Document') {
                                filephoto = $('.4-certificate');
                            }

                            if (title == 'M.Phil Document') {
                                filephoto = $('.5-certificate');
                            }

                            if (title == 'Ph.D Document') {
                                filephoto = $('.6-certificate');
                            }

                            file.replaceWith(filephoto.val('').clone(true));
                            return false;
                        }

                        if (t != 'image/jpeg') {
                            alert(title + " should be in JPEG/JPG format only");

                            var filephoto;

                            if (title == 'PAN Card Document') {
                                filephoto = $('.panfile');
                            }

                            if (title == 'Aadhaar Card Document') {
                                filephoto = $('.panfile');
                            }

                            if (title == 'Proceedings Document') {
                                filephoto = $('.SelectionCommitteeProceedingsDocument');
                            }

                            if (title == '10th Or Equivalent Document') {
                                filephoto = $('.1-certificate');
                            }

                            if (title == 'UG Document') {
                                filephoto = $('.3-certificate');
                            }

                            if (title == 'PG Document') {
                                filephoto = $('.4-certificate');
                            }

                            if (title == 'M.Phil Document') {
                                filephoto = $('.5-certificate');
                            }

                            if (title == 'Ph.D Document') {
                                filephoto = $('.6-certificate');
                            }

                            file.replaceWith(filephoto.val('').clone(true));
                            return false;
                        }
                    };
                    image.onerror = function() {
                        alert('Invalid file type: ' + file.type);
                    };
                };
            }

            //old code
            $(".file1").change(function() {

                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                    case 'jpg':
                    case 'JPG':
                    case 'jpeg':
                    case 'JPEG':
                        flag = true;
                        break;
                    default:
                        flag = false;
                    }
                }

                if (flag == false) {
                    alert("Photo should be in JPEG format only");
                    $(this).val('');
                    return false;
                } else {

                    var size = GetFileSize(file);
                    if (size > 51200) {
                        alert("Photo should not exceed 50 KB in Size");
                        $(this).val('');
                    } else {
                        $(".files > span").text("");
                    }

                }
            });

            $(".certificate1").change(function() {

                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                    case 'jpg':
                    case 'JPG':
                    case 'jpeg':
                    case 'JPEG':
                        flag = true;
                        break;
                    default:
                        flag = false;
                    }
                }

                if (flag == false) {
                    alert("Certificate should be in JPEG format only");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetCertificateSize(this.id);

                    if (size > 102400) {
                        alert("Certificate size should not exceed 100 KB in Size");
                        $(this).val('');
                    } else {
                        $(".certificates > span").text("");
                    }
                }
            });

            $(".panfile1").change(function() {

                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                    case 'jpg':
                    case 'JPG':
                    case 'jpeg':
                    case 'JPEG':
                        flag = true;
                        break;
                    default:
                        flag = false;
                    }
                }

                if (flag == false) {
                    alert("PAN Card document should be in JPEG format only");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetCertificateSize(this.id);

                    if (size > 102400) {
                        alert("PAN Card document size should not exceed 100 KB in Size");
                        $(this).val('');
                    } else {
                        //$(".certificates > span").text("");
                    }
                }
            });

            $(".aadhaarfile").change(function() {

                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                    case 'jpg':
                    case 'JPG':
                    case 'jpeg':
                    case 'JPEG':
                        flag = true;
                        break;
                    default:
                        flag = false;
                    }
                }

                if (flag == false) {
                    alert("Aadhaar Card document should be in JPEG format only");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetCertificateSize(this.id);

                    if (size > 102400) {
                        alert("Aadhaar Card document size should not exceed 100 KB in Size");
                        $(this).val('');
                    } else {
                        //$(".certificates > span").text("");
                    }
                }
            });
        });


        $(".SelectionCommitteeProceedingsDocument1").change(function() {

            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                case 'jpg':
                case 'JPG':
                case 'jpeg':
                case 'JPEG':
                    flag = true;
                    break;
                default:
                    flag = false;
                }
            }

            if (flag == false) {
                alert("Selection CommitteeProceedings Document should be in JPEG format only");
                $(this).val('');
                return false;
            } else {
                var size = GetCertificateSize(this.id);

                if (size > 102400) {
                    alert("Selection CommitteeProceedings Document should not exceed 100 KB in Size");
                    $(this).val('');
                } else {
                    //$(".certificates > span").text("");
                }
            }
        });

        if ($('input[name=isFacultyRatifiedByJNTU]:checked').val() === "False") {

            $('.divRatified').hide();
            $('#divDOR').hide();
            $("#facultyDateOfRatification").removeClass("required");
        }


        $('#btnUpdate').click(function(e) {
            
            var facultyType = $('input[name=Type]:checked').val();
            if (facultyType == 'ExistFaculty') {

                if ($('#PANNumber').val() == '') {
                    $('#PANNumber').addClass("required");
                    $('.panfile').addClass("required");
                }

                //if($('#PANNumber').val()!='')
                //{
                //   // $('#PANNumber').removeClass("required");
                //    $('.panfile').addClass("required");
                //}

                //$('#AadhaarNumber').removeClass("required");
            } else if (facultyType == 'NewFaculty') {

                $('#PANNumber').removeClass("required");
                $('.panfile').removeClass("required");
                $('#AadhaarNumber').removeClass("required");
                //$('.aadhaarfile').removeClass("required");

                if ($('#PANNumber').val() != '') {
                    $('.panfile').addClass("required");
                    $("#PANCardDocument").removeClass("input-validation-error");
                }
            }


            var collegeId = $("#CollegeName option:selected").val();
            if (collegeId == "") {
                $("#CollegeName").addClass("required");
            }

            var departmentId = $("#department option:selected").val();
            if (departmentId == "") {
                $("#department").addClass("required");
            }


            if ($("#facultyDateOfAppointment").val() == '') {
                $("#facultyDateOfAppointment").addClass("required");
            }


            if ($('#AadhaarNumber').val() == '') {
                $('.aadhaarfile').addClass("required");
                $('#AadhaarNumber').addClass("required");
            } else {
                //$('.aadhaarfile').removeClass("required");
                //$('#AadhaarNumber').removeClass("required");
            }


            if ($("#TotalExperience").val() == '') {

                $("#TotalExperience").addClass("required");
            }


            if ($("#EditMobile").val() == '') {

                $("#EditMobile").addClass("required");
            }

            var newORExist = $(".ifNeworExist").prop("checked");

            if (newORExist == true) {
                var e1 = $("#Type").prop("checked");
                var e2 = $(".WorkingStatus").prop("checked");

                if ($(".WorkingStatus").is(":checked")) {

                    if (e2 == true) {
                        if ($("#CollegeName").val() == '') {
                            $("#CollegeName").addClass("required");

                        }
                        if ($("#department").val() == '') {
                            $("#department").addClass("required");
                        }

                        if ($('#department').val() == 62) {
                            if ($("#OtherDepartment").val() == '') {
                                $("#OtherDepartment").addClass("required");
                            }
                        }

                        if ($("#designation").val() == '') {

                            $("#designation").addClass("required");
                        }

                        if ($('#designation').val() == 4) {
                            if ($("#OtherDesignation").val() == '') {

                                $("#OtherDesignation").addClass("required");
                            }
                        }

                        if ($("#facultyDateOfAppointment").val() == '') {

                            $("#facultyDateOfAppointment").addClass("required");
                        }

                        if ($("#TotalExperiencePresentCollege").val() == '') {

                            $("#TotalExperiencePresentCollege").addClass("required");
                        }

                        var ratification = $(".FacultyRatifiedByJNTU").prop("checked");

                        if (ratification == true) {
                            if ($("#facultyDateOfRatification").val() == '') {

                                $("#facultyDateOfRatification").focus();
                                $("#facultyDateOfRatification").addClass('required');
                            }
                        }

                        if ($("#GrossSalary").val() == '') {
                            $("#GrossSalary").focus();
                            $("#GrossSalary").addClass('required');
                        }

                        $('.SelectionCommitteeProceedingsDocument').removeClass("required");
                        if ($('#ProceedingsNo').val() != '') {
                            $('.SelectionCommitteeProceedingsDocument').addClass("required");
                        }
                    } else {
                        $("#CollegeName").removeClass("required");
                        $("#department").removeClass("required");
                        $("#OtherDepartment").removeClass("required");
                        $("#designation").removeClass("required");
                        $("#facultyDateOfAppointment").removeClass("required");
                        $("#TotalExperiencePresentCollege").removeClass("required");
                        // $("#facultyDateOfRatification").removeClass('required');
                        $("#GrossSalary").removeClass('required');
                    }
                }
            }

            var terms = $('input[name=Terms]:checked').val();
            if (terms == undefined) {
                var terms = $('input[name=Terms]:checked').val();

                if (terms == undefined) {
                    // alert('You must agree Terms & Conditions before Register');
                    $(".rbtn").css("background-color", "red");
                    //return false;
                } else {
                    $(".rbtn").css("background-color", "#E8EFF3");
                }
            }

            var pandocument = $("#facultyPANCardDocument").val();
            if (pandocument != '') {
                $("input[name=PANCardDocument]").attr("required", false);
            } else {
                $("input[name=PANCardDocument]").addClass("required");
                $("input[name=PANCardDocument]").attr("required", true);
            }

            var scmdocument = $("#SelectionCommitteeProcedings").val();

            if (scmdocument != '') {
                //$("input[name=SelectionCommitteeProceedingsDocument]").attr("required", false);
            } else {
                //$("input[name=SelectionCommitteeProceedingsDocument]").removeClass("required");
                //$("input[name=SelectionCommitteeProceedingsDocument]").attr("required", true);
            }

            var photodata = $("#facultyPhoto").val();
            if (photodata != '') {
                $("input[name=Photo]").attr("required", false);
            } else {
                $("input[name=Photo]").addClass("required");
                $("input[name=Photo]").attr("required", true);
            }

            var incomtaxdocument = $("#IncomeTaxFileview").val();
            if (incomtaxdocument != '') {
                $("input[name=IncomeTaxFileUpload]").attr("required", false);
            } else {
                $("input[name=IncomeTaxFileUpload]").addClass("required");
                $("input[name=IncomeTaxFileUpload]").attr("required", true);
            }


            var ssceducationId = $("#FacultyEducation_0__educationId").val();
            var ssccertificate = $("#FacultyEducation_0__facultyCertificate").val();
            if (ssceducationId !== '') {
                if (ssccertificate !== '') {
                    // $("#FacultyEducation_0__facultyCertificate").removeClass('required');
                } else {
                    $("." + ssceducationId + "-certificate").addClass('required');
                }
            }

            var beeducationId = $("#FacultyEducation_1__educationId").val();
            var becertificate = $("#FacultyEducation_1__facultyCertificate").val();

            if (beeducationId !== '') {
                if (becertificate !== '') {
                    // $("#FacultyEducation_0__facultyCertificate").removeClass('required');
                } else {
                    $("." + beeducationId + "-certificate").addClass('required');
                }
            }

            var meeducationId = $("#FacultyEducation_2__educationId").val();
            var mecertificate = $("#FacultyEducation_2__facultyCertificate").val();
            if (meeducationId !== '') {
                if (mecertificate !== '') {
                    // $("#FacultyEducation_0__facultyCertificate").removeClass('required');
                } else {
                    $("." + meeducationId + "-certificate").addClass('required');
                }
            }
            var phdeducationId = $("#FacultyEducation_4__educationId").val();
            var phdcertificate = $("#FacultyEducation_4__facultyCertificate").val();
            var mphildata=$("#FacultyEducation_3__studiedEducation").val();
            if(mphildata!=='')
            {
                $("#FacultyEducation_3__specialization").addClass('required');
                $("#yr_3").addClass('required');
                $("#FacultyEducation_3__percentage").addClass('required');
                $("#division_3").addClass('required');
                $("#FacultyEducation_3__university").addClass('required');
                $("#FacultyEducation_3__place").addClass('required');
                if($("#FacultyEducation_3__facultyCertificate").val()=='')
                {
                    $("#FacultyEducation_3__certificate").addClass('required');
                }
                else
                {
                    $("#FacultyEducation_3__certificate").removeClass('required');
                }
                
            }
            else
            {
                $("#FacultyEducation_3__specialization").removeClass('required');
                $("#yr_3").removeClass('required');
                $("#FacultyEducation_3__percentage").removeClass('required');
                $("#division_3").removeClass('required');
                $("#FacultyEducation_3__university").removeClass('required');
                $("#FacultyEducation_3__place").removeClass('required');
                $("#FacultyEducation_3__certificate").removeClass('required');
            }
            var phddata=$("#FacultyEducation_4__studiedEducation").val();
            if(phddata!=='')
            {
                $("#FacultyEducation_4__specialization").addClass('required');
                $("#yr_4").addClass('required');
                $("#FacultyEducation_4__percentage").addClass('required');
                $("#division_4").addClass('required');
                $("#FacultyEducation_4__university").addClass('required');
                $("#FacultyEducation_4__place").addClass('required');
                if($("#FacultyEducation_4__facultyCertificate").val()=='')
                {
                    $("#FacultyEducation_4__certificate").addClass('required');
                }
                else
                {
                    $("#FacultyEducation_4__certificate").removeClass('required');
                }
            }
            else
            {
                $("#FacultyEducation_4__specialization").removeClass('required');
                $("#yr_4").removeClass('required');
                $("#FacultyEducation_4__percentage").removeClass('required');
                $("#division_4").removeClass('required');
                $("#FacultyEducation_4__university").removeClass('required');
                $("#FacultyEducation_4__place").removeClass('required');
                $("#FacultyEducation_4__certificate").removeClass('required');
            }


           // var phdcertificate = $(".6-certificate").val();
            var PhdUndertakingDocumentview = $("#PHDUndertakingDocumentView").val();
            if (phdeducationId !== '') {
                if (phdcertificate !== '') {
                    if (PhdUndertakingDocumentview !== '')
                        $(".PhdUndertakingfile").removeClass('required');
                    else
                        $(".PhdUndertakingfile").addClass('required');
                } else {
                    $(".PhdUndertakingfile").removeClass('required');
                }
            }

            if ($("#PGSpecialization option:selected").val() == '154') {
                $("#OthersPGSpecilizationName").addClass('required');
                $("#OthersPGSpecilizationName").show();
            } else {
                $("#OthersPGSpecilizationName").hide();
                $("#OthersPGSpecilizationName").removeClass('required');
            }



            @*if($('.required').length > 0 ){
                e.preventDefault();
                if(document.forms[0].checkValidity()){

                }
            }
            else{
                var actionUrl='@Url.Action("EditFacultyDetails", "OnlineRegistration", new { Command="Update",fid=ViewBag.fid  })';
                $("form" ).attr( "enctype", "multipart/form-data" );
                if(document.forms[0].checkValidity()){
                    document.forms[0].action=actionUrl;
                    document.forms[0].submit();
                }
            }*@
        });
    });

    function isNumberKey(evt){
        var len = $('.txtPercentage').val().length;
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57 || len>4) && charCode != 46)
            return false;
        else {

            var index = $('.txtPercentage').val().indexOf('.');

            if (index > 0 && charCode == 46) {
                return false;
            }
            if (index > 0 ) {
                var CharAfterdot = (len + 1) - index;
                if (CharAfterdot > 3 && charCode != 8) {
                    return false;
                }
            }

        }
        return true;
    }

    function checkSpcialChar(event){
        var e=window.event || event
        var keyunicode=e.charCode || e.keyCode
        //Allow alphabetical keys, plus BACKSPACE and SPACE
        return ((keyunicode>=65 && keyunicode<=122) || (keyunicode>=48 && keyunicode<=57) || keyunicode==8 || keyunicode==32)? true : false
        return;
        event.returnValue = true;
    }

    function isNumeric(evt){
        var len = $('#GrossSalary').val().length;
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57 || len>7) && charCode != 46)
            return false;
        else
            return true;
    }

    function printdiv(printpage) {
        //$(".view_hide").hide();
        //Get the HTML of div
        var divElements = document.getElementById(printpage).innerHTML;
        //Get the HTML of whole page
        var oldPage = document.body.innerHTML;

        //Reset the page's HTML with div's HTML only
        document.body.innerHTML =
          "<html><head><title></title></head><body>" +
          divElements.fontsize(1) + "</body>";

        //Print Page
        window.print();

        //Restore orignal HTML
        document.body.innerHTML = oldPage;
        //$(".view_hide").show();
        return false;
    }

    function ClearFields()
    {
        $('#Email').val('');
        $('#UserName').val('');
        $('#NewPassword').val('');
        $('#ConfirmPassword').val('');
        $('#FirstName').val('');
        $('#MiddleName').val('');
        $('#LastName').val('');
        $('#FatherOrhusbandName').val('');
        $('#MotherName').val('');

        $('#GenderId').removeAttr('checked');
        $('#facultyDateOfBirth').val('');
        $('#Mobile').val('');
        var filephoto=$('#Photo');
        filephoto.replaceWith(filephoto.val('').clone(true));
        $('#PhotoPreview').hide();
        $('#PANNumber').val('');
        $('#AadhaarNumber').val('');
        var pandoc= $('#PANCardDocument');
        pandoc.replaceWith(pandoc.val('').clone(true));
        var Aadhardoc=$('#AadhaarCardDocument');
        Aadhardoc.replaceWith(Aadhardoc.val('').clone(true));
        $('#OrganizationName').val('');

        $('#WorkingStatus').removeAttr('checked');
        $('#TotalExperience').val('');
        $('#CollegeName').val('');
        $('#department').val('');
        $('#OtherDepartment').val('');
        $('#designation').val('');
        $('#OtherDesignation').val('');
        $('#facultyDateOfAppointment').val('');
        $('#TotalExperiencePresentCollege').val('');
        $('#isFacultyRatifiedByJNTU').val('');
        $('#facultyDateOfRatification').val('');
        $('#ProceedingsNo').val('');
        var proceedingsdoc=$('#SelectionCommitteeProceedingsDocument');
        proceedingsdoc.replaceWith(proceedingsdoc.val('').clone(true));
        $('#AICTEFacultyId').val('');
        $('#GrossSalary').val('');

        //QualificationTable
        var rowCount = $('#tblQualification >tbody >tr').length;

        for (var i = 0; i < rowCount; i++) {
            $('#FacultyEducation_' + i + '__studiedEducation').val('');
            $('#FacultyEducation_' + i + '__specialization').val('');
            $('yr_' + i).val('');
            $('#FacultyEducation_' + i + '__percentage').val('');
            $('#division_' + i).val('');
            $('#FacultyEducation_' + i + '__university').val('');
            $('#FacultyEducation_' + i + '__place').val('');
            var cerificatedoc=$('#FacultyEducation_' + i + '__certificate');
            cerificatedoc.replaceWith(cerificatedoc.val('').clone(true));
        }

        $('#National').val('');
        $('#InterNational').val('');
        $('#Citation').val('');
        $('#Awards').val('');

        $('.Terms').removeAttr('checked');
    }

    function demoFromHTML() {
        var pdf = new jsPDF('p', 'pt', 'letter')

        // source can be HTML-formatted string, or a reference
        // to an actual DOM element from which the text will be scraped.
        , source = $('#div_print')[0]

        // we support special element handlers. Register them with jQuery-style
        // ID selector for either ID or node name. ("#iAmID", "div", "span" etc.)
        // There is no support for any other type of selectors
        // (class, of compound) at this time.
        , specialElementHandlers = {
            // element with id of "bypass" - jQuery style selector
            '#bypassme': function(element, renderer){
                // true = "handled elsewhere, bypass text extraction"
                return true
            }
        }

        margins = {
            top: 80,
            bottom: 60,
            left: 40,
            width: 522
        };
        // all coords and widths are in jsPDF instance's declared units
        // 'inches' in this case
        pdf.fromHTML(
            source // HTML string or DOM elem ref.
            , margins.left // x coord
            , margins.top // y coord
            , {
                'width': margins.width // max width of content on PDF
                , 'elementHandlers': specialElementHandlers
            },
            function (dispose) {
                // dispose: object with X, Y of the last line add to the PDF
                //          this allow the insertion of new lines after html
                pdf.save('Test.pdf');
            },
            margins
        )
    }
    var doc = new jsPDF();
    var specialElementHandlers = {
        '#editor': function (element, renderer) {
            return true;
        }
    };

    function HTML2PDF() {
         
        doc.fromHTML($('#div_print').html(), 15, 15, {'width': 170,'elementHandlers': specialElementHandlers});
        doc.save('sample-file.pdf');
    }
</script>
@*@{
        TempData.Keep("fid");
    }*@
@*<h3>Modified data will be reflected after verification</h3>*@
@*@if (Model.PanStatus == "N" || Model.PanStatus == "ID")
{
    <div class="section_pink" style="text-align: center">
        <h4 style="color:red">You have Invalid / Incorrect / Unclear PAN</h4>
    </div>
   
}*@


<br />
<form method="post" enctype="multipart/form-data" action="@Url.Action("EditFacultyDetails", "OnlineRegistration", new { Command="Update",fid=ViewBag.fid  })">
    @Html.ValidationSummary(true)

    <table class="faculty_table" style="text-align: center; width: 100%;display:none">
        <tr>
            <td class="col1" style="font-weight: bold; width: 15%;">
                <span>Faculty Type</span>
            </td>
            <td class="col2" style="width: 85%;">
                <label title="Presently WORKING in any of the Technical Colleges affiliated to JNTUH">@Html.RadioButtonFor(model => model.Type, "ExistFaculty", new { @name = "fType", @class = "ifNeworExist ifExist" }) Existing Faculty</label>
                - (Working in any Affiliated College of JNTUH)
                <br />
                <label title="Presently NOT WORKING in any of the Technical Colleges affiliated to JNTUH but wish to work in future">@Html.RadioButtonFor(model => model.Type, "NewFaculty", new { @name = "fType", @class = "ifNeworExist ifNew" }) New Faculty </label>
                - (Not working with any College but wish to apply for in future)
                lty
                @Html.HiddenFor(model => model.Type)
                @*@if (Model.isView == null)
                    {
                        <div style="text-align: right; font-style: italic; float: right; width: 250px; color: red;">
                            * - marked fields are mandatory
                        </div>
                    }*@
            </td>
        </tr>
    </table>
    <div id="divNewFaculty">
        <table class="faculty_table">
            @if (Model.id > 0)
            {
                <tr>
                    <td class="col1" colspan="2">
                        <b>Registration Information</b>
                    </td>
                </tr>
                <tr>
                    <td class="col1" style="font-weight: bold;">
                        @Html.LabelFor(model => model.RegistrationNumber)
                    </td>
                    <td class="col2">
                        <span style="text-transform: uppercase; font-weight: bold;">@Html.DisplayFor(model => model.RegistrationNumber)</span>
                    </td>
                </tr>
                @Html.HiddenFor(model => model.UniqueID)
                @Html.HiddenFor(model => model.isApproved)
                @Html.HiddenFor(model => model.RegistrationNumber)
                @*@Html.HiddenFor(model => model.CollegeId)*@
                @Html.HiddenFor(model => model.id)

                <tr style="display: none;">
                    <td class="col1" style="font-weight: bold;">
                        @Html.LabelFor(model => model.UniqueID)
                    </td>
                    <td class="col2">

                        @if (@Model.isView == true)
                        {
                            <span style="text-transform: uppercase; font-weight: bold;">@Html.DisplayFor(model => model.UniqueID)</span>
                        }
                        else if (@Model.isView == false)
                        {
                            <span style="color: red;">Rejected</span>
                        }
                        else
                        {
                            <span>Permanent Faculty Registration ID will be provided after verification</span>
                        }
                    </td>
                </tr>
                <tr style="display: none;">
                    <td class="col1" style="">
                        Application @Html.LabelFor(model => model.isApproved)
                    </td>
                    <td class="col2" style="">
                        @if (Roles.IsUserInRole("Admin"))
                        {

                        }
                        else
                        {
                            if (@Model.isApproved == true)
                            {
                                <span>Approved</span>
                            }
                            else if (@Model.isApproved == false)
                            {
                                <span>Rejected</span>
                            }
                            else
                            {
                                <span>Application accepted and processing</span>
                            }
                        }
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td class="col1" colspan="2">
                        <b>Login Information</b>
                    </td>
                </tr>
            }

            @if (@Model.Type == "adjunct")
            {
                <tr>
                    <td class="col1" style="width: 10% !important; vertical-align: top;">
                        <span>Working Type</span>
                    </td>
                    <td class="col2" style="width: 90% !important; vertical-align: top;">
                        @Html.DisplayFor(model => model.WorkingType)
                    </td>
                </tr>
            }
            <tr>
                <td class="col1" style="width: 10% !important; vertical-align: top;">
                    @Html.LabelFor(model => model.Email)
                    <span style="color: blue;">(Login ID)</span> <span class="mandatory">*</span>
                </td>
                <td class="col2 focus" style="width: 90% !important; vertical-align: top;">
                    @if (@Model.isView != null)
                    {
                        @*@Html.TextBoxFor(model => model.Email, new { style = "width: 22%;", @placeholder = "Enter your Email ID", @maxlength = "50" })
                        @Html.ValidationMessageFor(model => model.Email)*@
                        @Html.DisplayFor(model => model.Email)
                        @Html.HiddenFor(model => model.Email)
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.Email, new { style = "width: 22%;", @placeholder = "Enter your Email ID", @maxlength = "50" })
                        @Html.ValidationMessageFor(model => model.Email)
                    }
                </td>
            </tr>

        </table>
        <table class="faculty_table">
            <tr>
                <td class="col1" colspan="4">
                    <b>Faculty Information</b>
                </td>
            </tr>
            <tr>
                <td class="col1">
                    @Html.LabelFor(model => model.EditPANNumber) <span class="mandatory">*</span>
                </td>
                <td class="col2">
                    @if (@Model.isView != null)
                    {
                        if (@Model.PanStatus != "E" ||String.IsNullOrEmpty(@Model.EditPANNumber))
                        {
                            @Html.TextBoxFor( model => model.EditPANNumber, new { @id = "PANNumber", @placeholder = "Enter PAN Number", @maxlength = "10", @class = "clsPanNumber" })
                            @Html.ValidationMessageFor(model => model.EditPANNumber)
                           @*@Html.DisplayFor(model => model.EditPANNumber, new { @id = "PANNumber", @placeholder = "Enter PAN Number", @maxlength = "10", @class = "clsPanNumber" })
                           @Html.HiddenFor(model => model.EditPANNumber)*@
                        }
                        else
                        {
                            @Html.DisplayFor(model => model.EditPANNumber, new { @id = "PANNumber", @placeholder = "Enter PAN Number", @maxlength = "10", @class = "clsPanNumber" })
                            @Html.HiddenFor(model => model.EditPANNumber)
                        }

                    }
                    else
                    {
                        @*@Html.TextBoxFor(model => model.EditPANNumber, new { @id = "PANNumber", @placeholder = "Enter PAN Number", @maxlength = "10", @class = "clsPanNumber" })
                        @Html.ValidationMessageFor(model => model.EditPANNumber)*@
                        @Html.DisplayFor(model => model.EditPANNumber, new { @id = "PANNumber", @placeholder = "Enter PAN Number", @maxlength = "10", @class = "clsPanNumber" })
                        @Html.HiddenFor(model => model.EditPANNumber)
                    }
                </td>
                <td class="col3">
                    <span>First Name</span>
                    @*@Html.LabelFor(model => model.FirstName)<span class="mandatory">*</span><br/>*@
                    @*<span style="color: blue;">(As Per SSC Certificate)</span>*@
                </td>
                <td class="col4">


                    @if (@Model.isView != null)
                    {
                        @Html.LabelFor(model => model.FirstName, Model.FirstName, new { id = "FirstName" })
                        @Html.HiddenFor(model => model.FirstName, new { id = "FirstName" })

                    }
                    else
                    {
                        @*@Html.TextBoxFor(model => model.FirstName, new { @placeholder = "Enter your First Name", @maxlengeh = "25", @onkeypress = "return checkSpcialChar(event)" })
                            @Html.ValidationMessageFor(model => model.FirstName)*@
                        @Html.DisplayFor(model => model.FirstName)
                        @Html.HiddenFor(model => model.FirstName)
                    }
                </td>
            </tr>
            <tr>
                <td class="col1">
                    <span>Middle Name</span>
                    @*@Html.LabelFor(model => model.MiddleName)<br />*@
                    @*<span style="color: blue;">(As Per SSC Certificate)</span>*@
                </td>
                <td class="col2">
                    @if (@Model.isView != null)
                    {

                        if (string.IsNullOrEmpty(Model.MiddleName))
                        {
                            @Html.LabelFor(model => model.MiddleName, " ", new { id = "MiddleName" })
                            @Html.HiddenFor(model => model.MiddleName, new { id = "MiddleName" })
                        }
                        else
                        {
                            @Html.LabelFor(model => model.MiddleName, Model.MiddleName, new { id = "MiddleName" })
                            @Html.HiddenFor(model => model.MiddleName, new { id = "MiddleName" })
                        }
                    }
                    else
                    {
                        @*@Html.TextBoxFor(model => model.MiddleName, new { @placeholder = "Enter your Middle Name", @maxlengeh = "25", @onkeypress = "return checkSpcialChar(event)" })
                            @Html.ValidationMessageFor(model => model.MiddleName)*@
                        @Html.DisplayFor(model => model.MiddleName)
                        @Html.HiddenFor(model => model.MiddleName)
                    }



                </td>
                <td class="col3">
                    @*@Html.LabelFor(model => model.LastName) <span class="mandatory">*</span><br />*@
                    <span>Last Name</span>
                    @*<span style="color: blue;">(As Per SSC Certificate)</span>*@
                </td>
                <td class="col4">
                    @if (@Model.isView != null)
                    {

                        @Html.LabelFor(model => model.LastName, Model.LastName, new { id = "LastName" })
                        @Html.HiddenFor(model => model.LastName, new { id = "LastName" })
                    }
                    else
                    {
                        @*@Html.TextBoxFor(model => model.LastName, new { @placeholder = "Enter your Last Name", @maxlengeh = "25", @onkeypress = "return checkSpcialChar(event)" })
                            @Html.ValidationMessageFor(model => model.LastName)*@
                        @Html.DisplayFor(model => model.LastName)
                        @Html.HiddenFor(model => model.LastName)
                    }
                    @*@if (@Model.isView != null)
                        {
                            @Html.TextBoxFor(model => model.LastName, new { @placeholder = "Enter your Last Name", @maxlengeh = "25", @onkeypress = "return checkSpcialChar(event)" })
                            @Html.ValidationMessageFor(model => model.LastName)
                        }*@
                </td>
            </tr>
            <tr>
                <td class="col1">
                    <span>Father's Name / Husband's Name</span> <span class="mandatory">*</span>
                </td>
                <td class="col2">
                    @if (@Model.isView != null)
                    {
                        @*@Html.TextBoxFor(model => model.FatherOrhusbandName, new { @placeholder = "Enter your Father's / Husband's Name", @maxlengeh = "50", @onkeypress = "return checkSpcialChar(event)" })
                        @Html.ValidationMessageFor(model => model.FatherOrhusbandName)*@
                        @Html.DisplayFor(model => model.FatherOrhusbandName)
                        @Html.HiddenFor(model => model.FatherOrhusbandName)
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.FatherOrhusbandName, new { @placeholder = "Enter your Father's / Husband's Name", @maxlengeh = "50", @onkeypress = "return checkSpcialChar(event)" })
                        @Html.ValidationMessageFor(model => model.FatherOrhusbandName)
                    }
                </td>
                <td class="col3">
                    @Html.LabelFor(model => model.MotherName) <span class="mandatory">*</span>
                </td>
                <td class="col4">
                    @if (@Model.isView != null)
                    {
                        @*@Html.TextBoxFor(model => model.MotherName, new { @placeholder = "Enter your Mother's Name", @maxlengeh = "25", @onkeypress = "return checkSpcialChar(event)" })
                        @Html.ValidationMessageFor(model => model.MotherName)*@
                        @Html.DisplayFor(model => model.MotherName)
                        @Html.HiddenFor(model => model.MotherName)
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.MotherName, new { @placeholder = "Enter your Mother's Name", @maxlengeh = "25", @onkeypress = "return checkSpcialChar(event)" })
                        @Html.ValidationMessageFor(model => model.MotherName)
                    }
                </td>
            </tr>
            <tr>
                <td class="col1">
                    @Html.LabelFor(model => model.GenderId) <span class="mandatory">*</span>
                </td>
                <td class="col2">
                    @if (@Model.isView != null)
                    {
                        if (@Model.GenderId == 1)
                        {
                            <span>Male</span>
                        }
                        else if (@Model.GenderId == 0)
                        {
                            <span>Female</span>
                        }
                        @Html.HiddenFor(model => model.GenderId)

                    }
                    else
                    {
                        <label>@Html.RadioButtonFor(model => model.GenderId, 1) Male </label>
                        <label>@Html.RadioButtonFor(model => model.GenderId, 0) Female </label>
                        @Html.ValidationMessageFor(model => model.GenderId)
                    }
                </td>
                <td class="col3">
                    @Html.LabelFor(model => model.DateOfBirth) <span class="mandatory">*</span><br />
                    <span style="color: blue;">(As Per SSC Certificate)</span>
                </td>
                <td class="col4">
                    @if (@Model.isView != null)
                    {
                        @Html.TextBoxFor(model => model.facultyDateOfBirth, new { @class = "calendar", style = "", @onblur = "IsValidDate(this,event.keyCode,0,0,0)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Select Date of Birth" })
                        @Html.ValidationMessageFor(model => model.facultyDateOfBirth)
                        @*@Html.DisplayFor(model => model.facultyDateOfBirth)
                        @Html.HiddenFor(model => model.facultyDateOfBirth)*@

                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.facultyDateOfBirth, new { @class = "calendar", style = "", @onblur = "IsValidDate(this,event.keyCode,0,0,0)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Select Date of Birth" })
                        @Html.ValidationMessageFor(model => model.facultyDateOfBirth)
                    }
                </td>
            </tr>

            <tr>
                <td class="col1" style="vertical-align: top;">
                    @Html.LabelFor(model => model.EditMobile) <span class="mandatory">*</span>
                </td>
                <td class="col2" style="vertical-align: top;">
                    @if (@Model.isView != null)
                    {

                         @Html.TextBoxFor(model => model.EditMobile, new { @placeholder = "Enter 10 digit Mobile Number", @maxlength = "10" })
                        @Html.ValidationMessageFor(model => model.EditMobile)
                         @*@Html.DisplayFor(model => model.EditMobile)
                        @Html.HiddenFor(model => model.EditMobile)*@
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.EditMobile)
                        @Html.HiddenFor(model => model.EditMobile)
                    }
                </td>
                <td class="col3" style="vertical-align: top;">
                    @*@Html.LabelFor(model => model.Photo)*@ <span>Photo</span> <span class="mandatory">*</span>
                    <br />
                    <span style="color: blue;">
                        (Latest self colour photo with Minimum - 150x150 pixels, Maximum - 200x230 pixels
                        <br />
                        and less than 50 KB size)
                    </span>
                </td>
                <td class="col4 files" style="vertical-align: top;">
                    @if (@Model.isView != null && !String.IsNullOrEmpty( @Model.facultyPhoto))
                    {
                        @Html.HiddenFor(model => model.Photo, new { @Value = Model.Photo })
                        @Html.TextBoxFor(model => model.Photo, new { type = "file", @class = "file1", @id = "Photo1" })<br />
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.Photo, new { type = "file", @class = "file1 required",@id="Photo1" })<br />
                        @*@Html.DisplayFor(model => model.Photo, new { type = "file", @class = "file1 required" })<br />*@
                    }

                    @if (!String.IsNullOrEmpty(@Model.facultyPhoto))
                    {
                        <a href="../Content/Upload/Faculty/Photos/@Model.facultyPhoto.Replace("~", "")" target="_blank">
                            @*<img src="../Content/Upload/Faculty/Photos/@Model.facultyPhoto.Replace("~", "")" style="height: 60px;" />*@
                            <span style="font-weight:bold;color:red">View</span>
                        </a>

                    }
                    @Html.HiddenFor(model => model.facultyPhoto)

                    <div id="PhotoPreview"></div>
                </td>
            </tr>
            <tr>
                @*<td class="col1">

                        @Html.LabelFor(model => model.EditPANNumber) <span class="mandatory">*</span>
                    </td>
                    <td class="col2">

                        @if (@Model.isView != null)
                        {
                            @Html.TextBoxFor(model => model.EditPANNumber, new { @id = "PANNumber", @placeholder = "Enter PAN Number", @maxlength = "10", @class = "clsPanNumber" })
                                @Html.ValidationMessageFor(model => model.EditPANNumber)


                        }

                    </td>*@
                <td class="col1">
                    @Html.LabelFor(model => model.EditAadhaarNumber) <span class="mandatory">*</span>
                </td>
                <td class="col2">
                    @if (@Model.isView != null)
                    {
                        
                            @Html.TextBoxFor(model => model.EditAadhaarNumber, new { @id = "AadhaarNumber", @placeholder = "Enter Aadhaar Number", @maxlength = "12" })
                            @Html.ValidationMessageFor(model => model.EditAadhaarNumber)
                            @*@Html.HiddenFor(model => model.EditAadhaarNumber)*@
                         @*@Html.DisplayFor(model => model.EditAadhaarNumber, new { @id = "AadhaarNumber", @placeholder = "Enter Aadhaar Number", @maxlength = "12" })
                        @Html.HiddenFor(model => model.EditAadhaarNumber)*@
                      
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.EditAadhaarNumber, new { @id = "AadhaarNumber", @placeholder = "Enter Aadhaar Number", @maxlength = "12" })
                        @Html.HiddenFor(model => model.EditAadhaarNumber)
                    }
                    @*@Html.HiddenFor(model => model.EditAadhaarNumber)*@
                </td>
                <td class="col3" style="vertical-align: top;">

                    <span>Aadhaar Card Document <span class="mandatory">*</span></span>
                    <br />
                    <span style="color: blue;">
                        (Minimum 200x200 pixels
                        <br />
                        and less than 100 KB size)
                    </span>
                </td>
                <td class="col4 aadhaarfiles" style="vertical-align: top;">

                    @if (@Model.isView != null)
                    {
                        if (String.IsNullOrEmpty(@Model.facultyAadhaarCardDocument))
                        {
                           
                            @Html.TextBoxFor(model => model.AadhaarCardDocument, new { type = "file", @class = "aadhaarfile required" })
                            @*<input type="file" id="AadhaarCardDocument" name="AadhaarCardDocument" class="aadhaarfile required" value=@Model.AadhaarCardDocument/>*@
                        }
                        else
                        {
                            <input type="file" id="AadhaarCardDocument" name="AadhaarCardDocument" class="aadhaarfile" value=@Model.AadhaarCardDocument />
                        }
                        @Html.HiddenFor(model => model.AadhaarCardDocument)
                       
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.AadhaarCardDocument, new { type = "file", @class = "aadhaarfile" })
                        @*<input type="file" id="AadhaarCardDocument" name="AadhaarCardDocument" class="aadhaarfile" />*@

                    }

                    @if (!string.IsNullOrEmpty(@Model.facultyAadhaarCardDocument))
                    {
                        <a href="../Content/Upload/Faculty/AADHAARCARDS/@Model.facultyAadhaarCardDocument.Replace("~", "")" target="_blank">
                            @*<img src="../Content/Upload/Faculty/AADHAARCARDS/@Model.facultyAadhaarCardDocument.Replace("~", "")" style="height: 60px;" />*@
                            <span style="font-weight:bold;color:red">View</span>
                        </a>
                    }
                    @Html.HiddenFor(model => model.facultyAadhaarCardDocument)
                </td>
            </tr>
            <tr>
                <td class="col1" style="vertical-align: top;">
                    <span>PAN Card Document</span> <span class="mandatory">*</span>
                    <br />
                    <span style="color: blue;">
                        (Minimum 300x250 pixels
                        <br />
                        and less than 100 KB size)
                    </span>
                </td>
                <td class="col2 panfiles" style="vertical-align: top;">

                    @if (@Model.isView != null)
                    {
                            @Html.HiddenFor(model => model.PANCardDocument)
                            <input type="file" id="PANCardDocument" name="PANCardDocument" class="panfile1" value=@Model.PANCardDocument />
                    }
                    else
                    {
                        @*<input type="file" id="PANCardDocument" name="PANCardDocument" />*@
                        @*<input type="file" id="PANCardDocument" name="PANCardDocument" class="panfile1" value=@Model.PANCardDocument />*@
                    }

                    @if (!string.IsNullOrEmpty(@Model.facultyPANCardDocument))
                    {
                        <a href="../Content/Upload/Faculty/PANCARDS/@Model.facultyPANCardDocument.Replace("~", "")" target="_blank">
                            <span style="font-weight:bold;color:red">View</span>
                            @*<img src="../Content/Upload/Faculty/PANCARDS/@Model.facultyPANCardDocument.Replace("~", "")" style="height: 60px;" />*@
                        </a>

                    }
                    @Html.HiddenFor(model => model.facultyPANCardDocument)
                </td>
               
                @*studiedEducation*@

             @*@if (Model.FacultyEducation.Count() > 3 && Model.FacultyEducation.Where(e => e.educationId == 6).Select(e => e.studiedEducation).FirstOrDefault() != null)
             {
                 <td class="col3" style="background-color: aquamarine">
                     <span>PHD Undertaking Document</span> <span class="mandatory">*</span>
                     <br/>
                     <span style="color: blue;">
                       (less than 1MB size)
                    </span>
                     <br/>
                     <a href="../Content/PhD- DECLARATION.doc" target="_blank">PhD Undertaking Doc Format</a>
                </td>
                <td class="col4 PhdUndertakingfiles">
                    @if (@Model.isView != null && !String.IsNullOrEmpty(@Model.PHDUndertakingDocumentView))
                    {
                        @Html.HiddenFor(model => model.PHDUndertakingDocument)
                        <input type="file" id="PHDUndertakingDocument" name="PHDUndertakingDocument" class="PhdUndertakingfile" value=@Model.PHDUndertakingDocument />
                    }
                    else
                    {

                        <input type="file" id="PHDUndertakingDocument" name="PHDUndertakingDocument" class="PhdUndertakingfile" value=@Model.PHDUndertakingDocument />
                    }

                    @if (!string.IsNullOrEmpty(@Model.PHDUndertakingDocumentView))
                    {
                        <a href="../Content/Upload/Faculty/PHDUndertaking/@Model.PHDUndertakingDocumentView.Replace("~", "")" target="_blank">
                          <img src="../Content/Upload/Faculty/PHDUndertaking/@Model.PHDUndertakingDocumentView.Replace("~", "")" style="height: 60px;" />
                            <img src="@Url.Content("../../Content/images/pdf.png")" alt="InComeTax" height="18">
                        </a>
                    }
                    @Html.HiddenFor(model => model.PHDUndertakingDocumentView)
                </td>
             }
             else
             {
                 <td class="col3"> </td><td class="col4"> </td>
             }*@

                <td class="col3">
                    @Html.LabelFor(model => model.IncomeTaxFileview) <span class="mandatory">*</span>
                    <br />
                    <span style="color:blue">(PDF should be less than 1MB size)</span>
                </td>
                <td class="col4 IncomeTaxFileUploads">
                    @if (@Model.isView != null)
                    {
                        
                            @Html.TextBoxFor(model => model.IncomeTaxFileUpload, new { @type = "file", @class = "IncomeTaxFileUpload" })
                            @Html.HiddenFor(model => model.IncomeTaxFileview)
                            <br />                      
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.IncomeTaxFileview)
                        @Html.HiddenFor(model => model.IncomeTaxFileview)
                    }
                    @if (!String.IsNullOrEmpty(@Model.IncomeTaxFileview))
                    {
                        <br />
                        <a href="../Content/Upload/Faculty/INCOMETAX/@Model.IncomeTaxFileview.Replace("~", "")" target="_blank">
                            <span style="font-weight:bold;color:red">View</span>
                            @*<img src="../Content/Upload/Faculty/INCOMETAX/@Model.IncomeTaxFileview.Replace("~", "")" style="height: 60px;" />*@
                            @*<img src="@Url.Content("../../Content/images/pdf.png")" alt="InComeTax" height="18">*@
                        </a>
                    }                  
                    @Html.HiddenFor(model => model.IncomeTaxFileview)
                </td>
            </tr>
        </table>

        <div id="divOrganization" style="width: 100%">
            <table class="faculty_table" style="width: 100%">
                <tr>
                    <td class="col1" style="vertical-align: top; width: 15%;">
                        <div class="working">
                            @Html.Label("Organization Name")
                        </div>
                    </td>
                    <td class="col2" style="vertical-align: top; width: 85%;">
                        @if (@Model.isView != null && !string.IsNullOrEmpty(@Model.OrganizationName))
                        {
                            @Html.DisplayFor(model => model.OrganizationName)
                            @Html.HiddenFor(model => model.OrganizationName)
                        }
                        else
                        {
                            @Html.DisplayFor(model => model.OrganizationName, new { @id = "OrganizationName", @style = "width: 98%", @placeholder = "Enter Organisation Name you have last worked / presently working in (if any)" })
                        }
                        @Html.HiddenFor(model => model.OrganizationName)
                    </td>
                </tr>
            </table>
        </div>

        <div id="divExistFaculty" style="width: 100%">
            <table class="faculty_table" style="width: 100%;display:none">
                <tr>
                    <td class="col1" style="vertical-align: top;">
                        @Html.LabelFor(model => model.WorkingStatus)
                    </td>

                    <td class="col2" style="vertical-align: top;">

                        @if (@Model.isView != null)
                        {
                            if (@Model.WorkingStatus == true)
                            {
                                <span>Yes</span>
                            }
                            else
                            {
                                <span>No</span>
                            }
                            @Html.HiddenFor(model => model.WorkingStatus)

                        }
                        else
                        {
                            <label>@Html.RadioButtonFor(model => model.WorkingStatus, true, new { @class = "required WorkingStatus ifWorking", @disabled = "disabled" }) Yes </label>
                            <label>@Html.RadioButtonFor(model => model.WorkingStatus, false, new { @class = " required WorkingStatus ifNotWorking", @disabled = "disabled" }) No</label>
                            @Html.HiddenFor(model => model.WorkingStatus)
                            @Html.ValidationMessageFor(model => model.WorkingStatus)
                        }

                    </td>
                    @*<td class="col3">@Html.LabelFor(model => model.TotalExperience) (years)</td>
                    <td class="col4">
                        @if (@Model.isView != null)
                        {
                            @Html.DisplayFor(model => model.TotalExperience.Value)
                            @Html.HiddenFor(model => model.TotalExperience)
                        }

                        </td>*@
                </tr>
            </table>

            <div id="divWorking">
                <table style="width: 100%">

                    <tr>

                        <td class="col1" style="vertical-align: top;">
                            <div class="working">
                                @Html.Label("Name of the Institution presently working in") <span class="mandatory">*</span>
                            </div>
                        </td>
                        <td class="col2" style="vertical-align: top;" colspan="3">
                            @if (@Model.isView != null)
                            {
                                if (!String.IsNullOrEmpty(@Model.CollegeName))
                                    {
                                        @Html.DisplayFor(model => model.CollegeName)<br/>
                                    }
                                    else
                                    {
                                        <span>Not Working</span><br/>
                                    }
                                    <span style="color: red">(Automatically taken from College Portal Where Presently Working)</span>
                                     @Html.HiddenFor(model => model.CollegeId, new { @Value = Model.CollegeId })

                                @*@Html.DropDownListFor(model => model.CollegeId, new SelectList(ViewBag.Institutions as System.Collections.IEnumerable, "CollegeId", "CollegeName"),
                                    "--Select--", new { id = "CollegeName", style = "" })
                                @Html.ValidationMessageFor(model => model.CollegeId)*@
                            }
                            else
                            {
                               if (!String.IsNullOrEmpty(@Model.CollegeName))
                                    {
                                        @Html.DisplayFor(model => model.CollegeName)<br/>
                                    }
                                    else
                                    {
                                        <span>Not Working</span><br/>
                                    }
                                    <span style="color: red">(Automatically taken from College Portal Where Presently Working)</span>
                                     @Html.HiddenFor(model => model.CollegeId, new { @Value = Model.CollegeId })

                            }

                        </td>

                    </tr>
                    @*<tr>

                        <td class="col1" style="vertical-align: top; background-color: aquamarine" >
                           @Html.LabelFor(model => model.PGSpecialization)<span class="mandatory">*</span>
                        </td>
                        <td class="col2" style="vertical-align: top;" colspan="2">
                            @if (@Model.isView != null)
                            {
                                @Html.DropDownListFor(model => model.PGSpecialization, new SelectList(ViewBag.PGSpecializations as System.Collections.IEnumerable, "id", "spec"),
                                    "--Select--", new {style = ""})
                                @Html.ValidationMessageFor(model => model.PGSpecialization)

                            }
                            else
                            {
                                @Html.DisplayFor(model => model.PGSpecializationName)
                                @Html.HiddenFor(model => model.PGSpecialization, new {@Value = Model.PGSpecialization})

                            }

                        </td>
                        <td class="col2" style="vertical-align: top;">
                            @Html.TextBoxFor(model => model.OthersPGSpecilizationName,new{@style="display:none"})
                        </td>


                    </tr>*@

                    <tr>
                        <td class="col1">
                            @Html.LabelFor(model => model.DepartmentId) <span class="mandatory">*</span>
                        </td>
                        <td class="col2">
                            @if (@Model.isView != null)
                            {
                                @*@Html.DisplayFor(model => model.department)
                                @Html.HiddenFor(model => model.DepartmentId)*@
                                @Html.DropDownListFor(model => model.DepartmentId,
                                        new SelectList(ViewBag.department as System.Collections.IEnumerable, "id", "departmentName"),
                                        "-- Select --", new { id = "department", style = "" })
                                @Html.ValidationMessageFor(model => model.DepartmentId)
   
                                if (Model.department == "Others")
                                {
                                    <div id="divDept">
                                        <br />
                                        @Html.TextBoxFor(model => model.OtherDepartment, new { @id = "OtherDepartment", @placeholder = "Specify your department name" })
                                    </div>
                                    @*<div id="divDept1">
                                    <br />
                                    @Html.TextBoxFor(model => model.OtherDepartment, new { @placeholder = "Specify your department name" })
                                    </div>*@
                                    @*@Html.HiddenFor(model => model.OtherDepartment)*@

                                }
                                <div id="divDept1" style="display:none">
                                    <br />
                                    @Html.TextBoxFor(model => model.OtherDepartment, new { @id = "OtherDepartment", @placeholder = "Specify your department name" })
                                </div>
                                //else
                                //{

                                //}
                            }
                            else
                            {
                                @*@Html.DropDownListFor(model => model.DepartmentId,
                                    new SelectList(ViewBag.department as System.Collections.IEnumerable, "id", "departmentName"),
                                    "-- Select --", new { id = "department", style = "" })
                                @Html.ValidationMessageFor(model => model.DepartmentId)*@
                                @Html.DisplayFor(model => model.department)
                                if (Model.department == "Others")
                                { <br />
                                @Html.DisplayFor(model => model.OtherDepartment, new { @placeholder = "Specify your department name" })
                                }
                                else if (Model.department == null)
                                {
                                    <div id="divDept" style="display: none">
                                        <br />
                                        @Html.DisplayFor(model => model.OtherDepartment, new { @id = "OtherDepartment", @placeholder = "Specify your department name" })
                                    </div>
                                }
                            }
                            @*@Html.HiddenFor(model => model.DepartmentId)*@
                            </td>
                            <td class="col3">
                                @Html.LabelFor(model => model.DesignationId) <span class="mandatory">*</span>
                            </td>
                            <td class="col4">
                                @if (@Model.isView != null)
                                {
                                    @Html.DropDownListFor(model => model.DesignationId,
                                        new SelectList(ViewBag.designation as System.Collections.IEnumerable, "id", "designation"),
                                        "-- Select --", new { id = "designation", style = "" })
                                    @Html.ValidationMessageFor(model => model.DesignationId)
    
        if (Model.designation == "Others")
        {
        <div id="divDesig">
            <br />
            @Html.TextBoxFor(model => model.OtherDesignation, new { @placeholder = "Specify your designation name" })
        </div>
        }
     
        <div id="divDesig1" style="display: none">
            <br />
            @Html.TextBoxFor(model => model.OtherDesignation, new { @placeholder = "Specify your designation name" })
        </div>

        if (Model.designation == "Others")
        {
        @*<br />
            @Html.TextBoxFor(model => model.OtherDesignation, new { @placeholder = "Specify your designation name" })*@
        @*@Html.DisplayFor(model => model.OtherDesignation)
            @Html.HiddenFor(model => model.OtherDesignation)*@

        }
        }
        else
        {
        @*@Html.DropDownListFor(model => model.DesignationId,
            new SelectList(ViewBag.designation as System.Collections.IEnumerable, "id", "designation"),
            "-- Select --", new { id = "designation", style = "" })
                    @Html.ValidationMessageFor(model => model.DesignationId)

                    if (Model.designation == "Others")
                    { <br />
                    @Html.TextBoxFor(model => model.OtherDesignation, new { @placeholder = "Specify your designation name" })
                    }
                    else if (Model.designation == null)
                    {
                    <div id="divDesig" style="display: none">
                        <br />
                        @Html.TextBoxFor(model => model.OtherDesignation, new { @placeholder = "Specify your designation name" })
                    </div>
                    }*@
        @Html.DisplayFor(model => model.designation)
        @Html.HiddenFor(model => model.DesignationId)

        if (Model.designation == "Others")
        {
        <br />@Html.DisplayFor(model => model.OtherDesignation)
        @Html.HiddenFor(model => model.OtherDesignation)

        }
        }

</td>
                            </tr>
                            <tr>
                                <td class="col1">
                                    @Html.LabelFor(model => model.DateOfAppointment) <span>in the present Institution</span> <span class="mandatory">*</span>
                                </td>
                                <td class="col2">
                                    @if (@Model.isView != null)
                                    {
                                       @Html.TextBoxFor(model => model.facultyDateOfAppointment, new { @class = "calendar", style = "width: 247px;", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Enter Date of Appointment" })
                                    @Html.ValidationMessageFor(model => model.facultyDateOfAppointment)
                                        @*@Html.DisplayFor(model => model.facultyDateOfAppointment, new { @class = "calendar", style = "width: 247px;", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Enter Date of Appointment" })
                                        @Html.ValidationMessageFor(model => model.facultyDateOfAppointment)*@
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(model => model.facultyDateOfAppointment, new { @class = "calendar required", style = "width: 247px;", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Enter Date of Appointment" })
                                        @Html.HiddenFor(model => model.facultyDateOfAppointment)
                                    }

                                    @*@if (@Model.isView != null && @Model.WorkingStatus == true)
                                    {
                                        @Html.TextBoxFor(model => model.facultyDateOfAppointment, new { @class = "calendar", style = "width: 247px;", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Enter Date of Appointment" })
                                        @Html.ValidationMessageFor(model => model.facultyDateOfAppointment)
                                    }*@
                                </td>
                                <td class="col3">Experience in the present Institution (years) <span class="mandatory">*</span></td>
                                <td class="col4">
                                    @if (@Model.isView != null)
                                    {


                                        @Html.DropDownListFor(model => model.TotalExperiencePresentCollege,
                                            new SelectList(ViewBag.prevExperience as System.Collections.IEnumerable, "value", "text"),
                                            "-- Select --", new {id = "TotalExperiencePresentCollege", @class = "required", style = ""})
                                        @Html.ValidationMessageFor(model => model.TotalExperiencePresentCollege)
                                        @*@Html.DisplayFor(model => model.TotalExperiencePresentCollege)
                                        @Html.HiddenFor(model => model.TotalExperiencePresentCollege)*@
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(model => model.TotalExperiencePresentCollege)
                                        @Html.HiddenFor(model => model.TotalExperiencePresentCollege)
                                    }

                                    @*else
                                        {
                                            @Html.DropDownListFor(model => model.TotalExperiencePresentCollege,
                                    new SelectList(ViewBag.prevExperience as System.Collections.IEnumerable, "value", "text"),
                                    "-- Select --", new { id = "TotalExperiencePresentCollege", style = "" })
                                            @Html.ValidationMessageFor(model => model.TotalExperiencePresentCollege)
                                        }*@
                                    @*@if (@Model.isView != null && @Model.WorkingStatus == true)
                                                    {
                                                        @Html.DropDownListFor(model => model.TotalExperiencePresentCollege,
                                    new SelectList(ViewBag.prevExperience as System.Collections.IEnumerable, "value", "text"),
                                    "-- Select --", new { id = "TotalExperiencePresentCollege", style = "" })
                                                        @Html.ValidationMessageFor(model => model.TotalExperiencePresentCollege)
                                                    }*@
                                </td>
                            </tr>
                            <tr>
                                <td class="col3">@Html.LabelFor(model => model.TotalExperience) (years) <span class="mandatory">*</span></td>
                                <td class="col4">
                                    @if (@Model.isView != null)
                                    {
                                        @Html.DropDownListFor(model => model.TotalExperience, new SelectList(ViewBag.prevExperience as System.Collections.IEnumerable, "value", "text"), "-- Select --", new { id = "TotalExperience", style = "" })
                                        @Html.ValidationMessageFor(model => model.TotalExperience)
                                        @*@Html.DisplayFor(model => model.TotalExperience.Value)
                                        @Html.HiddenFor(model => model.TotalExperience)*@
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(model => model.TotalExperience.Value)
                                        @Html.HiddenFor(model => model.TotalExperience)
                                    }

                                </td>
                                @*<td class="col2" style="display: none;">
                                    @if (@Model.isView != null)
                                    {
                                        <label>@Html.RadioButtonFor(model => model.isFacultyRatifiedByJNTU, true, new { @id = "ifRatified", @class = "required FacultyRatifiedByJNTU" }) Yes </label>
                                        <label>@Html.RadioButtonFor(model => model.isFacultyRatifiedByJNTU, false, new { @id = "ifNotRatified", @class = "required FacultyRatifiedByJNTU" }) No</label>
                                        @Html.ValidationMessageFor(model => model.isFacultyRatifiedByJNTU)
                                        <br />
                                        <br />
                                        <div id="divRatified" style="display: none;">
                                            @if (@Model.isView != null)
                                            {


                                              @Html.TextBoxFor(model => model.facultyDateOfRatification, new {Value = @Model.facultyDateOfRatification != null && @Model.facultyDateOfRatification.Equals("01/01/0001") ? string.Empty : @Model.facultyDateOfRatification, @class = "calendar", style = "width: 247px;", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Select Date of Ratification"})
                                                @Html.ValidationMessageFor(model => model.facultyDateOfRatification)
                                                @Html.HiddenFor(model => model.facultyDateOfRatification)
                                            }

                                        </div>

                                    }

                                </td>*@
                                <td class="col3" style="display:none">
                                    <div class="ratifed">
                                        @*@Html.LabelFor(model => model.ProceedingsNo)*@
                                        College Selection Committee Proceedings  Number
                                        <br />
                                        <br />
                                        @Html.Label("Document")
                                        <span style="color: blue;">(Minimum 600x800 pixels and less than 100 KB size)</span>
                                    </div>
                                </td>
                                @*<td class="col4" style="display: none">
                                            <div class="ratifed">

                                                @if (@Model.isView != null && @Model.WorkingStatus == true && @Model.ProceedingsNo != null)
                                                {

                                                    @Html.DisplayFor(model => model.ProceedingsNo, new {@placeholder = "Enter Proceedings Number", @class = "required", style = "width: 250px;"})
                                                    @Html.ValidationMessageFor(model => model.ProceedingsNo)
                                                    @Html.HiddenFor(model => model.ProceedingsNo)
                                                }
                                                else
                                                {
                                                    @Html.DisplayFor(model => model.ProceedingsNo, new {@placeholder = "Enter Proceedings Number", @class = "required", style = "width: 250px;"})
                                                    @Html.ValidationMessageFor(model => model.ProceedingsNo)
                                                }

                                                @Html.HiddenFor(model => model.ProceedingsNo)
                                            </div>
                                            <br/>
                                            <br/>
                                            @if (@Model.isView != null && @Model.WorkingStatus == true && @Model.SelectionCommitteeProcedings != null)
                                            {
                                                @Html.HiddenFor(model => model.SelectionCommitteeProceedingsDocument)
                                            }

                                            @if (!String.IsNullOrEmpty(@Model.SelectionCommitteeProcedings))
                                            {
                                                if (ViewBag.RegistrationNum1 != 1)
                                                {
                                                    <input type="file" id="SelectionCommitteeProceedingsDocument" name="SelectionCommitteeProceedingsDocument" value=@Model.SelectionCommitteeProceedingsDocument/>
                                                }
                                                else
                                                {
                                                    @Html.DisplayFor(model => model.SelectionCommitteeProceedingsDocument, new {type = "file", @class = "SelectionCommitteeProceedingsDocument", required = true})

                                                }
                                @*<input type="file" id="SelectionCommitteeProceedingsDocument" name="SelectionCommitteeProceedingsDocument" value=@Model.SelectionCommitteeProceedingsDocument />

                                            }
                                            else
                                            {
                                                @Html.DisplayFor(model => model.SelectionCommitteeProceedingsDocument, new {type = "file", @class = "SelectionCommitteeProceedingsDocument", required = true})
                                            }
                                            <br/>


                                            @if (@Model.SelectionCommitteeProcedings != null)
                                            {
                                                <a href="../Content/Upload/Faculty/PROCEEDINGS/@Model.SelectionCommitteeProcedings.Replace("~", "")" target="_blank">
                                                    <img src="../Content/Upload/Faculty/PROCEEDINGS/@Model.SelectionCommitteeProcedings.Replace("~", "")" style="height: 60px;"/>
                                                </a>
                                            }
                                            @Html.HiddenFor(model => model.SelectionCommitteeProcedings)
                                        </td>*@
                                <td class="col3">
                                    <div class="ratifed">
                                        @*@Html.LabelFor(model => model.ProceedingsNo)*@
                                        College Selection Committee Proceedings / Ratification Letter Number
                                        <br />
                                        <br />
                                        @Html.Label("Document")
                                        <span style="color: blue;">(Enter all appointment proceedings in a single PDF File.The PDF should be less than 1MB size)</span>
                                    </div>
                                </td>
                                <td class="col4">
                                    <div class="ratifed">
                                      @*@if (@Model.isView != null && @Model.WorkingStatus == true && @Model.ProceedingsNo != null)*@
                                        @if (@Model.isView != null)
                                        {
                                               @Html.TextBoxFor(model => model.ProceedingsNo, new { @placeholder = "Enter Proceedings Number", style = "width: 250px;" })
                                                @Html.ValidationMessageFor(model => model.ProceedingsNo)
                                                @*@Html.DisplayFor(model => model.ProceedingsNo)
                                                @Html.HiddenFor(model => model.ProceedingsNo)*@
                                                @*@Html.DisplayFor(model => model.ProceedingsNo, new { @placeholder = "Enter Proceedings Number", @class = "required", style = "width: 250px;" })
                                            @Html.ValidationMessageFor(model => model.ProceedingsNo)
                                            @Html.HiddenFor(model => model.ProceedingsNo)*@
                                        }
                                        else
                                        {
                                            @*@Html.DisplayFor(model => model.ProceedingsNo, new { @placeholder = "Enter Proceedings Number", @class = "required", style = "width: 250px;" })
                                            @Html.ValidationMessageFor(model => model.ProceedingsNo)*@
                                            @Html.DisplayFor(model => model.ProceedingsNo)
                                            @Html.HiddenFor(model => model.ProceedingsNo)
                                        }
                                        @*@Html.HiddenFor(model => model.ProceedingsNo)*@
                                    </div>

                                    @if (@Model.isView != null)
                                    {
                                        <br />
                                        @Html.TextBoxFor(model => model.SelectionCommitteeProceedingsDocument, new { type = "file", @class = "SelectionCommitteeProceedingsDocument"})
                                       @*<input type="file" id="SelectionCommitteeProceedingsDocument" name="SelectionCommitteeProceedingsDocument" class="SelectionCommitteeProceedingsDocument" value=@Model.SelectionCommitteeProceedingsDocument />*@
                                        @Html.HiddenFor(model => model.SelectionCommitteeProceedingsDocument)
                                    }

                                    @if (!String.IsNullOrEmpty(@Model.SelectionCommitteeProcedings))
                                    {
                                        @*if (ViewBag.RegistrationNum1 != 1)
                                        {
                                            <input type="file" id="SelectionCommitteeProceedingsDocument" name="SelectionCommitteeProceedingsDocument" class="SelectionCommitteeProceedingsDocument" value=@Model.SelectionCommitteeProceedingsDocument />
                                        }
                                        else
                                        {*@
                                        @Html.DisplayFor(model => model.SelectionCommitteeProceedingsDocument, new { type = "file", @class = "SelectionCommitteeProceedingsDocument"})

                                        //}
                                        @*<input type="file" id="SelectionCommitteeProceedingsDocument" name="SelectionCommitteeProceedingsDocument" class="SelectionCommitteeProceedingsDocument" value=@Model.SelectionCommitteeProceedingsDocument />*@

                                    }
                                    else
                                    {
                                        @*@Html.TextBoxFor(model => model.SelectionCommitteeProceedingsDocument, new { type = "file", @class = "SelectionCommitteeProceedingsDocument", required = true })*@

                                    }

                                    @if (!string.IsNullOrEmpty(@Model.SelectionCommitteeProcedings))
                                    {
                                        <a href="../Content/Upload/Faculty/PROCEEDINGS/@Model.SelectionCommitteeProcedings.Replace("~", "")" target="_blank">
                                            <span style="font-weight:bold;color:red">View</span>
                                            @*<img src="../Content/Upload/Faculty/PROCEEDINGS/@Model.SelectionCommitteeProcedings.Replace("~", "")" style="height: 60px;" />*@
                                        </a>
                                    }
                                    @Html.HiddenFor(model => model.SelectionCommitteeProcedings)
                                </td>

                            </tr>
                            <tr>
                                <td class="col1">
                                    <div class="ratifed">
                                        @Html.LabelFor(model => model.AICTEFacultyId)
                                    </div>
                                </td>
                                <td class="col2">
                                    <div class="ratifed">
                                        @if (@Model.isView != null)
                                        {
                                            @*@Html.DisplayFor(model => model.AICTEFacultyId)
                                            @Html.HiddenFor(model => model.AICTEFacultyId)*@
                                            @Html.TextBoxFor(model => model.AICTEFacultyId, new { @placeholder = "Enter AICTE faculty Id" })
                                            @Html.ValidationMessageFor(model => model.AICTEFacultyId)
                                        }
                                        else
                                        {
                                            @*@Html.DisplayFor(model => model.AICTEFacultyId)
                                            @Html.HiddenFor(model => model.AICTEFacultyId)*@
                                            @Html.DisplayFor(model => model.AICTEFacultyId, new { @placeholder = "Enter AICTE faculty Id" })
                                            @Html.ValidationMessageFor(model => model.AICTEFacultyId)
                                        }
                                    </div>
                                </td>
                                <td class="col3">Gross Salary Last Drawn</td>
                                <td class="col4">

                                    @if (@Model.isView != null)
                                    {
                                        @*@Html.DisplayFor(model => model.GrossSalary)
                                        @Html.HiddenFor(model => model.GrossSalary)*@
                                        @Html.TextBoxFor(model => model.GrossSalary, new { @maxlength = "25", @placeholder = "Enter Gross Salary Last Drawn", @style = "width: 250px;", @onkeypress = "return isNumeric(event)" })
                                        @Html.ValidationMessageFor(model => model.GrossSalary)
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(model => model.GrossSalary, new { @maxlength = "25", @placeholder = "Enter Gross Salary Last Drawn", @style = "width: 250px;", @onkeypress = "return isNumeric(event)" })
                                        @Html.ValidationMessageFor(model => model.GrossSalary)
                                    }
                                </td>
                            </tr>
                            @*<tr>
                            <td class="col1">
                                @Html.LabelFor(model => model.isFacultyRatifiedByJNTU) <span class="mandatory">*</span>
                                <br />
                                <br />
                                <div class="ratifed" id="divDOR">
                                    @Html.LabelFor(model => model.facultyDateOfRatification) <span class="mandatory">*</span>
                                </div>
                            </td>
                            <td class="col2">
                                @if (@Model.isView != null)
                                {
                                <label>@Html.RadioButtonFor(model => model.isFacultyRatifiedByJNTU,true,new { @id = "ifRatified", @class = "required FacultyRatifiedByJNTU" }) Yes </label>
                                <label>@Html.RadioButtonFor(model => model.isFacultyRatifiedByJNTU,false,new { @id = "ifNotRatified", @class = "required FacultyRatifiedByJNTU" }) No</label>
                                @Html.ValidationMessageFor(model => model.isFacultyRatifiedByJNTU)
                                <br />
                                <br />
                                <div id="divRatified" class="divRatified" style="display:block">
                                    @if (@Model.isView != null)
                                    {
                                   @Html.DisplayFor(model => model.facultyDateOfRatification)
                                    @Html.HiddenFor(model => model.facultyDateOfRatification)
                                         @Html.TextBoxFor(model => model.facultyDateOfRatification, new { Value = @Model.facultyDateOfRatification != null && @Model.facultyDateOfRatification.Equals("01/01/0001") ? string.Empty : @Model.facultyDateOfRatification, @class = "calendar", style = "width: 247px;", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Select Date of Ratification" })
                                    @Html.ValidationMessageFor(model => model.facultyDateOfRatification)

                                    }
                                    else
                                    {
                                    @Html.TextBoxFor(model => model.facultyDateOfRatification, new { Value = @Model.facultyDateOfRatification != null && @Model.facultyDateOfRatification.Equals("01/01/0001") ? string.Empty : @Model.facultyDateOfRatification, @class = "calendar", style = "width: 247px;", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Select Date of Ratification" })
                                    @Html.ValidationMessageFor(model => model.facultyDateOfRatification)
                                    }
                                </div>
                                  }
                                else
                                {
                                <label>@Html.RadioButtonFor(model => model.isFacultyRatifiedByJNTU, true, new { @id = "ifRatified", @class = "required FacultyRatifiedByJNTU", @disabled = "disabled" }) Yes </label>
                                <label>@Html.RadioButtonFor(model => model.isFacultyRatifiedByJNTU, false, new { @id = "ifNotRatified", @class = "required FacultyRatifiedByJNTU", @disabled = "disabled" }) No</label>
                                @Html.HiddenFor(model => model.isFacultyRatifiedByJNTU)
                                <br />
                                <br />
                                @Html.DisplayFor(model => model.facultyDateOfRatification)
                                @Html.HiddenFor(model => model.facultyDateOfRatification)
                                 }
                            </td>

                            <td class="col3">
                                <div class="ratifed">
                                  @Html.LabelFor(model => model.ProceedingsNo)
                                    College Selection Committee Proceedings / Ratification Letter Number
                                    <br />
                                    <br />
                                    @Html.Label("Document")
                                    <span style="color: blue;">(Minimum 600x800 pixels and less than 100 KB size)</span>
                                </div>
                            </td>
                            <td class="col4">
                                <div class="ratifed">

                                    @if (@Model.isView != null && @Model.WorkingStatus == true && @Model.ProceedingsNo != null)
                                    {
                                    @Html.DisplayFor(model => model.ProceedingsNo)
                                    @Html.HiddenFor(model => model.ProceedingsNo)
                                 @Html.DisplayFor(model => model.ProceedingsNo, new { @placeholder = "Enter Proceedings Number", @class = "required", style = "width: 250px;" })
                                        @Html.ValidationMessageFor(model => model.ProceedingsNo)
                                        @Html.HiddenFor(model => model.ProceedingsNo)*@
                            @*}
                            else
                            {*@
                            @*@Html.DisplayFor(model => model.ProceedingsNo, new { @placeholder = "Enter Proceedings Number", @class = "required", style = "width: 250px;" })
                                            @Html.ValidationMessageFor(model => model.ProceedingsNo)
                                        @Html.DisplayFor(model => model.ProceedingsNo)
                                        @Html.HiddenFor(model => model.ProceedingsNo)
                                        }

                                        @Html.HiddenFor(model => model.ProceedingsNo)
                                    </div>

                                    @if (@Model.isView != null && @Model.WorkingStatus == true && @Model.SelectionCommitteeProcedings != null)
                                        {
                                        @Html.HiddenFor(model => model.SelectionCommitteeProceedingsDocument)
                                        }

                                    @if (!String.IsNullOrEmpty(@Model.SelectionCommitteeProcedings))
                                    {
                                        @*if (ViewBag.RegistrationNum1 != 1)
                                        {
                                            <input type="file" id="SelectionCommitteeProceedingsDocument" name="SelectionCommitteeProceedingsDocument" class="SelectionCommitteeProceedingsDocument" value=@Model.SelectionCommitteeProceedingsDocument />
                                        }
                                        else
                                        {
                                       @Html.DisplayFor(model => model.SelectionCommitteeProceedingsDocument, new { type = "file", @class = "SelectionCommitteeProceedingsDocument", required = true })

                                        //}
                                       <input type="file" id="SelectionCommitteeProceedingsDocument" name="SelectionCommitteeProceedingsDocument" class="SelectionCommitteeProceedingsDocument" value=@Model.SelectionCommitteeProceedingsDocument />

                                      }
                                    else
                                    {
                                    @Html.TextBoxFor(model => model.SelectionCommitteeProceedingsDocument, new { type = "file", @class = "SelectionCommitteeProceedingsDocument", required = true })

                                    }

                                    @if (!string.IsNullOrEmpty(@Model.SelectionCommitteeProcedings))
                                    {
                                    <a href="../Content/Upload/Faculty/PROCEEDINGS/@Model.SelectionCommitteeProcedings.Replace("~", "")" target="_blank">
                                        <img src="../Content/Upload/Faculty/PROCEEDINGS/@Model.SelectionCommitteeProcedings.Replace("~", "")" style="height: 60px;" />
                                    </a>
                                    }
                                    @Html.HiddenFor(model => model.SelectionCommitteeProcedings)
                                </td>
                            </tr>*@
                            </table>
                        </div>

                    </div>
        <br />

                    <table class="faculty_table education" id="tblQualification" style="border: solid 1px #ccc;">
                        <thead>
                            <tr>
                                <td class="row" colspan="9">
                                    <b>Educational Qualifications</b>
                                </td>
                            </tr>
                            <tr>
                                <td class="row" style="text-align: center; width: 100px;"></td>
                                <td class="row" style="text-align: center; width: 125px;">Course Studied</td>
                                <td class="row" style="text-align: center; width: 125px;">Branch / Specialization</td>
                                <td class="row" style="text-align: center; width: 100px;">Year of Passing (YYYY)</td>
                                <td class="row" style="text-align: center; width: 80px;">
                                    % of
                                    <br />
                                    Marks / CGPA
                                </td>
                                <td class="row" style="text-align: center; width: 80px;">Division</td>
                                <td class="row" style="text-align: center;">Board/University</td>
                                <td class="row" style="text-align: center; width: 180px;">Place</td>
                                <td class="row" style="text-align: center; width: 200px !important;">
                                    Scanned Certificate<br />
                                    <span style="color: blue;">
                                        (Minimum 600x800 pixels
                                        <br />
                                        and less than 100 KB size)
                                    </span>
                                </td>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.FacultyEducation.Count(); i++)
                            {
                                var style = "alt_row";
                                var year = "yr_" + i;
                                var divs = "division_" + i;

                                <tr>

                                    <td class="@style" style="text-align: left; vertical-align: top;">
                                        @if (@Model.isView != null)
                                        {
                                            @Html.DisplayFor(model => model.FacultyEducation[i].educationName)
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(model => model.FacultyEducation[i].educationName)
                                        }
                                        @Html.HiddenFor(model => model.FacultyEducation[i].educationName)
                                        @Html.HiddenFor(model => model.FacultyEducation[i].educationId)
                                    </td>
                                    <td class="@style" style="text-align: center; vertical-align: top;">
                                        @if (@Model.isView != null)
                                        {
                                            if (@Model.FacultyEducation[i].studiedEducation != null)
                                            {
                                                if (i == 0)
                                                {
                                                    <span>-</span>
                                                    @Html.HiddenFor(model => model.FacultyEducation[i].studiedEducation, new { @Value = "SSC" })
                                                }
                                                else
                                                {

                                                    @Html.DisplayFor(model => model.FacultyEducation[i].studiedEducation)
                                                    @Html.HiddenFor(model => model.FacultyEducation[i].studiedEducation)

                                                }
                                            }
                                            else
                                            {
                                                if (i < 3)
                                                {
                                                    if (i == 0)
                                                    {
                                                        @*@Html.TextBoxFor(model => model.FacultyEducation[i].studiedEducation, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })*@
                                                        @Html.HiddenFor(model => model.FacultyEducation[i].studiedEducation, new { @Value = "SSC" })
                                                    }
                                                    else
                                                    {
                                                        @*@Html.DisplayFor(model => model.FacultyEducation[i].studiedEducation, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })*@
                                                       @Html.TextBoxFor(model => model.FacultyEducation[i].studiedEducation, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })
                                                    }
                                                }
                                                else
                                                {
                                                    if ((Model.FacultyEducation[i].educationId == 6 || Model.FacultyEducation[i].educationId == 5) && Model.FacultyEducation[i].facultyCertificate == null && Model.FacultyEducation[i].place == null && Model.FacultyEducation[2].facultyCertificate != null)
                                                    {
                                                        @Html.TextBoxFor(model => model.FacultyEducation[i].studiedEducation, new { style = "width: 90%", @maxlength = "50", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })
                                                        @*@Html.DisplayFor(model => model.FacultyEducation[i].studiedEducation, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })*@
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(model => model.FacultyEducation[i].studiedEducation, new { style = "width: 90%", @maxlength = "50", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })
                                                    }
                                                }
                                            }

                                        }
                                        else
                                        {
                                            if (i < 3)
                                            {
                                                if (i == 0)
                                                {
                                                    @Html.HiddenFor(model => model.FacultyEducation[i].studiedEducation, new { @Value = "SSC" })
                                                }
                                                else
                                                {
                                                    @Html.DisplayFor(model => model.FacultyEducation[i].studiedEducation, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })
                                                          
                                                }
                                            }
                                            else
                                            {
                                                if (Model.FacultyEducation[i].educationId == 6 && Model.FacultyEducation[i].facultyCertificate == null && Model.FacultyEducation[i].place == null && Model.FacultyEducation[2].facultyCertificate != null)
                                                {
                                                    @Html.TextBoxFor(model => model.FacultyEducation[i].studiedEducation, new {style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)"})
                                                }
                                                else
                                                {
                                                    @Html.DisplayFor(model => model.FacultyEducation[i].studiedEducation, new {style = "width: 90%", @maxlength = "50", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)"})
                                                }
                                            }
                                        }
                                    </td>
                                    <td class="@style" style="text-align: center; vertical-align: top;">
                                        @if (@Model.isView != null)
                                        {
                                            if (@Model.FacultyEducation[i].specialization != null)
                                            {
                                                if (i == 0)
                                                {
                                                    <span>-</span>
                                                    @Html.HiddenFor(model => model.FacultyEducation[i].specialization, new { @Value = "SSC" })
                                                }
                                                else
                                                {
                                                    @Html.DisplayFor(model => model.FacultyEducation[i].specialization)
                                                    @Html.HiddenFor(model => model.FacultyEducation[i].specialization)
                                                }
                                            }
                                            else
                                            {
                                                if (i < 3)
                                                {
                                                    if (i == 0)
                                                    {
                                                        @Html.HiddenFor(model => model.FacultyEducation[i].specialization, new { @Value = "SSC" })
                                                    }
                                                    else
                                                    {
                                                        @*@Html.DisplayFor(model => model.FacultyEducation[i].specialization, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)" })*@
                                                        @Html.TextBoxFor(model => model.FacultyEducation[i].specialization, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)" })
                                                    }
                                                }
                                                else
                                                { 
                                                if ((Model.FacultyEducation[i].educationId == 6 || Model.FacultyEducation[i].educationId == 5) && Model.FacultyEducation[i].facultyCertificate == null && Model.FacultyEducation[i].place == null)
                                                {
                                                    @Html.TextBoxFor(model => model.FacultyEducation[i].specialization, new { style = "width: 90%", @maxlength = "50", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.FacultyEducation[i].specialization, new { style = "width: 90%", @maxlength = "50", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)" })
                                                }
                                                }
                                            }

                                        }
                                        else
                                        {
                                            if (i < 3)
                                            {
                                                if (i == 0)
                                                {
                                                    @Html.HiddenFor(model => model.FacultyEducation[i].specialization, new { @Value = "SSC" })
                                                }
                                                else
                                                {
                                                    @Html.DisplayFor(model => model.FacultyEducation[i].specialization, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)" })
                                                    @*@Html.TextBoxFor(model => model.FacultyEducation[i].specialization, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)" })*@
                                                }
                                            }
                                            else
                                            {
                                                if (Model.FacultyEducation[i].educationId == 6 && Model.FacultyEducation[i].facultyCertificate == null && Model.FacultyEducation[i].place == null &&  Model.FacultyEducation[2].facultyCertificate!=null)
                                                {
                                                    @Html.TextBoxFor(model => model.FacultyEducation[i].specialization, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)" })
                                                }
                                                else
                                                {
                                                    @Html.DisplayFor(model => model.FacultyEducation[i].specialization, new {style = "width: 90%", @maxlength = "50", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)"})
                                                }

                                            }
                                        }
                                    </td>
                                    <td class="@style" style="text-align: center; vertical-align: top;">

                                        @if (@Model.isView != null)
                                        {
                                            //&& @Model.FacultyEducation[i].passedYear.Value != 0
                                            if (@Model.FacultyEducation[i].passedYear != null && @Model.FacultyEducation[i].passedYear.Value != 0)
                                            {
                                                if (@Model.FacultyEducation[i].passedYear.Value != 0)
                                                {
                                                    @Html.DisplayFor(model => model.FacultyEducation[i].passedYear.Value)
                                                }
                                                @Html.HiddenFor(model => model.FacultyEducation[i].passedYear)
                                            }
                                            else
                                            {
                                                if (i < 3)
                                                {
                                                    @*@Html.DisplayFor(model => model.FacultyEducation[i].passedYear.Value)*@
                                                        @*@Html.HiddenFor(model => model.FacultyEducation[i].passedYear)*@
                                                    @Html.DropDownListFor(model => model.FacultyEducation[i].passedYear,
                                                   new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                                          "-- Select --", new { id = year, style = "width: 100%;", @class = "required" })
                                                }
                                                else
                                                {
                                                    if ((Model.FacultyEducation[i].educationId == 6 || Model.FacultyEducation[i].educationId == 5) && Model.FacultyEducation[i].facultyCertificate == null && Model.FacultyEducation[i].place == null)
                                                    {
                                                        @*@Html.DisplayFor(model => model.FacultyEducation[i].passedYear.Value)*@
                                                        @*@Html.HiddenFor(model => model.FacultyEducation[i].passedYear)*@
                                                         @Html.DropDownListFor(model => model.FacultyEducation[i].passedYear,
                                                         new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                                            "-- Select --", new { id = year, style = "width: 100%;" })

                                                    }
                                                    else
                                                    {
                                                        //if (@Model.FacultyEducation[i].passedYear != null && @Model.FacultyEducation[i].passedYear.Value != 0)
                                                        //{
                                                            @Html.DropDownListFor(model => model.FacultyEducation[i].passedYear,
                                                         new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                                            "-- Select --", new { id = year, style = "width: 100%;" })
                                                        //}
                                                    }
                                                }
                                            }

                                        }

                                        else
                                        {
                                            if (i < 3)
                                            {
                                                 @Html.DisplayFor(model => model.FacultyEducation[i].passedYear.Value)
                                            @Html.HiddenFor(model => model.FacultyEducation[i].passedYear)
                                                @*@Html.DropDownListFor(model => model.FacultyEducation[i].passedYear,
                                new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                "-- Select --", new { id = year, style = "width: 100%;", @class = "required" })*@
                                            }
                                            else
                                            {

                                                if (Model.FacultyEducation[i].educationId == 6 && Model.FacultyEducation[i].facultyCertificate == null && Model.FacultyEducation[i].place == null&& Model.FacultyEducation[2].facultyCertificate!=null)
                                                {
                                                    @Html.DropDownListFor(model => model.FacultyEducation[i].passedYear,
                                new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                "-- Select --", new { id = year, style = "width: 100%;", @class = "required" })
                                                }
                                                else
                                                {
                                                    if (@Model.FacultyEducation[i].passedYear != null && @Model.FacultyEducation[i].passedYear.Value != 0)
                                                    {
                                                        @Html.DisplayFor(model => model.FacultyEducation[i].passedYear.Value)
                                                        @Html.HiddenFor(model => model.FacultyEducation[i].passedYear)
                                                    }
                                                }
                                                @*@Html.DropDownListFor(model => model.FacultyEducation[i].passedYear,
                                new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                                "-- Select --", new { id = year, style = "width: 100%;" })*@
                                            }

                                        }
                                    </td>
                                    <td class="@style" style="text-align: center; vertical-align: top;">
                                        @if (@Model.isView != null)
                                        {
                                            if(@Model.FacultyEducation[i].percentage != null)
                                            {
                                                @Html.DisplayFor(model => model.FacultyEducation[i].percentage)
                                                @Html.HiddenFor(model => model.FacultyEducation[i].percentage)
                                            }
                                            else
                                            {
                                                if (i < 3)
                                                {
                                                    @*@Html.DisplayFor(model => model.FacultyEducation[i].percentage, new { style = "width: 85%; text-align: center;", Value = Model.FacultyEducation[i].percentage == 0 ? string.Empty : Model.FacultyEducation[i].percentage.ToString(), @class = "txtPercentage required", @onkeypress = "return isNumberKey(event)", @placeholder = "% of Marks / CGPA" })*@
                                                    @Html.TextBoxFor(model => model.FacultyEducation[i].percentage, new { style = "width: 85%; text-align: center;", Value = Model.FacultyEducation[i].percentage == 0 ? string.Empty : Model.FacultyEducation[i].percentage.ToString(), @class = "txtPercentage required", @onkeypress = "return isNumberKey(event)", @placeholder = "% of Marks / CGPA" })
                                                }
                                                else
                                                {
                                                    if ((Model.FacultyEducation[i].educationId == 6 || Model.FacultyEducation[i].educationId == 5) && Model.FacultyEducation[i].facultyCertificate == null && Model.FacultyEducation[i].place == null && Model.FacultyEducation[2].facultyCertificate != null)
                                                    {
                                                        @Html.TextBoxFor(model => model.FacultyEducation[i].percentage, new { style = "width: 85%; text-align: center;", Value = Model.FacultyEducation[i].percentage == 0 ? string.Empty : Model.FacultyEducation[i].percentage.ToString(), @class = "txtPercentage", @onkeypress = "return isNumberKey(event)", @placeholder = "% of Marks / CGPA" })
                                                        @*@Html.DisplayFor(model => model.FacultyEducation[i].percentage, new { style = "width: 85%; text-align: center;", Value = Model.FacultyEducation[i].percentage == 0 ? string.Empty : Model.FacultyEducation[i].percentage.ToString(), @class = "txtPercentage required", @onkeypress = "return isNumberKey(event)", @placeholder = "% of Marks / CGPA" })*@
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(model => model.FacultyEducation[i].percentage, new { style = "width: 85%; text-align: center;", Value = Model.FacultyEducation[i].percentage == 0 ? string.Empty : Model.FacultyEducation[i].percentage.ToString(), @class = "txtPercentage", @onkeypress = "return isNumberKey(event)", @placeholder = "% of Marks / CGPA" })
                                                    }
                                                }
                                            }

                                        }
                                        else
                                        {

                                            if (i < 3)
                                            {
                                                @Html.DisplayFor(model => model.FacultyEducation[i].percentage, new { style = "width: 85%; text-align: center;", Value = Model.FacultyEducation[i].percentage == 0 ? string.Empty : Model.FacultyEducation[i].percentage.ToString(), @class = "txtPercentage required", @onkeypress = "return isNumberKey(event)", @placeholder = "% of Marks / CGPA" })
                                                @*@Html.TextBoxFor(model => model.FacultyEducation[i].percentage, new { style = "width: 85%; text-align: center;", Value = Model.FacultyEducation[i].percentage == 0 ? string.Empty : Model.FacultyEducation[i].percentage.ToString(), @class = "txtPercentage required", @onkeypress = "return isNumberKey(event)", @placeholder = "% of Marks / CGPA" })*@
                                            }
                                            else
                                            {
                                                if (Model.FacultyEducation[i].educationId == 6 && Model.FacultyEducation[i].facultyCertificate == null && Model.FacultyEducation[i].place == null && Model.FacultyEducation[2].facultyCertificate!=null)
                                                {
                                                  @Html.TextBoxFor(model => model.FacultyEducation[i].percentage, new { style = "width: 85%; text-align: center;", Value = Model.FacultyEducation[i].percentage == 0 ? string.Empty : Model.FacultyEducation[i].percentage.ToString(), @class = "txtPercentage required", @onkeypress = "return isNumberKey(event)", @placeholder = "% of Marks / CGPA" })
                                                }
                                                else
                                                {
                                                    @Html.DisplayFor(model => model.FacultyEducation[i].percentage, new {style = "width: 85%; text-align: center;", Value = Model.FacultyEducation[i].percentage == 0 ? string.Empty : Model.FacultyEducation[i].percentage.ToString(), @class = "txtPercentage", @onkeypress = "return isNumberKey(event)", @placeholder = "% of Marks / CGPA"})
                                                }
                                            }
                                        }
                                    </td>
                                    <td class="@style" style="text-align: center; vertical-align: top;">

                                        @if (@Model.isView != null)
                                        {
                                            //&& @Model.FacultyEducation[i].division.Value != 0
                                            if (@Model.FacultyEducation[i].division != null && @Model.FacultyEducation[i].division.Value != 0)
                                            {
                                                if (@Model.FacultyEducation[i].division.Value != 0)
                                                {
                                                    @Html.DisplayFor(model => model.FacultyEducation[i].division.Value)
                                                }
                                                @Html.HiddenFor(model => model.FacultyEducation[i].division)
                                            }
                                            else
                                            {
                                                if (i < 3)
                                                {
                                                    @*@Html.DisplayFor(model => model.FacultyEducation[i].division.Value)
                                                        @Html.HiddenFor(model => model.FacultyEducation[i].division)*@
                                                    @Html.DropDownListFor(model => model.FacultyEducation[i].division,
                                             new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                                "-- Select --", new { id = divs, style = "width: 100%;", @class = "required" })
                                                }
                                                else
                                                {
                                                    if ((Model.FacultyEducation[i].educationId == 6 || Model.FacultyEducation[i].educationId == 5) && Model.FacultyEducation[i].facultyCertificate == null && Model.FacultyEducation[i].place == null)
                                                    {
                                                        @*@Html.DisplayFor(model => model.FacultyEducation[i].division.Value)*@
                                                        @*@Html.HiddenFor(model => model.FacultyEducation[i].division)*@
                                                          @Html.DropDownListFor(model => model.FacultyEducation[i].division,
                                                             new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                                           "-- Select --", new { id = divs, style = "width: 100%;" })

                                                    }
                                                    else
                                                    {
                                                        //if (@Model.FacultyEducation[i].division != null && @Model.FacultyEducation[i].division.Value != 0)
                                                        //{
                                                            @Html.DropDownListFor(model => model.FacultyEducation[i].division,
                                                             new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                                           "-- Select --", new { id = divs, style = "width: 100%;"})
                                                        //}
                                                    }
                                                }
                                            }

                                        }
                                        else
                                        {
                                            if (i < 3)
                                            {
                                                 @*@Html.DisplayFor(model => model.FacultyEducation[i].division.Value)
                                            @Html.HiddenFor(model => model.FacultyEducation[i].division)*@
                                                @Html.DropDownListFor(model => model.FacultyEducation[i].division,
                                new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                "-- Select --", new { id = divs, style = "width: 100%;", @class = "required" })
                                            }
                                            else
                                            {

                                                if (Model.FacultyEducation[i].educationId == 6 && Model.FacultyEducation[i].facultyCertificate == null && Model.FacultyEducation[i].place == null&& Model.FacultyEducation[2].facultyCertificate!=null)
                                                {
                                                  @Html.DropDownListFor(model => model.FacultyEducation[i].division,
                                                             new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                                           "-- Select --", new { id = divs, style = "width: 100%;", @class = "required" })
                                                }
                                                else
                                                {
                                                     if (@Model.FacultyEducation[i].division != null && @Model.FacultyEducation[i].division.Value != 0)
                                                      {
                                                          @Html.DisplayFor(model => model.FacultyEducation[i].division.Value)
                                                          @Html.HiddenFor(model => model.FacultyEducation[i].division)
                                                      }
                                                }
                                                @*@Html.DropDownListFor(model => model.FacultyEducation[i].division,
                                new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                                "-- Select --", new { id = divs, style = "width: 100%;" })*@
                                            }
                                        }
                                    </td>
                                    <td class="@style" style="text-align: center; vertical-align: top;">
                                        @if (@Model.isView != null)
                                        {
                                            if(@Model.FacultyEducation[i].university != null)
                                            {
                                                @Html.DisplayFor(model => model.FacultyEducation[i].university)
                                                @Html.HiddenFor(model => model.FacultyEducation[i].university)
                                            }
                                            else
                                            {
                                                if (i < 3)
                                                {
                                                    @*@Html.DisplayFor(model => model.FacultyEducation[i].university, new { style = "width: 95%", @maxlength = "50", @class = "required", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })*@
                                                    @Html.TextBoxFor(model => model.FacultyEducation[i].university, new { style = "width: 95%", @maxlength = "50", @class = "required", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                                }
                                                else
                                                {
                                                    if ((Model.FacultyEducation[i].educationId == 6 || Model.FacultyEducation[i].educationId == 5) && Model.FacultyEducation[i].facultyCertificate == null && Model.FacultyEducation[i].place == null && Model.FacultyEducation[2].facultyCertificate != null)
                                                    {
                                                        @*@Html.DisplayFor(model => model.FacultyEducation[i].university, new { style = "width: 95%", @maxlength = "50", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })*@
                                                        @Html.TextBoxFor(model => model.FacultyEducation[i].university, new { style = "width: 95%", @maxlength = "50",@placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(model => model.FacultyEducation[i].university, new { style = "width: 95%", @maxlength = "50", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                                    }
                                                }
                                            }

                                        }
                                        else
                                        {

                                            if (i < 3)
                                            {
                                                @Html.DisplayFor(model => model.FacultyEducation[i].university, new { style = "width: 95%", @maxlength = "50", @class = "required", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                                @*@Html.TextBoxFor(model => model.FacultyEducation[i].university, new { style = "width: 95%", @maxlength = "50", @class = "required", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })*@
                                            }
                                            else
                                            {
                                                if (Model.FacultyEducation[i].educationId == 6 && Model.FacultyEducation[i].facultyCertificate == null && Model.FacultyEducation[i].place == null && Model.FacultyEducation[2].facultyCertificate!=null)
                                                {
                                                    @Html.TextBoxFor(model => model.FacultyEducation[i].university, new { style = "width: 95%", @maxlength = "50", @class = "required", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)" })
                                                }
                                                else
                                                {
                                                    @Html.DisplayFor(model => model.FacultyEducation[i].university, new {style = "width: 95%", @maxlength = "50", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)"})
                                                }
                                            }
                                        }
                                    </td>
                                    <td class="@style" style="text-align: center; vertical-align: top;">
                                        @if (@Model.isView != null)
                                        {
                                            if (@Model.FacultyEducation[i].place != null)
                                            {
                                                @Html.DisplayFor(model => model.FacultyEducation[i].place)
                                                @Html.HiddenFor(model => model.FacultyEducation[i].place)
                                            }
                                            else
                                            {
                                                if (i < 3)
                                                {
                                                    @*@Html.DisplayFor(model => model.FacultyEducation[i].place, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })*@
                                                    @Html.TextBoxFor(model => model.FacultyEducation[i].place, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                                }
                                                else
                                                {
                                                    if ((Model.FacultyEducation[i].educationId == 6 || Model.FacultyEducation[i].educationId == 5) && Model.FacultyEducation[i].facultyCertificate == null && Model.FacultyEducation[i].place == null)
                                                    {
                                                        @*@Html.DisplayFor(model => model.FacultyEducation[i].place, new { style = "width: 90%", @maxlength = "50", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })*@
                                                        @Html.TextBoxFor(model => model.FacultyEducation[i].place, new { style = "width: 90%", @maxlength = "50", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(model => model.FacultyEducation[i].place, new { style = "width: 90%", @maxlength = "50", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {

                                            if (i < 3)
                                            {
                                                @Html.DisplayFor(model => model.FacultyEducation[i].place, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                                @*@Html.TextBoxFor(model => model.FacultyEducation[i].place, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })*@
                                            }
                                            else
                                            {
                                                if (Model.FacultyEducation[i].educationId == 6 && Model.FacultyEducation[i].facultyCertificate == null && Model.FacultyEducation[i].place == null && Model.FacultyEducation[2].facultyCertificate!=null)
                                                {
                                                   @Html.TextBoxFor(model => model.FacultyEducation[i].place, new { style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)" })
                                                }
                                                else
                                                {
                                                    @Html.DisplayFor(model => model.FacultyEducation[i].place, new {style = "width: 90%", @maxlength = "50", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)"})
                                                }
                                            }
                                        }
                                    </td>
                                    <td class="@style certificates" style="text-align: center; vertical-align: top;">
                                        @if (!string.IsNullOrEmpty(@Model.FacultyEducation[i].facultyCertificate))
                                        {
                                            <a href="../Content/Upload/Faculty/Certificates/@Model.FacultyEducation[i].facultyCertificate" target="_blank">
                                                <span style="font-weight:bold;color:red">View</span>
                                                @*<img src="../Content/Upload/Faculty/Certificates/@Model.FacultyEducation[i].facultyCertificate" style="height: 60px;" />*@
                                            </a>
                                        }

                                        @if (@Model.isView != null)
                                        {
                                            if (@Model.FacultyEducation[i].facultyCertificate != null)
                                            {
                                                var cName = Model.FacultyEducation[i].educationId + "-certificate";
                                                if (i < 3)
                                                {
                                                    if (!String.IsNullOrEmpty(@Model.FacultyEducation[i].facultyCertificate))
                                                    {
                                                        @Html.TextBoxFor(model => model.FacultyEducation[i].certificate, new { type = "file", @style = "width: 180px;", @class = cName })
                                                        @*@Html.DisplayFor(model => model.FacultyEducation[i].facultyCertificate, new { type = "file", @style = "width: 180px;", @class = cName })*@
                                                        @*@Html.DisplayFor(model => model.FacultyEducation[i].certificate, new { type = "file", @style = "width: 180px;", @class = cName })*@
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(model => model.FacultyEducation[i].certificate, new { type = "file", @style = "width: 180px;", @class = cName + " required", required = true })
                                                        @Html.DisplayFor(model => model.FacultyEducation[i].certificate, new { type = "file", @style = "width: 180px;", @class = cName + " required", required = true })
                                                    }
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.FacultyEducation[i].certificate, new { type = "file", @style = "width: 180px;", @class = cName })
                                                    @Html.DisplayFor(model => model.FacultyEducation[i].certificate, new { type = "file", @style = "width: 180px;", @class = cName })
                                                }
                                            }
                                            @*@Html.HiddenFor(model => model.FacultyEducation[i].certificate)*@
                                            else
                                            {
                                                var cName = Model.FacultyEducation[i].educationId + "-certificate";
                                                if (i < 3)
                                                {
                                                    if (!String.IsNullOrEmpty(@Model.FacultyEducation[i].facultyCertificate))
                                                    {
                                                        @Html.TextBoxFor(model => model.FacultyEducation[i].certificate, new { type = "file", @style = "width: 180px;", @class = cName + " required" })
                                                        @*@Html.DisplayFor(model => model.FacultyEducation[i].facultyCertificate, new { type = "file", @style = "width: 180px;", @class = cName })*@
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(model => model.FacultyEducation[i].certificate, new { type = "file", @style = "width: 180px;", @class = cName + " required" })
                                                        @Html.DisplayFor(model => model.FacultyEducation[i].certificate, new { type = "file", @style = "width: 180px;", @class = cName + " required" })
                                                    }
                                                }
                                                else
                                                {
                                                    if ((Model.FacultyEducation[i].educationId == 6 || Model.FacultyEducation[i].educationId == 5) && Model.FacultyEducation[i].facultyCertificate == null && Model.FacultyEducation[i].place == null && Model.FacultyEducation[2].facultyCertificate != null)
                                                    {
                                                        @*@Html.DisplayFor(model => model.FacultyEducation[i].certificate, new { type = "file", @style = "width: 180px;", @class = cName })*@
                                                        @Html.TextBoxFor(model => model.FacultyEducation[i].certificate, new { type = "file", @style = "width: 180px;", @class = cName})
                                                    }
                                                    else
                                                    {

                                                        @Html.TextBoxFor(model => model.FacultyEducation[i].certificate, new { type = "file", @style = "width: 180px;", @class = cName })
                                                    }
                                                }
                                            }

                                        }
                                        else
                                        {
                                            var cName = Model.FacultyEducation[i].educationId + "-certificate";
                                            if (i < 3)
                                            {
                                                if (!String.IsNullOrEmpty(@Model.FacultyEducation[i].facultyCertificate))
                                                {
                                                    @Html.TextBoxFor(model => model.FacultyEducation[i].certificate, new { type = "file", @style = "width: 180px;", @class = cName + " required" })
                                                    @*@Html.DisplayFor(model => model.FacultyEducation[i].facultyCertificate, new { type = "file", @style = "width: 180px;", @class = cName })*@
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.FacultyEducation[i].certificate, new { type = "file", @style = "width: 180px;", @class = cName + " required" })
                                                    @Html.DisplayFor(model => model.FacultyEducation[i].certificate, new { type = "file", @style = "width: 180px;", @class = cName + " required" })
                                                }
                                            }
                                            else
                                            {
                                                if (Model.FacultyEducation[i].educationId == 6 && Model.FacultyEducation[i].facultyCertificate == null && Model.FacultyEducation[i].place == null && Model.FacultyEducation[2].facultyCertificate!=null)
                                                {
                                                    @Html.TextBoxFor(model => model.FacultyEducation[i].certificate, new { type = "file", @style = "width: 180px;", @class = cName + " required" })
                                                }
                                                else
                                                {

                                                    @Html.DisplayFor(model => model.FacultyEducation[i].certificate, new {type = "file", @style = "width: 180px;", @class = cName})
                                                }
                                            }

                                        }
                                        @Html.HiddenFor(model => model.FacultyEducation[i].facultyCertificate)
                                    </td>
                                </tr>

                                <script type="text/javascript">

                                    $(document).ready(function() {
                                        if (@ViewBag.FacultyID > 0) {
                                            if (@Model.FacultyEducation[i].passedYear > 0) {
                                                $("#@year").val(@Model.FacultyEducation[i].passedYear);
                                            }

                                            if (@Model.FacultyEducation[i].division != null) {
                                                if (@Model.FacultyEducation[i].division > 0) {
                                                    $("#@divs").val(@Model.FacultyEducation[i].division);
                                                }
                                            }
                                        }

                                    });

                                </script>
                            }
                        </tbody>
                    </table>

                    <table class="faculty_table">
                        <tr>
                            <td class="col1" colspan="2">
                                <b>Publications</b>
                            </td>
                        </tr>
                        <tr>
                            <td class="col1" style="width: 10% !important; vertical-align: top;">
                                @Html.LabelFor(model => model.National)
                            </td>
                            <td class="col2" style="width: 90% !important; vertical-align: top;">
                                @if (@Model.isView != null)
                                {
                                    @Html.TextAreaFor(model => model.National, new { style = "width: 99%; resize:none;", @placeholder = "National", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)" })
                                    @*@Html.HiddenFor(model => model.National)*@

                                }
                                else
                                {
                                    @Html.DisplayFor(model => model.National)
                                    @Html.HiddenFor(model => model.National)
                                    @*@Html.TextAreaFor(model => model.National, new { style = "width: 99%; resize:none;", @placeholder = "National", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)" })
                                        @Html.ValidationMessageFor(model => model.National)*@
                                }
                            </td>
                        </tr>
                        <tr>
                            <td class="col1" style="vertical-align: top;">
                                @Html.LabelFor(model => model.InterNational)
                            </td>
                            <td class="col2" style="vertical-align: top;">
                                @if (@Model.isView != null)
                                {
                                    @Html.TextAreaFor(model => model.InterNational, new { style = "width: 99%; resize:none;", @placeholder = "InterNational", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)" })
                                    @*@Html.HiddenFor(model => model.InterNational)*@

                                }
                                else
                                {
                                    @Html.DisplayFor(model => model.InterNational)
                                    @Html.HiddenFor(model => model.InterNational)
                                    @*@Html.TextAreaFor(model => model.InterNational, new { style = "width: 99%; resize:none;", @placeholder = "InterNational", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)" })
                                        @Html.ValidationMessageFor(model => model.InterNational)*@
                                }
                            </td>
                        </tr>

                        <tr>
                            <td class="col1" style="vertical-align: top;">
                                @Html.LabelFor(model => model.Citation)
                            </td>
                            <td class="col2" style="vertical-align: top;">
                                @if (@Model.isView != null)
                                {
                                    @Html.TextAreaFor(model => model.Citation, new { style = "width: 99%; resize:none;", @placeholder = "Citation", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)" })
                                    @*@Html.HiddenFor(model => model.Citation)*@

                                }
                                else
                                {
                                    @Html.DisplayFor(model => model.Citation)
                                    @Html.HiddenFor(model => model.Citation)
                                    @*@Html.TextAreaFor(model => model.Citation, new { style = "width: 99%; resize:none;", @placeholder = "Citation", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)" })
                                        @Html.ValidationMessageFor(model => model.Citation)*@
                                }
                            </td>
                        </tr>
                        <tr>
                            <td class="col1" style="vertical-align: top;">
                                @Html.LabelFor(model => model.Awards)
                            </td>
                            <td class="col2" style="vertical-align: top;">
                                @if (@Model.isView != null)
                                {
                                   @Html.TextAreaFor(model => model.Awards, new { style = "width: 99%; resize:none;", @placeholder = "Awards", @maxlength = "500" })
                                    @*@Html.HiddenFor(model => model.Awards)*@

                                }
                                else
                                {
                                    @Html.DisplayFor(model => model.Awards)
                                    @Html.HiddenFor(model => model.Awards)
                                    @*@Html.TextAreaFor(model => model.Awards, new { style = "width: 99%; resize:none;", @placeholder = "Awards", @maxlength = "500" })
                                        @Html.ValidationMessageFor(model => model.Awards)*@
                                }
                            </td>
                        </tr>
                    </table>
        <div id="divloading" style="line-height: 1.2rem;text-align: right;color: blue;padding-top: 8px;display:none">
            <p>Please Wait While Updating your details....</p>
        </div>

                    <div style="line-height: 1.2rem;" class="right_buttons submitButton">
                        @if (Model.isView != null&&Model.BlacklistFaculty!=true)
                        {
                            <input type="submit" id="btnUpdate" value="Update" class="submit" name="Command" />
                        }
                        @*<input type="button" id="btnBack" value="Go Back" class="create_button" name="Command" />*@
                        @*@if (FacultyPhddata!=null)
                        {
                            if (FacultyPhddata.place != null && FacultyPhddata.facultyCertificate != null)
                            {
                                
                            }
                            else
                            {
                                 <input type="submit" id="btnUpdate" value="Update" class="submit" name="Command" />  
                            }
                           
                        }*@
                        

                    </div>
                </div>
            </form>
<script type="text/javascript">

    $(document).ready(function () {
        //$('form').submit(function () {
        //    if ($(this).valid()) {
        //        //$(this).find(':submit').attr('disabled', 'disabled');
        //        $(this).find(':submit').hide();
        //        $('#divloading').css("display","block");
        //    }
        //});

                    $('.clsPanNumber').attr("style","text-transform:uppercase");
                    $('.clsPanNumber').keyup(function(event) {

                        $(this).val($(this).val().replace(/([a-z])/,function(s){return s.toUpperCase()}));

                    });
                    $('.clsPanNumber').blur(function(event) {

                        $(this).val(($(this).val()).toUpperCase());

                    });
                    //  $("#PANNumber").focus();


                    $("#Mobile").blur(function() {
                        var MobileNo = $(this).val();
                        if (MobileNo != "") {
                            $.ajax({
                                url: '/OnlineRegistration/CheckMobileNumber',
                                dataType: 'json',
                                type: 'post',
                                contentType: 'application/json',
                                data: JSON.stringify({ "MobileNo": MobileNo }),
                                success: function(data, textStatus, jQxhr) {
                                     
                                    console.log(data);
                                    if (data.MobileStatus !== false) {
                                        $("#Mobile > span").text("Your Mobile Number Already Exist");
                                        $("#Mobile > span").show();
                                        $("#Mobile > span").css('color', 'red');
                                    } else {
                                        $("#Mobile span").text(" ");
                                        $("#Mobile span").hide();
                                       // $("#Mobile span").css('color', 'red');
                                    }
                                },
                                error: function(jqXhr, textStatus, errorThrown) {
                                    console.log(errorThrown);
                                }
                            });
                        } else {
                            $("#Mobile span").text("Please Enter Mobile Number");
                        }
                    });

                    $("#PANNumber").blur(function() {
                        var PANNumber = $(this).val();
                        var RegistrationNumber = $("#RegistrationNumber").val();
                        if (PANNumber != "" && RegistrationNumber!="") {
                            $.ajax({
                                url: '/OnlineRegistration/EditCheckPanNumber',
                                dataType: 'json',
                                type: 'post',
                                contentType: 'application/json',
                                data: JSON.stringify({ "EditPANNumber": PANNumber,"RegistrationNumber":RegistrationNumber }),
                                success: function(data, textStatus, jQxhr) 
                                {
                                     
                                    console.log(data);
                                    if (data != true) {
                                        //$("#PANNumber > span").show();
                                        //$(".field-validation-valid").css("","");
                                        //$(".field-validation-valid").css("color","red");
                                        //$("#PANNumber > span").text(data);
                                        $("#PANNumber").val("");
                                        alert(data);
                                        $("#PANNumber").focus();
                                    } 
                                    //else {
                                    //    $("#PANNumber > span").hide();
                                    //    $("#PANNumber > span").text("");
                                    //    $(".field-validation-valid").hide();
                                    //}
                                }
                                
                            });
                        }
                    });





             $("#PANNumber").blur(function () {
                  
                        if ($('#PANNumber').val() != "") {
                            $.ajax({
                                url: '/OnlineRegistration/GetDetailsBasedonPANNumber',
                                dataType: 'json',
                                type: 'post',
                                contentType: 'application/json',
                                data: JSON.stringify({ "PANNo": $('#PANNumber').val() }),
                                success: function(data, textStatus, jQxhr) {
                                    $("label[for='FirstName']").text("");
                                    $("input[name='FirstName']").val("");

                                    $("label[for='MiddleName']").text("");
                                    $("input[name='MiddleName']").val("");

                                    $("label[for='LastName']").text("");
                                    $("input[name='LastName']").val("");

                                     
                                    console.log(data);
                                    if (data.Details != "") {
                                        var details = data.Details;
                                        var Alldata = details.split(",");
                                        // $("#FirstName").val(Alldata[3]);
                                        $("label[for='FirstName']").text(Alldata[3]);
                                        $("input[name='FirstName']").val(Alldata[3]);

                                        $("label[for='MiddleName']").text(Alldata[4]);
                                        $("input[name='MiddleName']").val(Alldata[4]);

                                        $("label[for='LastName']").text(Alldata[2]);
                                        $("input[name='LastName']").val(Alldata[2]);
                                        // $("#MiddleName").val(Alldata[4]);
                                        // $("#LastName").val(Alldata[2]);
                                        if (Alldata[3] == "" || Alldata[3] == null) {
                                            $("label[for='FirstName']").text(Alldata[2]);
                                            $("input[name='FirstName']").val(Alldata[2]);
                                        }
                                        if (Alldata[2] == "" || Alldata[2] == null) {
                                            $("label[for='LastName']").text(Alldata[3]);
                                            $("input[name='LastName']").val(Alldata[3]);
                                        }
                                    }
                                },

                                error: function(jqXhr, textStatus, errorThrown) {
                                    console.log(errorThrown);
                                }

                            });
                        } else {
                            $("label[for='FirstName']").text("");
                            $("input[name='FirstName']").val("");

                            $("label[for='MiddleName']").text("");
                            $("input[name='MiddleName']").val("");

                            $("label[for='LastName']").text("");
                            $("input[name='LastName']").val("");
                           // alert("Please Enter PAN Number");
                        }

                    });


                });
          function SaveFacultyDetails() {
                    if($('.input-validation-error').length > 0 ){
                        return;
                    }
                    else {
                        var actionUrl='@Url.Action("EditFacultyDetails", "OnlineRegistration", new { Command="Update",fid=ViewBag.fid  })';
                        $("form" ).attr( "enctype", "multipart/form-data" );
                        if(document.forms[0].checkValidity()){
                            document.forms[0].action=actionUrl;
                            document.forms[0].submit();
                        }
                    }
                }
            </script>
