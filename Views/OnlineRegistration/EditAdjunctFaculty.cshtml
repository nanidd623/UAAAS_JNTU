
@model UAAAS.Models.FacultyRegistration

@{
    ViewBag.Title = "EditFacultyDetails";
}


<script type="text/javascript">
    $(document).ready(function() {
         

        $(".Terms").click(function() {
            if ($(this).val() == "True") {
                $(".submitButton").show();
                $(".rbtn").css("background-color", "#E8EFF3");
            } else {
                $(".submitButton").hide();
            }
        });

        if ($(".ifNeworExist").is(':checked')) {

            $(".ifNeworExist").prop("disabled", true);

            var checkval = $(".ifNeworExist").prop("checked");

            if (checkval == true) {

                $('#divNewFaculty').show();
                $('#divOrganization').hide();
                $('#divExistFaculty').show();
            } else {

                $('#divNewFaculty').show();
                $('#divOrganization').hide();
                //$('#divOrganization').show();
                // $('#divExistFaculty').hide();
            }
        } else {
           // $(".ifNeworExist").prop("disabled", false);
           // $('#divNewFaculty').show();
            // $('#divOrganization').hide();
            //$('#divExistFaculty').hide();
            $(".ifExist").prop("checked","checked");
            $(".ifNew").prop("disabled",true);
            $('#divNewFaculty').show();
            $('#divOrganization').show();
            $('#divExistFaculty').show();
            $('#divWorking').show();
          //  $(".ifWorking").prop("checked",true); 
        }

        $(".ifNeworExist").click(function() {

            ClearFields();

            if ($(this).val() == "NewFaculty") {

                $('#divNewFaculty').show();
                $('#divOrganization').show();
                // $('#divExistFaculty').hide();
                $(".ifWorking").prop("checked", false);
            } else if ($(this).val() == "ExistFaculty") {

                $('#divNewFaculty').show();
                $('#divOrganization').hide();
                $('#divExistFaculty').show();
                $('#divWorking').show();
                $(".ifWorking").prop("checked", true);
            }
        });

        $('.WorkingStatus').click(function() {
             
            $("#CollegeName").removeClass("required");
            $("#department").removeClass("required");
            $("#OtherDepartment").removeClass("required");
            $("#designation").removeClass("required");
            $("#facultyDateOfAppointment").removeClass("required");
            $("#TotalExperiencePresentCollege").removeClass("required");
            $("#facultyDateOfRatification").removeClass('required');

            if ($(this).val() == "True") {

               // $(".FacultyRatifiedByJNTU").addClass("required");
                $('#divWorking').show();
                $('#divNoc').show();
                $("#NOCUploadFile").addClass("required");
               
               // $('#divDOR').hide();
            } else {
                $('#divNoc').hide();
                $("#NOCUploadFile").removeClass("required");
               // $(".FacultyRatifiedByJNTU").removeClass("required");
                //  $('#divWorking').hide();
            }
        });

        $(".FacultyRatifiedByJNTU").click(function() {

            if ($(this).val() == "True") {

                $('#divRatified').show();
                $('#divDOR').show();
            } else {

                $('#divRatified').hide();
                $('#divDOR').hide();
            }
        });

        $('#department').change(function() {

            //Others id=62
            if ($('#department').val() == 62) {
                $('#divDept').show();
            } else {
                $('#divDept').hide();
            }
        });

        $('#designation').change(function() {

            //Other id=4
            if ($('#designation').val() == 4) {
                $('#divDesig').show();
            } else {
                $('#divDesig').hide();
            }
        });


        //get pdf file size
        function GetIncomeTaxFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#IncomeTaxFileUpload")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //change function for pdf doc
        $(function() {
            $(".IncomeTaxFileUpload").change(function() {
                 
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {

                        case 'pdf':
                        case 'PDF':

                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    $(".IncomeTaxFileUploads > span").text("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetIncomeTaxFileSize(file);
                    size = size / 1048576;
                    if (size > 1) {
                        $(".IncomeTaxFileUploads > span").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $(".IncomeTaxFileUploads > span").text("");
                    }
                }

            });
        });




        //get file size
        function GetFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE

                if ($.browser.msie) {
                    //before making an object of ActiveXObject,
                    //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#Photo")[0].files[0].size //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }

                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        

       


        $(".SelectionCommitteeProceedingsDocument1").change(function() {

            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'jpg':
                    case 'JPG':
                    case 'jpeg':
                    case 'JPEG':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                alert("Selection CommitteeProceedings Document should be in JPEG format only");
                $(this).val('');
                return false;
            } else {
                var size = GetCertificateSize(this.id);

                if (size > 102400) {
                    alert("Selection CommitteeProceedings Document should not exceed 100 KB in Size");
                    $(this).val('');
                } else {
                    //$(".certificates > span").text("");
                }
            }
        });


        $(".MembershipFile1").change(function() {

            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'jpg':
                    case 'JPG':
                    case 'jpeg':
                    case 'JPEG':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                alert("Membership Certificate 1 Document should be in JPEG format only");
                $(this).val('');
                return false;
            } else {
                var size = GetCertificateSize(this.id);

                if (size > 102400) {
                    alert("Membership Certificate 1 Document should not exceed 100 KB in Size");
                    $(this).val('');
                } else {
                   // $(".certificates > span").text("");
                }
            }
        });

        $(".MembershipFile2").change(function() {

            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'jpg':
                    case 'JPG':
                    case 'jpeg':
                    case 'JPEG':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                alert("Membership Certificate 2 Document should be in JPEG format only");
                $(this).val('');
                return false;
            } else {
                var size = GetCertificateSize(this.id);

                if (size > 102400) {
                    alert("Membership Certificate 2 Document should not exceed 100 KB in Size");
                    $(this).val('');
                } else {
                    //$(".certificates > span").text("");
                }
            }
        });

        $(".MembershipFile3").change(function() {

            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'jpg':
                    case 'JPG':
                    case 'jpeg':
                    case 'JPEG':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                alert("Membership Certificate 2 Document should be in JPEG format only");
                $(this).val('');
                return false;
            } else {
                var size = GetCertificateSize(this.id);

                if (size > 102400) {
                    alert("Membership Certificate 2 Document should not exceed 100 KB in Size");
                    $(this).val('');
                } else {
                    //$(".certificates > span").text("");
                }
            }
        });


        $("#NOCUploadFile").change(function() {

            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'jpg':
                    case 'JPG':
                    case 'jpeg':
                    case 'JPEG':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                alert("NOC Document should be in JPEG format only");
                $(this).val('');
                return false;
            } else {
                var size = GetCertificateSize(this.id);

                if (size > 102400) {
                    alert("NOC Document should not exceed 100 KB in Size");
                    $(this).val('');
                } else {
                    $("#NOCUploadFile > span").text("");
                }
            }
        });



        $('#btnUpdate').click(function(e) {
             
            //var facultyType = $('input[name=Type]:checked').val();
            //if (facultyType == 'ExistFaculty') {

            //    if ($('#PANNumber').val() == '') {
            //        $('#PANNumber').addClass("required");
            //        $('.panfile').addClass("required");
            //    }

               

            //    //$('#AadhaarNumber').removeClass("required");
            //} else if (facultyType == 'NewFaculty') {

            //    $('#PANNumber').removeClass("required");
            //    $('.panfile').removeClass("required");
            //    $('#AadhaarNumber').removeClass("required");
            //    //$('.aadhaarfile').removeClass("required");

            //    if ($('#PANNumber').val() != '') {
            //        $('.panfile').addClass("required");
            //        $("#PANCardDocument").removeClass("input-validation-error");
            //    }
            //}

            if($('#AadhaarNumber').val()!='')
            {
                $('.aadhaarfile').addClass("required");
               
            }
            else
            {
                $('.aadhaarfile').addClass("required");
                $('#AadhaarNumber').addClass("required");
            }

            if ($("#TotalExperience").val() == '') {

                $("#TotalExperience").addClass("required");
            }

            var newORExist = $(".ifNeworExist").prop("checked");

            if (newORExist == true) {
                var e1 = $("#Type").prop("checked");
                var e2 = $(".WorkingStatus").prop("checked");

                if ($(".WorkingStatus").is(":checked")) {

                    if (e2 == true) {
                        if ($("#CollegeName").val() == '') {
                            $("#CollegeName").addClass("required");

                        }
                        if ($("#department").val() == '') {
                            $("#department").addClass("required");
                        }

                        if ($('#department').val() == 62) {
                            if ($("#OtherDepartment").val() == '') {
                                $("#OtherDepartment").addClass("required");
                            }
                        }

                        if ($("#designation").val() == '') {

                            $("#designation").addClass("required");
                        }

                        if ($('#designation').val() == 4) {
                            if ($("#OtherDesignation").val() == '') {

                                $("#OtherDesignation").addClass("required");
                            }
                        }

                        if ($("#facultyDateOfAppointment").val() == '') {

                            $("#facultyDateOfAppointment").addClass("required");
                        }

                        if ($("#TotalExperiencePresentCollege").val() == '') {

                            $("#TotalExperiencePresentCollege").addClass("required");
                        }

                        var ratification = $(".FacultyRatifiedByJNTU").prop("checked");
                       

                        if ($("#GrossSalary").val() == '') {
                            $("#GrossSalary").focus();
                            $("#GrossSalary").addClass('required');
                        }

                        $('.SelectionCommitteeProceedingsDocument').removeClass("required");
                        if ($('#SelectionCommitteeProcedings').val() != '') {
                            $('.SelectionCommitteeProceedingsDocument').addClass("required");
                        }
                       // $('#NOCUploadFile').addClass("required");


                    } else {
                        $("#CollegeName").removeClass("required");
                        $("#department").removeClass("required");
                        $("#OtherDepartment").removeClass("required");
                        $("#designation").removeClass("required");
                        $("#facultyDateOfAppointment").removeClass("required");
                        $("#TotalExperiencePresentCollege").removeClass("required");
                        // $("#facultyDateOfRatification").removeClass('required');
                        $("#GrossSalary").removeClass('required');
                    }
                }
            }

            var terms = $('input[name=Terms]:checked').val();
            if (terms == undefined) {
                var terms = $('input[name=Terms]:checked').val();

                if (terms == undefined) {
                    // alert('You must agree Terms & Conditions before Register');
                    $(".rbtn").css("background-color", "red");
                    //return false;
                } else {
                    $(".rbtn").css("background-color", "#E8EFF3");
                }
            }
             
            var pandocument = $("#facultyPANCardDocument").val();
            if (pandocument != '') {
                $("input[name=PANCardDocument]").attr("required", false);
            } else {
                $("input[name=PANCardDocument]").addClass("required");
                $("input[name=PANCardDocument]").attr("required", true);
                // e.preventDefault();
                //alert("Please Upload PAN Document");
            }


            var scmdocument = $("#SelectionCommitteeProcedings").val();
             
            if (scmdocument != '') {
                $("input[name=SelectionCommitteeProceedingsDocument]").removeClass("required");
            } else {
                $("input[name=SelectionCommitteeProceedingsDocument]").addClass("required");
                $("input[name=SelectionCommitteeProceedingsDocument]").attr("required", true);
            }

            var photodata = $("#facultyPhoto").val();
            if (photodata != '') {
                $("input[name=Photo]").removeClass("required");
            } else {
                $("input[name=Photo]").addClass("required");
                $("input[name=Photo]").attr("required", true);
            }


            var aadhaardata = $("#facultyAadhaarCardDocument").val();
            if (aadhaardata != '') {
                $("input[name=AadhaarCardDocument]").removeClass("required");
            } else {
                $("input[name=AadhaarCardDocument]").addClass("required");
                $("input[name=AadhaarCardDocument]").attr("required", true);
            }
            

            var ratification = $(".FacultyRatifiedByJNTU").prop("checked");

            if(ratification==true)
            {
                if ($("#facultyDateOfRatification").val() == '') {

                    $("#facultyDateOfRatification").focus();
                    $("#facultyDateOfRatification").addClass('required');
                }
            }


            
            


            var incomtaxdocument = $("#IncomeTaxFileview").val();
            if (incomtaxdocument != '') {
                $("input[name=IncomeTaxFileUpload]").attr("required", false);
            } else {
                $("input[name=IncomeTaxFileUpload]").addClass("required");
                $("input[name=IncomeTaxFileUpload]").attr("required", true);
            }


            var nocdocument = $("input[name=NOCFile]").val();
            if (nocdocument != '') {
                $("input[name=NOCUploadFile]").attr("required", false);
            } else {
                $("input[name=NOCUploadFile]").addClass("required");
                $("input[name=NOCUploadFile]").attr("required", true);
               
            }

            var Incometaxdocument = $("input[name=IncomeTaxFileview]").val();
            if (Incometaxdocument != '') {
                $("input[name=IncomeTaxFileUpload]").attr("required", false);
            } else {
                $("input[name=IncomeTaxFileUpload]").addClass("required");
                $("input[name=IncomeTaxFileUpload]").attr("required", true);
               
            }


            var membershipdocument = $("input[name=MembershipCertificate1]").val();
            if (membershipdocument != '') {
                $("input[name=MembershipFile1]").attr("required", false);
            } else {
                $("input[name=MembershipFile1]").addClass("required");
                $("input[name=MembershipFile1]").attr("required", true);
               
            }





            var ssceducationId = $("#FacultyEducation_0__educationId").val();
            var ssccertificate = $("#FacultyEducation_0__facultyCertificate").val();
            if (ssceducationId !== '')
            {
                if (ssccertificate !== '') {
                    // $("#FacultyEducation_0__facultyCertificate").removeClass('required');
                } else {
                    $("." + ssceducationId + "-certificate").addClass('required');
                }
            }

            var beeducationId = $("#FacultyEducation_1__educationId").val();
            var becertificate = $("#FacultyEducation_1__facultyCertificate").val();

            if (beeducationId !== '')
            {
                if (becertificate !== '') {
                    // $("#FacultyEducation_0__facultyCertificate").removeClass('required');
                } else {
                    $("." + beeducationId + "-certificate").addClass('required');
                }
            }

            var meeducationId = $("#FacultyEducation_2__educationId").val();
            var mecertificate = $("#FacultyEducation_2__facultyCertificate").val();
            if (meeducationId !== '')
            {
                if (mecertificate !== '') {
                    // $("#FacultyEducation_0__facultyCertificate").removeClass('required');
                } else {
                    $("." + meeducationId + "-certificate").addClass('required');
                }
            }



            $("#CollegeName").addClass("required");
            $("#department").addClass("required");
            $("#OtherDepartment").addClass("required");
            $("#designation").addClass("required");
            $("#facultyDateOfAppointment").addClass("required");
            //


            
        });


        //get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            } else {
                return strName[0];
            }
        }

        //get file size
        function GetCertificateSize(fileid) {

            try {
                var fileSize = 0;
                //for IE

                if ($.browser.msie) {
                    //before making an object of ActiveXObject,
                    //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#" + fileid)[0].files[0].size //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }

                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }


        
        if ($("input[name=isFacultyRatifiedByJNTU]:checked").val() == true) {
            $("#divRatified").show();
            $("#divDOR").show();
        } 



        if ($("input[name=isFacultyRatifiedByJNTU]:checked").val() =='False') {
            $("#divRatified").css("display", "none");
            $("#divDOR").css("display", "none");
        } 
        //else {
        //    $("#divRatified").hide();
        //    $("#divDOR").hide();
        //}

        if ($("input[name=WorkingStatus]:checked").val() == true) {
            $("#divNoc").show();
           
        } 



        if ($("input[name=WorkingStatus]:checked").val() =='False') {
             
            $("#divNoc").css("display", "none");

        } 
        //else {
        //    $("#divNoc").hide();
            
        //}






        $(function() {

            $("#PhotoPreview").css("display", "none");

            $("#Photo").change(function(e) {
                 
                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readPhoto(F[i]);
            });

            function readPhoto(file) {

                var reader = new FileReader();
                var image = new Image();
                var showImage = 1;

                reader.readAsDataURL(file);
                reader.onload = function(_file) {
                    image.src = _file.target.result; // url.createObjectURL(file);
                    image.onload = function() {
                        var w = this.width,
                            h = this.height,
                            t = file.type, // ext only: // file.type.split('/')[1],
                            n = file.name,
                            s = ~~(file.size / 1024) + 'KB';

                        //alert(w+'x'+h+' '+s+' '+t+' '+n);

                        if (w > 200 || w < 150 || h < 150 || h > 230 || s > 50) {
                            alert('Photo should be Minimum - 150x150 pixels, Maximum - 200x230 pixels and less than 50 KB size');
                            showImage = 0;
                            $("#PhotoPreview").css("display", "none");
                            $("#PhotoPreview").css("background-image", "none");
                            var filephoto = $('#Photo');
                            file.replaceWith(filephoto.val('').clone(true));
                            return false;
                        }

                        if (t != 'image/jpeg') {
                            alert("Photo should be in JPEG/JPG format only");
                            showImage = 0;
                            $("#PhotoPreview").css("display", "none");
                            $("#PhotoPreview").css("background-image", "none");
                            var filephoto = $('#Photo');
                            file.replaceWith(filephoto.val('').clone(true));
                            return false;
                        }
                    };
                    image.onerror = function() {
                        alert('Invalid file type: ' + file.type);
                    };
                };
                reader.onloadend = function() { // set image data as background of div
                    if (showImage == 1) {
                        $("#PhotoPreview").css("display", "block");
                        $("#PhotoPreview").css("background-image", "url(" + this.result + ")");
                    } else {
                        $("#PhotoPreview").css("display", "none");
                        $("#PhotoPreview").css("background-image", "none");
                    }
                }
            }

            $(".panfile1").change(function(e) {
                 
                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '300x250', '100', 'PAN Card Document');

            });
            $(".aadhaarfile").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '200x200', '100', 'Aadhaar Card Document');

            });
            $(".SelectionCommitteeProceedingsDocument").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'Proceedings Document');

            });

            $(".MembershipFile1").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'Membership Ceritificate 1 Document');

            });


            $(".MembershipFile2").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'Membership Ceritificate 2 Document');

            });


            $(".MembershipFile3").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'Membership Ceritificate 3 Document');

            });



            $(".1-certificate").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', '10th Or Equivalent Document');

            });
            $(".3-certificate").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'UG Document');

            });
            $(".4-certificate").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'PG Document');

            });
            $(".5-certificate").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'M.Phil Document');

            });
            $(".6-certificate").change(function(e) {

                if (this.disabled) return alert('File upload not supported!');
                var F = this.files;
                if (F && F[0]) for (var i = 0; i < F.length; i++) readDocument(F[i], '600x800', '100', 'Ph.D Document');

            });

            



            function readDocument(file, minimum, fsize, title) {
                 
                var reader = new FileReader();
                var image = new Image();

                reader.readAsDataURL(file);
                reader.onload = function(_file) {
                    image.src = _file.target.result; // url.createObjectURL(file);
                    image.onload = function() {
                        var w = this.width,
                            h = this.height,
                            t = file.type, // ext only: // file.type.split('/')[1],
                            n = file.name,
                            s = ~~(file.size / 1024); //s = ~~(file.size/1024) +'KB';

                        //alert(w+'x'+h+' '+s+' '+t+' '+n);
                        //alert(w+'-'+minimum.split('x')[0]);alert(h+'-'+minimum.split('x')[1]);
                        //if(w<minimum.split('x')[0])
                        //{alert('width-notok');}else{alert('width-ok');}
                        //if(h<minimum.split('x')[1])
                        //{alert('height-notok');}else{alert('height-ok');}
                        //if(s>fsize)
                        //{alert('size-notok');}else{alert('size-ok');}
                        if (w < minimum.split('x')[0] || h < minimum.split('x')[1] || s > fsize) {
                            alert(title + " should be Minimum - " + minimum + " pixels and less than " + fsize + " KB size");

                            var filephoto;

                            if (title == 'PAN Card Document') {
                                filephoto = $('.panfile1');
                            }

                            if (title == 'Aadhaar Card Document') {
                                filephoto = $('.aadhaarfile');
                            }

                            if (title == 'Proceedings Document') {
                                filephoto = $('.SelectionCommitteeProceedingsDocument');
                            }

                            if (title == '10th Or Equivalent Document') {
                                filephoto = $('.1-certificate');
                            }

                            if (title == 'UG Document') {
                                filephoto = $('.3-certificate');
                            }

                            if (title == 'PG Document') {
                                filephoto = $('.4-certificate');
                            }

                            if (title == 'M.Phil Document') {
                                filephoto = $('.5-certificate');
                            }

                            if (title == 'Ph.D Document') {
                                filephoto = $('.6-certificate');
                            }
                            if (title == 'Membership Ceritificate 1 Document') {
                                filephoto = $('.MembershipFile1');
                            }
                            if (title == 'Membership Ceritificate 2 Document') {
                                filephoto = $('.MembershipFile2');
                            }
                            if (title == 'Membership Ceritificate 3 Document') {
                                filephoto = $('.MembershipFile3');
                            }
                            


                            file.replaceWith(filephoto.val('').clone(true));
                            return false;
                        }

                        if (t != 'image/jpeg') {
                            alert(title + " should be in JPEG/JPG format only");

                            var filephoto;

                            if (title == 'PAN Card Document') {
                                filephoto = $('.panfile1');
                            }

                            if (title == 'Aadhaar Card Document') {
                                filephoto = $('.aadhaarfile');
                            }

                            if (title == 'Membership Ceritificate 1 Document') {
                                filephoto = $('.MembershipFile1');
                            }

                            if (title == 'Membership Ceritificate 2 Document') {
                                filephoto = $('.MembershipFile2');
                            }
                            if (title == 'Membership Ceritificate 3 Document') {
                                filephoto = $('.MembershipFile3');
                            }
                            

                            if (title == 'Proceedings Document') {
                                filephoto = $('.SelectionCommitteeProceedingsDocument');
                            }

                            if (title == '10th Or Equivalent Document') {
                                filephoto = $('.1-certificate');
                            }

                            if (title == 'UG Document') {
                                filephoto = $('.3-certificate');
                            }

                            if (title == 'PG Document') {
                                filephoto = $('.4-certificate');
                            }

                            if (title == 'M.Phil Document') {
                                filephoto = $('.5-certificate');
                            }

                            if (title == 'Ph.D Document') {
                                filephoto = $('.6-certificate');
                            }

                            file.replaceWith(filephoto.val('').clone(true));
                            return false;
                        }
                    };
                    image.onerror = function() {
                        alert('Invalid file type: ' + file.type);
                    };
                };
            }

            //old code
            $(".file1").change(function() {

                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'jpg':
                        case 'JPG':
                        case 'jpeg':
                        case 'JPEG':
                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    alert("Photo should be in JPEG format only");
                    $(this).val('');
                    return false;
                } else {

                    var size = GetFileSize(file);
                    if (size > 51200) {
                        alert("Photo should not exceed 50 KB in Size");
                        $(this).val('');
                    } else {
                        $(".files > span").text("");
                    }

                }
            });

            $(".certificate1").change(function() {

                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'jpg':
                        case 'JPG':
                        case 'jpeg':
                        case 'JPEG':
                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    alert("Certificate should be in JPEG format only");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetCertificateSize(this.id);

                    if (size > 102400) {
                        alert("Certificate size should not exceed 100 KB in Size");
                        $(this).val('');
                    } else {
                        $(".certificates > span").text("");
                    }
                }
            });

            $(".panfile1").change(function() {
                 
                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'jpg':
                        case 'JPG':
                        case 'jpeg':
                        case 'JPEG':
                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    alert("PAN Card document should be in JPEG format only");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetCertificateSize(this.id);

                    if (size > 102400) {
                        alert("PAN Card document size should not exceed 100 KB in Size");
                        $(this).val('');
                    } else {
                        //$(".certificates > span").text("");
                    }
                }
            });

            $(".aadhaarfile").change(function() {

                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'jpg':
                        case 'JPG':
                        case 'jpeg':
                        case 'JPEG':
                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    alert("Aadhaar Card document should be in JPEG format only");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetCertificateSize(this.id);

                    if (size > 102400) {
                        alert("Aadhaar Card document size should not exceed 100 KB in Size");
                        $(this).val('');
                    } else {
                        //$(".certificates > span").text("");
                    }
                }
            });
        });






    });

  





    function isNumberKey(evt){
        var len = $('.txtPercentage').val().length;
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57 || len>4) && charCode != 46)
            return false;
        else {

            var index = $('.txtPercentage').val().indexOf('.');

            if (index > 0 && charCode == 46) {
                return false;
            }
            if (index > 0 ) {
                var CharAfterdot = (len + 1) - index;
                if (CharAfterdot > 3 && charCode != 8) {
                    return false;
                }
            }

        }
        return true;
    }

    function checkSpcialChar(event){
        var e=window.event || event
        var keyunicode=e.charCode || e.keyCode
        //Allow alphabetical keys, plus BACKSPACE and SPACE
        return ((keyunicode>=65 && keyunicode<=122) || (keyunicode>=48 && keyunicode<=57) || keyunicode==8 || keyunicode==32)? true : false
        return;
        event.returnValue = true;
    }

    function isNumeric(evt){
        var len = $('#GrossSalary').val().length;
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57 || len>7) && charCode != 46)
            return false;
        else
            return true;
    }

    function printdiv(printpage) {
        //$(".view_hide").hide();
        //Get the HTML of div
        var divElements = document.getElementById(printpage).innerHTML;
        //Get the HTML of whole page
        var oldPage = document.body.innerHTML;

        //Reset the page's HTML with div's HTML only
        document.body.innerHTML =
          "<html><head><title></title></head><body>" +
          divElements.fontsize(1) + "</body>";

        //Print Page
        window.print();

        //Restore orignal HTML
        document.body.innerHTML = oldPage;
        //$(".view_hide").show();
        return false;
    }

    function ClearFields()
    {
        $('#Email').val('');
        $('#UserName').val('');
        $('#NewPassword').val('');
        $('#ConfirmPassword').val('');
        $('#FirstName').val('');
        $('#MiddleName').val('');
        $('#LastName').val('');
        $('#FatherOrhusbandName').val('');
        $('#MotherName').val('');

        $('#GenderId').removeAttr('checked');
        $('#facultyDateOfBirth').val('');
        $('#Mobile').val('');
        var filephoto=$('#Photo');
        filephoto.replaceWith(filephoto.val('').clone(true));
        $('#PhotoPreview').hide();
        $('#PANNumber').val('');
        $('#AadhaarNumber').val('');
        var pandoc= $('#PANCardDocument');
        pandoc.replaceWith(pandoc.val('').clone(true));
        var Aadhardoc=$('#AadhaarCardDocument');
        Aadhardoc.replaceWith(Aadhardoc.val('').clone(true));
        $('#OrganizationName').val('');

        $('#WorkingStatus').removeAttr('checked');
        $('#TotalExperience').val('');
        $('#CollegeName').val('');
        $('#department').val('');
        $('#OtherDepartment').val('');
        $('#designation').val('');
        $('#OtherDesignation').val('');
        $('#facultyDateOfAppointment').val('');
        $('#TotalExperiencePresentCollege').val('');
        $('#isFacultyRatifiedByJNTU').val('');
        $('#facultyDateOfRatification').val('');
        $('#ProceedingsNo').val('');
        var proceedingsdoc=$('#SelectionCommitteeProceedingsDocument');
        proceedingsdoc.replaceWith(proceedingsdoc.val('').clone(true));
        $('#AICTEFacultyId').val('');
        $('#GrossSalary').val('');

        //QualificationTable
        var rowCount = $('#tblQualification >tbody >tr').length;

        for (var i = 0; i < rowCount; i++) {
            $('#FacultyEducation_' + i + '__studiedEducation').val('');
            $('#FacultyEducation_' + i + '__specialization').val('');
            $('yr_' + i).val('');
            $('#FacultyEducation_' + i + '__percentage').val('');
            $('#division_' + i).val('');
            $('#FacultyEducation_' + i + '__university').val('');
            $('#FacultyEducation_' + i + '__place').val('');
            var cerificatedoc=$('#FacultyEducation_' + i + '__certificate');
            cerificatedoc.replaceWith(cerificatedoc.val('').clone(true));
        }

        $('#National').val('');
        $('#InterNational').val('');
        $('#Citation').val('');
        $('#Awards').val('');

        $('.Terms').removeAttr('checked');
    }

    function demoFromHTML() {
        var pdf = new jsPDF('p', 'pt', 'letter')

        // source can be HTML-formatted string, or a reference
        // to an actual DOM element from which the text will be scraped.
        , source = $('#div_print')[0]

        // we support special element handlers. Register them with jQuery-style
        // ID selector for either ID or node name. ("#iAmID", "div", "span" etc.)
        // There is no support for any other type of selectors
        // (class, of compound) at this time.
        , specialElementHandlers = {
            // element with id of "bypass" - jQuery style selector
            '#bypassme': function(element, renderer){
                // true = "handled elsewhere, bypass text extraction"
                return true
            }
        }

        margins = {
            top: 80,
            bottom: 60,
            left: 40,
            width: 522
        };
        // all coords and widths are in jsPDF instance's declared units
        // 'inches' in this case
        pdf.fromHTML(
            source // HTML string or DOM elem ref.
            , margins.left // x coord
            , margins.top // y coord
            , {
                'width': margins.width // max width of content on PDF
                , 'elementHandlers': specialElementHandlers
            },
            function (dispose) {
                // dispose: object with X, Y of the last line add to the PDF
                //          this allow the insertion of new lines after html
                pdf.save('Test.pdf');
            },
            margins
        )
    }
   // var doc = new jsPDF();
    var specialElementHandlers = {
        '#editor': function (element, renderer) {
            return true;
        }
    };

    function HTML2PDF() {
         
        doc.fromHTML($('#div_print').html(), 15, 15, {'width': 170,'elementHandlers': specialElementHandlers});
        doc.save('sample-file.pdf');
    }
</script>






<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.plugin.from_html.js")" type="text/javascript"></script>

<h3>Modified data will be reflected after verification</h3>
@if (Model.PanStatus == "N" || Model.PanStatus == "ID")
{
    <div class="section_pink" style="text-align: center">
        <h4 style="color:red">You have Invalid / Incorrect / Unclear PAN</h4>
    </div>

}
<br />

@*@using (Html.BeginForm("EditAdjunctFaculty", "OnlineRegistration", FormMethod.Post, new { @fid = ViewBag.fid, @Command = "Update", @enctype = "multipart/form-data" }))
    {*@
    <form method="post" enctype="multipart/form-data" action="@Url.Action("EditAdjunctFaculty", "OnlineRegistration", new {Command = "Update", fid = ViewBag.fid})">
    @Html.ValidationSummary(true)

    <table class="faculty_table" style="text-align: center; width: 100%; display: none">
        <tr>
            <td class="col1" style="font-weight: bold; width: 15%;">
                <span>Faculty Type</span>
            </td>
            <td class="col2" style="width: 85%;">
                <label title="Presently WORKING in any of the Technical Colleges affiliated to JNTUH">@Html.RadioButtonFor(model => model.Type, "ExistFaculty", new {@name = "fType", @class = "ifNeworExist ifExist"}) Existing Faculty</label>
                - (Working in any Affiliated College of JNTUH)
                <br/>
                <label title="Presently NOT WORKING in any of the Technical Colleges affiliated to JNTUH but wish to work in future">@Html.RadioButtonFor(model => model.Type, "NewFaculty", new {@name = "fType", @class = "ifNeworExist ifNew"}) New Faculty </label>
                - (Not working with any College but wish to apply for in future)
                lty
                @Html.HiddenFor(model => model.Type)

            </td>
        </tr>
    </table>
    <div id="divNewFaculty">
    <table class="faculty_table">
        @if (Model.id > 0)
        {
            <tr>
                <td class="col1" colspan="2">
                    <b>Registration Information</b>
                </td>
            </tr>
            <tr>
                <td class="col1" style="font-weight: bold;">
                    @Html.LabelFor(model => model.RegistrationNumber)
                </td>
                <td class="col2">
                    <span style="text-transform: uppercase; font-weight: bold;">@Html.DisplayFor(model => model.RegistrationNumber)</span>
                </td>
            </tr>
            @Html.HiddenFor(model => model.UniqueID)
            @Html.HiddenFor(model => model.isApproved)
            @Html.HiddenFor(model => model.RegistrationNumber)
            @*@Html.HiddenFor(model => model.CollegeId)*@
            @Html.HiddenFor(model=>model.id)
            <tr style="display: none;">
                <td class="col1" style="font-weight: bold;">
                    @Html.LabelFor(model => model.UniqueID)
                </td>
                <td class="col2">

                    @if (@Model.isView == true)
                    {
                        <span style="text-transform: uppercase; font-weight: bold;">@Html.DisplayFor(model => model.UniqueID)</span>
                    }
                    else if (@Model.isView == false)
                    {
                        <span style="color: red;">Rejected</span>
                    }
                    else
                    {
                        <span>Permanent Faculty Registration ID will be provided after verification</span>
                    }
                </td>
            </tr>
            <tr style="display: none;">
                <td class="col1" style="">
                    Application @Html.LabelFor(model => model.isApproved)
                </td>
                <td class="col2" style="">
                    @if (Roles.IsUserInRole("Admin"))
                    {

                    }
                    else
                    {
                        if (@Model.isApproved == true)
                        {
                            <span>Approved</span>
                        }
                        else if (@Model.isApproved == false)
                        {
                            <span>Rejected</span>
                        }
                        else
                        {
                            <span>Application accepted and processing</span>
                        }
                    }
                </td>
            </tr>
        }
        else
        {
            <tr>
                <td class="col1" colspan="2">
                    <b>Login Information</b>
                </td>
            </tr>
        }

        @if (Model.Type == "Adjunct")
        {
            <tr>
                <td class="col1" style="width: 10% !important; vertical-align: top;">
                    <span>Working Type</span>
                </td>
                <td class="col2" style="width: 90% !important; vertical-align: top;">
                    @Html.DisplayFor(model => model.WorkingType)
                    @Html.HiddenFor(model=>model.WorkingType)
                </td>
            </tr>
        }
        <tr>
            <td class="col1" style="width: 10% !important; vertical-align: top;">
                @Html.LabelFor(model => model.Email)
                <span style="color: blue;">(Login ID)</span> <span class="mandatory">*</span>
            </td>
            <td class="col2 focus" style="width: 90% !important; vertical-align: top;">
                @if (@Model.isView != null)
                {
                    @Html.DisplayFor(model => model.Email)
                    @Html.HiddenFor(model => model.Email)
                }
                else
                {
                     @Html.DisplayFor(model => model.Email)
                    @Html.HiddenFor(model => model.Email)
                    @*@Html.TextBoxFor(model => model.Email, new {style = "width: 22%;", @placeholder = "Enter your Email ID", @maxlength = "50"})
                    @Html.ValidationMessageFor(model => model.Email)*@
                }
            </td>
        </tr>

    </table>
    <table class="faculty_table">
    <tr>
        <td class="col1" colspan="4">
            <b>Faculty Information</b>
        </td>
    </tr>
    <tr>
        <td class="col1">
            @Html.LabelFor(model => model.EditPANNumber) <span class="mandatory">*</span>
        </td>
        <td class="col2">
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.EditPANNumber)
                @Html.HiddenFor(model => model.EditPANNumber)
            }
            else
            {
                 if ((@Model.PanStatus == "N" || @Model.PanStatus == "ID" || @Model.PanStatus == string.Empty || @Model.PanStatus == null) && @ViewBag.FirsttimeEditoption==0)
                {
                    @Html.TextBoxFor(model => model.EditPANNumber, new { @id = "PANNumber", @placeholder = "Enter PAN Number", @maxlength = "10", @class = "clsPanNumber" })
                    @Html.ValidationMessageFor(model => model.EditPANNumber)
                }
                else
                {
                    @Html.DisplayFor(model => model.EditPANNumber, new { @id = "PANNumber", @placeholder = "Enter PAN Number", @maxlength = "10", @class = "clsPanNumber" })
                    @Html.HiddenFor(model => model.EditPANNumber)
                }
                 @*@Html.TextBoxFor(model => model.EditPANNumber, new {@id = "PANNumber", @placeholder = "Enter PAN Number", @maxlength = "10", @class = "clsPanNumber"})
                @Html.ValidationMessageFor(model => model.EditPANNumber)*@
            }
        </td>
        <td class="col3">
            @*@Html.LabelFor(model => model.FirstName)*@ <span>First Name</span>
        </td>
        <td class="col4">


            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.FirstName)
                @Html.HiddenFor(model => model.FirstName)            
            }
            else
            {
                @*@Html.TextBoxFor(model => model.FirstName, new {@placeholder = "Enter your First Name", @maxlengeh = "25", @onkeypress = "return checkSpcialChar(event)"})
                @Html.ValidationMessageFor(model => model.FirstName)*@
                @Html.LabelFor(model => model.FirstName,Model.FirstName, new { id = "FirstName" })
                  @Html.HiddenFor(model => model.FirstName,new{id="FirstName"})
            }
        </td>
    </tr>
    <tr>
        <td class="col1">
            @*@Html.LabelFor(model => model.MiddleName)*@<span>Middle Name</span>
        </td>
        <td class="col2">
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.MiddleName)
                @Html.HiddenFor(model => model.MiddleName)
            }
            else
            {
                if (string.IsNullOrEmpty(Model.MiddleName))
                {
                     @Html.LabelFor(model => model.MiddleName," ", new { id = "MiddleName" })
                     @Html.HiddenFor(model => model.MiddleName, new { id = "MiddleName" })
                }
                else
                {
                     @Html.LabelFor(model => model.MiddleName, Model.MiddleName, new { id = "MiddleName" })
                     @Html.HiddenFor(model => model.MiddleName, new { id = "MiddleName" })
                }
                @*@Html.TextBoxFor(model => model.MiddleName, new {@placeholder = "Enter your Middle Name", @maxlengeh = "25", @onkeypress = "return checkSpcialChar(event)"})
                @Html.ValidationMessageFor(model => model.MiddleName)*@
            }



        </td>
        <td class="col3">
            @*@Html.LabelFor(model => model.LastName) <span class="mandatory">*</span>*@<span>Last Name</span>
        </td>
        <td class="col4">
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.LastName)
                @Html.HiddenFor(model => model.LastName)
                
            }
            else
            {
                @*@Html.TextBoxFor(model => model.LastName, new {@placeholder = "Enter your Last Name", @maxlengeh = "25", @onkeypress = "return checkSpcialChar(event)"})
                @Html.ValidationMessageFor(model => model.LastName)*@
                  @Html.LabelFor(model => model.LastName,Model.LastName,new { id = "LastName" })
                  @Html.HiddenFor(model => model.LastName, new { id = "LastName" })
            }

        </td>
    </tr>
    <tr>
        <td class="col1">
            <span>Father's Name / Husband's Name</span> <span class="mandatory">*</span>
        </td>
        <td class="col2">
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.FatherOrhusbandName)
                @Html.HiddenFor(model => model.FatherOrhusbandName)
            }
            else
            {
                 @Html.DisplayFor(model => model.FatherOrhusbandName)
                @Html.HiddenFor(model => model.FatherOrhusbandName)
                @*@Html.TextBoxFor(model => model.FatherOrhusbandName, new {@placeholder = "Enter your Father's / Husband's Name", @maxlengeh = "50", @onkeypress = "return checkSpcialChar(event)"})
                @Html.ValidationMessageFor(model => model.FatherOrhusbandName)*@
            }
        </td>
        <td class="col3">
            @Html.LabelFor(model => model.MotherName) <span class="mandatory">*</span>
        </td>
        <td class="col4">
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.MotherName)
                @Html.HiddenFor(model => model.MotherName)
            }
            else
            {
                @*@Html.TextBoxFor(model => model.MotherName, new {@placeholder = "Enter your Mother's Name", @maxlengeh = "25", @onkeypress = "return checkSpcialChar(event)"})
                @Html.ValidationMessageFor(model => model.MotherName)*@
                @Html.DisplayFor(model => model.MotherName)
                @Html.HiddenFor(model => model.MotherName)
            }
        </td>
    </tr>
    <tr>
        <td class="col1">
            @Html.LabelFor(model => model.GenderId) <span class="mandatory">*</span>
        </td>
        <td class="col2">
            @if (@Model.isView != null)
            {
                if (@Model.GenderId == 1)
                {
                    <span>Male</span>
                }
                else if (@Model.GenderId == 0)
                {
                    <span>Female</span>
                }
                @Html.HiddenFor(model => model.GenderId)

            }
            else
            {
                 if (@Model.GenderId == 1)
                {
                    <span>Male</span>
                }
                else if (@Model.GenderId == 0)
                {
                    <span>Female</span>
                }
                @Html.HiddenFor(model => model.GenderId)
                @*<label>@Html.RadioButtonFor(model => model.GenderId, 1) Male </label>
                <label>@Html.RadioButtonFor(model => model.GenderId, 0) Female </label>
                @Html.ValidationMessageFor(model => model.GenderId)*@
            }
        </td>
        <td class="col3">
            @Html.LabelFor(model => model.DateOfBirth) <span class="mandatory">*</span><br/>
            <span style="color: blue;">(As Per SSC Certificate)</span>
        </td>
        <td class="col4">
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.facultyDateOfBirth)
                @Html.HiddenFor(model => model.facultyDateOfBirth)

            }
            else
            {
                @*@Html.TextBoxFor(model => model.facultyDateOfBirth, new {@class = "calendar", style = "", @onblur = "IsValidDate(this,event.keyCode,0,0,0)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Select Date of Birth"})
                @Html.ValidationMessageFor(model => model.facultyDateOfBirth)*@
                 @Html.DisplayFor(model => model.facultyDateOfBirth)
                @Html.HiddenFor(model => model.facultyDateOfBirth)
            }
        </td>
    </tr>

    <tr>
        <td class="col1" style="vertical-align: top;">
            @Html.LabelFor(model => model.AdjunctEditMobile) <span class="mandatory">*</span>
        </td>
        <td class="col2" style="vertical-align: top;">
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.AdjunctEditMobile)
                @Html.HiddenFor(model => model.AdjunctEditMobile)

            }
            else
            {
                @Html.TextBoxFor(model => model.AdjunctEditMobile, new { @placeholder = "Enter 10 digit Mobile Number", @maxlength = "10" })
                @Html.ValidationMessageFor(model => model.AdjunctEditMobile)
                @*@Html.DisplayFor(model => model.Mobile)
                @Html.HiddenFor(model => model.Mobile)*@
            }

        </td>
        <td class="col3" style="vertical-align: top;">
            <span>Photo</span> <span class="mandatory">*</span>
            <br/>
            <span style="color: blue;">
                        (Latest self colour photo with Minimum - 150x150 pixels, Maximum - 200x230 pixels
                        <br />
                        and less than 50 KB size)
                    </span>
        </td>
        <td class="col4 files" style="vertical-align: top;">
            @if (@Model.isView != null && @Model.facultyPhoto != null)
            {
                @Html.HiddenFor(model => model.Photo, new {@Value = Model.Photo})

            }
            else
            {
                 @*@Html.HiddenFor(model => model.Photo, new {@Value = Model.Photo})*@
                @Html.TextBoxFor(model => model.Photo, new { type = "file", @class = "file1 required" })
                @*@Html.DisplayFor(model => model.Photo, new {type = "file", @class = "file required"})<br/>*@
            }

            @if (@Model.facultyPhoto != null)
            {
                <a href="../Content/Upload/Faculty/Photos/@Model.facultyPhoto.Replace("~", "")" target="_blank">
                    <img src="../Content/Upload/Faculty/Photos/@Model.facultyPhoto.Replace("~", "")" style="height: 60px;"/>
                </a>

            }
            @Html.HiddenFor(model => model.facultyPhoto)

            <div id="PhotoPreview"></div>
        </td>
    </tr>
    <tr>

        <td class="col1">
            @Html.LabelFor(model => model.AdjunctEditAadhaarNumber)<span class="mandatory">*</span>
        </td>
        <td class="col2">
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.AdjunctEditAadhaarNumber, new { @id = "AadhaarNumber", @placeholder = "Enter Aadhaar Number", @maxlength = "12" })
                @Html.HiddenFor(model => model.AdjunctEditAadhaarNumber)
                @*@Html.ValidationMessageFor(model => model.AadhaarNumber)*@

            }
            else
            {
                 @Html.TextBoxFor(model => model.AdjunctEditAadhaarNumber, new { @id = "AadhaarNumber", @placeholder = "Enter Aadhaar Number", @maxlength = "12", @value = @Model.AadhaarNumber })
                @Html.ValidationMessageFor(model => model.AdjunctEditAadhaarNumber)
                @*@Html.HiddenFor(model => model.AadhaarNumber)*@
            }
            @Html.HiddenFor(model => model.AdjunctEditAadhaarNumber)
        </td>
        <td class="col3" style="vertical-align: top;">

            <span>Aadhaar Card Document </span><span class="mandatory">*</span>
            <br/>
            <span style="color: blue;">
                        (Minimum 200x200 pixels
                        <br />
                        and less than 100 KB size)
                    </span>
        </td>
        <td class="col4 aadhaarfiles" style="vertical-align: top;">

            @if (@Model.isView != null && !String.IsNullOrEmpty(@Model.facultyAadhaarCardDocument))
            {

                @Html.HiddenFor(model => model.AadhaarCardDocument)
            }
            else
            {
                @Html.TextBoxFor(model => model.AadhaarCardDocument, new {type = "file", @class = "aadhaarfile"})
                  @Html.ValidationMessageFor(model => model.AadhaarCardDocument)
                 @*@Html.HiddenFor(model => model.AadhaarCardDocument)*@

            }

            @if (@Model.facultyAadhaarCardDocument != null)
            {
                <a href="../Content/Upload/Faculty/AADHAARCARDS/@Model.facultyAadhaarCardDocument.Replace("~", "")" target="_blank">
                    <img src="../Content/Upload/Faculty/AADHAARCARDS/@Model.facultyAadhaarCardDocument.Replace("~", "")" style="height: 60px;"/>
                </a>
            }
            @Html.HiddenFor(model => model.facultyAadhaarCardDocument)
        </td>
    </tr>
    <tr>
        <td class="col1" style="vertical-align: top;">
            <span>PAN Card Document</span> <span class="mandatory">*</span>
            <br/>
            <span style="color: blue;">
                        (Minimum 300x250 pixels
                        <br />
                        and less than 100 KB size)
                    </span>
        </td>
        <td class="col2 panfiles" style="vertical-align: top;">

            @if (@Model.isView != null && !String.IsNullOrEmpty(@Model.facultyPANCardDocument))
            {
                @Html.HiddenFor(model => model.PANCardDocument)
                @*<input type="file" id="PANCardDocument" name="PANCardDocument" class="panfile1" value=@Model.PANCardDocument/>*@
            }
            else
            {
                        @Html.TextBoxFor(model => model.PANCardDocument, new { type = "file", @class = "panfile1", required = true })
                @*<input type="file" id="PANCardDocument" name="PANCardDocument"/>*@
            }

            @if (@Model.facultyPANCardDocument != null)
            {
                <a href="../Content/Upload/Faculty/PANCARDS/@Model.facultyPANCardDocument.Replace("~", "")" target="_blank">
                    <img src="../Content/Upload/Faculty/PANCARDS/@Model.facultyPANCardDocument.Replace("~", "")" style="height: 60px;"/>
                </a>

            }
            @Html.HiddenFor(model => model.facultyPANCardDocument)
        </td>


        <td class="col3">
            @Html.LabelFor(model => model.IncomeTaxFileview) <span class="mandatory">*</span>
            <br />
            <span style="color:blue">(PDF should be less than 1MB size)</span>
        </td>
        <td class="col4 IncomeTaxFileUploads">
            @if (@Model.isView != null)
            {
                 @Html.HiddenFor(model => model.IncomeTaxFileview)
            }
            else
            {
                @*@Html.DisplayFor(model => model.IncomeTaxFileview)
                @Html.HiddenFor(model => model.IncomeTaxFileview)*@
                 @Html.TextBoxFor(model => model.IncomeTaxFileUpload, new { @type = "file", @class = "IncomeTaxFileUpload" })
                <br/>
                  <span style="color: red;"></span>
            }
            @if (!string.IsNullOrEmpty(@Model.IncomeTaxFileview))
            {
                <br />
                <a href="../Content/Upload/Faculty/INCOMETAX/@Model.IncomeTaxFileview.Replace("~", "")" target="_blank">
                    @*<img src="../Content/Upload/Faculty/INCOMETAX/@Model.IncomeTaxFileview.Replace("~", "")" style="height: 60px;" />*@
                    <img src="@Url.Content("../../Content/images/pdf.png")" alt="InComeTax" height="18">
                </a>
            }

            @Html.HiddenFor(model => model.IncomeTaxFileview)

        </td>

    </tr>
    </table>
    <br/>
        <div id="divOrganization" style="width: 100%">
            <table class="faculty_table" style="width: 100%">
                <tr>
                    <td class="col1">
                        <div class="working">
                            @Html.Label("Parent Organization Name")
                        </div>
                    </td>
                    <td class="col2">
                        @if (@Model.isView != null)
                        {
                            @Html.DisplayFor(model => model.OrganizationName)
                            @Html.HiddenFor(model => model.OrganizationName)
                        }
                        else
                        {
                            @*@Html.TextBoxFor(model => model.OrganizationName, new { @id = "OrganizationName", @style = "width: 98%", @placeholder = "Parent Organization Name" })*@
                             @Html.DisplayFor(model => model.OrganizationName)
                            @Html.HiddenFor(model => model.OrganizationName)
                        }
                    </td>
                    <td class="col1">
                        @Html.LabelFor(model => model.AICTEFacultyId)
                    </td>
                    <td class="col2">
                        @if (@Model.isView != null)
                        {
                            @Html.DisplayFor(model => model.AICTEFacultyId)
                            @Html.HiddenFor(model => model.AICTEFacultyId)

                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.AICTEFacultyId,new { @placeholder = "Enter AICTE faculty Id" })
                            @Html.ValidationMessageFor(model => model.AICTEFacultyId)

                        }
                    </td>
                </tr>
                <tr>
                    <td class="col1">
                        @Html.LabelFor(model => model.AdjunctDepartment) <span class="mandatory">*</span>
                    </td>
                    <td class="col2">
                        @if (@Model.isView != null)
                        {
                            @Html.DisplayFor(model => model.AdjunctDepartment)
                            @Html.HiddenFor(model => model.AdjunctDepartment)
                        }
                        else
                        {
                            @*@Html.TextBoxFor(model => model.AdjunctDepartment, new { style = "width: 247px;", @placeholder = "Parent Organization Department" })
                            @Html.ValidationMessageFor(model => model.AdjunctDepartment)*@
                              @Html.DisplayFor(model => model.AdjunctDepartment)
                            @Html.HiddenFor(model => model.AdjunctDepartment)
                        }

                    </td>
                    <td class="col1">
                        @Html.LabelFor(model => model.AdjunctDesignation) <span class="mandatory">*</span>
                    </td>
                    <td class="col2">
                        @if (@Model.isView != null)
                        {
                            @Html.DisplayFor(model => model.AdjunctDesignation)
                            @Html.HiddenFor(model => model.AdjunctDesignation)
                        }
                        else
                        {
                            @*@Html.TextBoxFor(model => model.AdjunctDesignation, new { style = "width: 247px;", @maxlengeh = "50", @class = "required", @onkeypress = "return checkSpcialChar(event)", @placeholder = "Designation in the Parent Organization" })
                            @Html.ValidationMessageFor(model => model.AdjunctDesignation)*@
                              @Html.DisplayFor(model => model.AdjunctDesignation)
                            @Html.HiddenFor(model => model.AdjunctDesignation)
                        }

                    </td>
                </tr>
            </table>
        </div>

    <div id="divExistFaculty" style="width: 100%">
    <table class="faculty_table" style="width: 100%;">
        <tr>
            <td class="col1" style="vertical-align: top;">
                @Html.LabelFor(model => model.WorkingStatus)
                <span class="mandatory">*</span>
            </td>

            <td class="col2" style="vertical-align: top;">

                @if (@Model.isView != null)
                {
                    if (@Model.WorkingStatus == true)
                    {
                        <span>Yes</span>
                    }
                    else
                    {
                        <span>No</span>
                    }
                    @Html.HiddenFor(model => model.WorkingStatus)
                     @Html.HiddenFor(model => model.NOCFile)

                }
                else
                {    <label>@Html.RadioButtonFor(model => model.WorkingStatus, true, new {  @class = "required WorkingStatus ifWorking", @id = "radioworkingstatusyes" }) Yes </label>
                     <label>@Html.RadioButtonFor(model => model.WorkingStatus, false, new { @class = " required WorkingStatus ifNotWorking", @id = "radioworkingstatusno" }) No</label>
                        
                        @Html.ValidationMessageFor(model => model.WorkingStatus)
                    <span>&nbsp;&nbsp;</span>
            <div id="divNoc">
                <input type="file" name="NOCUploadFile" id="NOCUploadFile" />
            </div>

                }
                @if (!string.IsNullOrEmpty(@Model.NOCFile))
                {
                    <a href="../Content/Upload/Faculty/NOCPDOCUMENTS/@Model.NOCFile" target="_blank">
                        <img src="../Content/Upload/Faculty/NOCPDOCUMENTS/@Model.NOCFile" style="height: 60px;" />
                    </a>
                }
                @Html.HiddenFor(model => model.NOCFile)
            </td>
            <td class="col3">@Html.LabelFor(model => model.TotalExperience) (years)<span class="mandatory">*</span></td>
            <td class="col4">
                @if (@Model.isView != null)
                {
                    @Html.DisplayFor(model => model.TotalExperience.Value)
                    @Html.HiddenFor(model => model.TotalExperience)
                }
                else
                {
                 @*@Html.DisplayFor(model => model.TotalExperience.Value)
                    @Html.HiddenFor(model => model.TotalExperience)*@
                     @Html.DropDownListFor(model => model.TotalExperience,
                        new SelectList(ViewBag.prevExperience as System.Collections.IEnumerable, "value", "text"),
                        "-- Select --", new { id = "TotalExperience", style = "" })
                                @Html.ValidationMessageFor(model => model.TotalExperience)
                }

            </td>
        </tr>
    </table>
    <br/>
    <div id="divWorking">
    <table style="width: 100%">

    <tr>

        <td class="col1" style="vertical-align: top;">
            <div class="working">
                @Html.Label("Name of the Institution presently working in") <span class="mandatory">*</span>
            </div>
        </td>
        <td class="col2" style="vertical-align: top;">
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.CollegeName)
                @Html.HiddenFor(model => model.CollegeId, new {@Value = Model.CollegeId})

            }
            else
            {
                @*@Html.DisplayFor(model => model.CollegeName)
                @Html.HiddenFor(model => model.CollegeId, new {@Value = Model.CollegeId})*@
                
                  @Html.DropDownListFor(model => model.CollegeId, new SelectList(ViewBag.Institutions as System.Collections.IEnumerable, "CollegeId", "CollegeName"),
                                         "--Select--", new { id = "CollegeName", style = "width:450px", @class = "required" })
            }
        </td>
        <td class="col3">
            @Html.LabelFor(model => model.DateOfAppointment) <span>in the present Institution</span> <span class="mandatory">*</span>
        </td>
        <td class="col4">
            @if (@Model.isView != null)
            {

                @Html.DisplayFor(model => model.facultyDateOfAppointment, new { @class = "calendar required", style = "width: 247px;", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Enter Date of Appointment" })
                @Html.ValidationMessageFor(model => model.facultyDateOfAppointment)
                @Html.HiddenFor(model => model.facultyDateOfAppointment)
            }
            else
            {
                @Html.TextBoxFor(model => model.facultyDateOfAppointment, new { @class = "calendar required", style = "width: 247px;", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Enter Date of Appointment" })
                @Html.ValidationMessageFor(model => model.facultyDateOfAppointment)
                @Html.HiddenFor(model => model.facultyDateOfAppointment)
            }
        </td>
    </tr>
    <tr>
        <td class="col1">
            @Html.LabelFor(model => model.DepartmentId) <span class="mandatory">*</span>
        </td>
        <td class="col2">
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.department)
                 @Html.HiddenFor(model => model.department, new {@Value = Model.DepartmentId})
                 if (Model.department == "Others")
                {
                    <br />
                    @Html.DisplayFor(model => model.OtherDepartment)
                    @Html.HiddenFor(model => model.OtherDepartment)

                }
               
            }
            else
            {
               @*@Html.DisplayFor(model => model.department)
                @Html.HiddenFor(model => model.department, new {@Value = Model.DepartmentId})*@  
                 @Html.DropDownListFor(model => model.DepartmentId,
                        new SelectList(ViewBag.department as System.Collections.IEnumerable, "id", "departmentName"),
                             "-- Select --", new { id = "department", style = "", @class = "required"})
                                    @Html.ValidationMessageFor(model => model.DepartmentId)

                                    if (Model.department == "Others")
                                    { <br />
                                    @Html.TextBoxFor(model => model.OtherDepartment, new { @placeholder = "Specify your department name" })
                                    }
                                    else if (Model.department == null)
                                    {
                                        <div id="divDept" style="display: none">
                                            <br />
                                            @Html.TextBoxFor(model => model.OtherDepartment, new { @id = "OtherDepartment", @placeholder = "Specify your department name" })
                                        </div>
                                    }
            }

            @Html.HiddenFor(model => model.DepartmentId)
        </td>
        <td class="col3">
            @Html.LabelFor(model => model.DesignationId) <span class="mandatory">*</span>
        </td>
        <td class="col4">
            @Html.Label("Adjunct")

            @*@if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.designation)
                @Html.HiddenFor(model => model.designation, new {@Value = Model.DesignationId})

            }
            else
            {
                @Html.DisplayFor(model => model.designation)
                @Html.HiddenFor(model => model.designation, new {@Value = Model.DesignationId})
            }
            @Html.HiddenFor(model => model.DesignationId)*@

        </td>
    </tr>
    <tr style="display: none">
        <td class="col1">
            @Html.LabelFor(model => model.DateOfAppointment) <span>in the present Institution</span> <span class="mandatory">*</span>
        </td>
        <td class="col2">
            @if (@Model.isView != null)
            {

                @Html.DisplayFor(model => model.facultyDateOfAppointment, new {@class = "calendar required", style = "width: 247px;", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Enter Date of Appointment"})
                @Html.ValidationMessageFor(model => model.facultyDateOfAppointment)
                @Html.HiddenFor(model => model.facultyDateOfAppointment)
            }
            else
            {
                 @Html.DisplayFor(model => model.facultyDateOfAppointment, new {@class = "calendar required", style = "width: 247px;", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Enter Date of Appointment"})
                @Html.ValidationMessageFor(model => model.facultyDateOfAppointment)
                @Html.HiddenFor(model => model.facultyDateOfAppointment)
            }

        </td>
        @*<td class="col3">Experience in the present Institution (years) <span class="mandatory">*</span></td>
        <td class="col4">
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.TotalExperiencePresentCollege)
                @Html.HiddenFor(model => model.TotalExperiencePresentCollege)
            }
            else
            {
                @Html.DisplayFor(model => model.TotalExperiencePresentCollege)
                @Html.HiddenFor(model => model.TotalExperiencePresentCollege)
            }

        </td>*@
    </tr>
    <tr>
        <td class="col3">
            <div class="ratifed">

                College Selection Committee Proceedings Number
                <br/>
                <br/>
                @Html.Label("Document")
                <span style="color: blue;">(Minimum 600x800 pixels and less than 100 KB size)</span>
            </div>
        </td>
        <td class="col4">
            <div class="ratifed">

                @if (@Model.isView != null && @Model.WorkingStatus == true && @Model.ProceedingsNo != null)
                {

                    @Html.DisplayFor(model => model.ProceedingsNo, new {@placeholder = "Enter Proceedings Number", @class = "required", style = "width: 250px;"})
                    @Html.ValidationMessageFor(model => model.ProceedingsNo)
                    @Html.HiddenFor(model => model.ProceedingsNo)
                }
                else
                {
                    @Html.DisplayFor(model => model.ProceedingsNo, new {@placeholder = "Enter Proceedings Number", @class = "required", style = "width: 250px;"})
                    @Html.ValidationMessageFor(model => model.ProceedingsNo)
                }

                @Html.HiddenFor(model => model.ProceedingsNo)
            </div>
            <br/>
            <br/>
            @if (@Model.isView != null)
            {
                @*@Html.HiddenFor(model => model.SelectionCommitteeProceedingsDocument)
                if (!String.IsNullOrEmpty(@Model.SelectionCommitteeProcedings))
                {
                   @Html.DisplayFor(model => model.SelectionCommitteeProceedingsDocument, new {type = "file", @class = "SelectionCommitteeProceedingsDocument", required = true})
                @*<input type="file" id="SelectionCommitteeProceedingsDocument" name="SelectionCommitteeProceedingsDocument" value=@Model.SelectionCommitteeProceedingsDocument />

                }*@
                 @Html.HiddenFor(model => model.SelectionCommitteeProcedings)
            }
            else
            {
                @Html.TextBoxFor(model => model.SelectionCommitteeProceedingsDocument, new {type = "file", @class = "SelectionCommitteeProceedingsDocument"})
            }
            <br/>
            <br/>

            @if (@Model.SelectionCommitteeProcedings != null)
            {
                <a href="../Content/Upload/Faculty/PROCEEDINGS/@Model.SelectionCommitteeProcedings.Replace("~", "")" target="_blank">
                    <img src="../Content/Upload/Faculty/PROCEEDINGS/@Model.SelectionCommitteeProcedings.Replace("~", "")" style="height: 60px;"/>
                </a>
            }
            @Html.HiddenFor(model => model.SelectionCommitteeProcedings)
        </td>

        <td class="col3">Honorarium</td>
        <td class="col4">

            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.GrossSalary)
                @Html.HiddenFor(model => model.GrossSalary)
            }
            else
            {
                @Html.DisplayFor(model => model.GrossSalary)
                @Html.HiddenFor(model => model.GrossSalary)
            }
        </td>
    </tr>
    <tr>
        <td class="col1">
            @if (@Model.isView != null)
            {
                 @Html.LabelFor(model => model.isFacultyRatifiedByJNTU) <span class="mandatory">*</span>
                <br/>
                <br/>
                 @Html.LabelFor(model => model.facultyDateOfRatification) <span class="mandatory">*</span>
            }
            else
            {
                @Html.LabelFor(model => model.isFacultyRatifiedByJNTU) <span class="mandatory">*</span>
            <br/>
            <br/>
            <div class="ratifed" id="divDOR">
                @Html.LabelFor(model => model.facultyDateOfRatification) <span class="mandatory">*</span>
            </div>
            }
            
        </td>
        <td class="col2" >
            @if (@Model.isView != null)
            {
                @*<label>@Html.RadioButtonFor(model => model.isFacultyRatifiedByJNTU, true, new {@id = "ifRatified", @class = "required FacultyRatifiedByJNTU"}) Yes </label>
                <label>@Html.RadioButtonFor(model => model.isFacultyRatifiedByJNTU, false, new {@id = "ifNotRatified", @class = "required FacultyRatifiedByJNTU"}) No</label>*@
                if (@Model.isFacultyRatifiedByJNTU == true)
                    {
                        <span>Yes</span>
                    }
                    else
                    {
                        <span>No</span>
                    }
                @Html.HiddenFor(model => model.isFacultyRatifiedByJNTU)
                <br/>
                <br/>
               
                    if (@Model.isView != null && @Model.isFacultyRatifiedByJNTU == true)
                    {
                        @*@Html.TextBoxFor(model => model.facultyDateOfRatification, new {Value = @Model.facultyDateOfRatification != null && @Model.facultyDateOfRatification.Equals("01/01/0001") ? string.Empty : @Model.facultyDateOfRatification, @class = "calendar", style = "width: 247px;", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Select Date of Ratification"})
                        @Html.ValidationMessageFor(model => model.facultyDateOfRatification)*@
                        @Html.HiddenFor(model => model.facultyDateOfRatification)
                        @Html.DisplayFor(model => model.facultyDateOfRatification)
                    }
               }
            else
            {
                <label>@Html.RadioButtonFor(model => model.isFacultyRatifiedByJNTU, true, new {@id = "ifRatified", @class = "required FacultyRatifiedByJNTU"}) Yes </label>
                <label>@Html.RadioButtonFor(model => model.isFacultyRatifiedByJNTU, false, new {@id = "ifNotRatified", @class = "required FacultyRatifiedByJNTU"}) No</label>
                @Html.ValidationMessageFor(model => model.isFacultyRatifiedByJNTU)
                <br/>
                <br/>

                <div id="divRatified" style="display: block;">
                    
                         @Html.TextBoxFor(model => model.facultyDateOfRatification, new {Value = @Model.facultyDateOfRatification != null && @Model.facultyDateOfRatification.Equals("01/01/0001") ? string.Empty : @Model.facultyDateOfRatification, @class = "calendar", style = "width: 247px;", @onblur = "IsValidDate(this,event.keyCode,0,0,1)", @onkeydown = "return IsValidFormat(this,event.keyCode)", @placeholder = "Select Date of Ratification"})
                 
                   
                </div>
            }

        </td>
        <td class="col3">Experience in the present Institution (years) <span class="mandatory">*</span></td>
        <td class="col4">
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.TotalExperiencePresentCollege)
                @Html.HiddenFor(model => model.TotalExperiencePresentCollege)
            }
            else
            {
                   @Html.DropDownListFor(model => model.TotalExperiencePresentCollege,
                                            new SelectList(ViewBag.prevExperience as System.Collections.IEnumerable, "value", "text"),
                                            "-- Select --", new {id = "TotalExperiencePresentCollege", @class = "required", style = ""})
                                        @Html.ValidationMessageFor(model => model.TotalExperiencePresentCollege)
            }

        </td>
    </tr>

    <tr style="display:none">
        <td class="col1">
            <div class="ratifed">
                @Html.LabelFor(model => model.AICTEFacultyId)
            </div>
        </td>
        <td class="col2">
            <div class="ratifed">
                @if (@Model.isView != null && @Model.WorkingStatus == true && !string.IsNullOrEmpty(@Model.AICTEFacultyId))
                {
                    @Html.DisplayFor(model => model.AICTEFacultyId)
                    @Html.HiddenFor(model => model.AICTEFacultyId)

                }
                else
                {
                    @Html.DisplayFor(model => model.AICTEFacultyId)
                    @Html.HiddenFor(model => model.AICTEFacultyId)

                }
            </div>
        </td>
        <td class="col3">Gross Salary Last Drawn</td>
        <td class="col4">

            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.GrossSalary)
                @Html.HiddenFor(model => model.GrossSalary)
            }
            else
            {
                 @Html.DisplayFor(model => model.GrossSalary)
                @Html.HiddenFor(model => model.GrossSalary)
            }
        </td>
    </tr>
    </table>
    </div>
    </div>
       
    <br/>
    <table class="faculty_table education" id="tblQualification" style="border: solid 1px #ccc;">
    <thead>
    <tr>
        <td class="row" colspan="9">
            <b>Educational Qualifications</b>
        </td>
    </tr>
    <tr>
        <td class="row" style="text-align: center; width: 100px;"></td>
        <td class="row" style="text-align: center; width: 125px;">Course Studied</td>
        <td class="row" style="text-align: center; width: 125px;">Branch / Specialization</td>
        <td class="row" style="text-align: center; width: 100px;">Year of Passing (YYYY)</td>
        <td class="row" style="text-align: center; width: 80px;">
            % of
            <br/>
            Marks / CGPA
        </td>
        <td class="row" style="text-align: center; width: 80px;">Division</td>
        <td class="row" style="text-align: center;">Board/University</td>
        <td class="row" style="text-align: center; width: 180px;">Place</td>
        <td class="row" style="text-align: center; width: 200px !important;">
            Scanned Certificate<br/>
            <span style="color: blue;">
                                (Minimum 600x800 pixels
                                <br />
                                and less than 100 KB size)
                            </span>
        </td>
    </tr>
    </thead>
    <tbody>
    @for (int i = 0; i < Model.FacultyEducation.Count(); i++)
    {
        var style = "alt_row";
        var year = "yr_" + i;
        var divs = "division_" + i;

        <tr>

        <td class="@style" style="text-align: left; vertical-align: top;">
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.FacultyEducation[i].educationName)
            }
            else
            {
                @Html.DisplayFor(model => model.FacultyEducation[i].educationName)
            }
            @Html.HiddenFor(model => model.FacultyEducation[i].educationName)
            @Html.HiddenFor(model => model.FacultyEducation[i].educationId)
        </td>
        <td class="@style" style="text-align: center; vertical-align: top;">
            @*&& @Model.FacultyEducation[i].studiedEducation != null*@
            @if (@Model.isView != null)
            {

                if (i == 0)
                {
                    <span>-</span>
                    @Html.HiddenFor(model => model.FacultyEducation[i].studiedEducation, new {@Value = "SSC"})
                }
                else
                {
                    @Html.DisplayFor(model => model.FacultyEducation[i].studiedEducation)
                    @Html.HiddenFor(model => model.FacultyEducation[i].studiedEducation)
                }

            }
            else
            {
                if (i < 3)
                {
                    if (i == 0)
                    {
                        @Html.HiddenFor(model => model.FacultyEducation[i].studiedEducation, new {@Value = "SSC"})
                    }
                    else
                    {
                        if (!string.IsNullOrEmpty(Model.FacultyEducation[i].studiedEducation))
                        {
                            @Html.DisplayFor(model => model.FacultyEducation[i].studiedEducation)
                            @Html.HiddenFor(model => model.FacultyEducation[i].studiedEducation)
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.FacultyEducation[i].studiedEducation, new {style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)"})
                        }

                         @*@Html.DisplayFor(model => model.FacultyEducation[i].studiedEducation)
                       @Html.HiddenFor(model => model.FacultyEducation[i].studiedEducation)*@

                    }
                }
                else
                {
                     @*@Html.DisplayFor(model => model.FacultyEducation[i].studiedEducation)
                  @Html.HiddenFor(model => model.FacultyEducation[i].studiedEducation)*@
                    if (!string.IsNullOrEmpty(Model.FacultyEducation[i].studiedEducation))
                    {
                        @Html.DisplayFor(model => model.FacultyEducation[i].studiedEducation)
                        @Html.HiddenFor(model => model.FacultyEducation[i].studiedEducation)
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.FacultyEducation[i].studiedEducation, new {style = "width: 90%", @maxlength = "50", @placeholder = "Course Studied", @onkeypress = "return checkSpcialChar(event)"})
                    }


                }
            }
        </td>
        <td class="@style" style="text-align: center; vertical-align: top;">
            @*&& @Model.FacultyEducation[i].specialization != null*@
            @if (@Model.isView != null)
            {
                if (i == 0)
                {
                    <span>-</span>
                    @Html.HiddenFor(model => model.FacultyEducation[i].specialization, new {@Value = "SSC"})
                }
                else
                {
                    @Html.DisplayFor(model => model.FacultyEducation[i].specialization)
                    @Html.HiddenFor(model => model.FacultyEducation[i].specialization)
                }
            }
            else
            {
                if (i < 3)
                {
                    if (i == 0)
                    {
                        @Html.HiddenFor(model => model.FacultyEducation[i].specialization, new {@Value = "SSC"})
                    }
                    else
                    {
                        if (!string.IsNullOrEmpty(Model.FacultyEducation[i].specialization))
                        {
                            @Html.DisplayFor(model => model.FacultyEducation[i].specialization)
                            @Html.HiddenFor(model => model.FacultyEducation[i].specialization)
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.FacultyEducation[i].specialization, new {style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)"})
                        }





                 @*@Html.DisplayFor(model => model.FacultyEducation[i].specialization)
                    @Html.HiddenFor(model => model.FacultyEducation[i].specialization)*@
                    }
                }
                else
                {

                    if (!string.IsNullOrEmpty(Model.FacultyEducation[i].specialization))
                    {
                        @Html.DisplayFor(model => model.FacultyEducation[i].specialization)
                        @Html.HiddenFor(model => model.FacultyEducation[i].specialization)
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.FacultyEducation[i].specialization, new {style = "width: 90%", @maxlength = "50", @placeholder = "Branch/Specialization", @onkeypress = "return checkSpcialChar(event)"})
                    }



                 @*@Html.DisplayFor(model => model.FacultyEducation[i].specialization)
                    @Html.HiddenFor(model => model.FacultyEducation[i].specialization)*@
                }
            }
        </td>
        <td class="@style" style="text-align: center; vertical-align: top;">
            @*&& @Model.FacultyEducation[i].passedYear.Value != 0*@
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.FacultyEducation[i].passedYear)
                @Html.HiddenFor(model => model.FacultyEducation[i].passedYear)

            }
            else
            {
                if (i < 3)
                {


                    if (@Model.FacultyEducation[i].passedYear != null && @Model.FacultyEducation[i].passedYear.Value != 0)
                    {
                         @Html.DisplayFor(model => model.FacultyEducation[i].passedYear.Value)
                         @Html.HiddenFor(model => model.FacultyEducation[i].passedYear)
                    }
                    else
                    {
                       
                         @Html.DropDownListFor(model => model.FacultyEducation[i].passedYear,
                        new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                        "-- Select --", new {id = year, style = "width: 100%;", @class = "required"})
                    }
                    
                    
                
                }
                else
                {
                    
                    if (@Model.FacultyEducation[i].passedYear != null && @Model.FacultyEducation[i].passedYear.Value != 0)
                    {
                         @Html.DisplayFor(model => model.FacultyEducation[i].passedYear.Value)
                         @Html.HiddenFor(model => model.FacultyEducation[i].passedYear)
                    }
                    else
                    {
                       
                        @Html.DropDownListFor(model => model.FacultyEducation[i].passedYear,
                        new SelectList(ViewBag.years as System.Collections.IEnumerable, "value", "text"),
                        "-- Select --", new {id = year, style = "width: 100%;"})
                    }
                    
                    
                   
                 @*@Html.DisplayFor(model => model.FacultyEducation[i].passedYear.Value)
                @Html.HiddenFor(model => model.FacultyEducation[i].passedYear)*@
                }

            }
        </td>
        <td class="@style" style="text-align: center; vertical-align: top;">
            @*&& @Model.FacultyEducation[i].percentage != null*@
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.FacultyEducation[i].percentage)
                @Html.HiddenFor(model => model.FacultyEducation[i].percentage)

            }
            else
            {

                if (i < 3)
                {

                    if (@Model.FacultyEducation[i].percentage != null)
                    {
                        @Html.DisplayFor(model => model.FacultyEducation[i].percentage)
                        @Html.HiddenFor(model => model.FacultyEducation[i].percentage)
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.FacultyEducation[i].percentage, new {style = "width: 85%; text-align: center;", Value = Model.FacultyEducation[i].percentage == 0 ? string.Empty : Model.FacultyEducation[i].percentage.ToString(), @class = "txtPercentage required", @onkeypress = "return isNumberKey(event)", @placeholder = "% of Marks / CGPA"})
                    }




                }
                else
                {
                    if (@Model.FacultyEducation[i].percentage != null)
                    {
                        @Html.DisplayFor(model => model.FacultyEducation[i].percentage)
                        @Html.HiddenFor(model => model.FacultyEducation[i].percentage)
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.FacultyEducation[i].percentage, new {style = "width: 85%; text-align: center;", Value = Model.FacultyEducation[i].percentage == 0 ? string.Empty : Model.FacultyEducation[i].percentage.ToString(), @class = "txtPercentage", @onkeypress = "return isNumberKey(event)", @placeholder = "% of Marks / CGPA"})
                    }





                @*@Html.DisplayFor(model => model.FacultyEducation[i].percentage)
                @Html.HiddenFor(model => model.FacultyEducation[i].percentage)*@
                }
            }
        </td>
        <td class="@style" style="text-align: center; vertical-align: top;">
            @*&& @Model.FacultyEducation[i].division.Value != 0*@
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.FacultyEducation[i].division)
                @Html.HiddenFor(model => model.FacultyEducation[i].division)

            }
            else
            {

                if (i < 3)
                {

                    if (@Model.FacultyEducation[i].division != null && @Model.FacultyEducation[i].division.Value != 0)
                    {
                         @Html.DisplayFor(model => model.FacultyEducation[i].division.Value)
                         @Html.HiddenFor(model => model.FacultyEducation[i].division)
                    }
                    else
                    {
                       
                         @Html.DropDownListFor(model => model.FacultyEducation[i].division,
                        new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                        "-- Select --", new {id = divs, style = "width: 100%;", @class = "required"})
                    }
                    
                    
                    
                   
                
                }
                else
                {
                    if (@Model.FacultyEducation[i].division != null && @Model.FacultyEducation[i].division.Value != 0)
                    {
                         @Html.DisplayFor(model => model.FacultyEducation[i].division.Value)
                         @Html.HiddenFor(model => model.FacultyEducation[i].division)
                    }
                    else
                    {
                       
                          @Html.DropDownListFor(model => model.FacultyEducation[i].division,
                        new SelectList(ViewBag.division as System.Collections.IEnumerable, "value", "text"),
                        "-- Select --", new {id = divs, style = "width: 100%;"})
                    }
                    
                    
                    
                    
                  
                 @*@Html.DisplayFor(model => model.FacultyEducation[i].division.Value)
                @Html.HiddenFor(model => model.FacultyEducation[i].division)*@
                }
            }
        </td>
        <td class="@style" style="text-align: center; vertical-align: top;">
            @*&& @Model.FacultyEducation[i].university != null*@
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.FacultyEducation[i].university)
                @Html.HiddenFor(model => model.FacultyEducation[i].university)

            }
            else
            {

                if (i < 3)
                {

                    if (!string.IsNullOrEmpty(Model.FacultyEducation[i].university))
                    {
                        @Html.DisplayFor(model => model.FacultyEducation[i].university)
                        @Html.HiddenFor(model => model.FacultyEducation[i].university)
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.FacultyEducation[i].university, new {style = "width: 95%", @maxlength = "50", @class = "required", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)"})
                    }



                }
                else
                {

                    if (!string.IsNullOrEmpty(Model.FacultyEducation[i].university))
                    {
                        @Html.DisplayFor(model => model.FacultyEducation[i].university)
                        @Html.HiddenFor(model => model.FacultyEducation[i].university)
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.FacultyEducation[i].university, new {style = "width: 95%", @maxlength = "50", @placeholder = "University", @onkeypress = "return checkSpcialChar(event)"})
                    }


                 @*@Html.DisplayFor(model => model.FacultyEducation[i].university)
                @Html.HiddenFor(model => model.FacultyEducation[i].university)*@
                }
            }
        </td>
        <td class="@style" style="text-align: center; vertical-align: top;">
            @*&& @Model.FacultyEducation[i].place != null*@
            @if (@Model.isView != null)
            {
                @Html.DisplayFor(model => model.FacultyEducation[i].place)
                @Html.HiddenFor(model => model.FacultyEducation[i].place)

            }
            else
            {

                if (i < 3)
                {
                    if (!string.IsNullOrEmpty(Model.FacultyEducation[i].place))
                    {
                        @Html.DisplayFor(model => model.FacultyEducation[i].place)
                        @Html.HiddenFor(model => model.FacultyEducation[i].place)
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.FacultyEducation[i].place, new {style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)"})
                    }


                }
                else
                {
                    if (!string.IsNullOrEmpty(Model.FacultyEducation[i].place))
                    {
                        @Html.DisplayFor(model => model.FacultyEducation[i].place)
                        @Html.HiddenFor(model => model.FacultyEducation[i].place)
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.FacultyEducation[i].place, new {style = "width: 90%", @maxlength = "50", @placeholder = "Place", @onkeypress = "return checkSpcialChar(event)"})
                    }

                  @*@Html.DisplayFor(model => model.FacultyEducation[i].place)
                @Html.HiddenFor(model => model.FacultyEducation[i].place)*@
                }
            }
        </td>
        <td class="@style certificates" style="text-align: center; vertical-align: top;">
            @if (!string.IsNullOrEmpty(@Model.FacultyEducation[i].facultyCertificate))
            {
                <a href="../Content/Upload/Faculty/Certificates/@Model.FacultyEducation[i].facultyCertificate" target="_blank">
                    <img src="../Content/Upload/Faculty/Certificates/@Model.FacultyEducation[i].facultyCertificate" style="height: 60px;"/>
                </a>
            }

            @if (@Model.isView != null)
            {
                                    @*@Html.HiddenFor(model => model.FacultyEducation[i].certificate)&& @Model.FacultyEducation[i].facultyCertificate != null*@
                var cName = Model.FacultyEducation[i].educationId + "-certificate";
                if (i < 3)
                {
                    if (!String.IsNullOrEmpty(@Model.FacultyEducation[i].facultyCertificate))
                    {
                        @*@Html.TextBoxFor(model => model.FacultyEducation[i].certificate, new {type = "file", @style = "width: 180px;", @class = cName})*@
                      @Html.HiddenFor(model => model.FacultyEducation[i].facultyCertificate)
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.FacultyEducation[i].certificate, new {type = "file", @style = "width: 180px;", @class = cName + " required", required = true})
                    }
                }
                else
                {
                    @*@Html.TextBoxFor(model => model.FacultyEducation[i].certificate, new {type = "file", @style = "width: 180px;", @class = cName})*@
                 @Html.HiddenFor(model => model.FacultyEducation[i].facultyCertificate)
                }

            }
            else
            {
                var cName = Model.FacultyEducation[i].educationId + "-certificate";
                if (i < 3)
                {
                    if (!String.IsNullOrEmpty(@Model.FacultyEducation[i].facultyCertificate))
                    {
                        @Html.TextBoxFor(model => model.FacultyEducation[i].certificate, new {type = "file", @style = "width: 180px;", @class = cName})
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.FacultyEducation[i].certificate, new {type = "file", @style = "width: 180px;", @class = cName + " required"})
                    }
                }
                else
                {
                    @Html.TextBoxFor(model => model.FacultyEducation[i].certificate, new {type = "file", @style = "width: 180px;", @class = cName})
                 @*@Html.HiddenFor(model => model.FacultyEducation[i].facultyCertificate)*@
                }

            }
            @Html.HiddenFor(model => model.FacultyEducation[i].facultyCertificate)
        </td>
        </tr>

        <script type="text/javascript">
            $(document).ready(function() {
                if (@ViewBag.FacultyID > 0) {
                    if (@Model.FacultyEducation[i].passedYear > 0) {
                        $("#@year").val(@Model.FacultyEducation[i].passedYear);
                    }

                    if (@Model.FacultyEducation[i].division != null) {
                        if (@Model.FacultyEducation[i].division > 0) {
                            $("#@divs").val(@Model.FacultyEducation[i].division);
                        }
                    }
                }
            });
        </script>
    }
    </tbody>
    </table>
    <br/>
    <table class="faculty_table education" id="table_MemberShip" style="border: solid 1px #ccc;">
        <thead>
        <tr>
            <td class="row" colspan="9">
                <b> Membership in Professional Bodies </b>
            </td>
        </tr>
        <tr>

            <td class="row" style="text-align: center; width: 40%;">Membership in Professional Bodies </td>
            <td class="row" style="text-align: center; width: 35%">Membership No</td>


            <td class="row" style="text-align: center; width: 25% !important;">
                Membership Certificate <br/>
                <span style="color: blue;">
                            (Minimum 600x800 pixels
                            <br />
                            and less than 100 KB size,jpeg)
                        </span>
            </td>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td class="alt_row" style="text-align: left; vertical-align: top;">
                @if (@Model.isView != null)
                {
                    @Html.DisplayFor(model => model.Professional)
                    @Html.HiddenFor(model => model.Professional)
                }
                else
                {
                    @Html.TextBoxFor(model => model.Professional, new {style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Membership in Professional Bodies", @onkeypress = "return checkSpcialChar(event)"})
                     @*@Html.DisplayFor(model => model.Professional)
                    @Html.HiddenFor(model => model.Professional)*@
                }

            </td>
            <td class="alt_row" style="text-align: left; vertical-align: top;">
                @if (@Model.isView != null)
                {
                    @Html.DisplayFor(model => model.MembershipNo1)
                    @Html.HiddenFor(model => model.MembershipNo1)
                }
                else
                {
                    @Html.TextBoxFor(model => model.MembershipNo1, new {style = "width: 90%", @maxlength = "50", @class = "required", @placeholder = "Membership No", @onkeypress = "return checkSpcialChar(event)"})
                     @*@Html.DisplayFor(model => model.MembershipNo1)
                    @Html.HiddenFor(model => model.MembershipNo1)*@
                }

            </td>
            <td class="alt_row" style="text-align: center; vertical-align: top;">
                @if (@Model.isView != null)
                {
                    @Html.HiddenFor(model => model.MembershipFile1)

                }
                else
                {
                    <input type="file" name="MembershipFile1" id="MembershipFile1" class="MembershipFile1" />
                     @*@Html.HiddenFor(model => model.MembershipFile1)*@

                }

                @Html.HiddenFor(model => model.MembershipCertificate1)
                @if (!string.IsNullOrEmpty(@Model.MembershipCertificate1))
                {
                    <a href="../Content/Upload/Faculty/MEMBERSHIPDOCUMENTS/@Model.MembershipCertificate1" target="_blank">
                        <img src="../Content/Upload/Faculty/MEMBERSHIPDOCUMENTS/@Model.MembershipCertificate1" style="height: 60px;"/>
                    </a>
                }
            </td>
        </tr>
        <tr>
            <td class="alt_row" style="text-align: left; vertical-align: top;">
                @if (@Model.isView != null)
                {
                    @Html.DisplayFor(model => model.Professional2)
                    @Html.HiddenFor(model => model.Professional2)
                }
                else
                {
                    @Html.TextBoxFor(model => model.Professional2, new {style = "width: 90%", @maxlength = "50", @placeholder = "Membership in Professional Bodies", @onkeypress = "return checkSpcialChar(event)"})
                      @*@Html.DisplayFor(model => model.Professional2)
                    @Html.HiddenFor(model => model.Professional2)*@
                }

            </td>
            <td class="alt_row" style="text-align: left; vertical-align: top;">
                @if (@Model.isView != null)
                {
                    @Html.DisplayFor(model => model.MembershipNo2)
                    @Html.HiddenFor(model => model.MembershipNo2)
                }
                else
                {
                    @Html.TextBoxFor(model => model.MembershipNo2, new {style = "width: 90%", @maxlength = "50", @placeholder = "Membership No", @onkeypress = "return checkSpcialChar(event)"})
                     @*@Html.DisplayFor(model => model.MembershipNo2)
                    @Html.HiddenFor(model => model.MembershipNo2)*@
                }

            </td>
            <td class="alt_row" style="text-align: center; vertical-align: top;">
                @if (@Model.isView != null)
                {
                    @Html.HiddenFor(model => model.MembershipFile2)

                }
                else
                {
                    <input type="file" name="MembershipFile2" class="MembershipFile2" id="MembershipFile2" />
                    @*@Html.HiddenFor(model => model.MembershipFile2)*@
                }

                @Html.HiddenFor(model => model.MembershipCertificate2)
                @if (!string.IsNullOrEmpty(@Model.MembershipCertificate2))
                {
                    <a href="../Content/Upload/Faculty/MEMBERSHIPDOCUMENTS/@Model.MembershipCertificate2" target="_blank">
                        <img src="../Content/Upload/Faculty/MEMBERSHIPDOCUMENTS/@Model.MembershipCertificate2" style="height: 60px;"/>
                    </a>
                }

            </td>
        </tr>
        <tr>
            <td class="alt_row" style="text-align: left; vertical-align: top;">
                @if (@Model.isView != null)
                {
                    @Html.DisplayFor(model => model.Professiona3)
                    @Html.HiddenFor(model => model.Professiona3)
                }
                else
                {
                    @Html.TextBoxFor(model => model.Professiona3, new {style = "width: 90%", @maxlength = "50", @placeholder = "Membership in Professional Bodies", @onkeypress = "return checkSpcialChar(event)"})
                      @*@Html.DisplayFor(model => model.Professiona3)
                    @Html.HiddenFor(model => model.Professiona3)*@
                }

            </td>
            <td class="alt_row" style="text-align: left; vertical-align: top;">
                @if (@Model.isView != null)
                {
                    @Html.DisplayFor(model => model.MembershipNo3)
                    @Html.HiddenFor(model => model.MembershipNo3)
                }
                else
                {
                    @Html.TextBoxFor(model => model.MembershipNo3, new {style = "width: 90%", @maxlength = "50", @placeholder = "Membership No", @onkeypress = "return checkSpcialChar(event)"})
                     @*@Html.DisplayFor(model => model.MembershipNo3)
                    @Html.HiddenFor(model => model.MembershipNo3)*@
                }

            </td>
            <td class="alt_row" style="text-align: center; vertical-align: top;">
                @if (@Model.isView != null)
                {
                    @Html.HiddenFor(model => model.MembershipFile2)

                }
                else
                {
                    <input type="file" name="MembershipFile3" class="MembershipFile3" id="MembershipFile3" />
                     @*@Html.HiddenFor(model => model.MembershipFile2)*@
                }

                @Html.HiddenFor(model => model.MembershipCertificate3)
                @if (!string.IsNullOrEmpty(@Model.MembershipCertificate3))
                {
                    <a href="../Content/Upload/Faculty/MEMBERSHIPDOCUMENTS/@Model.MembershipCertificate3" target="_blank">
                        <img src="../Content/Upload/Faculty/MEMBERSHIPDOCUMENTS/@Model.MembershipCertificate3" style="height: 60px;"/>
                    </a>
                }
            </td>
        </tr>
        </tbody>
    </table>
    <br/>
    <table class="faculty_table">
        <tr>
            <td class="col1" colspan="2">
                <b>Publications</b>
            </td>
        </tr>
        <tr>
            <td class="col1" style="width: 10% !important; vertical-align: top;">
                @Html.LabelFor(model => model.National)
            </td>
            <td class="col2" style="width: 90% !important; vertical-align: top;">
                @if (@Model.isView != null && @Model.National != null)
                {
                    @Html.DisplayFor(model => model.National)
                    @Html.HiddenFor(model => model.National)

                }
                else
                {
                    @Html.DisplayFor(model => model.National)
                    @Html.HiddenFor(model => model.National)
                                    @*@Html.TextAreaFor(model => model.National, new { style = "width: 99%; resize:none;", @placeholder = "National", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)" })
                                        @Html.ValidationMessageFor(model => model.National)*@
                }
            </td>
        </tr>
        <tr>
            <td class="col1" style="vertical-align: top;">
                @Html.LabelFor(model => model.InterNational)
            </td>
            <td class="col2" style="vertical-align: top;">
                @if (@Model.isView != null && @Model.InterNational != null)
                {
                    @Html.DisplayFor(model => model.InterNational)
                    @Html.HiddenFor(model => model.InterNational)

                }
                else
                {
                    @Html.DisplayFor(model => model.InterNational)
                    @Html.HiddenFor(model => model.InterNational)
                                    @*@Html.TextAreaFor(model => model.InterNational, new { style = "width: 99%; resize:none;", @placeholder = "InterNational", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)" })
                                        @Html.ValidationMessageFor(model => model.InterNational)*@
                }
            </td>
        </tr>

        <tr>
            <td class="col1" style="vertical-align: top;">
                @Html.LabelFor(model => model.Citation)
            </td>
            <td class="col2" style="vertical-align: top;">
                @if (@Model.isView != null && @Model.Citation != null)
                {
                    @Html.DisplayFor(model => model.Citation)
                    @Html.HiddenFor(model => model.Citation)

                }
                else
                {
                    @Html.DisplayFor(model => model.Citation)
                    @Html.HiddenFor(model => model.Citation)
                                    @*@Html.TextAreaFor(model => model.Citation, new { style = "width: 99%; resize:none;", @placeholder = "Citation", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)" })
                                        @Html.ValidationMessageFor(model => model.Citation)*@
                }
            </td>
        </tr>
        <tr>
            <td class="col1" style="vertical-align: top;">
                @Html.LabelFor(model => model.Awards)
            </td>
            <td class="col2" style="vertical-align: top;">
                @if (@Model.isView != null && @Model.Awards != null)
                {
                    @Html.DisplayFor(model => model.Awards)
                    @Html.HiddenFor(model => model.Awards)

                }
                else
                {
                    @Html.DisplayFor(model => model.Awards)
                    @Html.HiddenFor(model => model.Awards)
                                    @*@Html.TextAreaFor(model => model.Awards, new { style = "width: 99%; resize:none;", @placeholder = "Awards", @maxlength = "500" })
                                        @Html.ValidationMessageFor(model => model.Awards)*@
                }
            </td>
        </tr>
    </table>
    <br/>
    <table class="faculty_table" id="table_Accomplishments">
        <tr>
            <td class="col1" colspan="2">
                <b>Accomplishments </b>
            </td>
        </tr>
        <tr>
            <td class="col1" style="width: 10% !important; vertical-align: top;">
                @Html.Label("Accomplish1")
            </td>
            <td class="col2" style="width: 90% !important; vertical-align: top;">
                @if (@Model.isView != null)
                {
                    @Html.DisplayFor(model => model.Accomplish1)
                    @Html.HiddenFor(model => model.Accomplish1)
                }
                else
                {
                    @*@Html.TextAreaFor(model => model.Accomplish1, new {style = "width: 99%; resize:none;", @placeholder = "Accomplish1", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)"})*@
                     @Html.DisplayFor(model => model.Accomplish1)
                    @Html.HiddenFor(model => model.Accomplish1)
                }



            </td>
        </tr>
        <tr>
            <td class="col1" style="width: 10% !important; vertical-align: top;">
                @Html.Label("Accomplish2")
            </td>
            <td class="col2" style="width: 90% !important; vertical-align: top;">
                @if (@Model.isView != null)
                {
                    @Html.DisplayFor(model => model.Accomplish2)
                    @Html.HiddenFor(model => model.Accomplish2)
                }
                else
                {
                    @*@Html.TextAreaFor(model => model.Accomplish2, new {style = "width: 99%; resize:none;", @placeholder = "Accomplish2", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)"})*@
                     @Html.DisplayFor(model => model.Accomplish2)
                    @Html.HiddenFor(model => model.Accomplish2)
                }

            </td>
        </tr>
        <tr>
            <td class="col1" style="width: 10% !important; vertical-align: top;">
                @Html.Label("Accomplish3")
            </td>
            <td class="col2" style="width: 90% !important; vertical-align: top;">
                @if (@Model.isView != null)
                {
                    @Html.DisplayFor(model => model.Accomplish3)
                    @Html.HiddenFor(model => model.Accomplish3)
                }
                else
                {
                    @*@Html.TextAreaFor(model => model.Accomplish3, new {style = "width: 99%; resize:none;", @placeholder = "Accomplish3", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)"})*@
                     @Html.DisplayFor(model => model.Accomplish3)
                    @Html.HiddenFor(model => model.Accomplish3)
                }
            </td>
        </tr>
        <tr>
            <td class="col1" style="width: 10% !important; vertical-align: top;">
                @Html.Label("Accomplish4")
            </td>
            <td class="col2" style="width: 90% !important; vertical-align: top;">
                @if (@Model.isView != null)
                {
                    @Html.DisplayFor(model => model.Accomplish4)
                    @Html.HiddenFor(model => model.Accomplish4)
                }
                else
                {
                    @*@Html.TextAreaFor(model => model.Accomplish4, new {style = "width: 99%; resize:none;", @placeholder = "Accomplish4", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)"})*@
                      @Html.DisplayFor(model => model.Accomplish4)
                    @Html.HiddenFor(model => model.Accomplish4)
                }
            </td>
        </tr>
        <tr>
            <td class="col1" style="width: 10% !important; vertical-align: top;">
                @Html.Label("Accomplish5")
            </td>
            <td class="col2" style="width: 90% !important; vertical-align: top;">
                @if (@Model.isView != null)
                {
                    @Html.DisplayFor(model => model.Accomplish5)
                    @Html.HiddenFor(model => model.Accomplish5)
                }
                else
                {
                    @*@Html.TextAreaFor(model => model.Accomplish5, new {style = "width: 99%; resize:none;", @placeholder = "Accomplish5", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)"})*@
                     @Html.DisplayFor(model => model.Accomplish5)
                    @Html.HiddenFor(model => model.Accomplish5)
                }
            </td>
        </tr>
    </table>
    <br/>
    <table class="faculty_table" id="table_Rolsandresponsebility">
        <tr>
            <td class="col1" colspan="2">
                <b>Roles and Responsibilities assigned in the present College </b>
            </td>
        </tr>
        <tr>
            <td class="col1" style="width: 10% !important; vertical-align: top;">
                @Html.Label("Roles")
            </td>
            <td class="col2" style="width: 90% !important; vertical-align: top;">
                @if (@Model.isView != null)
                {
                    @Html.DisplayFor(model => model.PresentInstituteAssignedRole)
                    @Html.HiddenFor(model => model.PresentInstituteAssignedRole)
                }
                else
                {
                    @*@Html.TextAreaFor(model => model.PresentInstituteAssignedRole, new {style = "width: 99%; resize:none;", @placeholder = "Roles", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)"})*@
                      @Html.DisplayFor(model => model.PresentInstituteAssignedRole)
                    @Html.HiddenFor(model => model.PresentInstituteAssignedRole)
                }



            </td>
        </tr>
        <tr>
            <td class="col1" style="width: 10% !important; vertical-align: top;">
                @Html.Label("Responsibilities")
            </td>
            <td class="col2" style="width: 10% !important; vertical-align: top;">
                @if (@Model.isView != null)
                {
                    @Html.DisplayFor(model => model.PresentInstituteAssignedResponsebility)
                    @Html.HiddenFor(model => model.PresentInstituteAssignedResponsebility)
                }
                else
                {
                    @*@Html.TextAreaFor(model => model.PresentInstituteAssignedResponsebility, new {style = "width: 99%; resize:none;", @placeholder = "Responsibilities", @maxlength = "500", @onkeypress = "return checkSpcialChar(event)"})*@
                     @Html.DisplayFor(model => model.PresentInstituteAssignedResponsebility)
                    @Html.HiddenFor(model => model.PresentInstituteAssignedResponsebility)
                }
               
            </td>
        </tr>
    </table>
    <br/>
    <div style="line-height: 1.2rem;" class="right_buttons submitButton">
        @if (Model.id > 0)
{
    if (Model.isView != null)
    {
           <input type="submit" id="btnGoback" value="Go Back" class="submit" name="Command" />
   
           <input type="submit" id="btnConfirm" value="Confirm" class="submit" name="Command" />
    }
            else
            {
                <input type="submit" id="btnUpdate" value="Update" class="submit" name="Command" />
            }


        }
    </div>
    </div>
</form>
@*}*@
<script type="text/javascript">

    $(document).ready(function () {

        $('.clsPanNumber').attr("style","text-transform:uppercase");
        $('.clsPanNumber').keyup(function(event) {

            $(this).val($(this).val().replace(/([a-z])/,function(s){return s.toUpperCase()}));

        });
        $('.clsPanNumber').blur(function(event) {

            $(this).val(($(this).val()).toUpperCase());

        });
    });

    $("#PANNumber").blur(function() {
        var PANNumber = $(this).val();
        var RegistrationNumber = $("#RegistrationNumber").val();
        if (PANNumber != "" && RegistrationNumber!="") {
            $.ajax({
                url: '/OnlineRegistration/AdjunctEditCheckPanNumber',
                dataType: 'json',
                type: 'post',
                contentType: 'application/json',
                data: JSON.stringify({ "EditPANNumber": PANNumber,"RegistrationNumber":RegistrationNumber }),
                success: function(data, textStatus, jQxhr) 
                {
                     
                    console.log(data);
                    if (data != true) {
                        //$("#PANNumber > span").show();
                        //$(".field-validation-valid").css("","");
                        //$(".field-validation-valid").css("color","red");
                        //$("#PANNumber > span").text(data);
                        $("#PANNumber").val("");
                        alert(data);
                        $("#PANNumber").focus();
                    } 
                    //else {
                    //    $("#PANNumber > span").hide();
                    //    $("#PANNumber > span").text("");
                    //    $(".field-validation-valid").hide();
                    //}
                }
                                
            });
        }
    });




    $("#PANNumber").blur(function () {
         
        if ($('#PANNumber').val() != "") {
            $.ajax({
                url: '/OnlineRegistration/GetDetailsBasedonPANNumber',
                dataType: 'json',
                type: 'post',
                contentType: 'application/json',
                data: JSON.stringify({ "PANNo": $('#PANNumber').val() }),
                success: function(data, textStatus, jQxhr) {
                    $("label[for='FirstName']").text("");
                    $("input[name='FirstName']").val("");

                    $("label[for='MiddleName']").text("");
                    $("input[name='MiddleName']").val("");

                    $("label[for='LastName']").text("");
                    $("input[name='LastName']").val("");

                     
                    console.log(data);
                    if (data.Details != "") {
                        var details = data.Details;
                        var Alldata = details.split(",");
                        // $("#FirstName").val(Alldata[3]);
                        $("label[for='FirstName']").text(Alldata[3]);
                        $("input[name='FirstName']").val(Alldata[3]);

                        $("label[for='MiddleName']").text(Alldata[4]);
                        $("input[name='MiddleName']").val(Alldata[4]);

                        $("label[for='LastName']").text(Alldata[2]);
                        $("input[name='LastName']").val(Alldata[2]);
                        // $("#MiddleName").val(Alldata[4]);
                        // $("#LastName").val(Alldata[2]);
                        if (Alldata[3] == "" || Alldata[3] == null) {
                            $("label[for='FirstName']").text(Alldata[2]);
                            $("input[name='FirstName']").val(Alldata[2]);
                        }
                        if (Alldata[2] == "" || Alldata[2] == null) {
                            $("label[for='LastName']").text(Alldata[3]);
                            $("input[name='LastName']").val(Alldata[3]);
                        }
                    }
                },

                error: function(jqXhr, textStatus, errorThrown) {
                    console.log(errorThrown);
                }

            });
        } else {
            $("label[for='FirstName']").text("");
            $("input[name='FirstName']").val("");

            $("label[for='MiddleName']").text("");
            $("input[name='MiddleName']").val("");

            $("label[for='LastName']").text("");
            $("input[name='LastName']").val("");
           // alert("Please Enter PAN Number");
        }

    });

</script>