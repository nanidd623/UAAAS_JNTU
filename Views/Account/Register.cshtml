@model UAAAS.Models.RegisterModel
@{
    ViewBag.Title = "Add User";
}

<h2>Add User</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    function generatePassword() {
        var length = 8,
            charset = "abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.!#$&",
            retVal = "";
        for (var i = 0, n = charset.length; i < length; ++i) {
            retVal += charset.charAt(Math.floor(Math.random() * n));
        }
        return retVal;
    }

    $(document).ready(function () {
        $(".grp").click(function () {
            var rp = generatePassword();
            $("#password").val(rp);
            $("#cpassword").val(rp);
        });
        $('#Roles').change(function () {
            $('#Colleges').val('');
            var a = $('#Roles').val();
            //a=4 is college Role
            if (a == 4) {
                $('#Colleges').prop('disabled', false);              
            }
            else {             
                $('#Colleges').prop('disabled', true);
            }
           
        });
    });
</script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true, "Account creation was unsuccessful. Please correct the errors and try again.")
    
    if (TempData["Error"] != null)
    {
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
    }
    if (TempData["Success"] != null)
    {
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
    }
    
    <div class="details_table">

        <div class="editor-label">
            @Html.LabelFor(m => m.UserName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.UserName)
            @Html.ValidationMessageFor(m => m.UserName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(m => m.Email)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.Email)
            @Html.ValidationMessageFor(m => m.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(m => m.Password)
        </div>
        <div class="editor-field">
            @Html.PasswordFor(m => m.Password, new { id = "password" })
            @Html.ValidationMessageFor(m => m.Password)
            <a href="#" class="grp">Generate Random Password</a>
        </div>

        <div class="editor-label">
            @Html.LabelFor(m => m.ConfirmPassword)
        </div>
        <div class="editor-field">
            @Html.PasswordFor(m => m.ConfirmPassword, new { id = "cpassword" })
            @Html.ValidationMessageFor(m => m.ConfirmPassword)
        </div>

        <div class="editor-label">
            @Html.LabelFor(m => m.Roles)
        </div>
        <div class="editor-field">
            @*@Html.PasswordFor(m => m.ConfirmPassword)*@
            @Html.DropDownListFor(m => m.SelectedRole, ViewData["Roles"] as SelectList, "-- Select --", new { id = "Roles" })
            @Html.ValidationMessageFor(m => m.SelectedRole)
        </div>

        <div class="editor-label">
            @Html.LabelFor(m => m.collegeID)
        </div>
        <div class="editor-field">
            @*@Html.PasswordFor(m => m.ConfirmPassword)*@
            @Html.DropDownListFor(m => m.selectedCollege, ViewData["Colleges"] as SelectList, "-- Select --", new { id = "Colleges" })
            @Html.ValidationMessageFor(m => m.selectedCollege)
        </div>

        <div class="editor-label last-row">
            &nbsp;
        </div>
        <div class="editor-field last-row">
            <p>
                @Html.ActionLink("Back", "Index", "User", null, new { @class = "back_button" })
                <input type="submit" value="Add" />
            </p>
        </div>
        @*<p>
                <input type="submit" value="Register" />
            </p>*@
    </div>
}
