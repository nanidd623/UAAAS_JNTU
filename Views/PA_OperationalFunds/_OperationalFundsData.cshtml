@model UAAAS.Models.OperationalFunds
<script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $(".FDRDoc").change(function () {
            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'pdf':
                    case 'PDF':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }

            if (flag == false) {
                alert("You can upload only  PDF files");
                $(this).val('');
                return false;
            } else {
                var size = GetFileSize(file, "Documentfile");
                size = size / 1048576;
                if (size > 0.2000000000000000) {
                    alert("Document should not exceed 200 KB in Size");
                    $(this).val('');
                } else {

                }
            }

        });

        //get file size
        function GetFileSize(fileid, title) {

            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject,
                    //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#" + title)[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }

                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            } else {
                return strName[0];
            }
        }

    });
</script>
@using (Ajax.BeginForm("AddEditRecord", "PA_OperationalFunds", FormMethod.Post, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "FundsDialog" }, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.collegeId, new { @Value = Model.collegeId })
    if (TempData["Error"] != null)
    {
        <div class="error">
            <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
        </div>
    }
    if (TempData["Success"] != null)
    {
        <div class="success">
            <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
        </div>
    }
    <table class="four_columns Director">
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.bankName)
            </td>
            <td class="col2">
                @*@Html.TextBoxFor(model => model.bankName, new { style = "width: 80%" })*@
                @Html.TextBoxFor(model => model.bankName, new { @placeholder = "Enter Bank Name" })
                @Html.ValidationMessageFor(model => model.bankName)
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.bankBranch)
            </td>
            <td class="col2">
                @*@Html.TextBoxFor(model => model.bankBranch, new { style = "width: 80%" })*@
                @Html.TextBoxFor(model => model.bankBranch, new { @placeholder = "Enter Bank Branch" })
                @Html.ValidationMessageFor(model => model.bankBranch)
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.bankAddress)
            </td>
            <td class="col2">
                @*@Html.TextBoxFor(model => model.bankAddress, new { style = "width: 80%" })*@
                @Html.TextBoxFor(model => model.bankAddress, new { @placeholder = "Enter Bank Address" })
                @Html.ValidationMessageFor(model => model.bankAddress)
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.bankAccountNumber)
            </td>
            <td class="col2">
                @Html.EditorFor(model => model.bankAccountNumber)
                @Html.ValidationMessageFor(model => model.bankAccountNumber)
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.FDR) (if any)
            </td>
            <td class="col2">
                @Html.EditorFor(model => model.FDR)
                @Html.ValidationMessageFor(model => model.FDR)
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.FDRReceipt) (if any)
            </td>
            <td class="col2">
                @Html.TextBoxFor(model => model.FDRReceipt, new { type = "file", @class = "FDRDoc" })
                @Html.HiddenFor(model => model.FDRReceiptview)<br />
            </td>
        </tr>
        <tr>
            <td class="col1">
                @Html.LabelFor(model => model.cashBalance)
            </td>
            <td class="col2">
                @Html.EditorFor(model => model.cashBalance)
                @Html.ValidationMessageFor(model => model.cashBalance)
            </td>
        </tr>
        <tr hidden="hidden">
            <td class="col1">
                @Html.HiddenFor(model => model.createdOn)

                @Html.HiddenFor(model => model.createdBy)
            </td>
            <td class="col2"></td>
        </tr>
    </table>

    @Html.HiddenFor(model => model.createdBy)
    @Html.HiddenFor(model => model.createdOn)
    <p style="float:right">
        @if (ViewBag.IsUpdate == true)
        {
            <input type="submit" value="Update" id="btnUpdate" name="cmd" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" />
        }
        else
        {
            <input type="submit" value="Save" id="btnSave" name="cmd" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" />
        }
        <input type="button" value="Cancel" id="btnCancel" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" />
    </p>
}
